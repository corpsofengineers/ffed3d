/*    This file was automatically created by
 *    Reverse Engineering Compiler 2.0 (C) Giampiero Caprino (Sep 19 2005)
 *    Input file: 'G:\e\FIRSTENC\FIRSTENC.EXE'
 */

/*    Procedure: 0x00410000 - 0x00410073
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

__entry_point__()
{



    M0048005d = M00480059 << 2;
    (save)edi;
    (save)ecx;
    eax = 0;
    edi = 0x60c07c;
    ecx = 7197196;
    if(7197196 > 0x60c07c) {
        ecx = 856464;
        asm("cld");
        asm("rep stosb");
    }
    (restore)ecx;
    (restore)edi;
    edx = *%fs:0x4];
    M00480061 = *(edx - 8);
    M00480065 = *(edx - 4);
    edx = edx - 4;
    M006dcdb8 = edx;
    edx = M006dcdb8 - 4;
    if(edx < esp) {
        esp = edx;
    }
    L00472E73(0);
    (save)0x48002c;
    M0048006a = GetModuleHandleA(0);
    (save)0;
    goto L00478d74;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00410074 - 0x004100F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046FECF()
 */

L00410074()
{



    esp = esp + -256;
    L00474830(ebp + -256, "%s%s\hmiset.cfg", 6641808, 6641812);
    if(L00410F94(ebp + -256) == 0) {
        M00506374 = 0;
        M00506378 = 0;
        eax = 0;
        M0050637c = 0;
    } else {
        eax = L00410CA8(M0060c108, M0060c114);
        if(eax != 0) {
            M00506374 = 0;
            M00506378 = 0;
            eax = 0;
            M0050637c = 0;
        }
    }
}

/*    Procedure: 0x004100F4 - 0x00410218
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00410F94()
 */

L004100F4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = Ac;
    (save)edi;
    esi = A8 + 4;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)edi;
    esi = L00474574(edi, 32768, 0x40);
    if(esi == -1) {
        eax = 0;
    } else {
        edi = esi;
        *(A8 + 0x88) = L0047310C(edi, 0, 2);
        *(A8 + 0x8c) = *(A8 + 0x88) + 0x400;
        L0047310C(edi, 0, 0);
        eax = L0047777C( *(A8 + 0x8c));
        *(A8 + 0x84) = eax;
        if(*(A8 + 0x84) == 0) {
            L004730FC(edi);
            eax = 0;
        } else {
            if(L0047311C(edi, *(A8 + 0x84), *(A8 + 0x88)) != *(A8 + 0x88)) {
                L004730FC(edi);
                L00477640( *(A8 + 0x84));
                eax = 0;
            } else {
                L004730FC(edi);
                *(A8 + 0x90) = *(A8 + 0x84);
                *(A8 + 0x94) = 0;
                *(A8 + 0xa0) = 0;
                *(A8 + 0xa4) = 0;
                *(A8 + 0x9c) = 0;
                *(A8 + 0xa8) = 0;
                *A8 = *A8 & -32769;
                eax = 1;
            }
        }
    }
}

/*    Procedure: 0x00410219 - 0x0041021B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410219()
{



}

/*    Procedure: 0x0041021C - 0x0041028C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00410F94()
 */

L0041021C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(!( *(A8 + 1) & 0x80)) {
        esi = L00474574(A8 + 4, 33538, 0x40);
        if(esi == -1) {
            L00477640( *(A8 + 0x84));
            eax = 0;
            goto L00410288;
        }
        edi = esi;
        L0047312C(edi, *(A8 + 0x84), *(A8 + 0x88));
        L004730FC(edi);
    }
    L00477640( *(A8 + 0x84));
    eax = 1;
L00410288:
}

/*    Procedure: 0x0041028D - 0x0041028F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041028D()
{



}

/*    Procedure: 0x00410290 - 0x00410314
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410928()
 *        L0041099F()
 *        L00410F94()
 */

L00410290()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    esi = *(ebp + 8);
    *(ebp - 8) = 0;
    eax = *(esi + 0x84);
    edx = 0;
    do {
        if(*eax == 0x5b) {
            *(ebp - 4) = eax;
            eax = eax + 1;
            for(ecx = *(ebp + 0xc); *eax == *ecx && edx < *(esi + 0x88); edx = edx + 1) {
                ecx = ecx + 1;
                eax = eax + 1;
            }
            if(*eax == 0x5d && *ecx == 0) {
                for(*(ebp - 8) = 1; *eax != 0xa; eax = eax + 1) {
                }
                eax = eax + 1;
                *(esi + 0xa8) = eax;
                *(esi + 0x90) = eax;
                *(esi + 0x94) = edx;
                *(esi + 0x98) = *(ebp - 4);
            }
        }
        eax = eax + 1;
        edx = edx + 1;
    } while(*(ebp - 8) == 0 && edx < *(esi + 0x88));
    eax = *(ebp - 8);
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00410315 - 0x00410317
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410315()
{



}

/*    Procedure: 0x00410318 - 0x004103AE
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041078F()
 *        L004107EC()
 *        L00410827()
 *        L00410867()
 *        L004108C1()
 *        L00410A36()
 *        L00410B1B()
 */

L00410318(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 0;
    eax = *(A8 + 0x90);
    edx = *(A8 + 0x94);
    do {
        ecx = Ac;
        if(*eax == *ecx) {
            *(ebp - 4) = eax;
            eax = eax + 1;
            ecx = ecx + 1;
            for(edx = edx + 1; *eax == *ecx && edx < *(A8 + 0x88); edx = edx + 1) {
                eax = eax + 1;
                ecx = ecx + 1;
            }
            if(*ecx == 0) {
                while(1) {
                    cl = *eax;
                    if(cl == 0x3d || cl == 0xd) {
                        break;
                    }
                    eax = eax + 1;
                    edx = edx + 1;
                }
                if(*eax != 0x3d) {
                    *(A8 + 0xa0) = 0;
                } else {
                    eax = eax + 1;
                    edx = edx + 1;
                    *(A8 + 0xa0) = eax;
                }
                *(A8 + 0x9c) = *(ebp - 4);
                *(A8 + 0xa4) = 0;
                edi = 1;
            }
        }
        eax = eax + 1;
        edx = edx + 1;
    } while(edi == 0 && edx < *(A8 + 0x88) && *eax != 0x5b);
    return edi;
}

/*    Procedure: 0x004103AF - 0x004103AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004103AF()
{



}

/*    Procedure: 0x004103B0 - 0x00410451
 *    Argument size: 8
 *    Local size: 32
 *    Save regs size: 8
 *    Called by:
 *        L004107EC()
 */

L004103B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe1;
    /* unknown */ void  Vffffffe2;



    eax = *(A8 + 0xa4);
    if(eax == 0) {
        eax = *(A8 + 0xa0);
    }
    if(eax == 0) {
        eax = 0;
    } else {
        while(*eax == 0x20) {
            eax = eax + 1;
        }
        if(*eax == 0xd) {
            eax = 0;
        } else {
            esi = 0;
            for(ecx = & Vffffffe0; 1; ecx = ecx + 1) {
                dl = *eax;
                if(dl == 0xd || dl == 0x2c || dl == 0x20) {
                    break;
                }
                *ecx = dl;
                eax = eax + 1;
                esi = esi + 1;
            }
            *(ebp + esi - 0x20) = 0;
            if(esi == 0) {
                eax = 0;
            } else {
                while(*eax == 0x20) {
                    eax = eax + 1;
                }
                *(A8 + 0xa4) = *eax == 0x2c ? eax + 1 : eax;
                eax = Vffffffe1 == 0x78 ? L00410C34( & Vffffffe2) : L00476538( & Vffffffe0);
                *Ac = eax;
                eax = 1;
            }
        }
    }
}

/*    Procedure: 0x00410452 - 0x00410453
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410452()
{



}

/*    Procedure: 0x00410454 - 0x004104E2
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041078F()
 *        L00410827()
 */

L00410454(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = *(A8 + 0xa4);
    if(eax == 0) {
        eax = *(A8 + 0xa0);
    }
    if(eax == 0) {
        eax = 0;
    } else {
        for(edx = 0; *eax == 0x20; eax = eax + 1) {
        }
        for(esi = Ac + edx; 1; esi = esi + 1) {
            cl = *eax;
            if(cl == 0xd || cl == 0x2c || edx >= A10 - 1) {
                break;
            }
            *esi = cl;
            eax = eax + 1;
            edx = edx + 1;
        }
        *(Ac + edx) = 0;
        if(edx == A10 - 1) {
            while(1) {
                dl = *eax;
                if(dl == 0xd || dl == 0x2c) {
                    break;
                }
                eax = eax + 1;
            }
        }
        if(*eax == 0x2c) {
            eax = eax + 1;
            *(A8 + 0xa4) = eax;
        } else {
            *(A8 + 0xa4) = eax;
        }
        eax = 1;
    }
}

/*    Procedure: 0x004104E3 - 0x00410564
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 */

L004104E3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    eax = *(A8 + 0xa8);
    if(eax == 0 || *eax == 0x5b || *eax == 0xd) {
        eax = 0;
    } else {
        *(ebp - 4) = *(A8 + 0x84) + *(A8 + 0x88);
        for(edx = 0; *eax == 0x20; eax = eax + 1) {
        }
        for(edi = Ac + edx; 1; edi = edi + 1) {
            cl = *eax;
            if(cl == 0xd || edx >= A10 - 1) {
                break;
            }
            *edi = cl;
            eax = eax + 1;
            edx = edx + 1;
        }
        *(Ac + edx) = 0;
        eax = eax + 2;
        *(A8 + 0xa8) = eax >= *(ebp - 4) ? 0 : eax;
        eax = 1;
    }
}

/*    Procedure: 0x00410565 - 0x00410567
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410565()
{



}

/*    Procedure: 0x00410568 - 0x00410691
 *    Argument size: 8
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L00410B1B()
 */

L00410568(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe1;
    /* unknown */ void  Vffffffe2;



    eax = *(A8 + 0xa0);
    if(eax == 0) {
        eax = 0;
    } else {
        while(*eax == 0x20) {
            eax = eax + 1;
        }
        ebx = eax;
        esi = 0;
        for(edx = & Vffffffe0; *eax != 0xd; edx = edx + 1) {
            *edx = *eax;
            eax = eax + 1;
            esi = esi + 1;
        }
        *(ebp + esi - 0x20) = 0;
        if(Vffffffe1 == 0x78) {
            L0047675C(Ac, & Vffffffe2, 0x10);
        } else {
            L0047675C(Ac, & Vffffffe0, 0xa);
        }
        edi = L00471288( & Vffffffe0);
        if(esi > edi) {
            eax = *(A8 + 0x84) + *(A8 + 0x88) - ebx;
            L0047114C(ebx, esi - edi + ebx, eax - esi - edi);
            esi = esi - edi;
            *(A8 + 0x88) = *(A8 + 0x88) - esi;
        } else {
            if(esi < edi) {
                eax = *(A8 + 0x88);
                edx = eax;
                edx = edx + edi - esi;
                if(edx > *(A8 + 0x8c)) {
                    eax = 0;
                    goto L0041068b;
                }
                edx = *(A8 + 0x84) + eax - ebx;
                L0047114C(edi - esi + ebx, ebx, edx + edi - esi);
                edi = edi - esi;
                *(A8 + 0x88) = *(A8 + 0x88) + edi;
            }
        }
        for(eax = & Vffffffe0; 1; ebx = ebx + 1) {
            dl = *eax;
            if(dl == 0) {
                break;
            }
            *ebx = dl;
            eax = eax + 1;
        }
        *A8 = *A8 | 32768;
        eax = 1;
    }
L0041068b:
}

/*    Procedure: 0x00410692 - 0x00410693
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410692()
{



}

/*    Procedure: 0x00410694 - 0x0041078E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00410867()
 *        L00410A36()
 */

L00410694(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = Ac;
    eax = *(A8 + 0xa0);
    if(eax == 0) {
        eax = 0;
    } else {
        for(edi = 0; *eax == 0x20; eax = eax + 1) {
        }
        for(esi = eax; 1; edi = edi + 1) {
            dl = *eax;
            eax = eax + 1;
            if(dl == 0xd) {
                break;
            }
        }
        *(ebp - 4) = L00471288(ebx);
        if(edi > *(ebp - 4)) {
            eax = *(A8 + 0x84) + *(A8 + 0x88) - esi;
            L0047114C(esi, edi - *(ebp - 4) + esi, eax - edi - *(ebp - 4));
            edi = edi - *(ebp - 4);
            *(A8 + 0x88) = *(A8 + 0x88) - edi;
        } else {
            if(edi < *(ebp - 4)) {
                eax = *(A8 + 0x88);
                edx = eax;
                edx = edx + *(ebp - 4) - edi;
                if(edx > *(A8 + 0x8c)) {
                    eax = 0;
                    goto L00410789;
                }
                edx = *(A8 + 0x84) + eax - esi;
                L0047114C( *(ebp - 4) - edi + esi, esi, edx + *(ebp - 4) - edi);
                eax = *(ebp - 4) - edi;
                *(A8 + 0x88) = *(A8 + 0x88) + eax;
            }
        }
        while(1) {
            al = *ebx;
            if(al == 0) {
                break;
            }
            *esi = al;
            ebx = ebx + 1;
            esi = esi + 1;
        }
        *A8 = *A8 | 32768;
        eax = 1;
    }
L00410789:
}

/*    Procedure: 0x0041078F - 0x004107E8
 *    Argument size: 8
 *    Local size: 32
 *    Save regs size: 4
 */

L0041078F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffe0;



    eax = L00410318(A8, Ac) == 0 ? 0 : L00410454(A8, & Vffffffe0, 0x20) == 0 ? 0 : L00471368( & Vffffffe0, "YES") == 0 ? 1 : 0;
}

/*    Procedure: 0x004107E9 - 0x004107EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004107E9()
{



}

/*    Procedure: 0x004107EC - 0x00410826
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410F94()
 */

L004107EC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(L00410318(A8, Ac) == 0) {
        return 0;
    }
    if(L004103B0(A8, A10) == 0) {
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00410827 - 0x00410866
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 */

L00410827(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(L00410318(A8, Ac) == 0) {
        return 0;
    }
    if(L00410454(A8, A10, A14) == 0) {
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00410867 - 0x004108C0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00410867(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(L00410318(A8, Ac) == 0) {
        return 0;
    }
    if(A10 != 0) {
        if(L00410694(A8, "Yes") != 0) {
            goto L004108b9;
        }
        return 0;
    }
    if(L00410694(A8, "No") == 0) {
        return 0;
    }
L004108b9:
    return 1;
}

/*    Procedure: 0x004108C1 - 0x00410927
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L004108C1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = 0;
    if(L00410318(A8, Ac) == 0) {
        eax = 0;
    } else {
        edx = *(A8 + 0x9c);
        for(eax = edx + ebx; *eax != 0xa; eax = eax + 1) {
            ebx = ebx + 1;
        }
        ebx = ebx + 1;
        ecx = *(A8 + 0x84) + *(A8 + 0x88);
        eax = ebx + edx;
        L0047114C(edx, eax, ecx - eax);
        *(A8 + 0x88) = *(A8 + 0x88) - ebx;
        *A8 = *A8 | 32768;
        eax = 1;
    }
}

/*    Procedure: 0x00410928 - 0x0041099E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L00410928(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    if(L00410290(A8, Ac) == 0) {
        eax = 0;
    } else {
        edx = *(A8 + 0x98);
        *(ebp - 4) = *(A8 + 0x84) + *(A8 + 0x88);
        ebx = 1;
        for(eax = edx + 1; *eax != 0x5b && ebx + edx < *(ebp - 4); eax = eax + 1) {
            ebx = ebx + 1;
        }
        eax = ebx + edx;
        L0047114C(edx, eax, *(ebp - 4) - eax);
        *(A8 + 0x88) = *(A8 + 0x88) - ebx;
        *A8 = *A8 | 32768;
        eax = 1;
    }
}

/*    Procedure: 0x0041099F - 0x00410A35
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L0041099F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = Ac;
    if(L00410290(A8, esi) != 0) {
        eax = 0;
    } else {
        ebx = *(A8 + 0x84) + *(A8 + 0x88);
        edx = L00471288(esi) + 6;
        if(*(A8 + 0x88) + edx > *(A8 + 0x8c)) {
            eax = 0;
        } else {
            *ebx = 0xd;
            ebx = ebx + 1;
            *ebx = 0xa;
            ebx = ebx + 1;
            *(A8 + 0x98) = ebx;
            *ebx = 0x5b;
            for(ebx = ebx + 1; 1; ebx = ebx + 1) {
                al = *esi;
                if(al == 0) {
                    break;
                }
                *ebx = al;
                esi = esi + 1;
            }
            *ebx = 0x5d;
            ebx = ebx + 1;
            *ebx = 0xd;
            ebx = ebx + 1;
            *ebx = 0xa;
            ebx = ebx + 1;
            *(A8 + 0xa8) = ebx;
            *(A8 + 0x90) = *(A8 + 0xa8);
            *(A8 + 0x88) = *(A8 + 0x88) + edx;
            *A8 = *A8 | 32768;
            eax = 1;
        }
    }
}

/*    Procedure: 0x00410A36 - 0x00410B1A
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 */

L00410A36(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A10;
    edi = Ac;
    if(L00410318(A8, edi) != 0) {
        L00410694(A8, esi);
        eax = 1;
    } else {
        ebx = *(A8 + 0x90);
        *(ebp - 4) = L00471288(esi) + A14 + 4;
        eax = *(A8 + 0x88);
        edx = eax + *(ebp - 4);
        if(edx > *(A8 + 0x8c)) {
            eax = 0;
        } else {
            for(L0047114C( *(ebp - 4) + ebx, ebx, *(A8 + 0x84) + eax - ebx); 1; A14 = A14 - 1) {
                al = *edi;
                if(al == 0) {
                    break;
                }
                *ebx = al;
                edi = edi + 1;
                ebx = ebx + 1;
            }
            while(1) {
                eax = A14;
                A14 = A14 - 1;
                if(eax == 0) {
                    break;
                }
                *ebx = 0x20;
                ebx = ebx + 1;
            }
            *ebx = 0x3d;
            ebx = ebx + 1;
            *ebx = 0x20;
            for(ebx = ebx + 1; 1; ebx = ebx + 1) {
                al = *esi;
                if(al == 0) {
                    break;
                }
                *ebx = al;
                esi = esi + 1;
            }
            *ebx = 0xd;
            *(ebx + 1) = 0xa;
            *(A8 + 0x88) = *(A8 + 0x88) + *(ebp - 4);
            *A8 = *A8 | 32768;
            eax = 1;
        }
    }
}

/*    Procedure: 0x00410B1B - 0x00410C33
 *    Argument size: 20
 *    Local size: 36
 *    Save regs size: 12
 */

L00410B1B(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffdd;
    /* unknown */ void  Vffffffde;
    /* unknown */ void  Vfffffffc;



    edi = A14;
    ebx = A10;
    esi = Ac;
    if(L00410318(A8, esi) != 0) {
        L00410568(A8, ebx);
        eax = 1;
    } else {
        if(A18 == 0x10) {
            Vffffffdc = 0x30;
            Vffffffdd = 0x78;
            L0047675C(ebx, & Vffffffde, 0x10);
        } else {
            L0047675C(ebx, & Vffffffdc, 0xa);
        }
        ebx = *(A8 + 0x90);
        Vfffffffc = L00471288( & Vffffffdc) + edi + 4;
        eax = *(A8 + 0x88);
        edx = eax + Vfffffffc;
        if(edx > *(A8 + 0x8c)) {
            eax = 0;
        } else {
            for(L0047114C(Vfffffffc + ebx, ebx, *(A8 + 0x84) + eax - ebx); 1; edi = edi - 1) {
                al = *esi;
                if(al == 0) {
                    break;
                }
                *ebx = al;
                esi = esi + 1;
                ebx = ebx + 1;
            }
            while(1) {
                eax = edi;
                edi = edi - 1;
                if(eax == 0) {
                    break;
                }
                *ebx = 0x20;
                ebx = ebx + 1;
            }
            *ebx = 0x3d;
            ebx = ebx + 1;
            *ebx = 0x20;
            ebx = ebx + 1;
            for(eax = & Vffffffdc; 1; ebx = ebx + 1) {
                dl = *eax;
                if(dl == 0) {
                    break;
                }
                *ebx = dl;
                eax = eax + 1;
            }
            *ebx = 0xd;
            *(ebx + 1) = 0xa;
            *(A8 + 0x88) = *(A8 + 0x88) + Vfffffffc;
            *A8 = *A8 | 32768;
            eax = 1;
        }
    }
}

/*    Procedure: 0x00410C34 - 0x00410C73
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004103B0()
 */

L00410C34(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 0;
    ebx = L00471288(A8);
    *(ebp - 4) = 0;
    do {
        eax = *(ebp - 4);
        *(ebp - 4) = *(ebp - 4) + 1;
        eax = L00410C74( *(A8 + eax));
        asm("imul dword [ebx*4+0x480080]");
        esi = esi + eax;
        ebx = ebx - 1;
    } while(ebx > 0);
    return esi;
}

/*    Procedure: 0x00410C74 - 0x00410CA7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00410C34()
 */

L00410C74(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 0;
    do {
        eax = L00476380(bl & 0xff);
        if(eax == *(M00480080 + esi)) {
            goto L00410c97;
        }
        esi = esi + 1;
    } while(esi < 0x10);
    goto L00410ca1;
L00410c97:
    eax = esi;
    goto L00410ca4;
L00410ca1:
    eax = eax | -1;
L00410ca4:
}

/*    Procedure: 0x00410CA8 - 0x00410F28
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410074()
 */

L00410CA8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -1024;
    (save)Ac;
    (save)A8;
    if(M00506374 == 0) {
        eax = 1;
    } else {
        L0044C199();
        L00446CE5();
        L0044DE91(0, 1);
        L00471198(0x60c07c, 0, 0x50);
        L00471198(0x60c0dc, 0, 0x20);
        M0060c08c = 22050;
        M0060c07c = 0x1000;
        M0060c088 = 1;
        if(M0050637c != 0) {
            L0044C49B(0, 0);
        }
        if(M00506378 != 0) {
            L0044712B(0, 0);
        }
        if(M00506378 != 0) {
            if(Ac == -1 || L00447237(Ac, 0x60c0fc, 0x60c0dc, 0x60c118) == 0) {
                goto L00410d9c;
            }
            L0044CB86(M0060c10c, 1, 1);
            L0044C4D1();
            L00447214();
            eax = 2;
        } else {
L00410d9c:
            if(M0050637c != 0) {
                if(A8 == -1 || L0044AE51(0x60c0cc, 0x10) == 0 && L0044AE51(0x60c07c, 0x50) == 0 && L0044C4E4(A8, 0x60c0cc, 0x60c07c, 0x60c10c) == 0) {
                    goto L00410dfb;
                }
                L0044C4D1();
                eax = 1;
            } else {
L00410dfb:
                if(A8 != -1 && M0050637c != 0) {
                    L0044DF6E(0x3c, M0060c0c0, 0x60c110);
                }
                if(Ac != 40962 && (Ac != 40969 || Ac == -1)) {
                    goto L00410f21;
                }
                if(M00506378 != 0) {
                    L00473C18(ebp + -1024, 6641547, 6641551, "melodic", "bnk");
                    eax = L00411380(ebp + -1024);
                    M0060c128 = eax;
                    if(M0060c128 == 0) {
                        L00410F2C();
                        eax = 3;
                    } else {
                        L00473C18(ebp + -1024, 6641547, 6641551, "drum", "bnk");
                        eax = L00411380(ebp + -1024);
                        M0060c12c = eax;
                        if(M0060c12c == 0) {
                            L00410F2C();
                            eax = 4;
                        } else {
                            if(L00448AB9(M0060c118, M0060c128, 1) != 0) {
                                L00410F2C();
                                eax = 5;
                            } else {
                                if(L00448AB9(M0060c118, M0060c12c, 1) == 0) {
                                    goto L00410f21;
                                }
                                L00410F2C();
                                eax = 5;
                            }
                        }
                    }
                } else {
L00410f21:
                    eax = 0;
                }
            }
        }
    }
    (restore)A8;
    (restore)Ac;
}

/*    Procedure: 0x00410F29 - 0x00410F2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410F29()
{



}

/*    Procedure: 0x00410F2C - 0x00410F91
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410CA8()
 *        L0045397C()
 *        L0047004A()
 *        L00470837()
 */

L00410F2C()
{



    L0044E1D7(M0060c110);
    L0044DF4F(0);
    if(M0060c108 != -1) {
        L0044CB86(M0060c10c, 1, 1);
    }
    L0044C4D1();
    if(M0060c114 != -1) {
        L0044755E(M0060c118, 1);
    }
    L00447214();
    L00446F08();
    L0044C31A();
    return 1;
}

/*    Procedure: 0x00410F92 - 0x00410F93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00410F92()
{



}

/*    Procedure: 0x00410F94 - 0x004110F3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410074()
 */

L00410F94(A8)
/* unknown */ void  A8;
{



    esp = esp + -172;
    (save)ebx;
    (save)esi;
    ebx = "melodic";
    esi = ebp + -172;
    if(L004100F4(esi, A8) == 0) {
        eax = 0;
    } else {
        if(L00410290(esi, ebx + 0x15) == 0) {
            L0041021C(esi);
            eax = 0;
        } else {
            L004107EC(esi, ebx + 0x1d, 0x60c108);
            eax = M0060c108;
            if(eax == 57379 || eax == 57383) {
                L00478BD8(ebx + 0x26);
            }
            L004107EC(esi, ebx + 0x33, 0x60c0cc);
            L004107EC(esi, ebx + 0x3e, 0x60c0d4);
            eax = L004107EC(esi, ebx + 0x48, 0x60c0d0);
            if(M0060c108 == -1) {
                M0050637c = 0;
            }
            if(eax == 0) {
                L0041021C(esi);
                eax = 0;
            } else {
                if(L00410290(esi, ebx + 0x52) == 0) {
                    L0041021C(esi);
                    eax = 0;
                } else {
                    L004107EC(esi, ebx + 0x57, 0x60c114);
                    eax = L004107EC(esi, ebx + 0x60, 0x60c0fc);
                    if(M0060c114 == -1) {
                        M00506378 = 0;
                    }
                    if(eax == 0) {
                        L0041021C(esi);
                        eax = 0;
                    } else {
                        L0041021C(esi);
                        if(M00506378 == 0 && M0050637c == 0) {
                            M00506374 = 0;
                        }
                        eax = 1;
                    }
                }
            }
        }
    }
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004110F4 - 0x004111F1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00470837()
 */

L004110F4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = L00474574(A8, 32768, 0x40);
    if(esi == -1) {
        L00473DA8("error: opening file %s", A8);
        L00473DA8("errno: %d", M0060beac);
        eax = 0;
    } else {
        edi = L0047310C(esi, 0, 2);
        L0047310C(esi, 0, 0);
        ebx = L0047777C(edi + 0x74);
        if(ebx == 0) {
            L004730FC(esi);
            eax = 0;
        } else {
            if(L0044AE51(ebx, edi + 0x74) != 0) {
                L00473DA8("failed to lock sample %s\n", A8);
                L004539E4();
            }
            if(edi != L0047311C(esi, ebx + 0x74, edi)) {
                L004730FC(esi);
                L00477640(ebx);
                eax = 0;
            } else {
                L004730FC(esi);
                L00471198(ebx, 0, 0x74);
                eax = ebx;
                *eax = ebx + 0x74;
                *(eax + 0x28) = 0x80;
                *(eax + 8) = edi;
                *(eax + 0x10) = 2;
            }
        }
    }
}

/*    Procedure: 0x004111F2 - 0x004111F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004111F2()
{



}

/*    Procedure: 0x004111F4 - 0x00411346
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0047004A()
 */

L004111F4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    esi = L00474574(ebx, 32768, 0x40);
    if(esi == -1) {
        L00473DA8("error: opening file %s", ebx);
        eax = L00473DA8("errno: %d", M0060beac) | -1;
    } else {
        edi = esi;
        Vfffffff8 = L0047310C(edi, 0, 2);
        L0047310C(edi, 0, 0);
        M0060c124 = Vfffffff8 + 0x88;
        ebx = L0047777C(M0060c124);
        if(ebx == 0) {
            eax = L004730FC(edi) | -1;
        } else {
            if(L0047311C(edi, ebx + 0x88, Vfffffff8) != Vfffffff8) {
                L004730FC(edi);
                eax = L00477640(ebx) | -1;
            } else {
                L004730FC(edi);
                Vfffffff4 = ebx;
                esi = ebx + 8;
                L00471198(Vfffffff4, 0, 8);
                L00471198(esi, 0, 0x80);
                edx = 0;
                eax = esi;
                do {
                    *eax = 0xff;
                    edx = edx + 1;
                    eax = eax + 4;
                } while(edx < 0x10);
                eax = ebx + 0x88;
                *Vfffffff4 = eax;
                if(L00446399(Vfffffff4, esi, & Vfffffffc) != 0) {
                    eax = L00477640(ebx) | -1;
                } else {
                    L0044AE51(ebx, M0060c124);
                    M0060c120 = ebx;
                    eax = Vfffffffc;
                }
            }
        }
    }
}

/*    Procedure: 0x00411347 - 0x00411347
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00411347()
{



}

/*    Procedure: 0x00411348 - 0x0041137C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00470183()
 */

L00411348()
{



    if(M0060c120 != 0) {
        L0044AE92(M0060c120, M0060c124);
        L00477640(M0060c120);
    }
    M0060c120 = 0;
    return 0;
}

/*    Procedure: 0x0041137D - 0x0041137F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041137D()
{



}

/*    Procedure: 0x00411380 - 0x00411460
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00410CA8()
 */

L00411380(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = L00474574(A8, 32768, 0x40);
    if(ebx == -1) {
        L00473DA8("error: opening file %s", A8);
        L00473DA8("errno: %d", M0060beac);
        eax = 0;
    } else {
        esi = ebx;
        edi = L0047310C(esi, 0, 2);
        L0047310C(esi, 0, 0);
        eax = L0047777C(edi);
        *(ebp - 4) = eax;
        if(*(ebp - 4) == 0) {
            L004730FC(esi);
            eax = 0;
        } else {
            if(edi != L0047311C(esi, *(ebp - 4), edi)) {
                L004730FC(esi);
                L00477640( *(ebp - 4));
                eax = 0;
            } else {
                L004730FC(esi);
                if(L0044AE51( *(ebp - 4), edi) != 0) {
                    L00473DA8("Failed to lock patch %s\n", A8);
                    L004539E4();
                }
                eax = *(ebp - 4);
            }
        }
    }
}

/*    Procedure: 0x00411461 - 0x00411463
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00411461()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00411464 - 0x00411498
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00411810()
 *        L004123A8()
 *        L00412C5C()
 */

L00411464(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = *A8;
    ecx = *eax & 0xff;
    ecx = ecx + (( *(eax + 1) & 0xff) << 8);
    ecx = ecx + (( *(eax + 2) & 0xff) << 0x10);
    ecx = ecx + (( *(eax + 3) & 0xff) << 0x18);
    *A8 = eax + 4;
    return ecx;
}

/*    Procedure: 0x00411499 - 0x0041149B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00411499()
{



}

/*    Procedure: 0x0041149C - 0x004115B1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 */

L0041149C(A8)
/* unknown */ void  A8;
{



    eax = 0;
    edx = A8;
    if(edx <= 0x14) {
        switch(edx) {
            case 0:
L00411508:
                eax = *(M00644c6c + 0x86) & 0xff;
                goto L004115b0;
            case 1:
                eax = M00644d40;
                goto L004115b0;
            case 2:
                eax = M00644cb8;
                goto L004115b0;
            case 3:
                eax = M00644d94;
                goto L004115b0;
            case 4:
                eax = M00644cae;
                goto L004115b0;
            case 5:
L0041153b:
                edx = 0;
                edx = 49710 / 49710 % 49710 / 49710;
                eax = M00644ba4 + (M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2) * 4 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2) * 4) * 4 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2) * 4 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2 + ((M00644ba8 - 1187063 << 7) + (M00644ba8 - 1187063 << 7) * 2) * 4) * 4) * 8;
                goto L004115b0;
            case 6:
                goto L0041153b;
            case 7:
                goto L0041153b;
            case 8:
                goto L0041153b;
            case 9:
                goto L0041153b;
            case 0xa:
                goto L0041153b;
            case 0xb:
                goto L0041153b;
            case 0xc:
                eax = M00644c90;
                goto L004115b0;
            case 0xd:
                eax = *(M00644c70 + 0x86) & 0xff;
                goto L004115b0;
            case 0xe:
                eax = M00644c8c;
                goto L004115b0;
            case 0xf:
                eax = M00644cc0;
                goto L004115b0;
            case 0x10:
                eax = M00644cc8;
                goto L004115b0;
            case 0x11:
                eax = M00644d98;
                goto L004115b0;
            case 0x12:
                eax = M00644d9c;
                goto L004115b0;
            case 0x13:
                eax = M00644da0;
                goto L004115b0;
            case 0x14:
                eax = M00644da4;
                goto L004115b0;
        }
        goto L00411508;
    }
L004115b0:
}

/*    Procedure: 0x004115B2 - 0x004115B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004115B2()
{



}

/*    Procedure: 0x004115B4 - 0x00411697
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L004115B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    eax = Ac;
    edx = A8;
    if(edx > 0x14) {
        goto L00411687;
    }
    switch(edx) {
        case 0:
L00411687:
            return L00414070(1, 0, A8);
        case 1:
            goto L00411625;
        case 2:
            M00644cb8 = eax;
            goto L00411687;
        case 3:
            M00644d94 = eax;
            goto L00411687;
        case 4:
            *(ebp - 4) = eax;
            L0043BEE0( *(ebp - 4), 0);
            goto L00411687;
        case 5:
            goto L00411687;
        case 6:
            goto L00411687;
        case 7:
            goto L00411687;
        case 8:
            goto L00411687;
        case 9:
            goto L00411687;
        case 0xa:
            goto L00411687;
        case 0xb:
            goto L00411687;
        case 0xc:
            M00644c90 = al;
            goto L00411687;
        case 0xd:
            goto L00411687;
        case 0xe:
            goto L00411687;
        case 0xf:
            goto L00411687;
        case 0x10:
            M00644cc8 = eax;
            goto L00411687;
        case 0x11:
            M00644d98 = eax;
            goto L00411687;
        case 0x12:
            M00644d9c = eax;
            goto L00411687;
        case 0x13:
            M00644da0 = eax;
            goto L00411687;
        case 0x14:
            M00644da4 = eax;
            goto L00411687;
    }
L00411625:
    if(eax < 0) {
        eax = 0;
    }
    if(eax > 268435455) {
        eax = 268435455;
    }
    M00644d40 = eax;
    return L00414070(1, 0, A8);
}

/*    Procedure: 0x00411698 - 0x004116AD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00412C5C()
 */

L00411698(A8)
/* unknown */ void  A8;
{



    edx = 0;
    edx = 86400 / 86400 % 86400 / 86400;
    return A8 + 1187063;
}

/*    Procedure: 0x004116AE - 0x004116AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004116AE()
{



}

/*    Procedure: 0x004116B0 - 0x004116C6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00412C5C()
 */

L004116B0(A8)
/* unknown */ void  A8;
{



    edx = 0;
    return 86400 / 86400 % 86400 / 86400 * 49710;
}

/*    Procedure: 0x004116C7 - 0x004116C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004116C7()
{



}

/*    Procedure: 0x004116C8 - 0x004116FC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00411810()
 */

L004116C8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 0;
    esi = 0;
    for(ebx = A8; *ebx != 0; ebx = ebx + 0x44) {
        edi = edi + Ac(((esi << 4) + esi << 2) + A8);
        esi = esi + 1;
    }
    return edi;
}

/*    Procedure: 0x004116FD - 0x004116FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004116FD()
{



}

/*    Procedure: 0x00411700 - 0x00411747
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00411810()
 */

L00411700(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 0;
    for(esi = A8; *esi != 0; esi = esi + 0x44) {
        if(Ac(((ebx << 4) + ebx << 2) + A8) != 0) {
            eax = A10;
            A10 = A10 - 1;
            if(eax == 0) {
                break;
            }
        }
        ebx = ebx + 1;
    }
    return *(A8 + ((ebx << 4) + ebx) * 4 + 4);
}

/*    Procedure: 0x00411748 - 0x0041179A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00411810()
 */

L00411748(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 0x72;
    edi = A8 + 38808;
    esi = A8 + 0x72;
    do {
        if(*esi != 0 && Ac(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74) != 0 && *edi == A10) {
            break;
        }
        ebx = ebx - 1;
        edi = edi + -338;
        esi = esi - 1;
    } while(ebx > 0);
    return ebx;
}

/*    Procedure: 0x0041179B - 0x004117B0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041179B(A8)
/* unknown */ void  A8;
{



    return 0;
}

/*    Procedure: 0x004117B1 - 0x004117C6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004117B1(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xa) :: 0x20;
    asm("setnc al");
    return A8 & 1;
}

/*    Procedure: 0x004117C7 - 0x004117EB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004117C7(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0x82);
    eax = edx < 0x76 || edx > 0x85 ? 0 : 1;
}

/*    Procedure: 0x004117EC - 0x0041180D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004117EC(A8)
/* unknown */ void  A8;
{



    dx = *(A8 + 0xc);
    eax = dx < 0x76 || dx > 0x85 ? 0 : 1;
}

/*    Procedure: 0x0041180E - 0x0041180F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041180E()
{



}

/*    Procedure: 0x00411810 - 0x004123A7
 *    Argument size: 8
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L004123A8()
 *        L00412C5C()
 *        L00414018()
 *        L004141EC()
 *        L00414268()
 */

L00411810(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vfffffffc;



    eax = 2;
L00411819:
    esp = esp + -4092;
    (save)eax;
    if(eax = eax - 1) {
        goto L00411819;
    }
    eax = Vfffffffc;
    (save)ebx;
    (save)Ac;
    (save)edi;
    ebx = A8;
    eax = *ebx;
    *ebx = *ebx + 1;
    eax = *eax & 0xff;
    if(eax > 0x43) {
        goto L0041239e;
    }
    switch(eax) {
        case 0:
L0041239e:
            eax = *(ebp - 8);
            (restore)edi;
            (restore)Ac;
            (restore)ebx;
            return;
        case 1:
            goto L0041239e;
        case 2:
L00411956:
            *(ebp - 8) = L00411464(ebx);
            goto L0041239e;
        case 3:
            *(ebp - 8) = L0041149C(L00411464(ebx));
            goto L0041239e;
        case 4:
            *(ebp - 8) = *(L00411464(ebx) * 4 + 0x60c15c);
            goto L0041239e;
        case 5:
            eax = L00411464(ebx);
            *(ebp - 8) = *( *( *(Ac + 0x1c) + 0x14) + eax * 4);
            goto L0041239e;
        case 6:
            edi = L00411464(ebx);
            *(ebp - 8) = *( *(Ac + 0x20) + edi * 4);
            goto L0041239e;
        case 7:
            *(ebp - 8) = ~(L00411810(ebx, Ac));
            goto L0041239e;
        case 8:
            *(ebp - 8) = !(L00411810(ebx, Ac));
            goto L0041239e;
        case 9:
            eax = L00411810(ebx, Ac);
            eax :: 1;
            asm("sbb eax,eax");
            *(ebp - 8) = ~eax;
            goto L0041239e;
        case 0xa:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = *(ebp - 0xc) * *(ebp - 0xc);
            goto L0041239e;
        case 0xb:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            eax = edi;
            asm("cdq");
            *(ebp - 0xc) = *(ebp - 0xc) / *(ebp - 0xc);
            edx = *(ebp - 0xc) % *(ebp - 0xc);
            *(ebp - 8) = eax;
            goto L0041239e;
        case 0xc:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            eax = edi;
            asm("cdq");
            *(ebp - 0xc) = *(ebp - 0xc) / *(ebp - 0xc);
            *(ebp - 8) = *(ebp - 0xc) % *(ebp - 0xc);
            goto L0041239e;
        case 0xd:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi + *(ebp - 0xc);
            goto L0041239e;
        case 0xe:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi - *(ebp - 0xc);
            goto L0041239e;
        case 0xf:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi << *(ebp - 0xc);
            goto L0041239e;
        case 0x10:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi >> *(ebp - 0xc);
            goto L0041239e;
        case 0x11:
            edi = L00411810(ebx, Ac);
            eax = L00411810(ebx, Ac);
            *(ebp - 0xc) = eax;
            *(ebp - 8) = edi :: *(ebp - 0xc) < 0 & 1;
            goto L0041239e;
        case 0x12:
            edi = L00411810(ebx, Ac);
            eax = L00411810(ebx, Ac);
            *(ebp - 0xc) = eax;
            edi :: *(ebp - 0xc);
            asm("setng al");
            *(ebp - 8) = eax & 1;
            goto L0041239e;
        case 0x13:
            edi = L00411810(ebx, Ac);
            eax = L00411810(ebx, Ac);
            *(ebp - 0xc) = eax;
            *(ebp - 8) = edi :: *(ebp - 0xc) > 0 & 1;
            goto L0041239e;
        case 0x14:
            edi = L00411810(ebx, Ac);
            eax = L00411810(ebx, Ac);
            *(ebp - 0xc) = eax;
            edi :: *(ebp - 0xc);
            asm("setnl al");
            *(ebp - 8) = eax & 1;
            goto L0041239e;
        case 0x15:
            edi = L00411810(ebx, Ac);
            eax = L00411810(ebx, Ac);
            *(ebp - 0xc) = eax;
            *(ebp - 8) = 0;
            goto L0041239e;
        case 0x16:
            edi = L00411810(ebx, Ac);
            eax = L00411810(ebx, Ac);
            *(ebp - 0xc) = eax;
            *(ebp - 8) = 0;
            goto L0041239e;
        case 0x17:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi & *(ebp - 0xc);
            goto L0041239e;
        case 0x18:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi ^ *(ebp - 0xc);
            goto L0041239e;
        case 0x19:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = edi | *(ebp - 0xc);
            goto L0041239e;
        case 0x1a:
            goto L00411c70;
        case 0x1b:
            goto L00411ca4;
        case 0x1c:
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x1d:
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x1e:
            L00411810(ebx, Ac);
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x1f:
            goto L00411d0f;
        case 0x20:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = L00416E9C(edi, *(ebp - 0xc));
            goto L0041239e;
        case 0x21:
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x22:
            goto L00411d7a;
        case 0x23:
            goto L00411db4;
        case 0x24:
            edi = L00411810(ebx, Ac);
            *(ebp - 8) = *( *L00501b94(edi, M0064a3b0) + 0x82);
            goto L0041239e;
        case 0x25:
            goto L00411e0c;
        case 0x26:
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x27:
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x28:
            L00411810(ebx, Ac);
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x29:
            L00411810(ebx, Ac);
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x2a:
            L00411810(ebx, Ac);
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x2b:
            L00411810(ebx, Ac);
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x2c:
            L00411810(ebx, Ac);
            L00411810(ebx, Ac);
            goto L0041239e;
        case 0x2d:
            *(ebp - 8) = L00417988(L00411810(ebx, Ac));
            goto L0041239e;
        case 0x2e:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            *(ebp - 8) = L0041760C(edi, *(ebp - 0xc), L00411810(ebx, Ac));
            goto L0041239e;
        case 0x2f:
            eax = L00411810(ebx, Ac);
            edi = eax;
            Vfffffffc = edi;
            *(ebp - 8) = (Vfffffffc & 8191) << 0x10 | Vfffffffc >> 0xd & 8191 & 65535;
            goto L0041239e;
        case 0x30:
            goto L00411fb4;
        case 0x31:
            Vfffffffc = L00411810(ebx, Ac);
            L004376B0(Vfffffffc, ebp - 0x10, ebp - 0x10, ebp - 0x10, ebp - 8, ebp - 0x10, ebp - 0x10);
            goto L0041239e;
        case 0x32:
            (save)L00451721();
            L00411810(ebx, Ac);
            (restore)edx;
            asm("xchg eax,edx");
            ecx = edx;
            edx = 0;
            *(ebp - 8) = ecx / ecx % ecx / ecx;
            goto L0041239e;
        case 0x33:
            *(ebp - 8) = L00411748(M0064a3b0, 0x41179c, L00411810(ebx, Ac));
            goto L0041239e;
        case 0x34:
            eax = L00411810(ebx, Ac);
            *(ebp - 8) = 0;
            goto L0041239e;
        case 0x35:
            ebx = L00411810(ebx, Ac);
            *(ebp - 8) = L0042CBCC(ebx, ebp - 0x12);
            goto L0041239e;
        case 0x36:
            *(ebp - 8) = L00411698(L00411810(ebx, Ac));
            goto L0041239e;
        case 0x37:
            *(ebp - 8) = L004116B0(L00411810(ebx, Ac));
            goto L0041239e;
        case 0x38:
            edi = L00411810(ebx, Ac);
            *(ebp - 8) = *( *L00501b94(edi, M0064a3b0) + 0xa0);
            goto L0041239e;
        case 0x39:
            Vfffffffc = L00411810(ebx, Ac);
            Vfffffffc = L00436BE4(Vfffffffc, *L004eeed4(3));
            *(ebp - 8) = Vfffffffc;
            goto L0041239e;
        case 0x3a:
            goto L0041212c;
        case 0x3b:
            edi = L00411810(ebx, Ac);
            *(ebp - 0xc) = L00411810(ebx, Ac);
            ebx = L00411810(ebx, Ac);
            edi = edi + 0x1718;
            edi = edi | *(ebp - 0xc) + 0x1524 << 0xd;
            *(ebp - 8) = edi | ebx << 0x1a;
            goto L0041239e;
        case 0x3c:
            *(ebp - 8) = L00411748(M0064a3b0, 0x4117c8, L00411810(ebx, Ac));
            goto L0041239e;
        case 0x3d:
            *(ebp - 8) = *( *L00501b94(L00411810(ebx, Ac), M0064a3b0) + 0x82);
            goto L0041239e;
        case 0x3e:
            *(ebp - 8) = *( *L00501b94(L00411810(ebx, Ac), M0064a3b0) + 0xff) & 0xff;
            goto L0041239e;
        case 0x3f:
            goto L00412261;
        case 0x40:
            *(ebp - 8) = *( *L00501b94(L00411810(ebx, Ac), M0064a3b0) + 0x88);
            goto L0041239e;
        case 0x41:
            *(ebp - 8) = *( *L00501b94(L00411810(ebx, Ac), M0064a3b0) + 0xfe) & 0xff;
            goto L0041239e;
        case 0x42:
            goto L00412327;
        case 0x43:
            Vfffffffc = L00411810(ebx, Ac);
            L00437628(Vfffffffc, ebp - 0x18, ebp - 0x1c, ebp - 0x20, ebp - 0x24);
            *(ebp - 8) = *(ebp - 0x1c);
            goto L0041239e;
    }
    goto L00411956;
L00411c70:
    edi = L00411810(ebx, Ac);
    *(ebp - 0xc) = L00411810(ebx, Ac);
    eax = edi == 0 || *(ebp - 0xc) == 0 ? 0 : 1;
    *(ebp - 8) = eax;
    goto L0041239e;
L00411ca4:
    edi = L00411810(ebx, Ac);
    *(ebp - 0xc) = L00411810(ebx, Ac);
    if(edi == 0) {
        if(*(ebp - 0xc) != 0) {
            goto L00411ccb;
        }
        eax = 0;
    } else {
L00411ccb:
        eax = 1;
    }
    *(ebp - 8) = eax;
    goto L0041239e;
L00411d0f:
    edi = L00411810(ebx, Ac);
    if(edi >= 0 && edi < 6) {
        *(ebp - 8) = *(edi * 4 + 6593668);
        goto L0041239e;
    }
    *(ebp - 8) = 0;
    goto L0041239e;
L00411d7a:
    edi = L00411810(ebx, Ac);
    if(edi == 1) {
        *(ebp - 8) = M00644d48;
        goto L0041239e;
    }
    if(edi == 2) {
        *(ebp - 8) = M00644d44;
        goto L0041239e;
    }
    *(ebp - 8) = 0;
    goto L0041239e;
L00411db4:
    edi = L00411810(ebx, Ac);
    if(edi >= 0 && edi < 6) {
        *(ebp - 8) = *(edi * 4 + 6593692);
        goto L0041239e;
    }
    *(ebp - 8) = 0;
    goto L0041239e;
L00411e0c:
    edi = L00411810(ebx, Ac);
    *(ebp - 0xc) = L00411810(ebx, Ac);
    if(*(ebp - 0xc) < 0x3e8) {
        *(ebp - 0xc) = *(ebp - 0xc) - 0x64;
        *(ebp - 8) = L004230B4( *L00501b94(edi, M0064a3b0), *(ebp - 0xc));
        goto L0041239e;
    }
    *(ebp - 0xc) = *(ebp - 0xc) - 0x3e8;
    if(edi == ( *(M00644c6c + 0x86) & 0xff) && *(ebp - 0xc) < 0x26) {
        *(ebp - 8) = *( *(ebp - 0xc) * 2 + 6573272) & 65535;
        goto L0041239e;
    }
    *(ebp - 8) = 0;
    goto L0041239e;
L00411fb4:
    edi = L00411810(ebx, Ac);
    if(edi >= 0 && edi < 6) {
        *(ebp - 8) = *(edi * 4 + 6573352);
        goto L0041239e;
    }
    *(ebp - 8) = 0;
    goto L0041239e;
L0041212c:
    edi = 1;
    Vfffffffc = L00411810(ebx, Ac);
    if(L00424D2C(ebp + -4116, Vfffffffc) == 0) {
        edi = L00424D64(ebp + -4116);
        if(edi != 0) {
            goto L00412172;
        }
    }
    *(ebp - 8) = 0;
    goto L0041239e;
L00412172:
    eax = L00424D84(ebp + -4116, *L004eeed4(edi));
    if(eax == 0) {
        *(ebp - 8) = 0;
        goto L0041239e;
    }
    *(ebp - 8) = *(eax + 4);
    goto L0041239e;
L00412261:
    Vfffffffc = L00411810(ebx, Ac);
    if(L00424D2C(ebp + -8196, Vfffffffc) != 0) {
        *(ebp - 8) = 0;
        goto L0041239e;
    }
    *(ebp - 8) = L004116C8(ebp + -8196, 0x4117ec);
    if(*(ebp - 8) == 0) {
        goto L0041239e;
    }
    *(ebp - 8) = L00411700(ebp + -8196, 0x4117ec, *L004eeed4( *(ebp - 8)));
    goto L0041239e;
L00412327:
    edi = L00411810(ebx, Ac);
    *(ebp - 0xc) = L00411810(ebx, Ac) + -1000;
    eax = L0042C788(edi);
    if(eax != 0 && *(ebp - 0xc) >= 0 && *(ebp - 0xc) < 0x26) {
        *(ebp - 8) = *(eax + *(ebp - 0xc) * 8 + 4);
        goto L0041239e;
    }
    *(ebp - 8) = 0;
    goto L0041239e;
}

/*    Procedure: 0x004123A8 - 0x004124BE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004123A8()
 *        L004124C0()
 */

L004123A8()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 8);
    eax = *esi;
    *esi = *esi + 1;
    bl = *eax;
    eax = (bl & 0xff) << 4;
    if(*(eax + 0x48edd4) > 0) {
        edi = *esi;
        if(!(eax = *(eax + 0x48edd8) - 1)) {
            == ? L004123ec : ;
            if(eax = eax - 1) {
                goto L004123f7;
            }
            if(eax = eax - 1) {
                goto L004123ff;
            }
        } else {
            *(ebp - 4) = 0;
            goto L0041240f;
            *(ebp - 4) = *( *(ebp + 0xc) + 0x1c);
            goto L0041240f;
L004123f7:
            *(ebp - 4) = *(ebp + 0xc);
            goto L0041240f;
L004123ff:
            *(ebp - 4) = L00411810(esi, *(ebp + 0xc));
        }
L0041240f:
        if(!(eax = *(((bl & 0xff) << 4) + 0x48eddc) - 1)) {
            == ? L0041242f : ;
            if(eax = eax - 1) {
                goto L0041243b;
            }
        } else {
            *(ebp - 8) = 0;
            goto L0041244b;
            *(ebp - 8) = L00411464(esi);
            goto L0041244b;
L0041243b:
            *(ebp - 8) = L00411810(esi, *(ebp + 0xc));
        }
L0041244b:
        *(ebp + 0x10)( *(((bl & 0xff) << 4) + 0x48edd4), *(ebp - 4), *(ebp - 8), 0x414018, *(ebp + 0xc), *(ebp + 0x14));
        *esi = edi;
    }
    eax = (bl & 0xff) << 4;
    if(*(eax + 0x48edd0) > 0) {
        edi = 0;
        eax = ((bl & 0xff) + (bl & 0xff)) * 8 + 0x48edd0;
        for(ebx = eax; edi < *ebx; edi = edi + 1) {
            eax = L004123A8(esi, *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14));
        }
    } else {
        *esi = *esi + 4;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004124BF - 0x004124BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004124BF()
{



}

/*    Procedure: 0x004124C0 - 0x004124F5
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00412ACC()
 *        L00414268()
 *        L004148B4()
 */

L004124C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    for(ebx = 0; 1; ebx = ebx + 1) {
        eax = *(A8 + 8);
        if(ebx >= *(eax + 4)) {
            break;
        }
        *(ebp - 4) = *(eax + ebx * 4 + 8);
        L004123A8(ebp - 4, A8, Ac, ebx);
    }
}

/*    Procedure: 0x004124F6 - 0x004124F7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004124F6()
{



}

/*    Procedure: 0x004124F8 - 0x00412516
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00414658()
 *        L0041EF5C()
 *        L00420B84()
 *        L00421A51()
 *        L00421B0C()
 *        L004222DC()
 *        L00422310()
 *        L00422408()
 *        L00422988()
 *        L00422C6C()
 *        L0042489C()
 *        L004258D0()
 *        L0042B6E8()
 *        L0042BCF4()
 *        L0042C7C4()
 *        L0043BD9F()
 *        L0043D05C()
 *        L0043DA28()
 *        L0043E288()
 *        L004462A8()
 */

L004124F8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *(A8 * 4 + 0x60c15c) = Ac;
    return L00414070(2, 0, A8);
}

/*    Procedure: 0x00412517 - 0x00412517
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00412517()
{



}

/*    Procedure: 0x00412518 - 0x00412526
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416ED0()
 *        L00416FD4()
 *        L0041EF5C()
 *        L00420B84()
 *        L00422988()
 *        L00422C6C()
 *        L0042C7C4()
 *        L0042D548()
 *        L0043BD9F()
 *        L0043D05C()
 *        L0043DA28()
 *        L0043E288()
 */

L00412518(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 0x60c15c);
}

/*    Procedure: 0x00412527 - 0x00412527
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00412527()
{



}

/*    Procedure: 0x00412528 - 0x0041267A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L00412528(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;



    eax = Ac;
    *(A8 + 0x82) = eax;
    esi = *L00501b9c( *(A8 + 0x82));
    *(ebp - 4) = *(esi + 0x2c);
    *(ebp - 2) = *(esi + 0x14) + *(esi + 0x18) + 7;
    *L005016bc(A8 + 0x138, *(ebp - 4));
    *(ebp - 4) = *(esi + 0x30);
    *(ebp - 2) = *(esi + 0x14) + *(esi + 0x18) + 7;
    *L005016bc(A8 + 0x140, *(ebp - 4));
    dl = ( *(esi + 0x24) & 0xff) >> 4 & 7;
    eax = *(esi + 0x34);
    if(eax != 0) {
        if(*eax == 0) {
            goto L004125b7;
        }
        al = 0x80;
    } else {
L004125b7:
        eax = 0;
    }
    dl = dl | al;
    *(A8 + 0x14c) = dl;
    eax = *(esi + 0x38);
    if(eax != 0) {
        *(A8 + 0xc4) = *eax;
        eax = *(esi + 0x38);
        ax = *(eax + 2);
        *(A8 + 0xc6) = ax;
        *(A8 + 0xc2) = ax;
        *(A8 + 0xbe) = ax;
        *(A8 + 0xc0) = ~( *(A8 + 0xbe));
        edx = *(A8 + 0xc0);
        *(A8 + 0xbc) = dx;
        *(A8 + 0x101) = *(A8 + 0xbc) >= 0x1329 ? 2 : *(A8 + 0xbc) >= 0xaa5 ? 1 : 0;
        *(A8 + 0xd1) = *( *(esi + 0x38) + 4);
        eax = *(esi + 0x38);
        eax = *(eax + 6) << 2;
        *(A8 + 0xe4) = ax;
        edx = *(esi + 0x38);
        eax = *(edx + 8);
        if(*(edx + 0x14) < 0) {
            edx = esi;
            *(A8 + 0xd0) = dl;
            eax = eax - *( *(A8 + 0xd0) * 4 + 0x4eed74);
        }
        *(A8 + 0x116) = ax;
    }
}

/*    Procedure: 0x0041267B - 0x0041267B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041267B()
{



}

/*    Procedure: 0x0041267C - 0x004126A8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L004141EC()
 */

L0041267C()
{



    (save)ebp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(esp + 8);
    eax = *esi;
    *esi = *esi + 1;
    if(( *eax & 0xff) > 0x42) {
        goto L00412ac4;
    }
    switch(*(eax + 0x4126a2)) {
        case 0:
            goto L00412ac4;
        case 1:
            goto L00412a74;
        case 2:
            goto L00412a4a;
        case 3:
            goto L004129f9;
        case 4:
            goto L004129c8;
        case 5:
            goto L0041299b;
        case 6:
            goto L0041295f;
        case 7:
            goto L00412ac4;
        case 8:
            goto L00412ac4;
        case 9:
            goto L00412869;
        case 0xa:
            goto L00412831;
        case 0xb:
            goto L004127f5;
        case 0xc:
            goto L00412ac4;
        case 0xd:
            goto L004127b9;
        case 0xe:
            goto L00412790;
        case 0xf:
            goto L00412761;
        case 0x10:
            goto L00412746;
        case 0x11:
            goto L0041272d;
    }
    *eax = *eax + al;
    *ecx = *ecx + dl;
    asm("adc [edi],cl");
    (save)cs;
}

/*    Procedure: 0x00412AC9 - 0x00412ACB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00412AC9()
{



}

/*    Procedure: 0x00412ACC - 0x00412B36
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 */

L00412ACC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = A8;
    ebx = ((eax & 65535) << 2) + ((eax & 65535) << 2) * 8 + 6341284;
    if(eax == *(ebx + 4) && *ebx > 0 && *ebx < 5) {
        if(*(ebx + 8) != 0) {
            L004124C0(ebx, 0x413ed0);
            *(ebx + 8) = 0;
            *(ebx + 0xc) = -1;
        }
        eax = *(ebx + 0x1c);
        if(*(eax + 0xc) >= 0) {
            *ebx = 5;
            return;
        }
        *(ebx + 6) = *(ebx + 6) + 1;
        *ebx = 6;
    }
}

/*    Procedure: 0x00412B37 - 0x00412B37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00412B37()
{



}

/*    Procedure: 0x00412B38 - 0x00412B3F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 */

L00412B38(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x00412B40 - 0x00412C5A
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 */

L00412B40(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = M0064a3b0;
    ebx = *L004eecb4(ebx, *L00501b94(Ac, ebx), 0x1d, A8, ebp - 4);
    if(ebx == 0) {
        eax = ebx;
    } else {
        *(ebx + 0xa0) = A10;
        *(ebx + 0x56) = Ac;
        *(ebx + 0xda) = 65532;
        *(ebx + 0xa8) = M00644ba4;
        *(ebx + 0xac) = M00644ba8;
        eax = A1c;
        *(ebx + 0xc2) = eax;
        *L005016e8(ebx + 0xba, eax, 0, 0, M00644ba4, M00644ba8);
        *(ebx + 0xbe) = *(ebx + 0xbe) + (A18 << 0x10);
        *(ebx + 0xa4) = 0;
        *(ebx + 0xc6) = A20 & 65535;
        *(ebx + 0x87) = 1;
        *(ebx + 0xb0) = A14;
        eax = *L005016e0(ebx, *(ebx + 0xb0), *(ebx + 0xc6), *(ebx + 0xbe));
        *(ebx + 0xcc) = A28;
        *(ebx + 0xc8) = A24;
        ecx = eax;
        L0045AFF0(ebx, *(ebx + 0xa8) << cl, *(ebx + 0xcc));
        eax = ebx;
    }
}

/*    Procedure: 0x00412C5B - 0x00412C5B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00412C5B()
{



}

/*    Procedure: 0x00412C5C - 0x00413DC2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00414018()
 *        L00414268()
 *        L0041430C()
 */

L00412C5C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -156;
    (save)A8;
    (save)Ac;
    (save)edi;
    edi = 0;
    goto L00413db4;
L00412c75:
    eax = *A8;
    *A8 = *A8 + 1;
    eax = *eax & 0xff;
    if(eax <= 0x3c) {
        switch(eax) {
            case 0:
L00412d80:
                edi = 1;
                goto L00413db4;
            case 1:
                *(ebp - 0x14) = L00411464(A8);
                *(ebp - 0x14) = L004141EC(A8, Ac, *(ebp - 0x14), *(Ac + 4));
                eax = L0041267C(A8, Ac, *(ebp - 0x14));
                goto L00413db4;
            case 2:
                goto L00412dbc;
            case 3:
                *(ebp - 0x14) = L00411464(A8);
                eax = *(ebp - 0x14) - 4;
                *A8 = *A8 + eax;
                goto L00413db4;
            case 4:
                goto L00412e00;
            case 5:
                eax = L00421B0C();
                goto L00413db4;
            case 6:
                eax = L00421208();
                goto L00413db4;
            case 7:
                *(ebp - 0x14) = L00411810(A8, Ac);
                eax = L0041267C(A8, Ac, *(ebp - 0x14));
                goto L00413db4;
            case 8:
                goto L00412ebd;
            case 9:
                edi = L00411464(A8);
                *(Ac + 0x14) = edi;
                eax = *( *(Ac + 0x1c) + edi * 4 + 0x1c);
                *(Ac + 0x10) = eax;
                *Ac = 4;
                edi = 1;
                goto L00413db4;
            case 0xa:
                *(ebp - 0x10) = *A8;
                *A8 = *A8 + L00471288( *(ebp - 0x10)) + 1;
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                *(ebp - 0x20) = L00411810(A8, Ac);
                *(ebp - 0x24) = L00411810(A8, Ac);
                *(ebp - 0x14) = L00417824( *(ebp - 0x10), *(ebp - 0x18), *(ebp - 0x1c), *(ebp - 0x20), *(ebp - 0x24));
                eax = L0041267C(A8, Ac, *(ebp - 0x14));
                goto L00413db4;
            case 0xb:
                *(ebp - 0x14) = L00411810(A8, Ac);
                eax = L004178EC( *(ebp - 0x14));
                goto L00413db4;
            case 0xc:
                *(ebp - 0x14) = L00411810(A8, Ac);
                eax = L00417908( *(ebp - 0x14));
                goto L00413db4;
            case 0xd:
                *(ebp - 0x14) = L00411810(A8, Ac);
                eax = L00417628( *(ebp - 0x14));
                goto L00413db4;
            case 0xe:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                eax = L0041766C( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x1c), 0, 0);
                goto L00413db4;
            case 0xf:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                eax = L0041773C( *(ebp - 0x14), *(ebp - 0x18));
                goto L00413db4;
            case 0x10:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                eax = L004177CC( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x1c));
                goto L00413db4;
            case 0x11:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                eax = L00417924( *(ebp - 0x14), *(ebp - 0x18));
                goto L00413db4;
            case 0x12:
                eax = L0041796C(L00411810(A8, Ac));
                goto L00413db4;
            case 0x13:
                goto L004130d4;
            case 0x14:
                eax = L00412B38(L00411810(A8, Ac));
                goto L00413db4;
            case 0x15:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                eax = L0043E288( *L00501b94( *(ebp - 0x14), M0064a3b0), *(ebp - 0x18), *(ebp - 0x1c));
                goto L00413db4;
            case 0x16:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                eax = L00421DEC(ebp + -136);
                goto L00413db4;
            case 0x17:
                *(ebp + -136) = L00411810(A8, Ac);
                eax = L00421CFC(ebp + -136);
                goto L00413db4;
            case 0x18:
                *(ebp + -136) = L00411810(A8, Ac);
                eax = L00421D34(ebp + -136);
                goto L00413db4;
            case 0x19:
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp - 0x70) = 0;
                eax = L00422310(ebp + -136);
                goto L00413db4;
            case 0x1a:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                (save)ebp + -156;
                (save) *(ebp - 0x18);
                (save) *L00501b94( *(ebp - 0x14), M0064a3b0) + 0x124;
                *L005000c0();
                esp = esp + 0xc;
                eax = L00414070(0x12, 0, *(ebp - 0x14));
                goto L00413db4;
            case 0x1b:
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                eax = L00421CFC(ebp + -136);
                goto L00413db4;
            case 0x1c:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                eax = L00421DEC(ebp + -136);
                goto L00413db4;
            case 0x1d:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                eax = L00421EFC(ebp + -136);
                goto L00413db4;
            case 0x1e:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                eax = L00421EFC(ebp + -136);
                goto L00413db4;
            case 0x1f:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                *(ebp - 0x80) = L00411810(A8, Ac);
                eax = L00421EFC(ebp + -136);
                goto L00413db4;
            case 0x20:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                eax = L00421DBC(ebp + -136);
                goto L00413db4;
            case 0x21:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac) * 49710;
                eax = L0042170C( *(ebp - 0x14), *(ebp - 0x18));
                goto L00413db4;
            case 0x22:
                eax = L004222DC();
                goto L00413db4;
            case 0x23:
                *(ebp - 0x14) = L00411810(A8, Ac);
                eax = *L005000c0(M0060c298, *(ebp - 0x14), ebp + -156) - 1;
                M0060c298 = eax;
                goto L00413db4;
            case 0x24:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp + -156) = L00411810(A8, Ac);
                eax = *L005000c0(M0060c298, *(ebp - 0x14), ebp + -156) - 1;
                M0060c298 = eax;
                goto L00413db4;
            case 0x25:
                *(ebp - 0x14) = L0042093C(7, 0, 0, 0, 0, 0, 0, 0, 0, "", M00644cae);
                eax = L0041267C(A8, Ac, *(ebp - 0x14));
                goto L00413db4;
            case 0x26:
                eax = L00420AEC(L00411810(A8, Ac));
                goto L00413db4;
            case 0x27:
                goto L004134a8;
            case 0x28:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                eax = L0041C1F3( *(ebp - 0x14), *(ebp - 0x18), M00644c70);
                goto L00413db4;
            case 0x29:
                goto L00413562;
            case 0x2a:
                goto L004135b3;
            case 0x2b:
                goto L00413604;
            case 0x2c:
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                eax = L00421D34(ebp + -136);
                goto L00413db4;
            case 0x2d:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp + -156) = L00411810(A8, Ac);
                *(ebp + -152) = L00411810(A8, Ac);
                eax = *L005000c0(M0060c298, *(ebp - 0x14), ebp + -156) - 1;
                M0060c298 = eax;
                goto L00413db4;
            case 0x2e:
                *(ebp - 0x70) = -1;
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                eax = L00421DBC(ebp + -136);
                goto L00413db4;
            case 0x2f:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp + -156) = L00411810(A8, Ac);
                (save)ebp + -156;
                (save) *(ebp - 0x18);
                (save) *L00501b94( *(ebp - 0x14), M0064a3b0) + 0x124;
                *L005000c0();
                esp = esp + 0xc;
                eax = L00414070(0x12, 0, *(ebp - 0x14));
                goto L00413db4;
            case 0x30:
                goto L0041377e;
            case 0x31:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                *(ebp - 0x20) = L00411698(L00411810(A8, Ac));
                *(ebp - 0x24) = L00411810(A8, Ac);
                eax = L0041EE28( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x1c), *(ebp - 0x20), *(ebp - 0x24));
                goto L00413db4;
            case 0x32:
                goto L0041386b;
            case 0x33:
                goto L0041392d;
            case 0x34:
                goto L0041397c;
            case 0x35:
                goto L004139f2;
            case 0x36:
                goto L00413a5b;
            case 0x37:
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                *(ebp - 0x80) = L00411810(A8, Ac);
                eax = L00421CFC(ebp + -136);
                goto L00413db4;
            case 0x38:
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                *(ebp - 0x80) = L00411810(A8, Ac);
                *(ebp - 0x7c) = L00411810(A8, Ac);
                eax = L00421CFC(ebp + -136);
                goto L00413db4;
            case 0x39:
                *(ebp - 8) = *L00501b94(L00411810(A8, Ac), M0064a3b0);
                eax = *(ebp - 8);
                *(eax + 0x8c) = 0;
                eax = *(ebp - 8);
                *(eax + 0x90) = 0;
                eax = *(ebp - 8);
                *(eax + 0x94) = 0;
                goto L00413db4;
            case 0x3a:
                goto L00413c27;
            case 0x3b:
                *(ebp + -136) = L00411810(A8, Ac);
                *(ebp + -132) = L00411810(A8, Ac);
                *(ebp - 0x80) = L00411810(A8, Ac);
                *(ebp - 0x7c) = L00411810(A8, Ac);
                *(ebp - 0x64) = L00411810(A8, Ac);
                *(ebp - 0x70) = 0;
                eax = L00422310(ebp + -136);
                goto L00413db4;
            case 0x3c:
                *(ebp - 8) = *L00501b94(L00411810(A8, Ac), M0064a3b0);
                *( *(ebp - 8) + 0xff) = 0xb;
                al = *( *(ebp - 8) + 0xfe);
                *( *(ebp - 8) + 0x100) = al;
                L00411810(A8, Ac);
                *( *(ebp - 8) + 0xfe) = al;
                *(ebp - 0x1c) = L00411810(A8, Ac);
                eax = *(ebp - 0x1c) + *(ebp - 0x1c) * 2;
                dx = *(eax * 4 + 0x48f210);
                *( *(ebp - 8) + 0x102) = dx;
                dx = *(eax * 4 + 0x48f214);
                *( *(ebp - 8) + 0x104) = dx;
                ax = *(eax * 4 + 0x48f218);
                *( *(ebp - 8) + 0x106) = ax;
                goto L00413db4;
        }
        goto L00412d80;
L00412dbc:
        eax = L00411810(A8, Ac);
        if(eax != 0) {
            *A8 = *A8 + 4;
        } else {
            *(ebp - 0x14) = L00411464(A8);
            eax = *(ebp - 0x14) - 4;
            *A8 = *A8 + eax;
            goto L00413db4;
L00412e00:
            *(ebp - 0x14) = L00411810(A8, Ac);
            *(ebp - 0x18) = L00411810(A8, Ac);
            *(ebp - 0x1c) = L00411810(A8, Ac);
            *(ebp - 0x20) = L00411810(A8, Ac);
            *(ebp - 0x24) = L00411810(A8, Ac);
            *(ebp - 0x28) = L00411810(A8, Ac);
            *(ebp + -136) = *(ebp - 0x1c);
            (save) *(ebp - 0x28);
            (save) *(ebp - 0x24);
            (save) *(ebp - 0x20);
            eax = *(ebp - 0x1c) != 0 ? ebp + -136 : 0;
            (save)eax;
            (save) *(ebp - 0x18);
            (save) *(ebp - 0x14);
            eax = L00421684();
            esp = esp + 0x18;
            goto L00413db4;
L00412ebd:
            *(ebp - 0x14) = L00411810(A8, Ac);
            L00412ACC( *(ebp - 0x14));
            eax = *(ebp - 0x14);
            if(eax == *(Ac + 4)) {
                edi = 1;
                goto L00413db4;
L004130d4:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 8) = L004304F5( *(ebp - 0x14));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L004134a8:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                *(ebp - 0x20) = L00411810(A8, Ac);
                eax = L004116B0( *(ebp - 0x20));
                *(ebp - 8) = L0042CD62( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x1c), eax, L00411698( *(ebp - 0x20)));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L00413562:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 8) = L0042CD80( *(ebp - 0x14), *(ebp - 0x18));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L004135b3:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 8) = L0042CD95( *(ebp - 0x14), *(ebp - 0x18));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L00413604:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 8) = L0042CDBF( *(ebp - 0x14), *(ebp - 0x18));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L0041377e:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                *(ebp - 0x20) = L00411810(A8, Ac);
                *(ebp - 0x24) = L00411810(A8, Ac);
                *(ebp - 8) = L0041F8F4( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x1c), *(ebp - 0x20), *(ebp - 0x24));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L0041386b:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                *(ebp - 0x1c) = L00411810(A8, Ac);
                *(ebp - 0x20) = L00411810(A8, Ac);
                *(ebp - 0x24) = L00411810(A8, Ac);
                *(ebp - 0x28) = L00411810(A8, Ac);
                *(ebp - 0x2c) = L00411810(A8, Ac);
                *(ebp - 0x30) = L00411810(A8, Ac);
                *(ebp - 8) = L00412B40( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x1c), *(ebp - 0x20), *(ebp - 0x24), *(ebp - 0x28), *(ebp - 0x2c), *(ebp - 0x30), L00411810(A8, Ac));
                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                eax = L0041267C(A8, Ac, eax);
                goto L00413db4;
L0041392d:
                *(ebp - 0x14) = L00411810(A8, Ac);
                *(ebp - 0x18) = L00411810(A8, Ac);
                eax = *L00501b94( *(ebp - 0x14), M0064a3b0);
                *(ebp - 8) = eax;
                if(*(ebp - 8) != 0) {
                    eax = L0043DD28( *(ebp - 8), *(ebp - 0x18));
                    goto L00413db4;
L0041397c:
                    *(ebp - 0x14) = L00411810(A8, Ac);
                    *(ebp - 0x18) = L00411810(A8, Ac);
                    *(ebp - 8) = *L00501b94( *(ebp - 0x18), M0064a3b0);
                    eax = *(ebp - 8) != 0 ? L0043CB30( *(ebp - 0x14) + 36352, *(ebp - 8)) : 0;
                    *(ebp - 8) = eax;
                    eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                    eax = L0041267C(A8, Ac, eax);
                    goto L00413db4;
L004139f2:
                    *(ebp - 0x14) = L00411810(A8, Ac);
                    *(ebp - 0x18) = L00411810(A8, Ac);
                    eax = L00411810(A8, Ac);
                    *(ebp - 0x1c) = eax;
                    if(*(ebp - 0x14) == 1) {
                        eax = ebp - 4;
                        eax = L004202D4( *(ebp - 0x18), eax, *(ebp - 0x1c));
                    } else {
                        if(*(ebp - 0x14) == 2) {
                            eax = ebp - 4;
                            eax = L00420290( *(ebp - 0x18), eax, *(ebp - 0x1c));
                            goto L00413db4;
L00413a5b:
                            *(ebp - 8) = *L00501b94(L00411810(A8, Ac), M0064a3b0);
                            *(ebp - 0x18) = L00411810(A8, Ac);
                            *(ebp - 0x3c) = L00411810(A8, Ac);
                            eax = L0042E0D5( *(ebp - 8), *(ebp - 0x3c));
                            if(*(ebp - 0x18) != 0) {
                                if(M0064a3b0 != 0) {
                                    al = *(ebp - 0x18);
                                    *( *(ebp - 8) + 0x56) = al;
                                } else {
                                    *(ebp - 0xc) = *L00501b94( *(ebp - 0x18), M0064a3b0);
                                    eax = *(ebp - 0xc);
                                    eax = *(ebp - 8);
                                    L0044EB4E( *(ebp - 8) + 0x3e, *(eax + 0x3e), *(eax + 0x42), *(eax + 0x3e), *(eax + 0x42));
                                    eax = *(ebp - 0xc);
                                    eax = *(ebp - 8);
                                    L0044EB4E( *(ebp - 8) + 0x46, *(eax + 0x46), *(eax + 0x4a), *(eax + 0x46), *(eax + 0x4a));
                                    eax = *(ebp - 0xc);
                                    eax = *(ebp - 8);
                                    L0044EB4E( *(ebp - 8) + 0x4e, *(eax + 0x4e), *(eax + 0x52), *(eax + 0x4e), *(eax + 0x52));
                                    eax = *(ebp - 0xc);
                                    al = *(eax + 0x56);
                                    *( *(ebp - 8) + 0x56) = al;
                                }
                            } else {
                                eax = *(ebp - 8);
                                *(eax + 0x56) = 0;
                                goto L00413db4;
L00413c27:
                                *(ebp - 0x14) = L00411810(A8, Ac);
                                *(ebp - 0x18) = L00411810(A8, Ac);
                                *(ebp - 8) = *L00501b94( *(ebp - 0x14), M0064a3b0);
                                *(ebp - 0x18) = *(ebp - 0x18) - 0x3e8;
                                if(*(ebp - 0x18) >= 0 && *(ebp - 0x18) < 0x26) {
                                    *(ebp - 8) = *(ebp - 8) != M00644c6c || *( *(ebp - 0x18) * 2 + 6573272) != 0 ? L0041EF5C( *(ebp - 8), *(ebp - 0x18)) : 0;
                                }
                                eax = *(ebp - 8) != 0 ? *( *(ebp - 8) + 0x86) & 0xff : 0;
                                eax = L0041267C(A8, Ac, eax);
                            }
                        }
                    }
                }
            }
        }
    }
L00413db4:
    if(edi == 0) {
        goto L00412c75;
    }
    (restore)edi;
    (restore)Ac;
    (restore)A8;
}

/*    Procedure: 0x00413DC3 - 0x00413DC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00413DC3()
{



}

/*    Procedure: 0x00413DC4 - 0x00413E29
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00413E60()
 *        L00413ED0()
 */

L00413DC4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = *A8;
    ebx = *Ac;
    if(ecx != ebx) {
        return ecx - ebx;
    }
    ecx = *(A8 + 4);
    ebx = *(Ac + 4);
    if(ecx != ebx) {
        return ecx - ebx;
    }
    ecx = *(A8 + 8);
    ebx = *(Ac + 8);
    if(ecx != ebx) {
        return ecx - ebx;
    }
    ecx = *(A8 + 0x10);
    ebx = *(Ac + 0x10);
    if(ecx != ebx) {
        return ecx - ebx;
    }
    ecx = *(A8 + 0x14);
    ebx = *(Ac + 0x14);
    if(ecx != ebx) {
        return ecx - ebx;
    }
    return *(A8 + 0xc) - *(Ac + 0xc);
}

/*    Procedure: 0x00413E2A - 0x00413E2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00413E2A()
{



}

/*    Procedure: 0x00413E2C - 0x00413E5E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00413FA8()
 *        L00414070()
 */

L00413E2C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = *A8;
    ebx = *Ac;
    if(ecx != ebx) {
        return ecx - ebx;
    }
    ecx = *(A8 + 4);
    ebx = *(Ac + 4);
    if(ecx != ebx) {
        return ecx - ebx;
    }
    return *(A8 + 8) - *(Ac + 8);
}

/*    Procedure: 0x00413E5F - 0x00413E5F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00413E5F()
{



}

/*    Procedure: 0x00413E60 - 0x00413ECF
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041E413()
 *        L00420F6C()
 *        L004405E2()
 */

L00413E60(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = L0047777C(0x20);
    *esi = 0;
    *(esi + 4) = 0;
    *(esi + 8) = A8;
    *(esi + 0xc) = Ac;
    *(esi + 0x10) = A10;
    *(esi + 0x14) = A14;
    *(esi + 0x18) = A18;
    eax = A1c;
    *(esi + 0x1c) = eax;
    for(ebx = 6346684; 1; ebx = *ebx) {
        edi = *ebx;
        if(edi == 0) {
            break;
        }
        eax = L00413DC4(esi + 8, edi + 8);
        if(eax >= 0) {
            eax = *ebx + 4;
            ebx = eax;
            continue;
        }
    }
    *ebx = esi;
}

/*    Procedure: 0x00413ED0 - 0x00413FA6
 *    Argument size: 24
 *    Local size: 24
 *    Save regs size: 8
 */

L00413ED0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vffffffe8 = A8;
    Vffffffec = Ac;
    Vfffffff0 = A10;
    Vfffffff4 = A14;
    Vfffffff8 = A18;
    Vfffffffc = A1c;
    for(ebx = 6346684; 1; ebx = *ebx) {
        eax = *ebx;
        if(eax == 0) {
            break;
        }
        eax = L00413DC4( & Vffffffe8, eax + 8);
        if(eax >= 0) {
            if(eax <= 0) {
                break;
            }
            ebx = *ebx + 4;
            continue;
        }
    }
    eax = *ebx;
    if(eax != 0) {
        edx = *(eax + 4);
        if(edx != 0) {
            if(*eax == 0) {
                esi = edx;
                eax = L00477640(eax);
                *ebx = esi;
            } else {
                for(eax = *ebx; 1; eax = edx + 4) {
                    edx = *eax;
                    if(*(edx + 4) == 0) {
                        break;
                    }
                }
                edx = *eax;
                esi = edx;
                *eax = *edx;
                *esi = *( *ebx);
                *(esi + 4) = *( *ebx + 4);
                eax = L00477640( *ebx);
                *ebx = esi;
            }
        } else {
            edx = *ebx;
            eax = *edx;
            if(eax != 0) {
                esi = eax;
                eax = L00477640(edx);
                *ebx = esi;
            } else {
                L00477640( *ebx);
                eax = 0;
                *ebx = 0;
            }
        }
    }
}

/*    Procedure: 0x00413FA7 - 0x00413FA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00413FA7()
{



}

/*    Procedure: 0x00413FA8 - 0x00414017
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00413FA8()
 *        L00414070()
 */

L00413FA8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    if(Ac != 0) {
        L00413FA8(A8, *Ac, A10);
        if(L00413E2C(Ac + 8, A10) == 0) {
            edi = L0047777C(0x10);
            *( *A8) = edi;
            *edi = 0;
            *(edi + 4) = *(Ac + 0x14);
            *(edi + 8) = *(Ac + 0x18);
            *(edi + 0xc) = *(Ac + 0x1c);
            *A8 = edi;
        }
        eax = L00413FA8(A8, *(Ac + 4), A10);
    }
}

/*    Procedure: 0x00414018 - 0x0041406C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00414018(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    eax = Ac;
    if(*A8 == 1 && eax < *( *(A8 + 8) + 4)) {
        *(ebp - 4) = *( *(A8 + 8) + eax * 4 + 8);
        eax = L00411810(ebp - 4, A8);
        if(eax != 0) {
            *A8 = 2;
            eax = L00412C5C(ebp - 4, A8);
            if(*A8 == 2) {
                *A8 = 1;
            }
        }
    }
}

/*    Procedure: 0x0041406D - 0x0041406F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041406D()
{



}

/*    Procedure: 0x00414070 - 0x00414119
 *    Argument size: 12
 *    Local size: 32
 *    Save regs size: 8
 *    Called by:
 *        L004115B4()
 *        L004124F8()
 *        L00412C5C()
 *        L00414474()
 *        L004145B5()
 *        L004171E4()
 *        L0041C1F3()
 *        L0041FED9()
 *        L004200B8()
 *        L00421020()
 *        L0042110C()
 *        L004224D8()
 *        L00422539()
 *        L00422988()
 *        L00422F94()
 *        L00423024()
 *        L0042327C()
 *        L004232CD()
 *        L00423EE4()
 *        L00425688()
 *        L00426520()
 *        L004269C4()
 *        L00426A83()
 *        L00426B56()
 *        L00426C08()
 *        L0042B6E8()
 *        L0042BCF4()
 *        L0042CDD4()
 *        L0042CF1A()
 *        L0042D32B()
 *        L0042D376()
 *        L0042D40C()
 *        L0042D66E()
 *        L0042D768()
 *        L0042D862()
 *        L0042D9D8()
 *        L0042DA37()
 *        L0042DC8F()
 *        L0042DF8F()
 *        L0042EBA8()
 *        L0042EF4A()
 *        L0042EFD2()
 *        L0042F1DC()
 *        L0042F30B()
 *        L0042F42D()
 *        L0042F743()
 *        L0042F78E()
 *        L0042F8F5()
 *        L0042F9B9()
 *        L0042FA02()
 *        L0042FA73()
 *        L0042FD2C()
 *        L0042FF20()
 *        L004301D0()
 *        L00430230()
 *        L0043039F()
 *        L00430410()
 *        L00430A55()
 *        L00430B3C()
 *        L00430B7E()
 *        L00430BDA()
 *        L00430C41()
 *        L004373AB()
 *        L0043BD9F()
 *        L0043BEE0()
 *        L0043DA28()
 *        L0043F76E()
 *        L0043FC74()
 *        L004408BF()
 *        L00440D29()
 *        L00440F30()
 *        L00440F61()
 *        L0044110C()
 *        L004411B5()
 *        L004413F4()
 *        L0044155E()
 *        L00441700()
 *        L00441995()
 *        L004425C5()
 *        L00442609()
 *        L00442674()
 *        L00442EC4()
 *        L00443D54()
 *        L0044421C()
 *        L00444448()
 *        L00444492()
 *        L004444DE()
 *        L00444534()
 *        L00444610()
 *        L00444870()
 *        L00445474()
 *        L00445590()
 */

L00414070(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = & Vfffffffc;
    Vffffffe0 = A8;
    Vffffffe4 = Ac;
    Vffffffe8 = A10;
    for(ebx = 6346684; 1; ebx = *ebx) {
        eax = *ebx;
        if(eax == 0) {
            break;
        }
        eax = L00413E2C( & Vffffffe0, eax + 8);
        if(eax >= 0) {
            if(eax <= 0) {
                break;
            }
            ebx = *ebx + 4;
            continue;
        }
    }
    if(*ebx != 0) {
        *esi = 0;
        Vfffffff8 = esi;
        L00413FA8( & Vfffffff8, *ebx, & Vffffffe0);
        ebx = *esi;
        do {
            *(ebx + 4)( *(ebx + 8), *(ebx + 0xc));
            ebx = *ebx;
        } while(ebx != 0);
        do {
            ebx = *esi;
            *esi = *( *esi);
            L00477640(ebx);
        } while(*esi != 0);
        eax = L0041430C();
    }
}

/*    Procedure: 0x0041411A - 0x0041411B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041411A()
{



}

/*    Procedure: 0x0041411C - 0x00414143
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041411C()
 *        L00414144()
 */

L0041411C(A8)
/* unknown */ void  A8;
{



    if(A8 != 0) {
        L0041411C( *A8);
        L0041411C( *(A8 + 4));
        eax = L00477640(A8);
    }
}

/*    Procedure: 0x00414144 - 0x0041415B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00414410()
 */

L00414144()
{



    L0041411C(M0060d7bc);
    M0060d7bc = 0;
    return 0;
}

/*    Procedure: 0x0041415C - 0x004141EB
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004141EC()
 */

L0041415C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8;
    esi = 0;
    edi = eax * 4 + 0x48e28c;
    ebx = 6341284;
    do {
        if(*ebx == 0) {
            goto L00414178;
        }
        esi = esi + 1;
        ebx = ebx + 0x24;
    } while(esi < 0x96);
    goto L004141e5;
L00414178:
    *ebx = 4;
    *(ebx + 4) = si;
    *(ebx + 6) = *(ebx + 6) + 1;
    *(ebx + 8) = 0;
    *(ebx + 0xc) = -1;
    *(ebx + 0x10) = 0;
    *(ebx + 0x14) = -1;
    *(ebx + 0x18) = eax;
    *(ebx + 0x1c) = *edi;
    *(ebx + 0x20) = L0047777C( *( *edi + 0x10) << 2);
    eax = *(ebx + 0x20);
    *eax = *(ebx + 4);
    eax = *(ebx + 0x20);
    *(eax + 4) = Ac;
    eax = (esi << 2) + (esi << 2) * 8 + 6341284;
    goto L004141e7;
L004141e5:
    eax = 0;
L004141e7:
}

/*    Procedure: 0x004141EC - 0x00414265
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00412C5C()
 *        L004143CC()
 */

L004141EC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = L0041415C(A10, A14);
    *(ebp - 4) = *( *(A10 * 4 + 0x48e28c));
    ebx = 0;
    for(edi = A10 * 4 + 0x48e28c; ebx < *( *edi + 8); ebx = ebx + 1) {
        L0041267C(ebp - 4, esi, L00411810(A8, Ac));
    }
    *(esi + 0x10) = *( *(A10 * 4 + 0x48e28c) + 0x1c);
    *(esi + 0x14) = 0;
    return *(esi + 4);
}

/*    Procedure: 0x00414266 - 0x00414267
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414266()
{



}

/*    Procedure: 0x00414268 - 0x00414308
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041430C()
 */

L00414268(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = ebp - 4;
    *A8 = 3;
    if(*(A8 + 8) != 0) {
        L004124C0(A8, 0x413ed0);
        *(A8 + 8) = 0;
        *(A8 + 0xc) = -1;
    }
    *edi = *( *(A8 + 0x10));
    eax = L00412C5C(edi, A8);
    if(*A8 == 3) {
        for(esi = 0; 1; esi = esi + 1) {
            eax = *(A8 + 0x10);
            if(esi >= *(eax + 4)) {
                break;
            }
            *edi = *(eax + esi * 4 + 8);
            if(L00411810(edi, A8) != 0) {
                eax = L00412C5C(edi, A8);
                if(*A8 != 3) {
                    goto L00414303;
                }
                esi = 0;
            }
        }
        *(A8 + 8) = *(A8 + 0x10);
        *(A8 + 0xc) = *(A8 + 0x14);
        eax = L004124C0(A8, 0x413e60);
        *A8 = 1;
    }
L00414303:
}

/*    Procedure: 0x00414309 - 0x0041430B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414309()
{



}

/*    Procedure: 0x0041430C - 0x004143C9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00414070()
 *        L004143CC()
 */

L0041430C()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    while(1) {
        ecx = 0;
        edx = 0;
        eax = 6341284;
        do {
            ebx = *eax;
            if(ecx < ebx) {
                ecx = ebx;
                esi = edx;
            }
            edx = edx + 1;
            eax = eax + 0x24;
        } while(edx < 0x96);
        if(ecx <= 3) {
            break;
        }
        if(ecx = ecx - 4) {
            L00414268((esi << 2) + (esi << 2) * 8 + 6341284);
            continue;
        }
        if(ecx = ecx - 1) {
            eax = esi + esi * 8;
            *(eax * 4 + 6341284) = 6;
            edx = *( *(eax * 4 + 6341308) * 4 + 0x48e28c);
            *(ebp - 4) = *( *(edx + *(edx + 0xc) * 4 + 0x1c));
            L00412C5C(ebp - 4, (esi << 2) + (esi << 2) * 8 + 6341284);
            continue;
        }
        if(ecx = ecx - 1) {
            ebx = esi + esi * 8;
            L00477640( *(ebx * 4 + 6341316));
            *(ebx * 4 + 6341284) = 0;
            continue;
        }
    }
}

/*    Procedure: 0x004143CA - 0x004143CB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004143CA()
{



}

/*    Procedure: 0x004143CC - 0x0041440F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00414444()
 */

L004143CC()
{



    M0060c294 = 0;
    M0060c290 = 0;
    M0060c28c = 0;
    M0060c288 = 0;
    M0060c284 = 0;
    M0060c280 = 0;
    M0060c27c = 0;
    M0060c278 = 0;
    L004141EC(0, 0, 0, 0);
    return L0041430C();
}

/*    Procedure: 0x00414410 - 0x00414443
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00414444()
 *        L004147AC()
 */

L00414410()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 0;
    ebx = 6341284;
    do {
        if(*ebx > 0) {
            L00477640( *(ebx + 0x20));
            *ebx = 0;
        }
        esi = esi + 1;
        ebx = ebx + 0x24;
    } while(esi < 0x96);
    return L00414144();
}

/*    Procedure: 0x00414444 - 0x00414470
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00414444(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A8 & 0xff;
    if(esi == 1) {
        eax = L00414410();
    }
    if(esi == 4) {
        L004143CC();
        eax = L004149AC();
    }
}

/*    Procedure: 0x00414471 - 0x00414473
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414471()
{



}

/*    Procedure: 0x00414474 - 0x004144A8
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004144A9()
 *        L00414539()
 */

L00414474(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(A8 >= *Ac) {
        L00414070(1, 0, A14);
        ecx = A10 + A8;
        *Ac = ecx;
        eax = *Ac;
        edx = 0;
        *Ac = *Ac - A10 / A10 % A10 / A10;
    }
}

/*    Procedure: 0x004144A9 - 0x00414538
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004144A9(A8)
/* unknown */ void  A8;
{



    eax = *A8;
    if(eax < 9) {
        if((eax = eax - 1 - 5) || (eax = eax - 1)) {
            goto L00414537;
        }
        return;
    }
    if(!(eax = eax - 9 - 6)) {
        == ? L004144d6 : ;
        if(!(eax = eax - 1 - 0xa)) {
            return;
            L00414474(M00644ba8, 6341256, 1, 8);
            L00414474(M00644ba8, 6341260, 7, 9);
            L00414474(M00644ba8, 6341264, 0x1c, 0xa);
            return L00414474(M00644ba8, 6341268, 0x16d, 0xb);
        }
    }
L00414537:
}

/*    Procedure: 0x00414539 - 0x004145B4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414539()
{



    eax = M00644ba8;
    if(eax > M0060c278) {
        M0060c284 = 0;
        M0060c280 = 0;
        M0060c27c = 0;
        M0060c278 = eax;
    }
    L00414474(M00644ba4, 6341244, 49710, 5);
    L00414474(M00644ba4, 6341248, 2982600, 6);
    return L00414474(M00644ba4, 6341252, 178956000, 7);
}

/*    Procedure: 0x004145B5 - 0x004145E2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004145B5(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*eax == 0) {
        edx = *(eax + 8);
        M0060c2a0 = edx;
        L00414070(0x16, 0, M0060c2a0);
        eax = 0;
        M0060c2a0 = 0;
    }
}

/*    Procedure: 0x004145E3 - 0x00414607
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L004145E3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x48e650);
}

/*    Procedure: 0x00414608 - 0x00414655
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00414658()
 */

L00414608(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = Ac;
    for(edi = A8; 1; esi = esi + 1) {
        bl = *edi;
        if(bl == 0) {
            break;
        }
        (save)L00476358(bl);
        eax = L00476358( *esi);
        (restore)edx;
        if(edx != eax) {
            break;
        }
        edi = edi + 1;
    }
    (save)L00476358( *edi);
    eax = L00476358( *esi);
    (restore)edx;
    asm("xchg eax,edx");
    return eax - edx;
}

/*    Procedure: 0x00414656 - 0x00414657
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414656()
{



}

/*    Procedure: 0x00414658 - 0x004146C4
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00415010()
 */

L00414658(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    M0060c298 = A8;
    M0060c29c = M0060c298 + Ac;
    L004124F8(7, A10);
    esi = 0;
    ebx = 0x48e430;
    do {
        if(L00414608(A14, *ebx) == 0) {
            goto L0041469c;
        }
        esi = esi + 1;
        ebx = ebx + 8;
    } while(esi < 0x44);
    return M0060c298;
L0041469c:
    L004124F8(6, *(ebx + 4));
    L004124F8(6, 0);
    return M0060c298;
}

/*    Procedure: 0x004146C5 - 0x004146C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004146C5()
{



}

/*    Procedure: 0x004146C8 - 0x004147A8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041A034()
 */

L004146C8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    *(ebp - 4) = 1;
    if(L0047397C(ebp - 4, 4, 1, A8) != 1) {
        *Ac = 2;
        eax = 0;
    } else {
        if(L0047397C(0x60c15c, 4, 0x47, A8) != 0x47) {
            *Ac = 2;
            eax = 0;
        } else {
            edi = 0;
            ebx = 0x48e28c;
            do {
                esi = *( *ebx + 0x18);
                if(esi != 0 && L0047397C( *( *ebx + 0x14), 4, esi, A8) != esi) {
                    goto L00414752;
                }
                edi = edi + 1;
                ebx = ebx + 4;
            } while(edi < 0x69);
            goto L0041477d;
L00414752:
            *Ac = 2;
            eax = 0;
            goto L004147a3;
L0041477d:
            if(L0047397C(6341284, 0x24, 0x96, A8) != 0x96) {
                *Ac = 2;
                eax = 0;
            } else {
                eax = L004148B4(A8, 0, Ac);
            }
        }
    }
L004147a3:
}

/*    Procedure: 0x004147A9 - 0x004147AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004147A9()
{



}

/*    Procedure: 0x004147AC - 0x004148B1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041A13C()
 */

L004147AC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    *(ebp - 4) = 1;
    if(L004737C4(ebp - 4, 4, 1, A8) != 1) {
        *Ac = 2;
        eax = 0;
    } else {
        if(*(ebp - 4) != 1) {
            *Ac = 2;
            eax = 0;
        } else {
            L00414410();
            if(L004737C4(0x60c15c, 4, 0x47, A8) != 0x47) {
                *Ac = 2;
                eax = 0;
            } else {
                M0060c17c = 0;
                edi = 0;
                ebx = 0x48e28c;
                do {
                    esi = *( *ebx + 0x18);
                    if(esi != 0 && esi != L004737C4( *( *ebx + 0x14), 4, esi, A8)) {
                        goto L0041485b;
                    }
                    edi = edi + 1;
                    ebx = ebx + 4;
                } while(edi < 0x69);
                goto L00414886;
L0041485b:
                *Ac = 2;
                eax = 0;
                goto L004148ac;
L00414886:
                if(L004737C4(6341284, 0x24, 0x96, A8) != 0x96) {
                    *Ac = 2;
                    eax = 0;
                } else {
                    eax = L004148B4(A8, 1, Ac);
                }
            }
        }
    }
L004148ac:
}

/*    Procedure: 0x004148B2 - 0x004148B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004148B2()
{



}

/*    Procedure: 0x004148B4 - 0x004149A9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004146C8()
 *        L004147AC()
 */

L004148B4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(!(eax = Ac - 1)) {
        != ? 0x414995 : ;
        ebx = 6341284;
        esi = 0;
        do {
            if(*ebx != 0) {
                eax = *( *(ebx + 0x18) * 4 + 0x48e28c);
                edi = *(eax + 0x10);
                *(ebx + 0x1c) = eax;
                if(*(ebx + 0xc) >= 0) {
                    eax = *(ebx + 0x1c);
                    *(ebx + 8) = *(eax + *(ebx + 0xc) * 4 + 0x1c);
                }
                *(ebx + 0x20) = L0047777C(edi << 2);
                if(L004737C4( *(ebx + 0x20), 4, edi, A8) != edi) {
                    goto L00414924;
                }
                L004124C0(ebx, 0x413e60);
            }
            esi = esi + 1;
            ebx = ebx + 0x24;
        } while(esi < 0x96);
        goto L00414948;
L00414924:
        *A10 = 2;
        eax = 0;
        goto L004149a5;
L00414948:
    } else {
        ebx = 6341284;
        esi = 0;
        do {
            if(*ebx != 0) {
                edi = *( *( *(ebx + 0x18) * 4 + 0x48e28c) + 0x10);
                if(L0047397C( *(ebx + 0x20), 4, edi, A8) != edi) {
                    goto L0041497d;
                }
            }
            esi = esi + 1;
            ebx = ebx + 0x24;
        } while(esi < 0x96);
        goto L00414999;
L0041497d:
        *A10 = 2;
        eax = 0;
        goto L004149a5;
        eax = 0;
        goto L004149a5;
    }
L00414999:
    *A10 = 0;
    eax = 1;
L004149a5:
}

/*    Procedure: 0x004149AA - 0x004149AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004149AA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004149AC - 0x004149CE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00414444()
 */

L004149AC()
{
    /* unknown */ void  ebx;



    if(M0060d7d8 == 0) {
        ebx = 0;
        do {
            eax = L004171E4(ebx, 0);
            ebx = ebx + 1;
        } while(ebx < 5);
    }
}

/*    Procedure: 0x004149CF - 0x004149CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004149CF()
{



}

/*    Procedure: 0x004149D0 - 0x00414C3D
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0041A034()
 */

L004149D0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = & Vfffffffc;
    ebx = 6346716;
    *edi = 0;
    do {
        if(*(ebx + *edi * 4) != 0) {
            if(L0047397C(edi, 4, 1, A8) != 1) {
                goto L00414a03;
            }
            if(L0047397C(( *edi << 2) + ebx, 4, 1, A8) != 1) {
                goto L00414a24;
            }
        }
        *edi = *edi + 1;
    } while(*edi < 0x64);
    goto L00414a34;
L00414a03:
    eax = 0;
    goto L00414c37;
L00414a24:
    eax = 0;
    goto L00414c37;
L00414a34:
    *edi = 0;
    if(L0047397C(edi, 4, 1, A8) != 1) {
        eax = 0;
    } else {
        if(L0047397C(edi, 4, 1, A8) != 1) {
            eax = 0;
        } else {
            *edi = 0;
            do {
                if(*( *edi * 4 + 6347116) != 0) {
                    if(L0047397C(edi, 4, 1, A8) != 1) {
                        goto L00414a8d;
                    }
                    if(L0047397C(( *edi << 2) + 6347116, 4, 1, A8) != 1) {
                        goto L00414ab2;
                    }
                }
                *edi = *edi + 1;
            } while(*edi < 0x64);
            goto L00414ac2;
L00414a8d:
            eax = 0;
            goto L00414c37;
L00414ab2:
            eax = 0;
            goto L00414c37;
L00414ac2:
            *edi = 0;
            if(L0047397C(edi, 4, 1, A8) != 1) {
                eax = 0;
            } else {
                if(L0047397C(edi, 4, 1, A8) != 1) {
                    eax = 0;
                } else {
                    *edi = 0;
                    do {
                        eax = *edi;
                        edx = eax;
                        if(L0047397C(((eax << 3) - edx << 3) + 6347516, 0x38, 1, A8) != 1) {
                            goto L00414b21;
                        }
                        Vfffffff8 = 0;
                        eax = *edi;
                        edx = eax;
                        ebx = *(((eax << 3) - edx) * 8 + 6347564);
                        do {
                            Vfffffff8 = Vfffffff8 + 1;
                            ebx = *(ebx + 0x3c);
                        } while(ebx != 0);
                        Vfffffff4 = 0;
                        eax = *edi;
                        edx = eax;
                        ebx = *(((eax << 3) - edx) * 8 + 6347568);
                        do {
                            Vfffffff4 = Vfffffff4 + 1;
                            ebx = *(ebx + 0x3c);
                        } while(ebx != 0);
                        if(L0047397C( & Vfffffff8, 4, 1, A8) != 1) {
                            goto L00414b84;
                        }
                        if(L0047397C( & Vfffffff4, 4, 1, A8) != 1) {
                            goto L00414ba1;
                        }
                        eax = *edi;
                        edx = eax;
                        ebx = *(((eax << 3) - edx) * 8 + 6347564);
                        do {
                            if(L0047397C(ebx, 0x44, 1, A8) != 1) {
                                goto L00414bcf;
                            }
                            ebx = *(ebx + 0x3c);
                        } while(ebx != 0);
                        eax = *edi;
                        edx = eax;
                        ebx = *(((eax << 3) - edx) * 8 + 6347568);
                        do {
                            if(L0047397C(ebx, 0x44, 1, A8) != 1) {
                                goto L00414c01;
                            }
                            ebx = *(ebx + 0x3c);
                        } while(ebx != 0);
                        *edi = *edi + 1;
                    } while(*edi < 5);
                    goto L00414c29;
L00414b21:
                    eax = 0;
                    goto L00414c37;
L00414b84:
                    eax = 0;
                    goto L00414c37;
L00414ba1:
                    eax = 0;
                    goto L00414c37;
L00414bcf:
                    eax = 0;
                    goto L00414c37;
L00414c01:
                    eax = 0;
                    goto L00414c37;
L00414c29:
                    eax = L0047397C(6346688, 0x16, 1, A8) != 1 ? 0 : 1;
                }
            }
        }
    }
L00414c37:
}

/*    Procedure: 0x00414C3E - 0x00414C3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414C3E()
{



}

/*    Procedure: 0x00414C40 - 0x00414EE5
 *    Argument size: 4
 *    Local size: 108
 *    Save regs size: 12
 *    Called by:
 *        L0041A13C()
 */

L00414C40(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = 6347796;
    ebx = 0;
    do {
        if(L004737C4( & Vfffffff8, 4, 1, A8) != 1) {
            goto L00414c69;
        }
        if(L004737C4( & Vfffffff4, 4, 1, A8) != 1) {
            goto L00414c89;
        }
        if(Vfffffff4 != 0) {
            *(Vfffffff8 * 4 + 6346716) = Vfffffff4;
        }
    } while(Vfffffff4 != 0);
    goto L00414ca9;
L00414c69:
    eax = 0;
    goto L00414edf;
L00414c89:
    eax = 0;
    goto L00414edf;
L00414ca9:
    do {
        if(L004737C4( & Vfffffff8, 4, 1, A8) != 1) {
            goto L00414cc2;
        }
        if(L004737C4( & Vfffffff4, 4, 1, A8) != 1) {
            goto L00414ce2;
        }
        if(Vfffffff4 != 0) {
            *(Vfffffff8 * 4 + 6347116) = Vfffffff4;
        }
    } while(Vfffffff4 != 0);
    goto L00414d04;
L00414cc2:
    eax = 0;
    goto L00414edf;
L00414ce2:
    eax = 0;
    goto L00414edf;
L00414d04:
    Vfffffffc = 0;
    Vffffffe0 = 6347564;
    do {
        eax = Vfffffffc;
        edx = eax;
        if(L004737C4(((eax << 3) - edx << 3) + 6347516, 0x38, 1, A8) != 1) {
            goto L00414d37;
        }
        if(L004737C4( & Vfffffff0, 4, 1, A8) != 1) {
            goto L00414d57;
        }
        if(L004737C4( & Vffffffec, 4, 1, A8) != 1) {
            goto L00414d77;
        }
        esi = 0;
        Vffffffe4 = Vffffffe0;
        Vffffffe8 = edi + ((ebx << 4) + ebx) * 4 - 8;
        do {
            if(L004737C4(((ebx << 4) + ebx << 2) + edi, 0x44, 1, A8) != 1) {
                goto L00414dbc;
            }
            if(esi == 0) {
                eax = ((ebx << 4) + ebx << 2) + edi;
                *Vffffffe4 = eax;
                esi = 1;
            } else {
                eax = ((ebx << 4) + ebx << 2) + edi;
                *Vffffffe8 = eax;
                eax = (ebx << 4) + ebx << 2;
                eax = eax + edi - 0x44;
                *(Vffffffe8 + 0x48) = eax;
            }
            Vfffffff0 = Vfffffff0 - 1;
            ebx = ebx + 1;
            Vffffffe8 = Vffffffe8 + 0x44;
        } while(Vfffffff0 != 0);
        esi = 0;
        Vffffffd8 = Vffffffe0 + 4;
        Vffffffdc = edi + ((ebx << 4) + ebx) * 4 - 8;
        do {
            if(L004737C4(((ebx << 4) + ebx << 2) + edi, 0x44, 1, A8) != 1) {
                goto L00414e54;
            }
            if(esi == 0) {
                eax = ((ebx << 4) + ebx << 2) + edi;
                *Vffffffd8 = eax;
                esi = 1;
            } else {
                eax = ((ebx << 4) + ebx << 2) + edi;
                *Vffffffdc = eax;
                eax = (ebx << 4) + ebx << 2;
                eax = eax + edi - 0x44;
                *(Vffffffdc + 0x48) = eax;
            }
            Vffffffec = Vffffffec - 1;
            ebx = ebx + 1;
            Vffffffdc = Vffffffdc + 0x44;
        } while(Vffffffec != 0);
        Vfffffffc = Vfffffffc + 1;
        Vffffffe0 = Vffffffe0 + 0x38;
    } while(Vfffffffc < 5);
    goto L00414ed1;
L00414d37:
    eax = 0;
    goto L00414edf;
L00414d57:
    eax = 0;
    goto L00414edf;
L00414d77:
    eax = 0;
    goto L00414edf;
L00414dbc:
    eax = 0;
    goto L00414edf;
L00414e54:
    eax = 0;
    goto L00414edf;
L00414ed1:
    eax = L004737C4(6346688, 0x16, 1, A8) != 1 ? 0 : 1;
L00414edf:
}

/*    Procedure: 0x00414EE6 - 0x00414EE7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414EE6()
{



}

/*    Procedure: 0x00414EE8 - 0x00414F19
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00416A42()
 */

L00414EE8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = A8;
    edx = eax;
    eax = (eax << 3) - edx;
    ebx = *(eax * 8 + 6347568);
    do {
        if(!( *(ebx + 5) & 1)) {
            eax = L0041656C( *ebx);
        }
        ebx = *(ebx + 0x3c);
    } while(ebx != 0);
}

/*    Procedure: 0x00414F1A - 0x00414F3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00414F1A()
{
    /* unknown */ void  ebx;



    ebx = 0;
    do {
        eax = L0041D4C0(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0xa);
    M00644bb0 = M00644bb0 | 1;
    M0063220a = 0;
}

/*    Procedure: 0x00414F40 - 0x00414F59
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00416998()
 *        L00416CB8()
 */

L00414F40()
{
    /* unknown */ void  ebx;



    bl = 0x31;
    do {
        eax = *L005003c0(bl);
        ebx = ebx + 1;
    } while(bl < 0x36);
}

/*    Procedure: 0x00414F5A - 0x00414F5B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414F5A()
{



}

/*    Procedure: 0x00414F5C - 0x00414FA8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00414FAC()
 *        L00415010()
 */

L00414F5C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    eax = A8;
    edx = 0;
    *(ebp - 4) = 1;
    if(*( *eax) == 0x2d) {
        *(ebp - 4) = -1;
        *eax = *eax + 1;
        *Ac = *Ac + 1;
    }
    while(1) {
        ecx = *( *eax);
        if(!( *(ecx + 0x60bb99) & 2)) {
            break;
        }
        edx = edx + edx + (edx + edx) * 4 + ecx - 0x30;
        *Ac = *Ac + 1;
        *eax = *eax + 1;
    }
    eax = edx;
    asm("imul dword [ebp-0x4]");
}

/*    Procedure: 0x00414FA9 - 0x00414FAB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00414FA9()
{



}

/*    Procedure: 0x00414FAC - 0x0041500F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00415010()
 */

L00414FAC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *A8 = *A8 + 1;
    *Ac = *Ac + 1;
    if(!(al = *( *A8) - 0x47)) {
        if(al = al - 5) {
            goto L00414feb;
        }
        if(al = al - 6) {
            goto L0041500a;
        }
        *L00501b8c();
        eax = M00644bc8;
    } else {
        eax = L00417988(L00414F5C(A8, Ac));
        goto L0041500c;
L00414feb:
        eax = L0041758C(L00414F5C(A8, Ac), M0049c208, A10);
        goto L0041500c;
L0041500a:
        eax = 0;
    }
L0041500c:
}

/*    Procedure: 0x00415010 - 0x004164E2
 *    Argument size: 16
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L00415010()
 *        L004164E4()
 *        L0041656C()
 */

L00415010(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffffc;



    Ac = 4;
    do {
        esp = esp + -4092;
        (save)Ac;
    } while(Ac = Ac - 1);
    Ac = Vfffffffc;
    esp = esp + -1280;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = A8;
    esi = & Vfffffffc;
    ebx = 0x49cd50;
    *esi = *A10;
    *(ebp - 8) = *Ac;
    *(ebp - 0xc) = *A14;
    *(ebp - 0x6f) = *( *esi);
    *esi = *esi + 1;
    al = *( *esi);
    *(ebp - 0x6e) = al;
    *esi = *esi + 1;
    *(ebp - 0x6d) = 0;
    *(ebp - 0xc) = *(ebp - 0xc) + 2;
    Ac = ebp - 0x6f;
    edx = "Gr";
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L004150c6;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L004150c6;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x4150c6 : ;
    for(Ac = 0; 1; *(ebp - 0xc) = *(ebp - 0xc) + 1) {
        edx = *( *esi);
        if(!( *(edx + 0x60bb99) & 2)) {
            break;
        }
        Ac = Ac + Ac + (Ac + Ac) * 4 + edx - 0x30;
        *esi = *esi + 1;
    }
    *( *(ebp - 8)) = 2;
    *(ebp - 8) = *(ebp - 8) + 1;
    *( *(ebp - 8)) = al;
    goto L004164c5;
L004150c6:
    Ac = ebp - 0x6f;
    edx = ebx + 0xc3;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L0041514c;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L0041514c;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41514c : ;
    *(ebp - 0x74) = L00414FAC(esi, ebp - 0xc, edi);
    edx = ebp + -4424;
    *esi = *esi + 1;
    for(*(ebp - 0xc) = *(ebp - 0xc) + 1; 1; *(ebp - 0xc) = *(ebp - 0xc) + 1) {
        al = *( *esi);
        if(al == 0 || al == 0x29) {
            break;
        }
        *edx = al;
        *esi = *esi + 1;
        edx = edx + 1;
    }
    *edx = 0;
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    *(ebp - 8) = L00414658( *(ebp - 8), 0x100, *(ebp - 0x74), ebp + -4424) - 1;
    goto L004164c5;
L0041514c:
    Ac = ebp - 0x6f;
    edx = ebx + 0xc6;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L0041519b;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L0041519b;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41519b : ;
    *( *(ebp - 8)) = 0x24;
    *(ebp - 8) = *(ebp - 8) + 1;
    *(ebp - 8) = L0044F37B( *(ebp - 8), M00644cb8, 1) - 2;
    goto L004164c5;
L0041519b:
    Ac = ebp - 0x6f;
    edx = ebx + 0xc9;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L004151ec;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L004151ec;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x4151ec : ;
    *(ebp - 8) = L00430CB0(1, 0, L00414FAC(esi, ebp - 0xc, edi), *(ebp - 8)) - 2;
    goto L004164c5;
L004151ec:
    Ac = ebp - 0x6f;
    edx = ebx + 0xcc;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L0041523d;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L0041523d;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41523d : ;
    *(ebp - 8) = L00430CB0(2, 0, L00414FAC(esi, ebp - 0xc, edi), *(ebp - 8)) - 2;
    goto L004164c5;
L0041523d:
    Ac = ebp - 0x6f;
    edx = ebx + 0xcf;
    do {
        cl = *Ac;
        if(cl != *edx) {
            break;
        }
        if(cl == 0) {
            goto L0041528b;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            break;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    == ? L0041528b : ;
    Ac = ebp - 0x6f;
    edx = ebx + 0xd2;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L004152ba;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L004152ba;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x4152ba : ;
L0041528b:
    *(ebp - 8) = L00430CB0(0xc, ebp + -328, L00414FAC(esi, ebp - 0xc, edi), *(ebp - 8)) - 2;
    goto L004164c5;
L004152ba:
    Ac = ebp - 0x6f;
    edx = ebx + 0xd5;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L00415374;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L00415374;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x415374 : ;
    *(ebp - 0x80) = L00414FAC(esi, ebp - 0xc, edi);
    *(ebp + -132) = *(ebp - 0x80);
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    *(ebp - 0x78) = L00414F5C(esi, ebp - 0xc);
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    *(ebp - 0x7c) = L00414F5C(esi, ebp - 0xc);
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    (save)1;
    (save) *L004eeed0( *(ebp - 0x7c) - *(ebp - 0x78), ebp - 0x80, ebp + -132) + M00644ba8 + *(ebp - 0x78);
    (save) *(ebp - 8);
    esp = esp + 0xc;
    *(ebp - 8) = L0044F097() - 2;
    goto L004164c5;
L00415374:
    Ac = ebp - 0x6f;
    edx = ebx + 0xd8;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L0041547a;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L0041547a;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41547a : ;
    *(ebp + -144) = L00414FAC(esi, ebp - 0xc, edi);
    *(ebp + -148) = *(ebp + -144);
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    *(ebp + -136) = L00414F5C(esi, ebp - 0xc);
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    *(ebp + -140) = L00414F5C(esi, ebp - 0xc);
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    L00474830(ebp + -4680, ebx + 0xdb, *L004eeed0( *(ebp + -140) - *(ebp + -136), ebp + -144, ebp + -148) + *(ebp + -136));
    (save)esi;
    esi = *(ebp - 8);
    edi = ebp + -4680;
    Ac = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    Ac = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)esi;
    *(ebp - 8) = *(ebp - 8) + L00471288( *(ebp - 8)) - 1;
    goto L004164c5;
L0041547a:
    Ac = ebp - 0x6f;
    edx = ebx + 0xde;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L004154ee;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L004154ee;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x4154ee : ;
    *(ebp + -149) = 0;
    *(ebp + -156) = 0;
    Ac = ebp + -156;
    L004202D4( *(ebp + -149), Ac, -1);
    *(ebp - 8) = *L005000c0( *(ebp - 8), *(ebp + -156), ebp + -4700) - 2;
    goto L004164c5;
L004154ee:
    Ac = ebp - 0x6f;
    edx = ebx + 0xe1;
    do {
        cl = *Ac;
        if(cl != *edx) {
            goto L004155a6;
        }
        if(cl == 0) {
            break;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            goto L004155a6;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x4155a6 : ;
    *(ebp + -160) = 0;
    *(ebp + -164) = L00414FAC(esi, ebp - 0xc, edi);
    *(ebp + -165) = 0;
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    L00414F5C(esi, ebp - 0xc);
    *(ebp + -165) = al;
    *esi = *esi + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    *(ebp + -165) = 0;
    Ac = ebp + -160;
    L00420290( *(ebp + -165), Ac, -1);
    *(ebp - 8) = *L005000c0( *(ebp - 8), *(ebp + -160), ebp + -4720) - 2;
    goto L004164c5;
L004155a6:
    Ac = ebp - 0x6f;
    edx = ebx + 0xe4;
    do {
        cl = *Ac;
        if(cl != *edx) {
            break;
        }
        if(cl == 0) {
            goto L004155cd;
        }
        cl = *(Ac + 1);
        if(cl != *(edx + 1)) {
            break;
        }
        Ac = Ac + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41560f : ;
L004155cd:
    Ac = 0x4d63dc;
    ebx = 8;
    do {
        if(*Ac <= M00644d40) {
            break;
        }
        ebx = ebx - 1;
        Ac = Ac + 4;
    } while(ebx >= 0);
    *(ebp - 8) = *L005000c0( *(ebp - 8), ebx + 39999, ebp + -4740) - 2;
    goto L004164c5;
    Ac = ebp - 0x6f;
    edx = ebx + 0xe7;
L00415618:
    cl = *Ac;
    if(cl == *edx) {
        if(cl != 0) {
            cl = *(Ac + 1);
            if(cl != *(edx + 1)) {
                goto L00415688;
            }
            Ac = Ac + 2;
            edx = edx + 2;
            if(cl != 0) {
                goto L00415618;
            }
        }
        != ? 0x415688 : ;
        *(ebp + -172) = *L00501b9c( *(M00644c6c + 0x82));
        *(ebp + -176) = *( *(ebp + -172) + 0x38);
        *(ebp - 8) = *L005000c0( *(ebp - 8), *( *(ebp + -176) + 0xe), ebp + -4760) - 2;
    } else {
L00415688:
        Ac = ebp - 0x6f;
        edx = ebx + 0xea;
L00415691:
        cl = *Ac;
        if(cl == *edx) {
            if(cl != 0) {
                cl = *(Ac + 1);
                if(cl != *(edx + 1)) {
                    goto L004156f9;
                }
                Ac = Ac + 2;
                edx = edx + 2;
                if(cl != 0) {
                    goto L00415691;
                }
            }
            != ? 0x4156f9 : ;
            edx = *(ebp - 8);
            (save)esi;
            edi = M00644c6c + 0x124;
            esi = edx;
            Ac = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            Ac = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
            (restore)esi;
            *(ebp - 8) = *(ebp - 8) + L00471288(M00644c6c + 0x124) - 1;
        } else {
L004156f9:
            Ac = ebp - 0x6f;
            edx = ebx + 0xed;
L00415702:
            cl = *Ac;
            if(cl == *edx) {
                if(cl != 0) {
                    cl = *(Ac + 1);
                    if(cl != *(edx + 1)) {
                        goto L00415828;
                    }
                    Ac = Ac + 2;
                    edx = edx + 2;
                    if(cl != 0) {
                        goto L00415702;
                    }
                }
                != ? 0x415828 : ;
                ebx = ebp + -8856;
                *(ebp + -180) = 0;
                *(ebp + -184) = L00414FAC(esi, ebp - 0xc, edi);
                *(ebp + -188) = *(ebp + -184);
                *esi = *esi + 1;
                *(ebp - 0xc) = *(ebp - 0xc) + 1;
                goto L00415769;
L00415761:
                *ebx = al;
                *esi = *esi + 1;
                ebx = ebx + 1;
                *(ebp - 0xc) = *(ebp - 0xc) + 1;
L00415769:
                al = *( *esi);
                if(al != 0x29) {
                    goto L00415761;
                }
                *ebx = 0;
                *esi = *esi + 1;
                *(ebp - 0xc) = *(ebp - 0xc) + 1;
                edi = 0;
                ebx = ebp + -8856;
                goto L004157aa;
L00415783:
                if(al == 0x22) {
                    Ac = *(ebp + -180);
                    Ac :: 1;
                    asm("sbb eax,eax");
                    *(ebp + -180) = ~Ac;
                }
                if(*ebx == 0x2c && *(ebp + -180) == 0) {
                    edi = edi + 1;
                }
                ebx = ebx + 1;
L004157aa:
                al = *ebx;
                if(al != 0) {
                    goto L00415783;
                }
                edi = *L004eeed0(edi + 1, ebp + -184, ebp + -188);
                ebx = ebp + -8856;
                *(ebp + -180) = 0;
                if(edi != 0) {
L004157dd:
                    if(*ebx == 0x22) {
                        Ac = *(ebp + -180);
                        Ac :: 1;
                        asm("sbb eax,eax");
                        *(ebp + -180) = ~Ac;
                    }
                    al = *ebx;
                    ebx = ebx + 1;
                    if(al == 0x2c && *(ebp + -180) == 0) {
                        edi = edi - 1;
                    }
                    if(edi != 0) {
                        goto L004157dd;
                    }
                }
                ebx = ebx + 1;
                goto L00415816;
L0041580d:
                *( *(ebp - 8)) = al;
                ebx = ebx + 1;
                *(ebp - 8) = *(ebp - 8) + 1;
L00415816:
                al = *ebx;
                if(al != 0 && al != 0x22) {
                    goto L0041580d;
                }
                *(ebp - 8) = *(ebp - 8) - 1;
            } else {
L00415828:
                Ac = ebp - 0x6f;
                edx = ebx + 0xf0;
L00415831:
                cl = *Ac;
                if(cl == *edx) {
                    if(cl != 0) {
                        cl = *(Ac + 1);
                        if(cl != *(edx + 1)) {
                            goto L004159fb;
                        }
                        Ac = Ac + 2;
                        edx = edx + 2;
                        if(cl != 0) {
                            goto L00415831;
                        }
                    }
                    != ? 0x4159fb : ;
                    *(ebp + -192) = ebp + -9112;
                    ebx = 0;
                    *(ebp + -200) = L00414FAC(esi, ebp - 0xc, edi);
                    *(ebp + -204) = *(ebp + -200);
                    *esi = *esi + 1;
                    *(ebp - 0xc) = *(ebp - 0xc) + 1;
                    goto L004158c1;
L00415890:
                    if(*( *esi) == 0x28) {
                        ebx :: 0;
                    }
                    al = *( *esi);
                    if(al == 0x29) {
                        ebx :: 0;
                    }
                    if(al == 0x22) {
                        ebx :: 1;
                        asm("sbb ebx,ebx");
                        ebx = ~ebx;
                    }
                    *( *(ebp + -192)) = al;
                    *esi = *esi + 1;
                    *(ebp + -192) = *(ebp + -192) + 1;
                    *(ebp - 0xc) = *(ebp - 0xc) + 1;
L004158c1:
                    if(*( *esi) != 0x29) {
                        goto L00415890;
                    }
                    *( *(ebp + -192)) = 0;
                    *(ebp + -192) = *(ebp + -192) + 1;
                    *esi = *esi + 1;
                    *(ebp - 0xc) = *(ebp - 0xc) + 1;
                    *(ebp + -208) = 0;
                    Ac = 0;
                    ebx = 0;
                    *(ebp + -192) = ebp + -9112;
                    goto L00415939;
L004158f6:
                    if(dl == 0x22) {
                        ebx :: 1;
                        asm("sbb ebx,ebx");
                        ebx = ~ebx;
                    }
                    if(*( *esi) == 0x28 && ebx == 0) {
                        Ac = Ac + 1;
                    }
                    if(*( *esi) == 0x29 && ebx == 0) {
                        Ac = Ac - 1;
                    }
                    if(*( *(ebp + -192)) == 0x2c && ebx == 0 && Ac == 0) {
                        *(ebp + -208) = *(ebp + -208) + 1;
                    }
                    *(ebp + -192) = *(ebp + -192) + 1;
L00415939:
                    dl = *( *(ebp + -192));
                    if(dl != 0) {
                        goto L004158f6;
                    }
                    *(ebp + -208) = *L004eeed0( *(ebp + -208) + 1, ebp + -200, ebp + -204);
                    *(ebp + -192) = ebp + -9112;
                    ebx = 0;
                    Ac = 0;
                    if(*(ebp + -208) != 0) {
L00415983:
                        if(*( *(ebp + -192)) == 0x22) {
                            ebx :: 1;
                            asm("sbb ebx,ebx");
                            ebx = ~ebx;
                        }
                        if(*( *esi) == 0x28 && ebx == 0) {
                            Ac = Ac + 1;
                        }
                        if(*( *esi) == 0x29 && ebx == 0) {
                            Ac = Ac - 1;
                        }
                        edx = *(ebp + -192);
                        *(ebp + -192) = *(ebp + -192) + 1;
                        if(*edx == 0x2c && ebx == 0 && Ac == 0) {
                            *(ebp + -208) = *(ebp + -208) - 1;
                        }
                        if(*(ebp + -208) != 0) {
                            goto L00415983;
                        }
                    }
                    *(ebp + -192) = *(ebp + -192) + 1;
                    L00415010(edi, ebp - 8, ebp + -192, ebp + -196);
                } else {
L004159fb:
                    Ac = ebp - 0x6f;
                    edx = ebx + 0xf3;
L00415a04:
                    cl = *Ac;
                    if(cl == *edx) {
                        if(cl != 0) {
                            cl = *(Ac + 1);
                            if(cl != *(edx + 1)) {
                                goto L00415a5f;
                            }
                            Ac = Ac + 2;
                            edx = edx + 2;
                            if(cl != 0) {
                                goto L00415a04;
                            }
                        }
                        != ? 0x415a5f : ;
                        (save)esi;
                        esi = *(ebp - 8);
                        edi = 6573408;
                        Ac = 0;
                        ecx = ecx | -1;
                        asm("repne scasb");
                        ecx = !ecx;
                        edi = edi - ecx;
                        asm("xchg esi,edi");
                        Ac = edi;
                        edx = ecx;
                        ecx = ecx >> 2;
                        asm("rep movsd");
                        ecx = edx & 3;
                        asm("rep movsb");
                        (restore)esi;
                        *(ebp - 8) = *(ebp - 8) + L00471288(6573408) - 1;
                    } else {
L00415a5f:
                        Ac = ebp - 0x6f;
                        edx = ebx + 0xf6;
L00415a68:
                        cl = *Ac;
                        if(cl == *edx) {
                            if(cl == 0) {
                                goto L00415a86;
                            }
                            cl = *(Ac + 1);
                            if(cl == *(edx + 1)) {
                                Ac = Ac + 2;
                                edx = edx + 2;
                                if(cl != 0) {
                                    goto L00415a68;
                                }
                            }
                        }
                        != ? 0x415ac1 : ;
L00415a86:
                        *esi = *esi + 1;
                        *(ebp - 0xc) = *(ebp - 0xc) + 1;
                        *(ebp + -212) = L00414F5C(esi, ebp - 0xc);
                        Ac = *(ebp + -212);
                        *(Ac * 4 + 6346716) = 0;
                        if(*( *esi) == 0x2c) {
                            goto L00415a86;
                        }
                        *esi = *esi + 1;
                        *(ebp - 0xc) = *(ebp - 0xc) + 1;
                        *(ebp - 8) = *(ebp - 8) - 1;
                        goto L004164c5;
                        Ac = ebp - 0x6f;
                        edx = ebx + 0xf9;
L00415aca:
                        cl = *Ac;
                        if(cl == *edx) {
                            if(cl == 0) {
                                goto L00415b3a;
                            }
                            cl = *(Ac + 1);
                            if(cl == *(edx + 1)) {
                                Ac = Ac + 2;
                                edx = edx + 2;
                                if(cl != 0) {
                                    goto L00415aca;
                                }
                            }
                        }
                        == ? L00415b3a : ;
                        Ac = ebp - 0x6f;
                        edx = ebx + 0xfc;
L00415af1:
                        cl = *Ac;
                        if(cl == *edx) {
                            if(cl == 0) {
                                goto L00415b3a;
                            }
                            cl = *(Ac + 1);
                            if(cl == *(edx + 1)) {
                                Ac = Ac + 2;
                                edx = edx + 2;
                                if(cl != 0) {
                                    goto L00415af1;
                                }
                            }
                        }
                        == ? L00415b3a : ;
                        Ac = ebp - 0x6f;
                        edx = ebx + 0xff;
L00415b18:
                        cl = *Ac;
                        if(cl == *edx) {
                            if(cl == 0) {
                                goto L00415b3a;
                            }
                            cl = *(Ac + 1);
                            if(cl == *(edx + 1)) {
                                Ac = Ac + 2;
                                edx = edx + 2;
                                if(cl != 0) {
                                    goto L00415b18;
                                }
                            }
                        }
                        != ? 0x41621a : ;
L00415b3a:
                        *(ebp + -220) = M0049cce0;
                        *(ebp + -224) = L00414FAC(esi, ebp - 0xc, edi);
                        *(ebp + -228) = *(ebp + -224);
                        if(!( *( *( *esi) + 0x60bb99) & 2) && *( *esi) != 0x2d) {
                            goto L00415d41;
                        }
                        *(ebp + -232) = L00414F5C(esi, ebp - 0xc);
                        *esi = *esi + 1;
                        *(ebp - 0xc) = *(ebp - 0xc) + 1;
                        *(ebp + -220) = M00644cae;
                        edi = 0;
L00415ba3:
                        *(ebp + -220) = L00436D20( *(ebp + -220), *(ebp + -232), ebp + -224, ebp + -228);
                        if(*(ebp + -220) == 0) {
                            edi = edi + 1;
                            if(edi < 5) {
                                goto L00415ba3;
                            }
                        }
                        if(*(ebp + -220) == 0) {
                            *(ebp + -220) = M00644cae;
                        }
                        Ac = ebp - 0x6f;
                        edx = ebx + 0x102;
L00415bf9:
                        cl = *Ac;
                        if(cl == *edx) {
                            if(cl != 0) {
                                cl = *(Ac + 1);
                                if(cl != *(edx + 1)) {
                                    goto L00415c6d;
                                }
                                Ac = Ac + 2;
                                edx = edx + 2;
                                if(cl != 0) {
                                    goto L00415bf9;
                                }
                            }
                            != ? 0x415c6d : ;
                            L00436EA9(ebp + -9152, *(ebp + -220));
                            (save)esi;
                            esi = *(ebp - 8);
                            edi = ebp + -9132;
                            Ac = 0;
                            ecx = ecx | -1;
                            asm("repne scasb");
                            ecx = !ecx;
                            edi = edi - ecx;
                            asm("xchg esi,edi");
                            Ac = edi;
                            edx = ecx;
                            ecx = ecx >> 2;
                            asm("rep movsd");
                            ecx = edx & 3;
                            asm("rep movsb");
                            (restore)esi;
                            *(ebp - 8) = *(ebp - 8) + L00471288(ebp + -9132) - 1;
                        } else {
L00415c6d:
                            if(L00424D2C(ebp + -13232, *(ebp + -220)) == 0) {
                                *(ebp + -236) = L00424D64(ebp + -13232);
                                if(*(ebp + -236) != 0) {
                                    *(ebp + -240) = L00424D84(ebp + -13232, *L004eeed0( *(ebp + -236), ebp + -224, ebp + -228));
                                    if(*(ebp + -240) != 0) {
                                        Ac = *( *(ebp + -240) + 8) & 65535;
                                        edx = Ac;
                                        Ac = (Ac << 4) + edx << 2;
                                        Ac = Ac + ebp + -13262;
                                        edx = *(ebp - 8);
                                        (save)esi;
                                        edi = Ac;
                                        esi = edx;
                                        Ac = 0;
                                        ecx = ecx | -1;
                                        asm("repne scasb");
                                        ecx = !ecx;
                                        edi = edi - ecx;
                                        asm("xchg esi,edi");
                                        Ac = edi;
                                        edx = ecx;
                                        ecx = ecx >> 2;
                                        asm("rep movsd");
                                        ecx = edx & 3;
                                        asm("rep movsb");
                                        (restore)esi;
                                        *(ebp - 8) = *(ebp - 8) + L00471288( *(ebp - 8)) - 1;
                                        goto L004164c5;
L00415d41:
                                        Ac = ebp + -13488;
                                        goto L00415d51;
L00415d49:
                                        *Ac = dl;
                                        *esi = *esi + 1;
                                        Ac = Ac + 1;
                                        *(ebp - 0xc) = *(ebp - 0xc) + 1;
L00415d51:
                                        dl = *( *esi);
                                        if(dl != 0x29) {
                                            goto L00415d49;
                                        }
                                        *esi = *esi + 1;
                                        *(ebp - 0xc) = *(ebp - 0xc) + 1;
                                        *Ac = 0;
                                        *(ebp + -220) = M00644cae;
                                        Ac = ebp + -13488;
                                        edx = ebx + 0x105;
L00415d79:
                                        cl = *Ac;
                                        if(cl == *edx) {
                                            if(cl != 0) {
                                                cl = *(Ac + 1);
                                                if(cl != *(edx + 1)) {
                                                    goto L00415dce;
                                                }
                                                Ac = Ac + 2;
                                                edx = edx + 2;
                                                if(cl != 0) {
                                                    goto L00415d79;
                                                }
                                            }
                                            != ? 0x415dce : ;
                                            *(ebp + -244) = *L004eeed0(6, ebp + -224, ebp + -228);
                                            *(ebp + -220) = *( *(ebp + -244) * 4 + 0x49c20c);
                                        } else {
L00415dce:
                                            Ac = ebp + -13488;
                                            edx = ebx + 0x10e;
L00415dda:
                                            cl = *Ac;
                                            if(cl == *edx) {
                                                if(cl != 0) {
                                                    cl = *(Ac + 1);
                                                    if(cl != *(edx + 1)) {
                                                        goto L00415e2c;
                                                    }
                                                    Ac = Ac + 2;
                                                    edx = edx + 2;
                                                    if(cl != 0) {
                                                        goto L00415dda;
                                                    }
                                                }
                                                != ? 0x415e2c : ;
                                                *(ebp + -248) = *L004eeed0(8, ebp + -224, ebp + -228);
                                                *(ebp + -220) = *( *(ebp + -248) * 4 + 0x49c238);
                                            } else {
L00415e2c:
                                                Ac = ebp + -13488;
                                                edx = ebx + 0x115;
L00415e38:
                                                cl = *Ac;
                                                if(cl == *edx) {
                                                    if(cl == 0) {
                                                        goto L00415e54;
                                                    }
                                                    cl = *(Ac + 1);
                                                    if(cl == *(edx + 1)) {
                                                        Ac = Ac + 2;
                                                        edx = edx + 2;
                                                        if(cl != 0) {
                                                            goto L00415e38;
                                                        }
L00415e54:
                                                        != ? 0x415e88 : ;
                                                        *(ebp + -252) = *L004eeed0(5, ebp + -224, ebp + -228);
                                                        *(ebp + -220) = *( *(ebp + -252) * 4 + 0x49c224);
                                                    }
                                                }
                                            }
                                        }
                                        edi = 0;
                                        Ac = ebp + -13488;
                                        edx = ebx + 0x11e;
L00415e96:
                                        cl = *Ac;
                                        if(cl == *edx) {
                                            if(cl != 0) {
                                                cl = *(Ac + 1);
                                                if(cl != *(edx + 1)) {
                                                    goto L00415ebe;
                                                }
                                                Ac = Ac + 2;
                                                edx = edx + 2;
                                                if(cl != 0) {
                                                    goto L00415e96;
                                                }
                                            }
                                            != ? 0x415ebe : ;
                                            edi = 1;
                                        } else {
L00415ebe:
                                            Ac = ebp + -13488;
                                            edx = ebx + 0x120;
L00415eca:
                                            cl = *Ac;
                                            if(cl == *edx) {
                                                if(cl != 0) {
                                                    cl = *(Ac + 1);
                                                    if(cl != *(edx + 1)) {
                                                        goto L00415ef2;
                                                    }
                                                    Ac = Ac + 2;
                                                    edx = edx + 2;
                                                    if(cl != 0) {
                                                        goto L00415eca;
                                                    }
                                                }
                                                != ? 0x415ef2 : ;
                                                edi = 5;
                                            } else {
L00415ef2:
                                                Ac = ebp + -13488;
                                                edx = ebx + 0x122;
L00415efe:
                                                cl = *Ac;
                                                if(cl == *edx) {
                                                    if(cl != 0) {
                                                        cl = *(Ac + 1);
                                                        if(cl != *(edx + 1)) {
                                                            goto L00415f26;
                                                        }
                                                        Ac = Ac + 2;
                                                        edx = edx + 2;
                                                        if(cl != 0) {
                                                            goto L00415efe;
                                                        }
                                                    }
                                                    != ? 0x415f26 : ;
                                                    edi = 4;
                                                } else {
L00415f26:
                                                    Ac = ebp + -13488;
                                                    edx = ebx + 0x124;
L00415f32:
                                                    cl = *Ac;
                                                    if(cl == *edx) {
                                                        if(cl != 0) {
                                                            cl = *(Ac + 1);
                                                            if(cl != *(edx + 1)) {
                                                                goto L00415f5a;
                                                            }
                                                            Ac = Ac + 2;
                                                            edx = edx + 2;
                                                            if(cl != 0) {
                                                                goto L00415f32;
                                                            }
                                                        }
                                                        != ? 0x415f5a : ;
                                                        edi = 0xb;
                                                    } else {
L00415f5a:
                                                        Ac = ebp + -13488;
                                                        edx = ebx + 0x126;
L00415f66:
                                                        cl = *Ac;
                                                        if(cl == *edx) {
                                                            if(cl != 0) {
                                                                cl = *(Ac + 1);
                                                                if(cl != *(edx + 1)) {
                                                                    goto L00415f8b;
                                                                }
                                                                Ac = Ac + 2;
                                                                edx = edx + 2;
                                                                if(cl != 0) {
                                                                    goto L00415f66;
                                                                }
                                                            }
                                                            != ? 0x415f8b : ;
                                                            edi = 0xc;
                                                        } else {
L00415f8b:
                                                            Ac = ebp + -13488;
                                                            edx = ebx + 0x12e;
L00415f97:
                                                            cl = *Ac;
                                                            if(cl == *edx) {
                                                                if(cl != 0) {
                                                                    cl = *(Ac + 1);
                                                                    if(cl != *(edx + 1)) {
                                                                        goto L00415fbc;
                                                                    }
                                                                    Ac = Ac + 2;
                                                                    edx = edx + 2;
                                                                    if(cl != 0) {
                                                                        goto L00415f97;
                                                                    }
                                                                }
                                                                != ? 0x415fbc : ;
                                                                edi = 0xc;
                                                            } else {
L00415fbc:
                                                                Ac = ebp + -13488;
                                                                edx = ebx + 0x136;
L00415fc8:
                                                                cl = *Ac;
                                                                if(cl == *edx) {
                                                                    if(cl == 0) {
                                                                        goto L00415fe4;
                                                                    }
                                                                    cl = *(Ac + 1);
                                                                    if(cl == *(edx + 1)) {
                                                                        Ac = Ac + 2;
                                                                        edx = edx + 2;
                                                                        if(cl != 0) {
                                                                            goto L00415fc8;
                                                                        }
L00415fe4:
                                                                        != ? 0x415feb : ;
                                                                        edi = 0xe;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        if(edi != 0) {
                                            *(ebp + -256) = 0;
                                            Ac = 0x4e74b4;
                                            goto L00416015;
L00416002:
                                            edx = *(Ac + 0xa) & 0xf;
                                            if(edi == edx) {
                                                *(ebp + -256) = *(ebp + -256) + 1;
                                            }
                                            Ac = Ac + 0x34;
L00416015:
                                            if(*Ac != 0) {
                                                goto L00416002;
                                            }
                                            *(ebp + -256) = *L004eeed0( *(ebp + -256), ebp + -224, ebp + -228);
                                            edx = 0;
                                            Ac = 0x4e74be;
                                            if(*(ebp + -256) != 0) {
L0041604e:
                                                ecx = *Ac & 0xf;
                                                if(edi == ecx) {
                                                    *(ebp + -256) = *(ebp + -256) - 1;
                                                }
                                                edx = edx + 1;
                                                Ac = Ac + 0x34;
                                                if(*(ebp + -256) != 0) {
                                                    goto L0041604e;
                                                }
                                            }
                                            *(ebp + -220) = *((edx + (edx + edx * 2) * 4) * 4 + 0x4e7480);
                                        }
                                        if(*(ebp + -220) != 0) {
                                            Ac = ebp - 0x6f;
                                            edx = ebx + 0x13d;
L00416093:
                                            cl = *Ac;
                                            if(cl == *edx) {
                                                if(cl != 0) {
                                                    cl = *(Ac + 1);
                                                    if(cl != *(edx + 1)) {
                                                        goto L00416107;
                                                    }
                                                    Ac = Ac + 2;
                                                    edx = edx + 2;
                                                    if(cl != 0) {
                                                        goto L00416093;
                                                    }
                                                }
                                                != ? 0x416107 : ;
                                                L00436EA9(ebp + -9152, *(ebp + -220));
                                                (save)esi;
                                                esi = *(ebp - 8);
                                                edi = ebp + -9132;
                                                Ac = 0;
                                                ecx = ecx | -1;
                                                asm("repne scasb");
                                                ecx = !ecx;
                                                edi = edi - ecx;
                                                asm("xchg esi,edi");
                                                Ac = edi;
                                                edx = ecx;
                                                ecx = ecx >> 2;
                                                asm("rep movsd");
                                                ecx = edx & 3;
                                                asm("rep movsb");
                                                (restore)esi;
                                                *(ebp - 8) = *(ebp - 8) + L00471288(ebp + -9132) - 1;
                                            } else {
L00416107:
                                                if(L00424D2C(ebp + -17568, *(ebp + -220)) == 0) {
                                                    *(ebp + -260) = L00424D64(ebp + -17568);
                                                    if(*(ebp + -260) != 0) {
                                                        *(ebp + -264) = L00424D84(ebp + -17568, *L004eeed0( *(ebp + -260), ebp + -224, ebp + -228));
                                                        if(*(ebp + -264) != 0) {
                                                            Ac = ebp - 0x6f;
                                                            edx = ebx + 0x140;
L0041618b:
                                                            cl = *Ac;
                                                            if(cl == *edx) {
                                                                if(cl == 0) {
                                                                    goto L004161a7;
                                                                }
                                                                cl = *(Ac + 1);
                                                                if(cl == *(edx + 1)) {
                                                                    Ac = Ac + 2;
                                                                    edx = edx + 2;
                                                                    if(cl != 0) {
                                                                        goto L0041618b;
                                                                    }
L004161a7:
                                                                    != ? 0x4161cb : ;
                                                                    Ac = *( *(ebp + -264) + 8) & 65535;
                                                                    edx = Ac;
                                                                    Ac = (Ac << 4) + edx << 2;
                                                                    *(ebp + -264) = Ac + ebp + -17636;
                                                                }
                                                            }
                                                        }
                                                        if(*(ebp + -264) != 0) {
                                                            Ac = *(ebp + -264) + 0x26;
                                                            edx = *(ebp - 8);
                                                            (save)esi;
                                                            edi = Ac;
                                                            esi = edx;
                                                            Ac = 0;
                                                            ecx = ecx | -1;
                                                            asm("repne scasb");
                                                            ecx = !ecx;
                                                            edi = edi - ecx;
                                                            asm("xchg esi,edi");
                                                            Ac = edi;
                                                            edx = ecx;
                                                            ecx = ecx >> 2;
                                                            asm("rep movsd");
                                                            ecx = edx & 3;
                                                            asm("rep movsb");
                                                            (restore)esi;
                                                            *(ebp - 8) = *(ebp - 8) + L00471288( *(ebp - 8)) - 1;
                                                            goto L004164c5;
                                                            Ac = ebp - 0x6f;
                                                            edx = ebx + 0x143;
L00416223:
                                                            cl = *Ac;
                                                            if(cl == *edx) {
                                                                if(cl != 0) {
                                                                    cl = *(Ac + 1);
                                                                    if(cl != *(edx + 1)) {
                                                                        goto L0041635f;
                                                                    }
                                                                    Ac = Ac + 2;
                                                                    edx = edx + 2;
                                                                    if(cl != 0) {
                                                                        goto L00416223;
                                                                    }
                                                                }
                                                                != ? 0x41635f : ;
                                                                *(ebp + -268) = M0049cce4;
                                                                *(ebp + -272) = L00414FAC(esi, ebp - 0xc, edi);
                                                                *(ebp + -276) = *(ebp + -272);
                                                                *esi = *esi + 1;
                                                                *(ebp - 0xc) = *(ebp - 0xc) + 1;
                                                                *(ebp + -280) = L00414F5C(esi, ebp - 0xc);
                                                                *esi = *esi + 1;
                                                                *(ebp - 0xc) = *(ebp - 0xc) + 1;
                                                                *(ebp + -268) = M00644cae;
                                                                *(ebp + -268) = L00436D20( *(ebp + -268), *(ebp + -280), ebp + -272, ebp + -276);
                                                                if(*(ebp + -268) == 0) {
                                                                    *(ebp + -268) = M00644cae;
                                                                }
                                                                L00436EA9(ebp + -17608, *(ebp + -268));
                                                                Ac = *(ebp - 8);
                                                                *Ac = 0x28;
                                                                *(ebp - 8) = *(ebp - 8) + 1;
                                                                *(ebp - 8) = L0044F37B( *(ebp - 8), ( *(ebp + -268) & 8191) - 0x1718, 0) - 2;
                                                                *( *(ebp - 8)) = 0x2c;
                                                                *(ebp - 8) = *(ebp - 8) + 1;
                                                                *(ebp - 8) = L0044F37B( *(ebp - 8), ( *(ebp + -268) >> 0xd & 8191) - 0x1524, 0) - 2;
                                                                *( *(ebp - 8)) = 0x29;
                                                            } else {
L0041635f:
                                                                Ac = ebp - 0x6f;
                                                                edx = ebx + 0x146;
L00416368:
                                                                cl = *Ac;
                                                                if(cl == *edx) {
                                                                    if(cl != 0) {
                                                                        cl = *(Ac + 1);
                                                                        if(cl != *(edx + 1)) {
                                                                            goto L00416408;
                                                                        }
                                                                        Ac = Ac + 2;
                                                                        edx = edx + 2;
                                                                        if(cl != 0) {
                                                                            goto L00416368;
                                                                        }
                                                                    }
                                                                    != ? 0x416408 : ;
                                                                    *(ebp + -284) = M0049cce8;
                                                                    L00414FAC(esi, ebp - 0xc, edi);
                                                                    *(ebp + -284) = M00644cae;
                                                                    L00436EA9(ebp + -17648, *(ebp + -284));
                                                                    (save)esi;
                                                                    esi = *(ebp - 8);
                                                                    edi = ebp + -17628;
                                                                    Ac = 0;
                                                                    ecx = ecx | -1;
                                                                    asm("repne scasb");
                                                                    ecx = !ecx;
                                                                    edi = edi - ecx;
                                                                    asm("xchg esi,edi");
                                                                    Ac = edi;
                                                                    edx = ecx;
                                                                    ecx = ecx >> 2;
                                                                    asm("rep movsd");
                                                                    ecx = edx & 3;
                                                                    asm("rep movsb");
                                                                    (restore)esi;
                                                                    *(ebp - 8) = *(ebp - 8) + L00471288(ebp + -17628) - 1;
                                                                } else {
L00416408:
                                                                    Ac = ebp - 0x6f;
                                                                    edx = ebx + 0x149;
L00416411:
                                                                    cl = *Ac;
                                                                    if(cl == *edx) {
                                                                        if(cl == 0) {
                                                                            goto L00416435;
                                                                        }
                                                                        cl = *(Ac + 1);
                                                                        if(cl == *(edx + 1)) {
                                                                            Ac = Ac + 2;
                                                                            edx = edx + 2;
                                                                            if(cl != 0) {
                                                                                goto L00416411;
                                                                            }
L00416435:
                                                                            != ? 0x4164c5 : ;
                                                                            *(ebp + -292) = L00414FAC(esi, ebp - 0xc, edi);
                                                                            *(ebp + -296) = *(ebp + -292);
                                                                            *(ebp + -308) = *L004eeed0(0x30, ebp + -292, ebp + -296);
                                                                            *(ebp + -300) = *L00501b9c( *(ebp + -308) + 0xf);
                                                                            *(ebp + -304) = *( *(ebp + -300) + 0x38);
                                                                            *(ebp - 8) = *L005000c0( *(ebp - 8), *( *(ebp + -304) + 0xe), ebp + -17668) - 2;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L004164c5:
    *A14 = *(ebp - 0xc);
    *A10 = *esi;
    *Ac = *(ebp - 8);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004164E3 - 0x004164E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004164E3()
{



}

/*    Procedure: 0x004164E4 - 0x0041656B
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0044ED3C()
 */

L004164E4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    Vfffffffc = A8;
    Vfffffff8 = esi;
    esi = L00471288(Vfffffff8);
    Vfffffff4 = 0;
    do {
        *Vfffffffc = *Vfffffff8;
        Vfffffff8 = Vfffffff8 + 1;
        if(*Vfffffffc == 0xd5) {
            *Vfffffffc = 0x27;
        }
        if(*Vfffffffc == 0x5b) {
            L00415010(0, & Vfffffffc, & Vfffffff8, & Vfffffff4);
        }
        Vfffffffc = Vfffffffc + 1;
        if(Ac <= Vfffffffc - A8) {
            break;
        }
        Vfffffff4 = Vfffffff4 + 1;
    } while(esi > Vfffffff4);
    *Vfffffffc = 0;
    return Vfffffffc;
}

/*    Procedure: 0x0041656C - 0x00416933
 *    Argument size: 4
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L00414EE8()
 */

L0041656C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffffc;



    eax = 3;
    do {
        esp = esp + -4092;
        (save)eax;
    } while(eax = eax - 1);
    eax = Vfffffffc;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = M0049ccdc;
    Vfffffffc = eax + 3;
    *(ebp - 0xc) = ebp + -6024;
    *(ebp - 0x18) = 1;
    *eax = 0xd;
    *(eax + 1) = 0x1e;
    *(eax + 2) = 0xa;
    L00474830(ebp + -12280, "%s%smission.dat", 6641286, 6641290);
    eax = L00473538(ebp + -12280, "rb");
    *(ebp - 0x10) = eax;
    if(*(ebp - 0x10) != 0) {
        L00473960( *(ebp - 0x10), (A8 << 2) + 0x49c258);
        L004737C4(ebp + -12024, 1, *(A8 * 4 + 0x49c25c) - *(A8 * 4 + 0x49c258), *(ebp - 0x10));
        *(ebp - 8) = ebp + -6024;
        eax = 0;
        edx = 0;
        *(ebp - 0x14) = 0;
        for(esi = A8 * 4 + 0x49c25c; *esi - *(esi - 4) > *(ebp - 0x14); *(ebp - 0x14) = *(ebp - 0x14) + 1) {
            eax = eax << 8;
            eax = eax | *(ebp + *(ebp - 0x14) + -12024) & 0xff;
            edx = edx + 1;
            if(edx == 4) {
                ecx = (eax >> 0x1f & 1) << 0x1f;
                ecx = ecx | (eax >> 0x1e & 1) << 0x17;
                ecx = ecx | (eax >> 0x1d & 1) << 0xf;
                ecx = ecx | (eax >> 0x1c & 1) << 7;
                ecx = ecx | (eax >> 0x15 & 0x7f) << 0x18;
                ecx = ecx | (eax >> 0xe & 0x7f) << 0x10;
                ecx = ecx | (eax >> 7 & 0x7f) << 8;
                eax = ecx | eax >> 0 & 0x7f;
                ecx = *(ebp - 8) + edx - 1;
                do {
                    bl = eax & 0xff;
                    *ecx = bl;
                    eax = eax >> 8;
                    edx = edx - 1;
                    ecx = ecx - 1;
                } while(edx != 0);
                *(ebp - 8) = *(ebp - 8) + 4;
                edx = 0;
                eax = 0;
            }
        }
        *(ebp - 8) = ebp + -12280;
        do {
            al = *( *(ebp - 0xc));
            *( *(ebp - 8)) = al;
            *(ebp - 0xc) = *(ebp - 0xc) + 1;
            *(ebp - 8) = *(ebp - 8) + 1;
        } while(*( *(ebp - 8) - 1) != 0xa);
        *( *(ebp - 8) - 1) = 0;
        eax = L00471288(ebp + -12280);
        *(ebp - 0x14) = eax + *(A8 * 4 + 0x49c258) - 1;
        for(esi = A8 * 4 + 0x49c25c; *esi - 4 > *(ebp - 0x14); *(ebp - 0x14) = *(ebp - 0x14) + 1) {
            al = *( *(ebp - 0xc));
            if(al == 0) {
                break;
            }
            *Vfffffffc = al;
            *(ebp - 0xc) = *(ebp - 0xc) + 1;
            if(*Vfffffffc == 0xe) {
                *Vfffffffc = 0x83;
            }
            al = *Vfffffffc;
            if(al != 0x7f) {
                if(al == 0x26) {
                    *Vfffffffc = 0x2b;
                }
                if(*Vfffffffc == 0xa) {
                    *Vfffffffc = 0xd;
                }
                if(*Vfffffffc == 0xd5) {
                    *Vfffffffc = 0x27;
                }
                if(*Vfffffffc == 0x5b) {
                    L00415010(A8, & Vfffffffc, ebp - 0xc, ebp - 0x14);
                }
                if(*Vfffffffc == 0xd) {
                    if(*(ebp - 0x18) != 0) {
                        edi = 0;
                        ebx = M0049ccdc + 2;
                        do {
                            *ebx = L00476380( *ebx);
                            edi = edi + L00455A6C( *ebx);
                            ebx = ebx + 1;
                        } while(ebx < Vfffffffc);
                        eax = 0x140 - edi;
                        edx = eax;
                        if(edx < 0) {
                            edx = edx + 3;
                        }
                        edx = edx >> 2;
                        *(M0049ccdc + 2) = dl;
                        *(ebp - 0x18) = 0;
                        Vfffffffc = Vfffffffc + 1;
                        *Vfffffffc = 0x1e;
                        eax = eax >> 1;
                        if(!(Vfffffffc = Vfffffffc + 1)) {
                            asm("adc eax,+0x0");
                        }
                        eax = eax + edi - 0x28 >> 1;
                        >= ? 0x416850 : ;
                        asm("adc eax,+0x0");
                        *Vfffffffc = al;
                        Vfffffffc = Vfffffffc + 1;
                        Vfffffffc = L00416E78(42498, 0, Vfffffffc) - 1;
                        *Vfffffffc = 0x20;
                        Vfffffffc = Vfffffffc + 1;
                        (save)esi;
                        esi = Vfffffffc;
                        edi = ebp + -12280;
                        eax = 0;
                        ecx = ecx | -1;
                        asm("repne scasb");
                        ecx = !ecx;
                        edi = edi - ecx;
                        asm("xchg esi,edi");
                        eax = edi;
                        edx = ecx;
                        ecx = ecx >> 2;
                        asm("rep movsd");
                        ecx = edx & 3;
                        asm("rep movsb");
                        (restore)esi;
                        Vfffffffc = Vfffffffc + L00471288(ebp + -12280) - 1;
                        Vfffffffc = Vfffffffc + 1;
                        *Vfffffffc = 0xd;
                    }
                    Vfffffffc = Vfffffffc + 1;
                    *Vfffffffc = 0x20;
                    Vfffffffc = Vfffffffc + 1;
                    *Vfffffffc = 0x20;
                    Vfffffffc = Vfffffffc + 1;
                    *Vfffffffc = 0x20;
                    Vfffffffc = Vfffffffc + 1;
                    *Vfffffffc = 0x20;
                    Vfffffffc = Vfffffffc + 1;
                    *Vfffffffc = 0x20;
                }
                Vfffffffc = Vfffffffc + 1;
            }
        }
        L004731B8( *(ebp - 0x10));
        *Vfffffffc = 0;
        Vfffffffc = Vfffffffc + 1;
        *L005000d4(M0049ccdc, 0x12c);
        eax = Vfffffffc - 1;
        M0049ccdc = eax;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00416934 - 0x00416996
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416998()
 */

L00416934(A8)
/* unknown */ void  A8;
{



    eax = L0045558C(6395400, 0xa, A8, 0xf, 0x28, 0x8c);
    if(M00657654 != 0) {
        L00457DCC(0x30, 0x7c, 0x92);
        eax = *L005000e0(42497, 0, 0xf, 0x9a, 0x92, 0);
        M00657654 = 1;
    }
}

/*    Procedure: 0x00416997 - 0x00416997
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00416997()
{



}

/*    Procedure: 0x00416998 - 0x00416A41
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00416A42()
 */

L00416998(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = L00457DBC( *(esi * 8 + 6347536));
    L0043E55C(0);
    (save)2;
    eax = *(edi + 2);
    edx = 0x140 - eax >> 1;
    if(!(esi = (A8 << 3) - A8)) {
        asm("adc edx,+0x0");
    }
    (save)edx;
    (save) *(esi * 8 + 6347536);
    L00457DCC();
    esp = esp + 0xc;
    if(M00619604 < 0x28) {
        L00457DCC(0x2f, 0x88, 0x92);
        *L005000e0(42497, 0, 0xf, 0x9a, 0x92, 0);
    }
    L00414F40();
    L00416934(M00619604);
    eax = M00657654;
    *(esi * 8 + 6347540) = eax;
    return *(esi * 8 + 6347540);
}

/*    Procedure: 0x00416A42 - 0x00416CB5
 *    Argument size: 0
 *    Local size: 40
 *    Save regs size: 12
 */

L00416A42()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;



    (save)0x49c200;
    (save)0x49c204;
    esi = 0x49ccec;
    edi = & Vffffffd8;
    ecx = 0xa;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    *L00500398();
    ebx = al & 0xff;
    if(!(eax = ebx - 0xf5)) {
        if(!(eax = eax - 1 - 7)) {
        } else {
            L0041934C(0xe, 1, 0);
            eax = *L0050039c(ebx);
        }
    } else {
        eax = L00416CB8();
        goto L00416caf;
    }
    if(*esi != 0) {
        if(M00619604 < 0x28) {
            M00619604 = M00619604 + 1;
        } else {
            *esi = 0;
        }
        if(M00619604 < 0x28) {
            M00619604 = M00619604 + 1;
        } else {
            *esi = 0;
        }
        eax = L00416998(M0049c208);
        if(*esi != 0) {
            *esi = *esi - 1;
        }
        if(*esi != 0) {
            *esi = *esi - 1;
        }
    } else {
        if(*edi == 0) {
            goto L00416b65;
        }
        eax = M0049c208;
        edx = eax;
        if(*(((eax << 3) - edx) * 8 + 6347540) != 0) {
            M00619604 = M00619604 - 1;
        } else {
            *edi = 0;
        }
        eax = M0049c208;
        edx = eax;
        if(*(((eax << 3) - edx) * 8 + 6347540) != 0) {
            M00619604 = M00619604 - 1;
        } else {
            *edi = 0;
        }
        eax = L00416998(M0049c208);
        if(*edi != 0) {
            *edi = *edi - 1;
        }
        if(*edi != 0) {
            *edi = *edi - 1;
            goto L00416caf;
L00416b65:
            if(ebx != 0) {
                if(ebx == 0xf) {
                    eax = M00619604;
                    ecx = 0xa;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *edi = 0x3c - edx;
                    *esi = 0;
                }
                if(ebx == 0xe) {
                    eax = M00619604;
                    ecx = 0xa;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *esi = 0x3c - edx;
                    *edi = 0;
                }
                if(ebx >= 0x31) {
                    if(ebx >= 0x36) {
                        goto L00416c65;
                    }
                    M00619604 = 0x28;
                    esi = ebx - 0x31;
                    M0049c208 = esi;
                    eax = L00457DBC(0x2f);
                    Vffffffd8 = 0x88;
                    Vffffffdc = 0x92;
                    Vffffffe0 = *(eax + 2) + Vffffffd8;
                    Vffffffe4 = ( *(eax + 1) & 0xff) + Vffffffdc;
                    Vffffffe8 = 5;
                    *L005003b4( & Vffffffd8);
                    eax = L00457DBC(0x30);
                    Vffffffd8 = 0x7c;
                    Vffffffdc = 0x92;
                    Vffffffe0 = *(eax + 2) + Vffffffd8;
                    Vffffffe4 = ( *(eax + 1) & 0xff) + Vffffffdc;
                    Vffffffe8 = 6;
                    *L005003b4( & Vffffffd8);
                    M0049ccdc = 6395400;
                    *L00619608 = 0;
                    L00414EE8(esi);
                    eax = L00416998(esi);
                } else {
L00416c65:
                    if(ebx == 5) {
                        eax = M00619604;
                        ecx = 0xa;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        *esi = 0xa - edx;
                        eax = 0;
                        *edi = 0;
                    } else {
                        if(ebx == 6) {
                            eax = M00619604;
                            ecx = 0xa;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            *edi = 0xa - edx;
                            eax = 0;
                            *esi = 0;
                        } else {
                            eax = *L0050039c(ebx);
                        }
                    }
                }
            }
        }
    }
L00416caf:
}

/*    Procedure: 0x00416CB6 - 0x00416CB7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00416CB6()
{



}

/*    Procedure: 0x00416CB8 - 0x00416E1D
 *    Argument size: 0
 *    Local size: 64
 *    Save regs size: 12
 *    Called by:
 *        L00416A42()
 *        L00416E20()
 */

L00416CB8()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;



    (save)0x28;
    esi = 0x49cd14;
    edi = & Vffffffd4;
    ecx = 0xa;
    asm("rep movsd");
    (restore)edi;
    L0043E55C(0);
    L00414F40();
    *L005000e0(42499, 0, M00632ac0, 0x32, 8, 0);
    *L005000e0(42500, 0, 0xf, 0x22, 0x16, 0);
    eax = 0;
    Vfffffffc = 0;
    ebx = 6347544;
    do {
        if(*ebx != 0 && !( *(ebx + 8) & 1)) {
            esi = L00457DBC( *(ebx - 8) + 5);
            L00457DCC( *(ebx - 8) + 5, 0x1e, edi);
            if(!( *(ebx + 8) & 2)) {
                eax = *(ebx + 0x10) - M00644ba8;
                edx = 0;
                *ebx = *ebx / *ebx;
                edx = *ebx % *ebx;
                if(eax > 0) {
                    goto L00416d76;
                }
            }
            *L005000e0(42502, 0, 0xf, 0xc8, ( *(esi + 1) & 0xff) + edi - 0xa, 0);
            goto L00416dca;
L00416d76:
            eax = *(ebx + 0x10) - M00644ba8 - 1;
            edx = 0;
            *ebx = *ebx / *ebx;
            edx = *ebx % *ebx;
            Vffffffc0 = eax;
            *L005000e0(42501, & Vffffffc0, 0xf, 0xc8, ( *(esi + 1) & 0xff) + edi - 0xa, 0);
L00416dca:
            Vffffffd4 = 0x1e;
            Vffffffd8 = edi;
            Vffffffdc = *(esi + 2) + Vffffffd4;
            Vffffffe0 = ( *(esi + 1) & 0xff) + Vffffffd8;
            Vffffffe4 = Vfffffffc + 0x31;
            *L005003b4( & Vffffffd4);
            eax = ( *(esi + 1) & 0xff) + 2;
            edi = edi + eax;
        }
        Vfffffffc = Vfffffffc + 1;
        ebx = ebx + 0x38;
    } while(Vfffffffc < 5);
}

/*    Procedure: 0x00416E1E - 0x00416E1F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00416E1E()
{



}

/*    Procedure: 0x00416E20 - 0x00416E77
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041F15A()
 */

L00416E20()
{



    eax = 0;
    edx = 6347544;
    do {
        if(*edx != 0) {
            break;
        }
        eax = eax + 1;
        edx = edx + 0x38;
    } while(eax < 5);
    if(eax != 5) {
        *L004eecd0(0x13);
        L0041E234();
        L0041D444(0xa, 1);
        L0041D444(0xd, 1);
        M00644bb0 = M00644bb0 & 0xfe;
        M0063220a = 0xff;
        eax = L00416CB8();
    }
}

/*    Procedure: 0x00416E78 - 0x00416E9B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041656C()
 */

L00416E78(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x49abac);
}

/*    Procedure: 0x00416E9C - 0x00416ECC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 */

L00416E9C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    ecx = eax;
    eax = *(((eax << 3) - ecx) * 8 + 6347568);
    if(eax != 0) {
        do {
            if(Ac == *eax) {
                goto L00416ec1;
            }
            eax = *(eax + 0x3c);
        } while(eax != 0);
        goto L00416ec9;
L00416ec1:
        return 1;
    }
L00416ec9:
    return 0;
}

/*    Procedure: 0x00416ECD - 0x00416ECF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00416ECD()
{



}

/*    Procedure: 0x00416ED0 - 0x00416F5D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00416FD4()
 */

L00416ED0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    ecx = A8 & 7;
    eax = 1 << cl;
    edx = A8;
    if(edx < 0) {
        edx = edx + 7;
    }
    if(!(eax = eax & *((edx >> 3) + 6346688))) {
        eax = 0;
    } else {
        esi = A8 << 4;
        if(!( *(esi + 0x49b73e) & 1)) {
            if(L00412518(0x16) != 0) {
                goto L00416f1d;
            }
            eax = 0;
        } else {
L00416f1d:
            if(!(eax = *(esi + 0x49b730) - 1)) {
                == ? L00416f44 : ;
            } else {
                eax = *((A8 << 4) + 0x49b734);
                eax = 0;
                goto L00416f5a;
                eax = *((A8 << 4) + 0x49b738);
                eax = 0;
                goto L00416f5a;
            }
            eax = 0;
        }
    }
L00416f5a:
}

/*    Procedure: 0x00416F5E - 0x00416F5F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00416F5E()
{



}

/*    Procedure: 0x00416F60 - 0x00416FD3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00416FD4()
 */

L00416F60(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    edx = 0;
    eax = 0x49b730;
    do {
        if(ecx = *eax - 1) {
            if(*( *(eax + 4) + A8 * 4) != -1) {
                ecx = edx & 7;
                bl = !(1 << cl);
                ecx = edx;
                if(ecx < 0) {
                    ecx = ecx + 7;
                }
                *((ecx >> 3) + 6346688) = *((ecx >> 3) + 6346688) & bl;
            }
        } else {
            == ? L00416fa2 : ;
        }
L00416fc4:
        edx = edx + 1;
        eax = eax + 0x10;
    } while(edx < 0xaa);
    goto L00416fd3;
    if(A8 != *(eax + 8)) {
        goto L00416fc4;
    }
    ecx = edx & 7;
    bl = !(1 << cl);
    ecx = edx;
    if(ecx < 0) {
        ecx = ecx + 7;
    }
    *((ecx >> 3) + 6346688) = *((ecx >> 3) + 6346688) & bl;
    goto L00416fc4;
L00416fd3:
}

/*    Procedure: 0x00416FD4 - 0x004171E2
 *    Argument size: 4
 *    Local size: 44
 *    Save regs size: 12
 *    Called by:
 *        L004171E4()
 */

L00416FD4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0;
    edi = & Vffffffd4;
    ebx = 0x49cd3c;
    do {
        *edi = L00412518( *ebx);
        esi = esi + 1;
        edi = edi + 4;
        ebx = ebx + 4;
    } while(esi < 5);
    Vfffffffc = 0;
    eax = & Vffffffd4;
    do {
        if(*eax == A8) {
            break;
        }
        Vfffffffc = Vfffffffc + 1;
        eax = eax + 4;
    } while(Vfffffffc < 5);
    if(Vfffffffc < 5) {
        edi = 0;
        Vfffffff4 = 0;
        do {
            ebx = 0;
            esi = 0x49b73c;
            do {
                eax = L00416ED0(ebx, Vfffffffc);
                if(eax != 0) {
                    eax = *esi & 65535;
                    if(edi < eax) {
                        edi = *esi & 65535;
                    }
                }
                ebx = ebx + 1;
                esi = esi + 0x10;
            } while(ebx < 0xaa);
            if(edi != 0) {
                break;
            }
            if(Vfffffff4 == 0) {
                eax = L00416F60(Vfffffffc);
            }
            Vfffffff4 = Vfffffff4 + 1;
        } while(Vfffffff4 < 2);
        if(edi != 0) {
            Vfffffff8 = 0;
            ebx = 0;
            esi = 0x49b73c;
            do {
                if(L00416ED0(ebx, Vfffffffc) != 0 && edi == ( *esi & 65535)) {
                    Vfffffff8 = Vfffffff8 + 1;
                }
                ebx = ebx + 1;
                esi = esi + 0x10;
            } while(ebx < 0xaa);
            Vfffffff8 = *L004eeed4(Vfffffff8);
            ebx = 0;
            esi = 0x49b73c;
            do {
                if(L00416ED0(ebx, Vfffffffc) != 0 && edi == ( *esi & 65535)) {
                    eax = Vfffffff8;
                    Vfffffff8 = Vfffffff8 - 1;
                    if(eax == 0) {
                        break;
                    }
                }
                ebx = ebx + 1;
                esi = esi + 0x10;
            } while(ebx < 0xaa);
            if(!(eax = *((ebx << 4) + 0x49b730) - 1)) {
                == ? L004171a5 : ;
            } else {
                esi = 0;
                for(Vfffffff0 = (ebx + ebx) * 8 + 0x49b738; 1; esi = esi + 1) {
                    eax = Vfffffff0;
                    if(esi >= *eax) {
                        break;
                    }
                    edi = 0;
                    Vffffffe8 = & Vffffffd4;
                    Vffffffec = Vfffffff0 - 4;
                    do {
                        eax = esi + esi * 4;
                        eax = *( *Vffffffec + eax * 4 + edi * 4);
                        if(eax != -1) {
                            edx = *Vffffffe8;
                            ecx = edx;
                            edx = *(((edx << 3) - ecx) * 8 + 6347544);
                            edx = esi + esi * 4;
                            edx = *Vffffffec + edx * 4;
                            L0041766C( *Vffffffe8, eax, 1, 0, esi * esi + M00644ba8);
                        }
                        edi = edi + 1;
                        Vffffffe8 = Vffffffe8 + 4;
                    } while(edi < 5);
                }
                goto L004171c3;
                eax = L0041766C(A8, *((ebx << 4) + 0x49b734), 1, 0, 0);
            }
L004171c3:
            ecx = ebx & 7;
            al = 1 << cl;
            if(ebx < 0) {
                ebx = ebx + 7;
            }
            *((ebx >> 3) + 6346688) = *((ebx >> 3) + 6346688) | al;
        }
    }
}

/*    Procedure: 0x004171E3 - 0x004171E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004171E3()
{



}

/*    Procedure: 0x004171E4 - 0x004173E6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004149AC()
 *        L004173E7()
 */

L004171E4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -280;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = 0;
    esi = esi | -1;
    M0060d7d8 = 1;
    edi = A8;
    eax = edi;
    edi = (edi << 3) - eax;
    eax = *(edi * 8 + 6347544) + M00644ba8;
    *(edi * 8 + 6347548) = eax;
    if(*(edi * 8 + 6347564) == 0) {
        eax = L00416FD4(A8);
    }
    if(*(edi * 8 + 6347564) != 0) {
        eax = *(edi * 8 + 6347568);
        edx = A8;
        ecx = edx;
        edx = ((edx << 3) - ecx) * 8 + 6347556;
        do {
            if(*edx + *(eax + 0x10) <= M00644ba8) {
                if(*(eax + 0x40) == 0) {
                    *(edx + 0xc) = *(eax + 0x3c);
                } else {
                    ecx = *(eax + 0x40);
                    *(ecx + 0x3c) = *(eax + 0x3c);
                }
                if(*(eax + 0x3c) != 0) {
                    ecx = *(eax + 0x3c);
                    *(ecx + 0x40) = *(eax + 0x40);
                }
                *eax = -1;
            }
            eax = *(eax + 0x3c);
        } while(eax != 0);
        edi = 0;
        eax = A8;
        edx = eax;
        *(ebp - 4) = ((eax << 3) - edx) * 8 + 6347564;
        do {
            eax = *( *(ebp - 4));
            do {
                edx = *(eax + 8);
                if(esi <= edx && *(eax + 0xc) <= M00644ba8) {
                    esi = edx;
                    ebx = eax;
                }
                eax = *(eax + 0x3c);
            } while(eax != 0);
            if(ebx != 0) {
                break;
            }
            if(edi == 0) {
                eax = L00416FD4(A8);
            }
            edi = edi + 1;
        } while(edi < 2);
        if(ebx != 0) {
            eax = *(ebx + 0x40);
            if(eax == 0) {
                eax = A8;
                edx = eax;
                eax = (eax << 3) - edx;
                *(eax * 8 + 6347564) = *(ebx + 0x3c);
            } else {
                *(eax + 0x3c) = *(ebx + 0x3c);
            }
            eax = *(ebx + 0x3c);
            if(eax != 0) {
                *(eax + 0x40) = *(ebx + 0x40);
            }
            esi = A8;
            eax = esi;
            esi = (esi << 3) - eax;
            *(ebx + 0x3c) = *(esi * 8 + 6347568);
            *(ebx + 0x40) = 0;
            eax = *(ebx + 0x3c);
            if(eax != 0) {
                *(eax + 0x40) = ebx;
            }
            *(esi * 8 + 6347568) = ebx;
            *(ebx + 0x10) = M00644ba8;
            L00414070(7, A8, *ebx);
            if(!( *(esi * 8 + 6347552) & 2)) {
                *(ebx + 4) = *(ebx + 4) | 0x400;
                al = M00644c8c;
                if(al == 0x30) {
                    goto L00417388;
                }
                if(al == 0x2a) {
L00417388:
                    *(ebx + 4) = *(ebx + 4) | 0x100;
                }
            }
            eax = A8;
            edx = eax;
            *(ebp + -268) = ((eax << 3) - edx << 3) + 6347516;
            eax = *L005000c0(ebp + -260, 42496, ebp + -280);
            *eax = 0;
            if(Ac != 0) {
                eax = L0041D6C0(ebp + -260, 0, 0);
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004173E7 - 0x00417478
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 8
 */

L004173E7(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    if(!(eax = *A8 - 5)) {
        if(eax = eax - 0xa) {
            goto L00417433;
        }
    } else {
        ecx = 0;
        edx = 6347552;
        do {
            if(!( *edx & 1)) {
                eax = *(edx + 0x10);
                do {
                    if(!( *(eax + 5) & 4)) {
                        *(eax + 4) = *(eax + 4) | 0x100;
                    }
                    eax = *(eax + 0x3c);
                } while(eax != 0);
            }
            ecx = ecx + 1;
            edx = edx + 0x38;
        } while(ecx < 5);
        goto L00417473;
L00417433:
        esi = 0;
        ebx = 6347560;
        do {
            eax = *ebx;
            if(eax < M00644ba8) {
                *(ebx - 8) = *(ebx - 8) & -3;
            }
            if(*(ebx - 0x10) != 0 && !( *(ebx - 8) & 4)) {
                eax = *(ebx - 0xc);
                if(eax <= M00644ba8) {
                    eax = L004171E4(esi, 1);
                }
            }
            esi = esi + 1;
            ebx = ebx + 0x38;
        } while(esi < 5);
    }
L00417473:
}

/*    Procedure: 0x00417479 - 0x004174DA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00417479(A8)
/* unknown */ void  A8;
{



    if(!(eax = (A8 & 0xff) - 1)) {
        edx = 0;
        eax = 6347544;
        do {
            *eax = 0;
            *(eax - 8) = 0;
            *(eax + 8) = 0;
            edx = edx + 1;
            eax = eax + 0x38;
        } while(edx < 5);
        edx = 0;
        eax = 6347796;
        do {
            *eax = -1;
            edx = edx + 1;
            eax = eax + 0x44;
        } while(edx < 0x2bc);
        L00471198(6346688, 0, 0x16);
        eax = 0;
        M0060d7d8 = 0;
    }
}

/*    Procedure: 0x004174DB - 0x00417530
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L004174DB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 0;
    esi = 6347552;
    do {
        if(!( *esi & 4)) {
            eax = ((ebx << 3) - ebx << 3) + 6347516;
            edx = A8;
            do {
                cl = *eax;
                if(cl != *edx) {
                    goto L00417521;
                }
                if(cl == 0) {
                    break;
                }
                cl = *(eax + 1);
                if(cl != *(edx + 1)) {
                    goto L00417521;
                }
                eax = eax + 2;
                edx = edx + 2;
            } while(cl != 0);
            == ? L0041752a : ;
        }
L00417521:
        ebx = ebx + 1;
        esi = esi + 0x38;
    } while(ebx < 5);
    return ebx;
}

/*    Procedure: 0x00417531 - 0x00417533
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417531()
{



}

/*    Procedure: 0x00417534 - 0x00417565
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041758C()
 */

L00417534(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(Ac >= 0xa) {
        eax = 0;
    } else {
        if(*(A8 + Ac * 4 + 0x14) == 0) {
            *L00501b8c();
            *(A8 + Ac * 4 + 0x14) = M00644bc8;
        }
        eax = *(A8 + Ac * 4 + 0x14);
    }
}

/*    Procedure: 0x00417566 - 0x00417567
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417566()
{



}

/*    Procedure: 0x00417568 - 0x00417579
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044ED3C()
 */

L00417568(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *(A8 * 4 + 6347116) = Ac;
}

/*    Procedure: 0x0041757A - 0x0041757B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041757A()
{



}

/*    Procedure: 0x0041757C - 0x0041758A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044ED3C()
 */

L0041757C(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 6347116);
}

/*    Procedure: 0x0041758B - 0x0041758B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041758B()
{



}

/*    Procedure: 0x0041758C - 0x00417609
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00414FAC()
 *        L0041760C()
 */

L0041758C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A10 == 0) {
        return *(A8 * 4 + 6347116);
    }
    if(Ac >= 5) {
        return 0;
    }
    eax = *(((Ac << 3) - Ac) * 8 + 6347568);
    if(eax != 0) {
        do {
            if(A10 == *eax) {
                goto L004175d3;
            }
            eax = *(eax + 0x3c);
        } while(eax != 0);
        goto L004175db;
L004175d3:
        return L00417534(eax, A8);
    }
L004175db:
    eax = *(((Ac << 3) - Ac) * 8 + 6347564);
    if(eax != 0) {
        do {
            if(A10 == *eax) {
                goto L004175fd;
            }
            eax = *(eax + 0x3c);
        } while(eax != 0);
        goto L00417605;
L004175fd:
        return L00417534(eax, A8);
    }
L00417605:
    return 0;
}

/*    Procedure: 0x0041760A - 0x0041760B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041760A()
{



}

/*    Procedure: 0x0041760C - 0x00417624
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 */

L0041760C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L0041758C(A8, Ac, A10);
}

/*    Procedure: 0x00417625 - 0x00417627
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417625()
{



}

/*    Procedure: 0x00417628 - 0x0041766B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 */

L00417628(A8)
/* unknown */ void  A8;
{



    if(A8 < 5) {
        eax = *(((A8 << 3) - A8) * 8 + 6347564);
        do {
            *eax = -1;
            eax = *(eax + 0x3c);
        } while(eax != 0);
        eax = (A8 << 3) - A8;
        *(eax * 8 + 6347564) = 0;
        *(eax * 8 + 6347552) = *(eax * 8 + 6347552) | 4;
    }
}

/*    Procedure: 0x0041766C - 0x0041773B
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L00416FD4()
 */

L0041766C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 6347796;
    if(A8 < 5) {
        eax = 0;
        edx = 6347796;
        do {
            if(*edx == -1) {
                break;
            }
            eax = eax + 1;
            edx = edx + 0x44;
        } while(eax < 0x2bc);
        if(eax < 0x2bc) {
            edx = (eax << 4) + eax;
            *(ebx + edx * 4) = Ac;
            *(ebx + edx * 4 + 4) = A14;
            *(ebx + edx * 4 + 8) = A10;
            *(ebx + edx * 4 + 0xc) = A18;
            *(ebx + edx * 4 + 0x3c) = *(((A8 << 3) - A8) * 8 + 6347564);
            *(ebx + edx * 4 + 0x40) = 0;
            esi = 0;
            edx = ebx + ((eax << 4) + eax) * 4 + 0x14;
            do {
                *edx = 0;
                esi = esi + 1;
                edx = edx + 4;
            } while(esi < 0xa);
            edx = (A8 << 3) - A8;
            if(*(edx * 8 + 6347564) != 0) {
                esi = ((eax << 4) + eax << 2) + ebx;
                *( *(((A8 << 3) - A8) * 8 + 6347564) + 0x40) = esi;
            }
            esi = eax;
            eax = ((eax << 4) + esi << 2) + ebx;
            *(edx * 8 + 6347564) = eax;
        }
    }
}

/*    Procedure: 0x0041773C - 0x004177C9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 */

L0041773C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ecx = A8;
    if(ecx < 5) {
        eax = *(((ecx << 3) - ecx) * 8 + 6347564);
        do {
            if(Ac == *eax) {
                ebx = *(eax + 0x40);
                if(ebx != 0) {
                    *(ebx + 0x3c) = *(eax + 0x3c);
                }
                ebx = *(eax + 0x3c);
                if(ebx != 0) {
                    *(ebx + 0x40) = *(eax + 0x40);
                }
                *eax = -1;
            }
            eax = *(eax + 0x3c);
        } while(eax != 0);
        eax = *(((ecx << 3) - ecx) * 8 + 6347568);
        do {
            if(Ac == *eax) {
                ecx = *(eax + 0x40);
                if(ecx != 0) {
                    *(ecx + 0x3c) = *(eax + 0x3c);
                }
                ecx = *(eax + 0x3c);
                if(ecx != 0) {
                    *(ecx + 0x40) = *(eax + 0x40);
                }
                *eax = -1;
            }
            eax = *(eax + 0x3c);
        } while(eax != 0);
    }
}

/*    Procedure: 0x004177CA - 0x004177CB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004177CA()
{



}

/*    Procedure: 0x004177CC - 0x00417823
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 */

L004177CC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 < 5) {
        eax = *(((A8 << 3) - A8) * 8 + 6347564);
        if(eax != 0) {
            do {
                if(Ac == *eax) {
                    goto L004177f4;
                }
                eax = *(eax + 0x3c);
            } while(eax != 0);
            goto L004177ff;
L004177f4:
            *eax = A10;
        }
L004177ff:
        eax = *(((A8 << 3) - A8) * 8 + 6347568);
        if(eax != 0) {
            do {
                if(Ac == *eax) {
                    goto L00417815;
                }
                eax = *(eax + 0x3c);
            } while(eax != 0);
            goto L00417821;
L00417815:
            *eax = A10;
            return;
        }
    }
L00417821:
}

/*    Procedure: 0x00417824 - 0x004178E9
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 */

L00417824(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A10;
    esi = 6347516;
    ebx = 0;
    eax = 6347544;
    do {
        if(*eax == 0) {
            break;
        }
        ebx = ebx + 1;
        eax = eax + 0x38;
    } while(ebx < 5);
    if(ebx == 5) {
        eax = eax | -1;
    } else {
        eax = ((ebx << 3) - ebx << 3) + esi;
        (save)esi;
        (save)edi;
        esi = eax;
        edi = A8;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)edi;
        (restore)esi;
        eax = (ebx << 3) - ebx;
        *(esi + eax * 8 + 0x14) = Ac;
        edx = edi == 0 ? M00644ba8 : edi;
        eax = (ebx << 3) - ebx;
        *(esi + eax * 8 + 0x20) = edx;
        *(esi + eax * 8 + 0x1c) = A14;
        *(esi + eax * 8 + 0x28) = A18;
        *(esi + eax * 8 + 0x24) = 0;
        *(esi + eax * 8 + 0x30) = 0;
        *(esi + eax * 8 + 0x34) = 0;
        *(esi + eax * 8 + 0x2c) = 0;
        eax = *(esi + eax * 8 + 0x20) > M00644ba8 ? ebx : ebx;
    }
}

/*    Procedure: 0x004178EA - 0x004178EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004178EA()
{



}

/*    Procedure: 0x004178EC - 0x00417907
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 */

L004178EC(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax < 5) {
        edx = eax;
        eax = (eax << 3) - edx;
        *(eax * 8 + 6347552) = *(eax * 8 + 6347552) | 1;
    }
}

/*    Procedure: 0x00417908 - 0x00417923
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 */

L00417908(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax < 5) {
        edx = eax;
        eax = (eax << 3) - edx;
        *(eax * 8 + 6347552) = *(eax * 8 + 6347552) & -2;
    }
}

/*    Procedure: 0x00417924 - 0x00417969
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 */

L00417924(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    if(A8 < 5) {
        edx = (A8 << 3) - A8;
        *(edx * 8 + 6347552) = *(edx * 8 + 6347552) | 2;
        esi = *(edx * 8 + 6347560);
        ebx = M00644ba8;
        *(edx * 8 + 6347560) = esi <= ebx ? ebx + Ac : *(edx * 8 + 6347560) + Ac;
    }
}

/*    Procedure: 0x0041796A - 0x0041796B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041796A()
{



}

/*    Procedure: 0x0041796C - 0x00417987
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 */

L0041796C(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax < 5) {
        edx = eax;
        eax = (eax << 3) - edx;
        *(eax * 8 + 6347552) = *(eax * 8 + 6347552) & -3;
    }
}

/*    Procedure: 0x00417988 - 0x004179BE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00411810()
 *        L00414FAC()
 */

L00417988(A8)
/* unknown */ void  A8;
{



    if(A8 >= 0x64) {
        return 0;
    }
    if(*(A8 * 4 + 6346716) == 0) {
        *L00501b8c();
        *(A8 * 4 + 6346716) = M00644bc8;
    }
    return *(A8 * 4 + 6346716);
}

/*    Procedure: 0x004179BF - 0x004179CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004179BF()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    (restore)ebp;
    return L004179D0("\n*** Ending tracing ***\n");
}

/*    Procedure: 0x004179D0 - 0x00417AA5
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004179BF()
 */

L004179D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    if(M0049ceb0 == 0) {
        if(M0049ceb4 != 0) {
            M0049ceb4 = 0;
            eax = L00477DD8(0x4179c0);
            if(eax != 0) {
                M0049ceb0 = 1;
                return;
            }
            eax = L00473538("trace.dbg", "wt");
            ebx = eax;
            M00625e08 = ebx;
            if(ebx != 0) {
                L00473564(ebx, "*** Starting tracing ***\n\n");
                goto L00417a73;
            }
            M0049ceb0 = 1;
            return;
        }
        eax = L00473538("trace.dbg", "at");
        ebx = eax;
        M00625e08 = ebx;
        if(M00625e08 == 0) {
            M0049ceb0 = 1;
            return;
        }
L00417a73:
        L00474968(M00625e08, A8, & Ac);
        eax = L004731B8(M00625e08);
        if(eax != 0) {
            M0049ceb0 = 1;
        }
    }
}

/*    Procedure: 0x00417AA6 - 0x00417AA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417AA6()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00417AA8 - 0x00417AC5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00417D0C()
 *        L00418264()
 */

L00417AA8()
{
    /* unknown */ void  ecx;



    L00418C88(M0049cfa4, ebp - 4, 4);
    return *(ebp - 4);
}

/*    Procedure: 0x00417AC6 - 0x00417AC7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417AC6()
{



}

/*    Procedure: 0x00417AC8 - 0x00417AE6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00417D0C()
 */

L00417AC8()
{
    /* unknown */ void  ecx;



    L00418C88(M0049cfa4, ebp - 2, 2);
    return *(ebp - 2) & 65535;
}

/*    Procedure: 0x00417AE7 - 0x00417AE7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417AE7()
{



}

/*    Procedure: 0x00417AE8 - 0x00417B2C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00417CA8()
 *        L00417D0C()
 *        L00418264()
 */

L00417AE8()
{
    /* unknown */ void  ecx;



    L00418C88(M0049cfa4, ebp - 4, 4);
    eax = *(ebp - 4) << 0x18;
    eax = eax | *(ebp - 4) << 8 & 16711680;
    eax = eax | *(ebp - 4) >> 8 & 65280;
    return eax | *(ebp - 4) >> 0x18;
}

/*    Procedure: 0x00417B2D - 0x00417B5E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00417B2D()
{
    /* unknown */ void  ecx;



    eax = L00418C88(M0049cfa4, ebp - 2, 2);
    eax = *(ebp - 2) << 8;
    return (ax | ( *(ebp - 2) & 65535) >> 8) & 65535;
}

/*    Procedure: 0x00417B5F - 0x00417B8E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00417B5F()
{
    /* unknown */ void  ecx;



    eax = L00418C88(M0049cfa4, ebp - 2, 2);
    eax = *(ebp - 2) << 8;
    return (ax | ( *(ebp - 2) & 65535) >> 8) & 65535;
}

/*    Procedure: 0x00417B8F - 0x00417B8F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417B8F()
{



}

/*    Procedure: 0x00417B90 - 0x00417C40
 *    Argument size: 0
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00417D0C()
 */

L00417B90()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 0;
    Vfffffff4 = 6452492;
    Vfffffff8 = 6451468;
    edi = 6450444;
    esi = 6449420;
    do {
        Vfffffff0 = ebx;
        Vfffffffc = Vfffffff0;
        if(!(bl & 0x80)) {
            Vfffffffc = Vfffffffc - M00417c44;
        }
        Vfffffffc = Vfffffffc * M00417c48;
        (fsave)M00417c4c * Vfffffffc;
        *esi = L00476414();
        (fsave)M00417c54 * Vfffffffc;
        *edi = L00476414();
        (fsave)M00417c5c * Vfffffffc;
        *Vfffffff8 = L00476414();
        (fsave)M00417c64 * Vfffffffc;
        eax = L00476414();
        *Vfffffff4 = eax;
        ebx = ebx + 1;
        Vfffffff4 = Vfffffff4 + 4;
        Vfffffff8 = Vfffffff8 + 4;
        edi = edi + 4;
        esi = esi + 4;
    } while(ebx < 0x100);
}

/*    Procedure: 0x00417C41 - 0x00417C6B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417C41()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *(eax + -2147483581) = *(eax + -2147483581) + al;
    esi = esi + 1;
    asm("daa");
    *eax = *eax ^ ecx;
    al = *esi;
    esi = esi + 1;
    asm("sbb al,0x5a");
    asm("cld");
    asm("aas");
    ebx :: edi;
    edx = edi - 1 + 1245705838;
    ch = 0x4f;
    asm("Unknown opcode 0xc7");
    asm("arpl [esi],ax");
    asm("salc");
    edi = 555253372;
    al :: 0xda;
    asm("out 0xbf,al");
}

/*    Procedure: 0x00417C6C - 0x00417CA6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00418264()
 */

L00417C6C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 != 0x38) {
        L004539E4();
    }
    L00418C88(M0049cfa4, Ac, 0x38);
    eax = *Ac;
    edx = 0;
    edx = 0x3e8 / 0x3e8 % 0x3e8 / 0x3e8;
    M00625e24 = eax;
    return 1;
}

/*    Procedure: 0x00417CA7 - 0x00417CA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417CA7()
{



}

/*    Procedure: 0x00417CA8 - 0x00417D08
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00418264()
 */

L00417CA8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = A8;
    if(ebx < 0x24) {
        L004539E4();
    }
    *Ac = L00417AE8();
    *(Ac + 4) = L00417AE8();
    L00418C88(M0049cfa4, Ac + 8, 0x28);
    eax = 0x30;
    if(!(bl & 1)) {
        ebx = ebx + 1;
    }
    if(ebx > eax) {
        L00418CF4(M0049cfa4, ebx - eax);
    }
    return 1;
}

/*    Procedure: 0x00417D09 - 0x00417D0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417D09()
{



}

/*    Procedure: 0x00417D0C - 0x00417FBE
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418264()
 */

L00417D0C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -2052;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = Ac;
    *ebx = L00417AA8();
    *(ebx + 4) = L00417AA8();
    *(ebx + 8) = L00417AA8();
    *(ebx + 0xc) = L00417AC8();
    *(ebx + 0x10) = L00417AC8();
    eax = L00417AE8();
    *(ebx + 0x14) = eax;
    M00625e20 = *(ebx + 0x14);
    *(ebx + 0x18) = L00417AA8();
    *(ebx + 0x1c) = L00417AA8();
    *(ebx + 0x20) = L00417AA8();
    *(ebx + 0x24) = L00417AA8();
    *(ebx + 0x28) = L00417AA8();
    M00625e1c = *(ebx + 0x10);
    M00625e10 = *(ebx + 4);
    M00625e14 = *(ebx + 8);
    M00625e18 = *(ebx + 0x24);
    if(M00625e18 == 0 && M00625e1c <= 8) {
        M00625e18 = 1 << M00625e1c;
    }
    *(ebx + 0x24) = M00625e18;
    eax = M00625e20;
    if(eax <= 33619967) {
        == ? L00417e74 : ;
        if(eax <= 16777216) {
            == ? L00417e44 : ;
            if(eax = eax - 1) {
                goto L00417e35;
            }
            if(eax = eax - 65534) {
                goto L00417e5c;
            }
        } else {
            if(eax = eax - 16842751) {
                goto L00417e68;
            }
            if(eax = eax - 16711681) {
                goto L00417e50;
            }
        }
    } else {
        if(eax <= 1129464141) {
            == ? L00417ea9 : ;
            if(eax = eax - 50397183) {
                goto L00417e80;
            }
            if(eax = eax - 16777216) {
                goto L00417e8c;
            }
        } else {
            if(!(eax = eax - 1668704612)) {
                if(eax = eax - 251513037) {
                    M00625e20 = 1381249585;
                }
            } else {
                L00417B90();
                M00625e10 = M00625e10 + 3 >> 2 << 2;
                M00625e14 = M00625e14 + 3 >> 2 << 2;
            }
        }
    }
    if(M00625e1c <= 8) {
        L00418C88(M0049cfa4, ebp + -1028, M00625e18 << 2);
        esi = 0;
        edi = ebp + -2052;
        for(ebx = ebp + -1026; esi < M00625e18; ebx = ebx + 4) {
            *(ebp - 3) = ( *ebx & 0xff) >> 4;
            *(ebp - 2) = ( *(ebx - 1) & 0xff) >> 4;
            *(ebp - 1) = ( *(ebx - 2) & 0xff) >> 4;
            *L004f80a0( *(ebp - 3));
            *edi = ax & 65535;
            esi = esi + 1;
            edi = edi + 4;
        }
        eax = *L004f80ac();
        esi = 0;
        edi = 6453520;
        for(ebx = ebp + -2052; esi < M00625e18; ebx = ebx + 4) {
            *edi = *L004f80a8( *ebx);
            esi = esi + 1;
            edi = edi + 1;
        }
        *L004f80b0();
    } else {
        L004539E4();
    }
    eax = (M00625e18 << 2) + 0x28;
    A8 = A8 + 1 & -2;
    if(eax < A8) {
        L00418CF4(M0049cfa4, A8 - eax);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*    Procedure: 0x00417FBF - 0x00417FBF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00417FBF()
{



}

/*    Procedure: 0x00417FC0 - 0x00418164
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00418168()
 *        L00418264()
 */

L00417FC0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = Ac;
    eax = A8;
    if(eax > 5) {
        goto L0041813b;
    }
    switch(eax) {
        case 0:
L0041813b:
            L00473564(0x60b074, "Sound channel called with wrong parameter\n");
            goto L0041814d;
        case 1:
L00417ff3:
            edx = 0x19;
            eax = 7198692;
            goto L00417ffd;
        case 2:
            goto L0041802e;
        case 3:
            goto L004180b4;
        case 4:
            goto L004180ea;
        case 5:
            goto L00418104;
    }
    goto L00417ff3;
L00417ffd:
    *eax = 0;
    edx = edx - 1;
    eax = eax + -3504;
    if(edx > 0) {
        goto L00417ffd;
    }
    M0050622c = 7107592;
    M00506254 = 0x80;
    L0046FD46();
    L0046FD18();
    return 1;
L0041802e:
    if(!(bl & 1)) {
        ebx = ebx + 1;
    }
    if(ebx > 0xdac) {
        L004539E4();
    }
    esi = ebx;
    eax = M006dca38;
    edx = eax;
    L00418C88(M0049cfa4, ((((eax << 3) - edx << 3) - edx << 2) - edx << 4) + 7107592, esi);
    if(esi >= 2) {
        eax = M006dca38;
        edx = eax;
        *(((((eax << 3) - edx << 3) - edx << 2) - edx + (((eax << 3) - edx << 3) - edx << 2) - edx) * 8 + 7111092) = ebx;
    }
    M006dca38 = M006dca38 + 1;
    ecx = 0x19;
    eax = M006dca38;
    asm("cdq");
    M006dca38 = ecx / ecx % ecx / ecx;
    return 1;
L004180b4:
    eax = M006c81b4;
    if(eax > 0) {
        M0050622c = 7107592;
        M00506234 = eax;
        M006dca3c = L0044BF25(M006dca68, 0x50622c);
        goto L0041815c;
L004180ea:
        while(L0044BEA5(M006dca68, M006dca3c) == 0) {
        }
        goto L0041815c;
L00418104:
        if(M0050637c != 0 && L0044BEA5(M006dca68, M006dca3c) == 0) {
            L0044C0FB(M006dca68, M006dca3c);
            goto L0041815c;
L0041814d:
            *L00500398();
            if(al == 0) {
                goto L0041814d;
            }
            L004539E4();
        }
    }
L0041815c:
    return 1;
}

/*    Procedure: 0x00418165 - 0x00418167
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418165()
{



}

/*    Procedure: 0x00418168 - 0x0041819D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418264()
 *        L00418EAB()
 *        L00421A51()
 *        L00422310()
 *        L00423CD2()
 *        L0045397C()
 */

L00418168()
{



    M006321da = 0;
    M0049cfb0 = 0;
    eax = M0049cfa4;
    if(eax > 0) {
        L004730FC(eax);
        M0049cfa4 = 0;
    }
    return L00417FC0(5, 0);
}

/*    Procedure: 0x0041819E - 0x00418262
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L0041819E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    edx = *eax;
    ebx = edx + M00502e6c;
    ecx = *(eax + 2);
    M0062790c = ebx + (ecx << 6) + (ecx << 6) * 4;
    M00630070 = edx;
    M00630074 = ecx;
    ebx = L00474574(A8, 32768, 0x40);
    M0049cfa4 = ebx;
    if(ebx < 0) {
        eax = 0;
    } else {
        M00625e28 = 0;
        M00625e30 = 0;
        M00625e0c = 0;
        M00625e34 = 0;
        M00625e38 = 0;
        M00625e24 = 0x11;
        M00625e2c = 0;
        M00625e18 = 0;
        M00625e14 = 0;
        M00625e10 = 0;
        M00625e20 = 0;
        M00630088 = L00475914(ebx);
        L00418C0C(M0049cfa4);
        eax = 1;
    }
}

/*    Procedure: 0x00418263 - 0x00418263
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418263()
{



}

/*    Procedure: 0x00418264 - 0x00418693
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 8
 *    Called by:
 *        L0043C31C()
 */

L00418264(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    if(M00632090 > 0 || M00630088 > 0) {
        esi = L00417AE8();
        eax = L00417AA8();
        ebx = eax;
        if(esi <= 1380533830) {
            == ? L0041839c : ;
            if(esi <= 808548194) {
                == ? L00418618 : ;
                if(esi <= 808477816) {
                    == ? L00418430 : ;
                    if(esi = esi - 808468813) {
                        goto L00418647;
                    }
                    if(esi = esi + -8981 - 2) {
                        goto L00418430;
                    }
                } else {
                    if((esi = esi - 808479094) || (esi = esi - 0xf02)) {
                        goto L00418430;
                    }
                }
            } else {
                if((esi = esi - 1145656144) || (esi = esi - 84537082) || (esi = esi - 16911361)) {
                    goto L00418647;
                }
                if(esi = esi - 32769289) {
                    goto L004183a6;
                }
            }
        } else {
            if(esi <= 1937011302) {
                == ? L004183e6 : ;
                if(esi = esi - 1635150184) {
                    goto L004183b0;
                }
                if((esi = esi - 116263172) || (esi = esi - 16778693) || (esi = esi - 168819251)) {
                    goto L00418647;
                }
            } else {
                if(!(esi = esi - 1937011304)) {
                    if((esi = esi - 4) || (esi = esi - 49345032) || (esi = esi - 262143)) {
                        goto L00418647;
                    }
                    goto L0041865c;
                    eax = L00417AE8();
                    goto L0041868e;
L004183a6:
                    eax = L00417AE8();
                    goto L0041868e;
L004183b0:
                    eax = L00417C6C(ebx, 6446652);
                    if(eax != 0) {
                        goto L0041868e;
                    }
                    goto L0041868e;
                }
                eax = L00417CA8(ebx, 6446708);
                if(eax != 0) {
                    goto L0041868e;
                }
                goto L0041868e;
                if(!(eax = M00625e74 - 1635083379)) {
                    if(eax = eax - 351535104) {
                        goto L0041868e;
                    }
                    eax = L00417D0C(ebx, 6446756);
                    if(eax != 0) {
                        goto L0041868e;
                    }
                    goto L0041868e;
                }
                eax = L00418CF4(M0049cfa4, ebx + 1 & -2);
                goto L0041868e;
L00418430:
                if(!(M00630080 = M00630080 + 1)) {
                    L0042718C();
                }
                eax = M00630080;
                ecx = 5;
                asm("cdq");
                if(ecx / ecx % ecx / ecx == 0) {
                    M00630084 = 1;
                }
                if(M00630084 == 1) {
                    esi = 6468176;
                    ebx = ebx + 1 & -2;
                    if(ebx == 0) {
                        goto L0041868e;
                    }
                    *L0062B254 = 0x1100;
                    *L0062B270 = 0;
                    *L0062B274 = ebx;
                    L00418C88(M0049cfa4, 6468216, ebx);
                    M00630078 = M00630070 + M00625e10;
                    M0063007c = M00630074 + M00625e14;
                    *(esi + 0xc) = 0;
                    *(esi + 8) = 0;
                    *(esi + 0x10) = M00625e10;
                    *(esi + 0x14) = M00625e14;
                    *(esi + 0x18) = 0;
                    *(esi + 0x1c) = 0;
                    if(!(eax = M00625e20 - 1129464141)) {
                        if(eax = eax - 250937555) {
                            goto L00418504;
                        }
                        goto L0041868e;
                    }
                    if(M00625e1c != 8) {
                        goto L0041868e;
                    }
                    *esi = 0x4186a4;
                    goto L00418517;
L00418504:
                    if(M00625e1c != 8) {
                        goto L0041868e;
                    }
                    *esi = 0x418b54;
L00418517:
                    if(M00625ed0 == 0 || M00625e1c <= 8) {
                        *esi(6453776, esi + 0x28, *(esi + 0x24), M00625e10, M00625e14, 8, & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0);
                        Vfffffff4 = Vfffffff4 - Vfffffffc;
                        Vfffffff0 = Vfffffff0 - Vfffffff8;
                    }
                    if(M0050637c != 0) {
                        if(M00630080 != 0) {
                            goto L0041858c;
                        }
                        eax = L00417FC0(3, 0);
                        if(eax == 0) {
                            goto L0041868e;
L0041858c:
                            M0063215c = L00478F64();
                            if(L0046FD57() < M00630080) {
                                Vffffffec = L00478F64();
                                (fsave)Vffffffec;
                                (fsave)M0063215c + M00418694;
                                asm("fcompp");
                                asm("fnstsw ax");
                                asm("sahf");
                                >= ? L00418596 : ;
                            }
                            if(L0046FD57() > M00630080) {
                                M00630084 = 0;
                            }
                        }
                    } else {
                        do {
                            (fsave)Vffffffec;
                            asm("fcomp qword [0x41869c]");
                            asm("fnstsw ax");
                            asm("sahf");
                        } while(Vffffffec = L00478F64() - M0063215c);
                        M0063215c = L00478F64();
                    }
                    eax = L00458384();
                    goto L0041868e;
                }
                eax = L00418CF4(M0049cfa4, ebx);
                goto L0041868e;
                if(M0050637c != 0) {
                    eax = L00417FC0(2, ebx);
                    if(eax != 0) {
                        goto L0041868e;
                    }
                    goto L0041868e;
                }
                eax = L00418CF4(M0049cfa4, ebx + 1 & -2);
                goto L0041868e;
L00418647:
                eax = L00418CF4(M0049cfa4, ebx + 1 & -2);
                goto L0041868e;
            }
        }
L0041865c:
        if(M00632090 > 0 || M00630088 > 0) {
            L00418168();
            L0042718C();
            eax = L00458384();
        }
    } else {
        L00418168();
        L0042718C();
        eax = L00458384();
    }
L0041868e:
}

/*    Procedure: 0x00418694 - 0x00418B48
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418694()
{



    *edi = eax;
    edi = edi + 4;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    (save)eax;
    eax = eax + 1;
    *edi = eax;
    edi = edi + 4;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    *edi = al;
    edi = edi + 1;
    eax = eax + 1 + 1;
    (save)ebp;
    ebp = esp;
    esp = esp - 0x30;
    (save)ebx;
    (save)esi;
    0;
    0;
    *(ebp - 0xc) = 0;
    *(ebp - 0x28) = 0;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = *(ebp + 0x14);
    *(ebp - 0x24) = *(ebp + 0x18);
    ecx = *(ebp + 0xc);
    *(ebp - 4) = *(ebp + 0x14) + 3;
    esi = 0;
    *(ebp - 0x18) = *(ebp + 0x18) - 1;
    *(ebp - 8) = 0;
    eax = *(ebp + 0x14);
    asm("imul dword [ebp+0x18]");
    *(ebp - 0x10) = (eax >> 4) + 1;
L00418a84:
    while(*(ebp - 8) == 0) {
        *(ebp - 0x11) = *ecx;
        ecx = ecx + 1;
        dl = *ecx;
        ecx = ecx + 1;
        *(ebp - 0x10) = *(ebp - 0x10) - 1;
        if(dl != 0 || *(ebp - 0x11) != 0 || *(ebp - 0x10) != 0) {
            if(*(ebp - 0x18) >= 0) {
                if(dl < 0x84 || dl > 0x87) {
                    if(dl < 0x90) {
                        if(dl >= 0x80) {
                            dl = *(ebp - 0x11);
                            eax = *(ebp - 0x18);
                            eax = *(ebp + 0x14) * *(ebp + 0x14) + *(ebp + 8) + esi;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            ebx = *(ebp - 4);
                            eax = eax - ebx;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax - ebx;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax - ebx;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            eax = eax + 1;
                            *eax = dl;
                            *(eax + 1) = dl;
                        } else {
                            eax = *(ebp - 0x18);
                            eax = *(ebp + 0x14) * *(ebp + 0x14) + *(ebp + 8) + esi;
                            *(ebp - 0x2e) = *ecx;
                            ecx = ecx + 1;
                            *(ebp - 0x2d) = *ecx;
                            ecx = ecx + 1;
                            bl = *(ebp - 0x11) & 1 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = *(ebp - 0x11) & 2 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = *(ebp - 0x11) & 4 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = *(ebp - 0x11) & 8 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax - *(ebp - 4);
                            bl = *(ebp - 0x11) & 0x10 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = *(ebp - 0x11) & 0x20 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = *(ebp - 0x11) & 0x40 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = *(ebp - 0x11) & 0x80 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax - *(ebp - 4);
                            bl = dl & 1 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = dl & 2 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = dl & 4 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = dl & 8 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax - *(ebp - 4);
                            bl = dl & 0x10 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = dl & 0x20 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            bl = dl & 0x40 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = bl;
                            eax = eax + 1;
                            dl = dl & 0x80 ? *(ebp - 0x2d) : *(ebp - 0x2e);
                            *eax = dl;
                        }
                    } else {
                        eax = *(ebp - 0x18);
                        eax = *(ebp + 0x14) * *(ebp + 0x14) + *(ebp + 8) + esi;
                        *(ebp - 0x2b) = *ecx;
                        ecx = ecx + 1;
                        *(ebp - 0x29) = *ecx;
                        ecx = ecx + 1;
                        *(ebp - 0x2c) = *ecx;
                        ecx = ecx + 1;
                        *(ebp - 0x2a) = *ecx;
                        ecx = ecx + 1;
                        bl = *(ebp - 0x11) & 1 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = *(ebp - 0x11) & 2 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = *(ebp - 0x11) & 4 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax + 1;
                        bl = *(ebp - 0x11) & 8 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax - *(ebp - 4);
                        bl = *(ebp - 0x11) & 0x10 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = *(ebp - 0x11) & 0x20 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = *(ebp - 0x11) & 0x40 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax + 1;
                        bl = *(ebp - 0x11) & 0x80 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax - *(ebp - 4);
                        *(ebp - 0x2b) = *ecx;
                        ecx = ecx + 1;
                        *(ebp - 0x29) = *ecx;
                        ecx = ecx + 1;
                        *(ebp - 0x2c) = *ecx;
                        ecx = ecx + 1;
                        *(ebp - 0x2a) = *ecx;
                        ecx = ecx + 1;
                        bl = dl & 1 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = dl & 2 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = dl & 4 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax + 1;
                        bl = dl & 8 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax - *(ebp - 4);
                        bl = dl & 0x10 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = dl & 0x20 ? *(ebp - 0x29) : *(ebp - 0x2b);
                        *eax = bl;
                        eax = eax + 1;
                        bl = dl & 0x40 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = bl;
                        eax = eax + 1;
                        dl = dl & 0x80 ? *(ebp - 0x2a) : *(ebp - 0x2c);
                        *eax = dl;
                    }
                    if(esi < *(ebp - 0x1c)) {
                        *(ebp - 0x1c) = esi;
                    }
                    if(*(ebp - 0x18) > *(ebp - 0x28)) {
                        *(ebp - 0x28) = *(ebp - 0x18);
                    }
                    if(esi > *(ebp - 0x20)) {
                        *(ebp - 0x20) = esi;
                    }
                    if(*(ebp - 0x18) < *(ebp - 0x24)) {
                        *(ebp - 0x24) = *(ebp - 0x18);
                    }
                    *(ebp - 0xc) = 1;
                    esi = esi + 4;
                    if(esi < *(ebp + 0x14)) {
                        continue;
                    }
                    esi = 0;
                    *(ebp - 0x18) = *(ebp - 0x18) - 4;
                    continue;
                }
                eax = (dl & 0xff) + -132 << 8;
                eax = eax + ( *(ebp - 0x11) & 0xff);
                for(*(ebp - 0x10) = *(ebp - 0x10) - eax - 1; 1; *(ebp - 0x18) = *(ebp - 0x18) - 4) {
                    edx = eax;
                    eax = eax - 1;
                    if(edx == 0) {
                        goto L00418a84;
                    }
                    esi = esi + 4;
                    if(esi < *(ebp + 0x14)) {
                        continue;
                    }
                    esi = 0;
                }
                continue;
            }
            *(ebp - 8) = 1;
            continue;
        }
        *(ebp - 8) = 1;
    }
    if(M0049cf6c == 1) {
        if(*(ebp - 0xc) != 0) {
            eax = *(ebp + 0x20);
            *eax = *(ebp - 0x1c);
            eax = *(ebp - 0x24) - 3;
            *( *(ebp + 0x24)) = eax;
            eax = *(ebp - 0x20) + 4;
            *( *(ebp + 0x28)) = eax;
            eax = *(ebp - 0x28) + 1;
            *( *(ebp + 0x2c)) = eax;
            goto L00418aff;
        }
        eax = *(ebp + 0x2c);
        *eax = 0;
        *( *(ebp + 0x28)) = 0;
        *( *(ebp + 0x24)) = 0;
        *( *(ebp + 0x20)) = 0;
        eax = 4;
    } else {
        eax = *(ebp + 0x24);
        *eax = 0;
        *( *(ebp + 0x20)) = 0;
        eax = *(ebp + 0x28);
        *eax = *(ebp + 0x14);
        eax = *(ebp + 0x2c);
        *eax = *(ebp + 0x18);
L00418aff:
        edx = M0062790c;
        esi = 0;
        if(0 < *(ebp + 0x18)) {
            do {
                ecx = *(ebp + 0x14);
                do {
                    al = *(( *( *(ebp + 8)) & 0xff) + 6453520);
                    *(ebp + 8) = *(ebp + 8) + 1;
                    if(al == 0) {
                        edx = edx + 1;
                    } else {
                        *edx = al;
                        edx = edx + 1;
                    }
                    ecx = ecx - 1;
                } while(ecx > 0);
                edx = edx + 0x140 - *(ebp + 0x14);
                esi = esi + 1;
            } while(esi < *(ebp + 0x18));
        }
        eax = 0;
    }
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x00418B49 - 0x00418B4B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418B49()
{



}

/*    Procedure: 0x00418B4C - 0x00418B52
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C31C()
 */

L00418B4C()
{



    return 0;
}

/*    Procedure: 0x00418B53 - 0x00418C0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418B53()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ecx = *(ebp + 0x1c);
    eax = *(ebp + 0x10);
    esi = *(ebp + 8);
    edx = M0062790c;
    *(ebp - 8) = *(ebp + 0x18) - 1;
    edi = *(ebp + 0xc);
    *(ebp - 4) = *(ebp + 0x14) & 1;
    do {
        eax = *(ebp - 8);
        eax = *(ebp + 0x14) * *(ebp + 0x14) + esi;
        *(ebp - 8) = *(ebp - 8) - 1;
        for(ecx = *(ebp + 0x14); 1; eax = eax + 1) {
            ebx = ecx;
            ecx = ecx - 1;
            if(ebx == 0) {
                break;
            }
            *eax = *edi;
            edi = edi + 1;
        }
        if(*(ebp - 4) != 0) {
            edi = edi + 1;
        }
    } while(*(ebp - 8) >= 0);
    for(ecx = 0; ecx < *(ebp + 0x18); ecx = ecx + 1) {
        ebx = *(ebp + 0x14);
        do {
            al = *(( *esi & 0xff) + 6453520);
            esi = esi + 1;
            if(al == 0) {
                edx = edx + 1;
            } else {
                *edx = al;
                edx = edx + 1;
            }
            ebx = ebx - 1;
        } while(ebx > 0);
        edx = edx + 0x140 - *(ebp + 0x14);
    }
    eax = *(ebp + 0x24);
    *eax = 0;
    *( *(ebp + 0x20)) = 0;
    eax = *(ebp + 0x28);
    *eax = *(ebp + 0x14);
    eax = *(ebp + 0x2c);
    *eax = *(ebp + 0x18);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
    return 0;
}

/*    Procedure: 0x00418C0C - 0x00418C84
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041819E()
 *        L00418C88()
 *        L00418CF4()
 *        L00418DEC()
 */

L00418C0C(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax <= 0) {
        return eax | -1;
    }
    if(M00630088 >= 8192) {
        eax = L0047311C(eax, 6488204, 8192);
        M00630088 = M00630088 - 8192;
        M00632090 = 8192;
    } else {
        eax = L0047311C(eax, 6488204, M00630088);
        M00632090 = M00630088;
        M00630088 = 0;
    }
    M0063208c = 6488204;
}

/*    Procedure: 0x00418C85 - 0x00418C87
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418C85()
{



}

/*    Procedure: 0x00418C88 - 0x00418CF1
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00417AA8()
 *        L00417AC8()
 *        L00417AE8()
 *        L00417B2D()
 *        L00417B5F()
 *        L00417C6C()
 *        L00417CA8()
 *        L00417D0C()
 *        L00417FC0()
 *        L00418264()
 *        L00418C88()
 *        L00418D38()
 *        L00418DEC()
 */

L00418C88(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A10;
    esi = Ac;
    if(ebx < M00632090) {
        eax = L00471128(esi, M0063208c, ebx);
        M00632090 = M00632090 - ebx;
        M0063208c = M0063208c + ebx;
    } else {
        L00471128(esi, M0063208c, M00632090);
        eax = M00632090;
        esi = esi + eax;
        ebx = ebx - eax;
        L00418C0C(A8);
        eax = L00418C88(A8, esi, ebx);
    }
}

/*    Procedure: 0x00418CF2 - 0x00418CF3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418CF2()
{



}

/*    Procedure: 0x00418CF4 - 0x00418D36
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00417CA8()
 *        L00417D0C()
 *        L00418264()
 *        L00418CF4()
 *        L00418DEC()
 */

L00418CF4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = Ac;
    if(ebx <= M00632090) {
        M00632090 = M00632090 - ebx;
        M0063208c = M0063208c + ebx;
    } else {
        ebx = ebx - M00632090;
        M00632090 = 0;
        L00418C0C(A8);
        eax = L00418CF4(A8, ebx);
    }
}

/*    Procedure: 0x00418D37 - 0x00418D37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418D37()
{



}

/*    Procedure: 0x00418D38 - 0x00418DEB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418DEC()
 */

L00418D38(A8)
/* unknown */ void  A8;
{



    esp = esp + -2052;
    (save)ebx;
    (save)esi;
    (save)edi;
    *L004f80a4(0);
    L00418C88(A8, ebp + -1028, 0x400);
    esi = 0;
    edi = ebp + -2052;
    ebx = ebp + -1026;
    do {
        *(ebp - 3) = ( *ebx & 0xff) >> 4;
        *(ebp - 2) = ( *(ebx - 1) & 0xff) >> 4;
        *(ebp - 1) = ( *(ebx - 2) & 0xff) >> 4;
        *L004f80a0( *(ebp - 3));
        *edi = ax & 65535;
        esi = esi + 1;
        edi = edi + 4;
        ebx = ebx + 4;
    } while(esi < 0x100);
    eax = *L004f80ac();
    esi = 0;
    edi = 6453520;
    ebx = ebp + -2052;
    do {
        *edi = *L004f80a8( *ebx);
        esi = esi + 1;
        edi = edi + 1;
        ebx = ebx + 4;
    } while(esi < 0x100);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return *L004f80b0();
}

/*    Procedure: 0x00418DEC - 0x00418EAA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418EAB()
 */

L00418DEC(A8)
/* unknown */ void  A8;
{



    esp = esp + -132;
    (save)ebx;
    (save)esi;
    esi = M0062790c + 38080;
    eax = L00473114(A8, 32768);
    *(ebp - 4) = eax;
    if(*(ebp - 4) <= 0) {
        eax = 0;
    } else {
        M00630088 = L00475914( *(ebp - 4));
        L00418C0C( *(ebp - 4));
        L00418CF4( *(ebp - 4), 0x36);
        L00418D38( *(ebp - 4));
        *(ebp - 8) = 0;
        do {
            ebx = ebp + -132;
            L00418C88( *(ebp - 4), ebx, 0x78);
            edx = 0;
            do {
                al = *(( *ebx & 0xff) + 6453520);
                ebx = ebx + 1;
                if(al != 0) {
                    *esi = al;
                }
                esi = esi + 1;
                edx = edx + 1;
            } while(edx < 0x78);
            esi = esi - 0x1b8;
            *(ebp - 8) = *(ebp - 8) + 1;
        } while(*(ebp - 8) < 0x77);
        L004730FC( *(ebp - 4));
        eax = 1;
    }
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00418EAB - 0x00418F2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00418EAB()
{
    /* unknown */ void  ecx;



    M0062790c = M00502e6c + 0x1541;
    if(M0049cfa8 == 0) {
        return 0;
    }
    L00418168();
    L0042718C();
    L00458384();
    *(ebp - 4) = 1;
    *(ebp - 2) = 0x11;
    L00474830(6496404, "%s%sbmp_8\%s.bmp", 6641286, 6641290, "new-1");
    (save)ebp - 4;
    if(L00418DEC(6496404) == 0) {
        return 0;
    }
    L00458384();
    return 1;
}

/*    Procedure: 0x00418F30 - 0x00418F8F
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00418F90()
 *        L00418FCC()
 */

L00418F30(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  esi;



    esi = A18;
    eax = Ac;
    if(eax > esi) {
        *(A8 + esi) = 0x5f;
        *(A8 + esi + 1) = 0;
        eax = L004554A4(A8, A10, A14, A1c);
        *(A8 + esi) = 0;
    } else {
        if(eax > 0) {
            esi = A8 + eax - 1;
            *(ebp - 1) = *esi;
            *esi = 0x5f;
            eax = L004554A4(A8, A10, A14, A1c);
            *esi = *(ebp - 1);
        }
    }
}

/*    Procedure: 0x00418F90 - 0x00418FC9
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00418FCC()
 */

L00418F90(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    L00418F30(A8, Ac, A10, A14, A18, A20);
    return L004554A4(A8, A10, A14, A1c);
}

/*    Procedure: 0x00418FCA - 0x00418FCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00418FCA()
{



}

/*    Procedure: 0x00418FCC - 0x0041923E
 *    Argument size: 28
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0041AF5A()
 *        L0041B004()
 */

L00418FCC(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = 0;
    Vfffffff8 = L00478F64();
    A10 = A10 + 1;
    A14 = A14 + 1;
    *(A8 + Ac) = 0;
    esi = L00471288(A8);
    L004554A4(A8, A10, A14, A18);
    for(Vfffffff0 = A8 + esi; 1; Vfffffff8 = ebx) {
        ebx = *L00500398() & 0xff;
        if(ebx != 0) {
            if(ebx == 0xd || ebx == 7) {
                break;
            }
            if(ebx != 8 && (A20 == 0 || ebx != 0x20 || esi != Ac)) {
                if(!( *(ebx + 0x60bb99) & 2) && !( *(L00476380(ebx) + 0x60bb99) & 0xc) && ebx != 0x5f && (A20 != 0 || ebx != 0x3a && ebx != 0x5c && ebx != 0x20 && ebx != 0x28 && ebx != 0x29)) {
                    continue;
                }
                if(Vfffffffc == 0) {
                    Vfffffff4 = 0;
                } else {
                    Vfffffff4 = 1;
                    L00418F30(A8, Ac, A10, A14, esi, A1c);
                    Vfffffffc = 0;
                }
                if(esi >= Ac) {
                    if(Vfffffff4 == 0) {
                        L004554A4(A8, A10, A14, A1c);
                    }
                    *(Vfffffff0 - 1) = bl;
                } else {
                    *Vfffffff0 = bl;
                    esi = esi + 1;
                    Vfffffff0 = Vfffffff0 + 1;
                    *Vfffffff0 = 0;
                }
                L004554A4(A8, A10, A14, A18);
                continue;
            }
            if(esi <= 0) {
                continue;
            }
            if(Vfffffffc == 0) {
                L004554A4(A8, A10, A14, A1c);
            } else {
                L00418F30(A8, Ac, A10, A14, esi, A1c);
            }
            esi = esi - 1;
            Vfffffff0 = Vfffffff0 - 1;
            *Vfffffff0 = 0;
            L004554A4(A8, A10, A14, A18);
            Vfffffffc = 0;
            continue;
        }
        ebx = L00478F64();
        if(ebx != -1) {
            eax = ebx - Vfffffff8;
            eax = eax :: 0x14e > 0 & 1;
        } else {
            eax = Vfffffffc;
        }
        if(eax == 0) {
            continue;
        }
        if(Vfffffffc == 0) {
            if(esi >= Ac) {
                L004554A4(A8, A10, A14, A1c);
            }
            L00418F30(A8, Ac, A10, A14, esi, A18);
            Vfffffffc = 1;
        } else {
            L00418F90(A8, Ac, A10, A14, esi, A18, A1c);
            Vfffffffc = 0;
        }
    }
    if(Vfffffffc != 0) {
        eax = L00418F90(A8, Ac, A10, A14, esi, A18, A1c);
    }
}

/*    Procedure: 0x0041923F - 0x00419243
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041923F()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *(eax + 6496636) = *(eax + 6496636) + bh;
}

/*    Procedure: 0x00419244 - 0x00419251
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L00419244()
{



    *L00632180 = 0xf2;
    *L00632181 = 2;
    return 6496636;
}

/*    Procedure: 0x00419252 - 0x00419253
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419252()
{



}

/*    Procedure: 0x00419254 - 0x00419269
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L00419254()
{



    *L00632188 = 0xf1;
    *L00632189 = 0x67;
    *L0063218A = 0xff;
    *L0063218B = 0xff;
    return 6496644;
}

/*    Procedure: 0x0041926A - 0x0041926B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041926A()
{



}

/*    Procedure: 0x0041926C - 0x00419279
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L0041926C()
{



    *L00632191 = 0xb;
    *L00632192 = 0xff;
    return 6496652;
}

/*    Procedure: 0x0041927A - 0x0041927B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041927A()
{



}

/*    Procedure: 0x0041927C - 0x00419283
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L0041927C()
{



    M00632198 = 0xf2;
}

/*    Procedure: 0x00419284 - 0x0041928B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L00419284()
{



    M006321a9 = 0xa;
}

/*    Procedure: 0x0041928C - 0x0041929D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L0041928C()
{



    *L006321C0 = 7;
    *L006321C2 = 0xff;
    *L006321C1 = *L006321C1 | 1;
    return 6496700;
}

/*    Procedure: 0x0041929E - 0x0041929F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041929E()
{



}

/*    Procedure: 0x004192A0 - 0x004192A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192A0()
{



    M006321c9 = 0x16;
}

/*    Procedure: 0x004192A8 - 0x004192B5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192A8()
{



    *L006321D0 = 0xf4;
    *L006321D1 = 0xa;
    return 6496716;
}

/*    Procedure: 0x004192B6 - 0x004192B7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004192B6()
{



}

/*    Procedure: 0x004192B8 - 0x004192C5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192B8()
{



    *L006321E0 = 0xf3;
    *L006321E1 = 0x2a;
    return 6496732;
}

/*    Procedure: 0x004192C6 - 0x004192C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004192C6()
{



}

/*    Procedure: 0x004192C8 - 0x004192CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192C8()
{



    M006321e9 = 2;
}

/*    Procedure: 0x004192D0 - 0x004192D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192D0()
{



    M006321f0 = 0x68;
}

/*    Procedure: 0x004192D8 - 0x004192E1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192D8()
{



    *L00632209 = 2;
    return 6496772;
}

/*    Procedure: 0x004192E2 - 0x004192E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004192E2()
{



}

/*    Procedure: 0x004192E4 - 0x004192ED
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004192F0()
 */

L004192E4()
{



    *L00632211 = 7;
    return 6496780;
}

/*    Procedure: 0x004192EE - 0x004192EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004192EE()
{



}

/*    Procedure: 0x004192F0 - 0x00419349
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004193A8()
 *        L004193F0()
 */

L004192F0()
{



    L00471198(6496620, 0, 0x200);
    L00419244();
    L00419254();
    L0041926C();
    L0041927C();
    L00419284();
    L0041928C();
    L004192A0();
    L004192A8();
    L004192B8();
    L004192C8();
    L004192D0();
    L004192D8();
    return L004192E4();
}

/*    Procedure: 0x0041934A - 0x0041934B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041934A()
{



}

/*    Procedure: 0x0041934C - 0x0041936B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416A42()
 *        L004193A8()
 *        L004193F0()
 *        L00419470()
 *        L004194B0()
 *        L00419530()
 *        L0041958C()
 *        L00419608()
 *        L004196EC()
 *        L0041ADE9()
 *        L0041B9BC()
 *        L0041D378()
 *        L00422988()
 *        L0043C567()
 *        L0043C5F2()
 *        L0043CA1D()
 *        L0043CA84()
 *        L0043E288()
 *        L004408BF()
 */

L0041934C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = *( *(A8 * 4 + 0x4d28d4) + Ac * 4);
    if(eax != 0) {
        eax = *eax(A10);
    }
}

/*    Procedure: 0x0041936C - 0x004193A7
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041F988()
 *        L0042B50C()
 */

L0041936C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 0x72;
    esi = A8 + 0x72;
    do {
        if(*esi != 0) {
            eax = Ac(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74, A10);
        }
        ebx = ebx - 1;
        esi = esi - 1;
    } while(ebx > 0);
}

/*    Procedure: 0x004193A8 - 0x004193ED
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043C5F2()
 */

L004193A8()
{
    /* unknown */ void  ebx;



    L004192F0();
    M00632160 = 0;
    M00644bc8 = 305419896;
    M00644bcc = 1164413355;
    M00632168 = 0x14;
    ebx = 0;
    do {
        eax = L0041934C(ebx, 0, 0);
        ebx = ebx + 1;
    } while(ebx < 0x15);
}

/*    Procedure: 0x004193EE - 0x004193EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004193EE()
{



}

/*    Procedure: 0x004193F0 - 0x0041946D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043C5F2()
 */

L004193F0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    L004192F0();
    if(A8 < 5) {
        M00644bc8 = 305419896;
        M00644bcc = 1164413355;
    }
    M00632160 = 0;
    M00644ba4 = -2147483648;
    M00644ba8 = 1187063;
    M00644c1e = -1;
    M00644bac = 0;
    esi = 1;
    do {
        ebx = 0;
        do {
            eax = L0041934C(ebx, 0, (A8 << 8) + esi);
            ebx = ebx + 1;
        } while(ebx < 0x15);
        esi = esi + 1;
    } while(esi < 5);
}

/*    Procedure: 0x0041946E - 0x0041946F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041946E()
{



}

/*    Procedure: 0x00419470 - 0x004194AD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041B0A0()
 *        L0041CD14()
 *        L0041D010()
 *        L0041D18C()
 *        L0041F15A()
 *        L0041FB3C()
 *        L0041FDF0()
 *        L0041FED9()
 *        L004200B8()
 *        L00421A51()
 *        L00422988()
 *        L00422E01()
 *        L004241FC()
 *        L00426151()
 *        L00426DB3()
 *        L0042A968()
 *        L0042AA00()
 *        L0042E38F()
 *        L0043BEE0()
 *        L0043C0E0()
 *        L0043C567()
 *        L0043C5F2()
 *        L0043DFA8()
 *        L0043DFCC()
 *        L0043E288()
 *        L00441A7C()
 *        L004425C5()
 *        L00442609()
 *        L004444DE()
 */

L00419470()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    *(ebp - 8) = *(ebp + 8);
    eax = *(ebp + 0xc);
    *(ebp - 4) = eax;
    ebx = 0;
    esi = 6496625;
    do {
        if(!( *esi & 2)) {
            eax = L0041934C(ebx, 2, ebp - 8);
        }
        ebx = ebx + 1;
        esi = esi + 8;
    } while(ebx < 0x15);
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004194AE - 0x004194AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004194AE()
{



}

/*    Procedure: 0x004194B0 - 0x0041952E
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0043C5F2()
 *        L0043F170()
 */

L004194B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff4 = Ac;
    Vfffffff8 = A10;
    M00501ba8 = A8;
    esi = 0x72;
    ebx = A8 + 38787;
    eax = A8;
    edi = eax + 0x72;
    do {
        if(!( *edi & 1)) {
            al = *ebx;
            *ebx = *ebx + 0xff;
            if(al == 0) {
                *ebx = *(ebx - 1);
                Vfffffffc = esi + (esi + (esi + esi * 4) * 4) * 8 + esi + (esi + (esi + esi * 4) * 4) * 8 + A8 + 0x74;
                eax = L0041934C( *(ebx - 4) & 0xff, 5, & Vfffffff4);
            }
        }
        esi = esi - 1;
        ebx = ebx + -338;
        edi = edi - 1;
    } while(esi > 0);
}

/*    Procedure: 0x0041952F - 0x0041952F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041952F()
{



}

/*    Procedure: 0x00419530 - 0x00419589
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043C5F2()
 */

L00419530()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    if(!(M00644c18 & 1)) {
        ebx = *L00500398() & 0xff;
        if(ebx != 0) {
            esi = 0;
            eax = 0x4d2928;
            do {
                if(ebx == ( *eax & 0xff)) {
                    goto L0041955d;
                }
                esi = esi + 1;
                eax = eax + 1;
            } while(esi < 0x15);
            goto L0041957a;
L0041955d:
            L004701BE(0x14);
            eax = L0041934C(esi, 1, ebx);
            ebx = 0;
L0041957a:
            if(ebx != 0) {
                eax = *L0050039c(ebx);
            }
        }
    }
}

/*    Procedure: 0x0041958A - 0x0041958B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041958A()
{



}

/*    Procedure: 0x0041958C - 0x00419607
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00419608()
 */

L0041958C()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    M00501ba8 = *(ebp + 8);
    *(ebp - 4) = *(ebp + 0xc);
    L0041D444(0x37, 0);
    M00648b5a = M00648b5a & 0xfd;
    ebx = 0x72;
    eax = *(ebp + 8);
    esi = eax + 0x72;
    do {
        if(!( *esi & 2)) {
            eax = *L00501b94(ebx, *(ebp + 8));
            edi = eax;
            *(ebp - 8) = edi;
            *(edi + 0x25) = 0;
            if(*(edi + 0x87) != 0) {
                eax = L0041934C(eax & 0xff, 6, ebp - 8);
            }
        }
        ebx = ebx - 1;
        esi = esi - 1;
    } while(ebx > 0);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00419608 - 0x0041969B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043C5F2()
 */

L00419608(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    M00644c18 = M00644c18 & 0xe3;
    ebx = 0;
    esi = 6496626;
    do {
        if(*esi != 0) {
            M00632164 = ebx;
            L0041934C(ebx, 3, 0);
        }
        ebx = ebx + 1;
        esi = esi + 8;
    } while(ebx < 0x15);
    eax = M00644ba4 - M00644bac;
    edx = 0;
    edx = 49710 / 49710 % 49710 / 49710;
    edi = eax;
    if(edi != 0) {
        M00644bac = M00644bac + edi * 49710;
        ebx = 0;
        esi = 6496625;
        do {
            if(!( *esi & 1)) {
                M00632164 = ebx;
                L0041934C(ebx, 0xa, edi);
            }
            ebx = ebx + 1;
            esi = esi + 8;
        } while(ebx < 0x15);
        eax = L0041958C(A8, edi);
    }
}

/*    Procedure: 0x0041969C - 0x004196E8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C5F2()
 */

L0041969C(A8)
/* unknown */ void  A8;
{



    M00501ba8 = A8;
    if(!(M00644c18 & 2)) {
        for(eax = A8 + 38648; eax > A8 + 0x74; eax = eax - 0x152) {
            if(!( *(eax + 0x14c) & 0x40)) {
                *(eax + 0x151) = 0;
                *(eax + 0x98) = 32768;
                *(eax + 0x9a) = 32768;
            }
        }
    }
}

/*    Procedure: 0x004196E9 - 0x004196EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004196E9()
{



}

/*    Procedure: 0x004196EC - 0x0041971C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043C5F2()
 */

L004196EC()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 0;
    esi = 6496627;
    do {
        if(*esi != 0) {
            M00632164 = ebx;
            eax = L0041934C(ebx, 4, 0);
        }
        ebx = ebx + 1;
        esi = esi + 8;
    } while(ebx < 0x15);
}

/*    Procedure: 0x0041971D - 0x0041971F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041971D()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00419720 - 0x00419834
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046FECF()
 */

L00419720()
{



    esp = esp + -512;
    (save)ebx;
    (save)esi;
    (save)edi;
    L00474830(ebp + -256, "%s%s%s.cfg", 6641286, 6641290, "firstenc");
    ebx = L00473538(ebp + -256, "r");
    ebx :: 0;
    L004737F8(ebx, "%s", 6641547);
    if(M0065578b == 0x23) {
        M0065578b = 0x56;
        M0065578f = 0x5c;
        M00655790 = 0x56;
        M00655791 = 0x49;
        M00655792 = 0x44;
        M00655793 = 0x45;
        M00655794 = 0x4f;
        M00655795 = 0x5c;
    }
    L00474830(ebp + -512, "%s%s", 6641547, 6641551);
    esi = 6641286;
    edi = 6641547;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    esi = 6641290;
    edi = 6641551;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    eax = L004731B8(ebx);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00419835 - 0x00419837
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419835()
{



}

/*    Procedure: 0x00419838 - 0x00419878
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041987C()
 *        L004198BC()
 *        L0041BE97()
 *        L0047004A()
 */

L00419838()
{



    L0044FA8C();
    if(!(M00657644 & 9)) {
        L004710DD(0x3ce, 65288);
        L004710DD(0x3ce, 5);
    }
    L0046FCCE();
    return L00477E60(0);
}

/*    Procedure: 0x00419879 - 0x0041987B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419879()
{



}

/*    Procedure: 0x0041987C - 0x004198B9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004198BC()
 *        L0041BC86()
 */

L0041987C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    do {
        *L00500398();
        ebx = al & 0xff;
        if(!( *(ebx + 0x60bb99) & 0xc)) {
            ebx = L00476380(ebx);
        }
    } while((ebx < A8 || ebx > Ac) && ebx != 7);
    if(ebx == 7) {
        L00419838();
    }
    return ebx;
}

/*    Procedure: 0x004198BA - 0x004198BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004198BA()
{



}

/*    Procedure: 0x004198BC - 0x00419ABA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004198BC()
 */

L004198BC(A8)
/* unknown */ void  A8;
{



    esp = esp + -256;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = A8;
    ebx = ebp + -256;
    L00474830(ebp + -256, "%s%s.cfg", edi, "firstenc");
    esi = L00473538(ebp + -256, "w");
    if(esi <= 0) {
        L00457D88();
        (save)esi;
        (save)edi;
        esi = "First Encounters Program Installation";
        edi = ebx;
        eax = edi;
        ecx = 9;
        asm("rep movsd");
        *edi = *esi;
        edi = edi + 4;
        esi = esi + 4;
        (restore)edi;
        (restore)esi;
        L00455564(ebx, 0xa, 0xa, 0x10);
        if(!(eax = M0060beac - 2)) {
            if(!(eax = eax - 2)) {
                if(!(eax = eax - 1)) {
                    if(eax = eax - 7) {
                        goto L00419967;
                    }
                } else {
                    esi = "Permission denied.";
                    edi = ebx;
                    eax = edi;
                    ecx = 4;
                    asm("rep movsd");
                    *edi = *esi;
                    edi = edi + 4;
                    esi = esi + 4;
                    *edi = *esi;
                    edi = edi + 1;
                    esi = esi + 1;
                    goto L00419a2f;
L00419967:
                    esi = "Invalid access.";
                    eax = ebx;
                    ecx = 4;
                    asm("rep movsd");
                }
            } else {
                esi = "Too many open files.";
                edi = ebx;
                eax = edi;
                ecx = 5;
                asm("rep movsd");
                *edi = *esi;
                edi = edi + 1;
                esi = esi + 1;
            }
        } else {
            L00474830(ebx, "Create directory %s (Y/N)?", edi);
            L00455564(ebx, 0xa, 0x14, 0x10);
            L00458384();
            do {
                eax = L0041987C(0x4e, 0x59);
            } while(eax != 0x59 && eax != 0x4e);
            if(eax == 0x4e) {
                eax = 1;
                goto L00419ab4;
            }
            if(!(eax = L00475EFC(edi) + 1)) {
                L00457D88();
                L00474830(ebx, "There is a problem creating a directory.\rPlease check your path and available disk space.\r Press a key to quit.");
                L00455564(ebx, 0xa, 0xa, 0x10);
                L00458384();
                do {
                    *L00500398();
                } while(al == 0);
                L00419838();
            } else {
                L004731B8(esi);
                eax = L004198BC(edi);
                goto L00419ab4;
            }
        }
L00419a2f:
        L00455564(ebx, 0xa, 0x14, 0x10);
        L00458384();
        do {
            *L00500398();
        } while(al == 0);
        eax = 1;
    } else {
        L00473564(esi, "%s\n%s\n%s\n%x\n%d\n%d\n", 6641547, 6641551, 7195200, M006dca56, M006dca58, M006dca5a);
        L00457D88();
        L00474830(ebx, "Saving settiings.");
        L00455564(ebx, 0xa, 0xa, 0x10);
        L004731B8(esi);
        eax = 0;
    }
L00419ab4:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00419ABB - 0x00419ABB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419ABB()
{



}

/*    Procedure: 0x00419ABC - 0x00419AFA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419AFB()
 *        L00419BA6()
 *        L0041B7DE()
 */

L00419ABC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L00471288(A8);
    if(eax > 0) {
        if(bl != *(A8 + eax - 1)) {
            goto L00419adf;
        }
        eax = 1;
    } else {
L00419adf:
        if(eax >= A10) {
            eax = 0;
        } else {
            eax = A8 + eax;
            *eax = bl;
            *(eax + 1) = 0;
            eax = 1;
        }
    }
}

/*    Procedure: 0x00419AFB - 0x00419B42
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00419AFB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 6498858;
    edi = A8;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    L00419ABC(6498858, 0x5c, 0x44);
    return *L004d30c8();
}

/*    Procedure: 0x00419B43 - 0x00419B43
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419B43()
{



}

/*    Procedure: 0x00419B44 - 0x00419B8E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419B8F()
 */

L00419B44(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = L004713FC(A8, 0x5c);
    ebx = eax;
    if(ebx != 0) {
        *ebx = 0;
        eax = L004713FC(A8, 0x5c);
        if(eax == 0) {
            *ebx = 0x5c;
            *(ebx + 1) = 0;
        } else {
            if(*(ebx + 1) == 0) {
                *(eax + 1) = 0;
            } else {
                *ebx = 0x5c;
                *(ebx + 1) = 0;
            }
        }
    }
}

/*    Procedure: 0x00419B8F - 0x00419BA5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419B8F()
{



    L00419B44(6498858);
    return *L004d30c8();
}

/*    Procedure: 0x00419BA6 - 0x00419BF2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00419BA6(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = A8;
    if(*ebx == 0x5c) {
        ebx = ebx + 1;
    }
    L004712A4(6498858, ebx, 0x44 - L00471288(6498858) - 2);
    L00419ABC(6498858, 0x5c, 0x44);
    return *L004d30c8();
}

/*    Procedure: 0x00419BF3 - 0x00419C32
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L00419BF3(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A8;
    edi = 6498858;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    return L004711C8(A8, Ac);
}

/*    Procedure: 0x00419C33 - 0x00419C33
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419C33()
{



}

/*    Procedure: 0x00419C34 - 0x00419C5E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00419CB8()
 */

L00419C34(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = Ac;
    eax = A8 + 0xff;
    if(eax < edx) {
        edx = eax;
    }
    for(eax = A8; edx > eax && cl == *eax; eax = eax + 1) {
    }
    return eax - A8;
}

/*    Procedure: 0x00419C5F - 0x00419C5F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419C5F()
{



}

/*    Procedure: 0x00419C60 - 0x00419CB7
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00419E48()
 */

L00419C60(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ecx = A10;
    esi = Ac;
    eax = A8;
    *(ebp - 4) = esi;
L00419ca5:
    while(1) {
        edx = ecx;
        ecx = ecx - 1;
        if(edx <= 0) {
            break;
        }
        dl = *esi;
        esi = esi + 1;
        eax = eax + 1;
        *(eax - 1) = dl;
        if(dl != 0) {
            continue;
        }
        dl = *esi;
        esi = esi + 1;
        if(ecx >= (dl & 0xff)) {
            ecx = ecx - (dl & 0xff);
        } else {
            edx = ecx;
            ecx = 0;
        }
        while(1) {
            ebx = edx;
            dl = dl + 0xff;
            if(bl <= 0) {
                goto L00419ca5;
            }
            *eax = 0;
            eax = eax + 1;
        }
    }
    return esi - *(ebp - 4);
}

/*    Procedure: 0x00419CB8 - 0x00419CFB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00419D8C()
 */

L00419CB8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = Ac;
    edi = A10 + ebx;
    esi = A8;
    do {
        al = *ebx;
        ebx = ebx + 1;
        esi = esi + 1;
        *(esi - 1) = al;
        if(al == 0) {
            *esi = L00419C34(ebx, edi, 0);
            esi = esi + 1;
            ebx = ebx + (eax & 0xff);
        }
    } while(edi > ebx);
    return esi - A8;
}

/*    Procedure: 0x00419CFC - 0x00419D43
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419D8C()
 */

L00419CFC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    edx = 0;
    edx = 2 / 2 % 2 / 2;
    ebx = Ac;
    eax = 305419896 + M00632aac;
    for(edx = A8; 1; eax = eax + cx + eax + cx) {
        ecx = ebx;
        ebx = ebx - 1;
        if(ecx <= 0) {
            break;
        }
        cx = *edx;
        si = eax & -1;
        *edx = *edx ^ si;
        edx = edx + 2;
    }
}

/*    Procedure: 0x00419D44 - 0x00419D88
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00419E48()
 */

L00419D44(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = 2;
    eax = Ac;
    asm("cdq");
    edx = ecx / ecx % ecx / ecx;
    ebx = eax;
    eax = 305419896 + M00632aac;
    for(edx = A8; 1; eax = eax + cx + eax + cx) {
        ecx = ebx;
        ebx = ebx - 1;
        if(ecx <= 0) {
            break;
        }
        *edx = *edx ^ eax & -1;
        cx = *edx;
        edx = edx + 2;
    }
}

/*    Procedure: 0x00419D89 - 0x00419D8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419D89()
{



}

/*    Procedure: 0x00419D8C - 0x00419E45
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041AE31()
 */

L00419D8C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = A8;
    *ebx = 0x11;
    ebx = ebx + 4;
    ebx = ebx + L00419CB8(ebx, M0064a3b0, 38986);
    edi = 4;
    esi = 6496620;
    *(ebp - 4) = 6497132;
    if(6496620 < *(ebp - 4)) {
        do {
            L00471128(ebx, esi + 4, edi);
            ebx = ebx + edi;
            esi = esi + 8;
        } while(esi < *(ebp - 4));
    }
    L00471128(ebx, 6497252, 0x40);
    ebx = ebx + 0x40;
    ebx = ebx + L00419CB8(ebx, 6572964, 21866);
    ebx = ebx + L00419CB8(ebx, 6497135, 0x51);
    esi = ebx - A8;
    if(!(esi & 1)) {
        esi = esi + 1;
        ebx = ebx + 1;
    }
    *ebx = L00419CFC(A8, esi);
    return esi + 4;
}

/*    Procedure: 0x00419E46 - 0x00419E47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419E46()
{



}

/*    Procedure: 0x00419E48 - 0x00419F21
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041A3C5()
 */

L00419E48()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0xc);
    esi = *(ebp + 8);
    ebx = esi;
    if(eax <= 4) {
        eax = 0;
    } else {
        *(ebp - 4) = eax - 4;
        edi = *(esi + *(ebp - 4));
        if(edi != L00419D44(esi, *(ebp - 4))) {
            eax = 0;
        } else {
            edi = *ebx;
            ebx = ebx + 4;
            if(edi != 0x11) {
                eax = 0;
            } else {
                ebx = ebx + L00419C60(M0064a3b0, ebx, 38986);
                edi = 4;
                esi = 6496620;
                *(ebp - 8) = 6497132;
                if(6496620 < *(ebp - 8)) {
                    do {
                        L00471128(esi + 4, ebx, edi);
                        ebx = ebx + edi;
                        esi = esi + 8;
                    } while(esi < *(ebp - 8));
                }
                L00471128(6497252, ebx, 0x40);
                ebx = ebx + 0x40;
                L00419C60(6497135, ebx + L00419C60(6572964, ebx, 21866), 0x51);
                eax = 1;
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00419F22 - 0x00419F23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00419F22()
{



}

/*    Procedure: 0x00419F24 - 0x00419F47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00419F48()
 */

L00419F24()
{



    do {
        eax = *L00500398() & 0xff;
    } while(eax == 0);
    eax = L00476380(eax);
    return 0;
}

/*    Procedure: 0x00419F48 - 0x00419FBE
 *    Argument size: 8
 *    Local size: 120
 *    Save regs size: 4
 */

L00419F48(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffff88;
    /* unknown */ void  Vffffff94;
    /* unknown */ void  Vffffff9c;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    L00457D88();
    Vfffffffc = 0x64;
    Vfffffffe = 0x46;
    Vffffff94 = A8;
    *L005000d8(37903, & Vffffff88, 0xa, Vfffffffc, 0x46, 0);
    L00458384();
    if(L00419F24() == 0) {
        eax = 1;
    } else {
        *L004d30ec( & Vffffff9c, A8);
        eax = L00450F38( & Vffffff9c, Ac);
    }
}

/*    Procedure: 0x00419FBF - 0x0041A031
 *    Argument size: 16
 *    Local size: 120
 *    Save regs size: 4
 */

L00419FBF(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffff88;
    /* unknown */ void  Vffffff94;
    /* unknown */ void  Vffffff9c;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = 0x64;
    Vfffffffe = 0x46;
    L00457D88();
    Vffffff94 = A8;
    *L005000d8(37902, & Vffffff88, M00632acc, Vfffffffc, Vfffffffe, 0);
    L00458384();
    *L004d30ec( & Vffffff9c, A8);
    return L0041A034( & Vffffff9c, Ac, A10, A14);
}

/*    Procedure: 0x0041A032 - 0x0041A033
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A032()
{



}

/*    Procedure: 0x0041A034 - 0x0041A0B0
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419FBF()
 */

L0041A034(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    ebx = L00473538(A8, "wb");
    if(ebx == 0) {
        *A14 = 2;
        eax = 0;
    } else {
        if(L004149D0(ebx) == 0) {
            *A14 = 2;
            eax = 0;
        } else {
            if(L004146C8(ebx, A14) == 0) {
                *A14 = 2;
                eax = 0;
            } else {
                L0047397C(Ac, 1, A10, ebx);
                L004731B8(ebx);
                *A14 = 0;
                eax = 1;
            }
        }
    }
}

/*    Procedure: 0x0041A0B1 - 0x0041A138
 *    Argument size: 16
 *    Local size: 120
 *    Save regs size: 4
 */

L0041A0B1(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffff88;
    /* unknown */ void  Vffffff94;
    /* unknown */ void  Vffffff9c;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    ebx = A8;
    L00457D88();
    Vfffffffc = 0x64;
    Vfffffffe = 0x46;
    M00502eb8 = 0xf;
    Vffffff94 = ebx;
    *L005000d8(37901, & Vffffff88, 0x11, Vfffffffc, 0x46, 0);
    L00458384();
    *L004d30ec( & Vffffff9c, ebx);
    ebx = L0041A13C( & Vffffff9c, Ac, A10, A14);
    eax = ebx == 0 ? ebx : ebx;
}

/*    Procedure: 0x0041A139 - 0x0041A13B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A139()
{



}

/*    Procedure: 0x0041A13C - 0x0041A1C2
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041A0B1()
 */

L0041A13C(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = L00473538(A8, "rb");
    if(ebx == 0) {
        *A14 = 2;
        eax = 0;
    } else {
        if(L00414C40(ebx) == 0) {
            eax = 0;
        } else {
            if(L004147AC(ebx, A14) == 0) {
                eax = 0;
            } else {
                L004732D0(ebx, ebp - 4);
                M006323c8 = M006323c8 - *(ebp - 4);
                L004737C4(Ac, 1, M006323c8, ebx);
                L004731B8(ebx);
                eax = 1;
            }
        }
    }
}

/*    Procedure: 0x0041A1C3 - 0x0041A1DD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0041A1C3(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A8;
    edi = 6497228;
    ecx = 6;
    asm("rep movsd");
}

/*    Procedure: 0x0041A1DE - 0x0041A212
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L0041A1DE(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = 6;
    *(ebp - 2) = 9;
    return *L005000d8(A8, Ac, 0x11, *(ebp - 4), 9, 0);
}

/*    Procedure: 0x0041A213 - 0x0041A224
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A213()
{



    return *L004d3094(37913);
}

/*    Procedure: 0x0041A225 - 0x0041A227
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A225()
{



}

/*    Procedure: 0x0041A228 - 0x0041A298
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041A29C()
 *        L0041A377()
 */

L0041A228(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    *(ebp - 4) = 0x64;
    *(ebp - 2) = 0x5a;
    *L005000d8(A8, Ac, 0x10, *(ebp - 4), 0x5a, 0);
    L00458384();
    ebx = L00478F64();
    for(esi = ebx + 0x1388; 1; ebx = L00478F64()) {
        *L00500398();
        if(al != 0) {
            break;
        }
        if(ebx == -1) {
            continue;
        }
        if(esi <= ebx) {
            break;
        }
    }
    *L004d30c8();
    return *L004d30a4();
}

/*    Procedure: 0x0041A299 - 0x0041A29B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A299()
{



}

/*    Procedure: 0x0041A29C - 0x0041A376
 *    Argument size: -16
 *    Local size: 20
 *    Save regs size: 0
 *    Called by:
 *        L0041A3C5()
 *        L0041A5AB()
 *        L0041AE31()
 */

L0041A29C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffec;



    L00457D88();
    eax = A8;
    if(eax <= 0x13) {
        == ? L0041a33d : ;
        if(eax > 0xf) {
            goto L0041a359;
        }
        switch(eax) {
            case 0:
L0041a359:
                Vffffffec = M006323c0;
                eax = 37904;
                goto L0041a366;
            case 1:
                goto L0041a359;
            case 2:
                eax = 37907;
                goto L0041a366;
            case 3:
L0041a352:
                eax = 37912;
                goto L0041a366;
            case 4:
                goto L0041a359;
            case 5:
                eax = 37911;
                goto L0041a366;
            case 6:
                goto L0041a359;
            case 7:
                goto L0041a359;
            case 8:
                eax = 37910;
                goto L0041a366;
            case 9:
                goto L0041a359;
            case 0xa:
                goto L0041a359;
            case 0xb:
                goto L0041a359;
            case 0xc:
                goto L0041a359;
            case 0xd:
                goto L0041a359;
            case 0xe:
                goto L0041a359;
            case 0xf:
                goto L0041a352;
        }
    }
    if(eax < 0x19) {
        if(eax = eax - 0x15) {
            goto L0041a352;
        }
        if(eax = eax - 2) {
            goto L0041a32f;
        }
        goto L0041a359;
    }
    if(!(eax = eax - 0x19 - 3)) {
        if(eax = eax - 3) {
            goto L0041a32f;
        }
        if(eax = eax - 0x31) {
            goto L0041a359;
        }
        eax = 37906;
    } else {
L0041a32f:
        eax = 37908;
        goto L0041a366;
        eax = 37909;
    }
L0041a366:
    return L0041A228(eax, & Vffffffec);
}

/*    Procedure: 0x0041A377 - 0x0041A396
 *    Argument size: -16
 *    Local size: 20
 *    Save regs size: 0
 */

L0041A377(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffec;



    L00457D88();
    return L0041A228(A8, & Vffffffec);
}

/*    Procedure: 0x0041A397 - 0x0041A3C4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A397()
{



    M0064a0f3 = M0064a0f3 + 1;
    if(M0064a0f3 > 0x39) {
        M0064a0f3 = 0x30;
        M0064a0f2 = M0064a0f2 + 1;
        if(M0064a0f2 > 0x39) {
            M0064a0f2 = 0x30;
        }
    }
}

/*    Procedure: 0x0041A3C5 - 0x0041A57F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0041A3C5(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 6572964;
    eax = *(A8 + 0x14);
    if(eax > M00632ab0 || eax < 0x258) {
        eax = *L004d3090();
    } else {
        L0047017D();
        M006323c8 = *(A8 + 0x14);
        *L004d3064(A8);
        ebx = L0047777C(M00632ab0);
        if(ebx == 0) {
            M006323c0 = 8;
            (save)8;
            eax = L0041A29C();
        } else {
            if(*L004d30e0(A8, ebx, M00632ab0, 6497216) == 0) {
                L00477640(ebx);
                (save)M006323c0;
                eax = L0041A29C();
            } else {
                if(L00419E48(ebx, M006323c8) == 0) {
                    *L004d3090();
                    eax = L00477640(ebx);
                } else {
                    L00477640(ebx);
                    *L004d30c0();
                    if(*(edi + 0x172) > 60000) {
                        *(edi + 0x172) = 0x64;
                    }
                    if(*(edi + 0x118) < 0) {
                        *(edi + 0x118) = 0;
                        edx = 0;
                        eax = edi + 0x134;
                        do {
                            *(edi + 0x118) = *(edi + 0x118) + ( *eax & 65535);
                            edx = edx + 1;
                            eax = eax + 2;
                        } while(edx < 0x26);
                        *(edi + 0x120) = *(edi + 0x118);
                    }
                    if(*(edi + 0x214) < 0) {
                        eax = *(edi + 0x214);
                        edx = eax;
                        *(edi + 0x214) = ~eax;
                    }
                    if(*(edi + 0x218) > 0) {
                        eax = *(edi + 0x218);
                        edx = eax;
                        *(edi + 0x218) = ~eax;
                    }
                    if(*(edi + 0x21c) < 0) {
                        eax = *(edi + 0x21c);
                        edx = eax;
                        *(edi + 0x21c) = ~eax;
                    }
                    if(*(edi + 0x220) > 0) {
                        eax = *(edi + 0x220);
                        edx = eax;
                        *(edi + 0x220) = ~eax;
                    }
                    if(*(edi + 0x224) < 0) {
                        eax = *(edi + 0x224);
                        edx = eax;
                        *(edi + 0x224) = ~eax;
                    }
                    if(*(edi + 0x228) > 0) {
                        eax = *(edi + 0x228);
                        edx = eax;
                        *(edi + 0x228) = ~eax;
                    }
                    eax = *L004eeecc();
                }
            }
        }
    }
}

/*    Procedure: 0x0041A580 - 0x0041A5AA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0041A580(A8)
/* unknown */ void  A8;
{



    edx = A8;
    ecx = 6594780;
    do {
        al = *edx;
        if(al == 0x2e) {
            if(A8 == edx) {
                break;
            }
            eax = 0;
        }
        edx = edx + 1;
        *ecx = al;
        ecx = ecx + 1;
    } while(al != 0);
    return *L004d30b0();
}

/*    Procedure: 0x0041A5AB - 0x0041A5DE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A5AB(A8)
/* unknown */ void  A8;
{



    if(*L004d30e8(A8, 6497216) == 0) {
        (save)M006323c0;
        L0041A29C();
    }
    *L004d30c8();
    return *L004d30b8();
}

/*    Procedure: 0x0041A5DF - 0x0041A5F5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A5DF(A8)
/* unknown */ void  A8;
{



    *L004d30d4(A8);
    return *L004d30a4();
}

/*    Procedure: 0x0041A5F6 - 0x0041A61B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A5F6(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x10) != 4) {
        return *L004d3098(A8);
    }
    *L004d30d8();
    return *L004d30a4();
}

/*    Procedure: 0x0041A61C - 0x0041A641
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A61C(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x10) != 2) {
        return *L004d309c(A8);
    }
    *L004d30dc(A8);
    return *L004d30a4();
}

/*    Procedure: 0x0041A642 - 0x0041A66D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A642()
{



    if(!(al = M00648b54 - 3)) {
        if(al = al - 1) {
            goto L0041a65e;
        }
    } else {
        return *L004d30b0();
L0041a65e:
        return *L004d30b8();
    }
    return *L004d30a8();
}

/*    Procedure: 0x0041A66E - 0x0041A687
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A66E()
{



    M00648b54 = 2;
    *L004d30c8();
    return *L004d30a8();
}

/*    Procedure: 0x0041A688 - 0x0041A702
 *    Argument size: -24
 *    Local size: 24
 *    Save regs size: 0
 */

L0041A688()
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    L00457D88();
    Vfffffffc = 0x32;
    Vfffffffe = 5;
    *L005000d8(37894, & Vffffffe8, 0x10, Vfffffffc, 5, 0);
    *L004d30c4();
    *L005000d8(37893, & Vffffffe8, 0x11, 0x14, 5, 0);
    *L005003b4(0x4d2f94);
    L00457DCC(0x2c, 5, 5);
    return L00458384();
}

/*    Procedure: 0x0041A703 - 0x0041A71B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A703()
{



    M00648b54 = 3;
    *L004d30c8();
    return *L004d30b0();
}

/*    Procedure: 0x0041A71C - 0x0041A7D9
 *    Argument size: -24
 *    Local size: 24
 *    Save regs size: 0
 */

L0041A71C()
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    L00457D88();
    Vfffffffc = 0x2d;
    Vfffffffe = 5;
    Vfffffff4 = 6594780;
    Vfffffff8 = 6594800;
    *L005000d8(37896, & Vffffffe8, 0x10, Vfffffffc, 5, 0);
    *L004d30c4();
    *L005003b4(0x4d2fe4);
    Vfffffffc = M004d2fe4;
    ax = M004d2fe8;
    Vfffffffe = ax;
    L00457DCC(0x2d, Vfffffffc, Vfffffffe);
    *L005000d8(37893, & Vffffffe8, 0x11, 0x14, 5, 0);
    *L005003b4(0x4d2f94);
    L00457DCC(0x2c, 5, 5);
    return L00458384();
}

/*    Procedure: 0x0041A7DA - 0x0041A7F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A7DA()
{



    M00648b54 = 4;
    *L004d30c8();
    return *L004d30b8();
}

/*    Procedure: 0x0041A7F4 - 0x0041A86E
 *    Argument size: -24
 *    Local size: 24
 *    Save regs size: 0
 */

L0041A7F4()
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    L00457D88();
    Vfffffffc = 0x32;
    Vfffffffe = 5;
    *L005000d8(37895, & Vffffffe8, 0x10, Vfffffffc, 5, 0);
    *L004d30c4();
    *L005000d8(37893, & Vffffffe8, 0x11, 0x14, 5, 0);
    *L005003b4(0x4d2f94);
    L00457DCC(0x2c, 5, 5);
    return L00458384();
}

/*    Procedure: 0x0041A86F - 0x0041A973
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 12
 */

L0041A86F()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;



    edi = & Vfffffffc;
    *L005003b0();
    *edi = 0xa;
    *(edi + 2) = 0xf;
    Vfffffff4 = 6498858;
    eax = *L005000d8(37898, & Vffffffe8, 0xf, *edi, 0xf, 0);
    if(M006323c4 != 0) {
        ebx = 0;
        *edi = 0xa;
        for(*(edi + 2) = 0x1e; ebx < M006323c4; *(edi + 2) = 0x1e) {
            eax = (ebx << 3) + (ebx << 3) * 2 + 6497322;
            if(edx = *(eax + 0x10) - 1) {
                esi = 0xa;
            } else {
                if(edx = edx - 1) {
                    esi = 0x10;
                } else {
                    if(edx = edx - 2) {
                        esi = 0x5f;
                    } else {
                        if(!(edx = edx - 2)) {
                        }
                        esi = 0x11;
                    }
                }
            }
            L004557C8(eax, *edi, *(edi + 2), esi);
            eax = *L005003b8( *edi + 0x1d, *(edi + 2) + 4, 0x1f, 5, ebx + 0x80);
            ebx = ebx + 1;
            *(edi + 2) = *(edi + 2) + 0xa;
            if(*(edi + 2) < 0x94) {
                continue;
            }
            *edi = *edi + 0x3e;
        }
    }
}

/*    Procedure: 0x0041A974 - 0x0041A9A6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0041A974(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  edi;



    if(M006323c4 < 0x40) {
        eax = M006323c4 + M006323c4 * 2;
        edi = eax * 8 + 6497322;
        ecx = 6;
        asm("rep movsd");
        M006323c4 = M006323c4 + 1;
    }
}

/*    Procedure: 0x0041A9A7 - 0x0041A9A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041A9A7()
{



}

/*    Procedure: 0x0041A9A8 - 0x0041A9B5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041A9B6()
 */

L0041A9A8()
{



    return 0;
}

/*    Procedure: 0x0041A9B6 - 0x0041AA39
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 12
 */

L0041A9B6()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    esi = & Vffffffe8;
    *(esi + 0x10) = 6;
    *(esi + 0x14) = 0;
    for(ebx = 6497316; *ebx > 0; ebx = ebx + 1) {
        (save)esi;
        edi = esi;
        esi = "c:";
        eax = edi;
        *edi = *esi;
        edi = edi + 4;
        esi = esi + 4;
        *edi = *esi;
        edi = edi + 1;
        esi = esi + 1;
        (restore)esi;
        *esi = *ebx;
        *L004d30cc(esi);
    }
    eax = L0041A9A8();
    if(eax == 0) {
        *(esi + 0x10) = 4;
        (save)esi;
        edi = "\(Parent Dir)";
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
        eax = *L004d30cc(esi);
    }
}

/*    Procedure: 0x0041AA3A - 0x0041AA3B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041AA3A()
{



}

/*    Procedure: 0x0041AA3C - 0x0041AAA5
 *    Argument size: 12
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L0041AAA6()
 */

L0041AA3C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffe8;



    ebx = A10 == 0 ? 0 : L00471288(A10);
    eax = L00450D48( & Vffffffe8, A8, Ac, A10);
    do {
        eax = & Vffffffe8 + ebx;
        dl = *(eax + 1);
        if(*eax != 0x2e || dl != 0 && dl != 0x2e) {
            *L004d30cc( & Vffffffe8);
        }
        eax = L00450DCC( & Vffffffe8);
    } while(eax != 0);
}

/*    Procedure: 0x0041AAA6 - 0x0041AB5F
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 8
 */

L0041AAA6()
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    L00457D88();
    Vfffffffc = 0x64;
    Vfffffffe = 0x46;
    Vfffffff4 = 6498858;
    *L005000d8(37900, & Vffffffe8, 0xf, Vfffffffc, 0x46, 0);
    L00458384();
    M006323c4 = 0;
    *L004d30f0();
    esi = 6640580;
    edi = 6498858;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    L004711C8(6640580, "*.*");
    L0041AA3C(6640580, 2, "\");
    return L0041AA3C(6640580, 0, 0);
}

/*    Procedure: 0x0041AB60 - 0x0041ABCF
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 8
 */

L0041AB60(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    eax = A8;
    if(al >= 0x80) {
        if(al > 0xbf) {
            goto L0041ab9c;
        }
        esi = ((eax & 0xff) - 0x80 + ((eax & 0xff) - 0x80) * 2) * 8 + 6497322;
        edi = & Vffffffe8;
        ecx = 6;
        asm("rep movsd");
        eax = *L004d3078( & Vffffffe8);
    } else {
L0041ab9c:
        if(M00648b54 != 3) {
            goto L0041abc2;
        }
        if(al == 0xd) {
            eax = *L004d3084( & Vffffffe8);
        } else {
            if(al == 0xe0) {
                eax = *L004d3088();
                goto L0041abca;
L0041abc2:
                eax = *L0050039c(eax);
            }
        }
    }
L0041abca:
}

/*    Procedure: 0x0041ABD0 - 0x0041AC14
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041ABD0(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x10) != 0) {
        return *L004d30a0(A8);
    }
    if(!(dl = M00648b54 - 3)) {
        if(dl = dl - 1) {
            goto L0041ac01;
        }
    } else {
        return *L004d3080(A8);
L0041ac01:
        return *L004d308c(A8);
    }
    return *L004d307c(A8);
}

/*    Procedure: 0x0041AC15 - 0x0041AC17
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041AC15()
{



}

/*    Procedure: 0x0041AC18 - 0x0041AC2D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041ADE9()
 */

L0041AC18()
{



    if(M00648b54 != 0) {
        eax = L0041B118(0);
    }
}

/*    Procedure: 0x0041AC2E - 0x0041AC34
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041AC2E()
{



}

/*    Procedure: 0x0041AC35 - 0x0041AC37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041AC35()
{



}

/*    Procedure: 0x0041AC38 - 0x0041AC52
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041ADE9()
 *        L0041B930()
 *        L0041BB50()
 */

L0041AC38()
{



    asm("cli");
    M005015f0 = M00648ae8;
    eax = M00648aec;
    M0064a114 = eax;
    asm("sti");
}

/*    Procedure: 0x0041AC53 - 0x0041AC53
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041AC53()
{



}

/*    Procedure: 0x0041AC54 - 0x0041ADE8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041ADE9()
 */

L0041AC54()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 0;
    == ? L0041ac6b : ;
    eax = 0;
    goto L0041ade5;
    ebx = *L00500398();
    if(bl == 0) {
        eax = 0;
    } else {
        if(M00644c8c == 4) {
            if(bl < 0xc1 || bl > 0xc5) {
                *L0050039c(ebx);
                eax = 0;
            } else {
                M00648ae8 = 260571136;
                M00648aec = 0x12;
                eax = 1;
            }
        } else {
            eax = (bl & 0xff) + -193;
            if(eax <= 4) {
                switch(eax) {
                    case 0:
L0041aced:
                        M00648ae8 = 0x3e2;
                        M00648aec = 0;
                        esi = 1;
                        L0041D444(0x27, 1);
                        goto L0041ade3;
                    case 1:
                        M00648ae8 = 9942;
                        M00648aec = 3;
                        M00644bac = M00644bac - 49710;
                        esi = 1;
                        L0041D444(0x28, 1);
                        goto L0041ade3;
                    case 2:
                        M00648ae8 = 99420;
                        M00648aec = 7;
                        M00644bac = M00644bac - 49710;
                        esi = 1;
                        L0041D444(0x29, 1);
                        goto L0041ade3;
                    case 3:
                        M00648ae8 = 994200;
                        M00648aec = 0xa;
                        M00644bac = M00644bac - 49710;
                        esi = 1;
                        L0041D444(0x2a, 1);
                        goto L0041ade3;
                    case 4:
                        M00648ae8 = 9942000;
                        M00648aec = 0xc;
                        M00644bac = M00644bac - 49710;
                        esi = 1;
                        L0041D444(0x2b, 1);
                        goto L0041ade3;
                }
                goto L0041aced;
            }
            *L0050039c(ebx);
L0041ade3:
            eax = esi;
        }
    }
L0041ade5:
}

/*    Procedure: 0x0041ADE9 - 0x0041AE30
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L0041ADE9()
{
    /* unknown */ void  ebx;



    eax = L0041AC54();
    ebx = eax;
    if(ebx != -1) {
        if(ebx != 0) {
            L004701BE(0x14);
            if(M00648b54 != 0) {
                L0041934C(3, 1, 0);
            }
            return L0041AC38(ebx);
        }
        eax = L0041AC18();
    }
}

/*    Procedure: 0x0041AE31 - 0x0041AEF6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0041AE31(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = A8;
    esi = L0047777C(M00632ab0);
    if(esi == 0) {
        M006323c0 = 8;
        (save)8;
        eax = L0041A29C();
    } else {
        *L004d30d0();
        *(ebx + 0x14) = L00419D8C(esi);
        (save)esi;
        esi = ebx;
        edi = 6594780;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
        L004711C8(ebx, 6594800);
        *L004d3064(ebx);
        ebx = *L004d30e4(ebx, esi, *(ebx + 0x14), 6497216);
        L00477640(esi);
        if(ebx != 0) {
            *L004d30c8();
            *L004d30c0();
            eax = *L004d30b0();
        } else {
            (save)M006323c0;
            eax = L0041A29C();
        }
    }
}

/*    Procedure: 0x0041AEF7 - 0x0041AEF7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041AEF7()
{



}

/*    Procedure: 0x0041AEF8 - 0x0041AF59
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041B004()
 *        L0041B74B()
 */

L0041AEF8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 6573408;
    edi = A8;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    esi = 6573430;
    edi = 6573408;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    return L00476334(6573430);
}

/*    Procedure: 0x0041AF5A - 0x0041B003
 *    Argument size: -16
 *    Local size: 16
 *    Save regs size: 0
 */

L0041AF5A()
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    *L004d30b0();
    M00632ab4 = 0;
    Vfffffffc = M004d2ff8 & 65535;
    ax = M004d2ffc;
    Vfffffffe = ax;
    Vfffffff4 = M004d3000;
    dx = M004d3004;
    Vfffffff6 = dx;
    Vfffffff8 = Vfffffff4;
    Vfffffffa = Vfffffffe;
    Vfffffff0 = Vfffffffc;
    Vfffffff2 = Vfffffff6;
    L00456DFC( & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0, 0);
    L00458384();
    L00418FCC(6594780, 8, Vfffffffc, Vfffffffe, 0x5f, 0, 1);
    L00476334(6594780);
    return *L004d30b0();
}

/*    Procedure: 0x0041B004 - 0x0041B09F
 *    Argument size: -16
 *    Local size: 16
 *    Save regs size: 0
 */

L0041B004()
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    M00632ab4 = 0;
    Vfffffffc = M004d2a6c & 65535;
    ax = M004d2a70;
    Vfffffffe = ax;
    Vfffffff4 = M004d2a74;
    dx = M004d2a78;
    Vfffffff6 = dx;
    Vfffffff8 = Vfffffff4;
    Vfffffffa = Vfffffffe;
    Vfffffff0 = Vfffffffc;
    Vfffffff2 = Vfffffff6;
    L00456DFC( & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0, 0);
    L00458384();
    L00418FCC(6594806, 7, Vfffffffc, Vfffffffe, 0x5f, 0, 0);
    return L0041AEF8(6594806);
}

/*    Procedure: 0x0041B0A0 - 0x0041B0F4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L0041B0A0()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6595504;
    L00419470(4, 0);
    ebx = 0x72;
    do {
        edx = ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8;
        eax = *esi;
        if(edx + eax + 0x74 == 0) {
            eax = L00471198( *L00501b94(ebx, eax), 0, 0x152);
        }
        ebx = ebx - 1;
    } while(ebx >= 0);
}

/*    Procedure: 0x0041B0F5 - 0x0041B0F7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B0F5()
{



}

/*    Procedure: 0x0041B0F8 - 0x0041B115
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B0F8(A8)
/* unknown */ void  A8;
{



    eax = A8;
    *(eax + 6589194) = *(eax + 6589194) ^ 0xff;
    != ? 0x41b114 : ;
    if(eax == M00649ed8) {
        eax = L00470183();
    }
}

/*    Procedure: 0x0041B116 - 0x0041B117
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B116()
{



}

/*    Procedure: 0x0041B118 - 0x0041B27D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041AC18()
 */

L0041B118()
{



    *L00500398();
    if(al == 0) {
        goto L0041b6f5;
    }
    edx = al & 0xff;
    if(edx <= 0xf8) {
        == ? L0041b160 : ;
        if((edx = edx - 0x9e) || (edx = edx - 0x22)) {
            goto L0041b178;
        }
        if(edx = edx - 0x37) {
            goto L0041b158;
        }
    } else {
        if(!(edx = edx - 0xf9)) {
            if(edx = edx - 1) {
                goto L0041b170;
            }
            goto L0041b1b6;
L0041b158:
            return *L004d30f4();
            return *L004d30ac();
        }
        return *L004d30b4();
L0041b170:
        return *L004d30bc();
L0041b178:
        *L005003b0();
        M004d2a68 = 0;
        *L005003b4( *(M004d2a68 * 4 + 0x4d2fbc));
        L004701BE(0x14);
        *L004d3068();
        M00648b54 = 1;
        return *L004d306c();
    }
L0041b1b6:
    if(M00648b54 != 1) {
        return *L004d3074(eax);
    }
    if(!(edx = M004d2a68 - 1)) {
        if(edx = edx - 1) {
            goto L0041b438;
        }
        if(edx = edx - 1) {
            goto L0041b254;
        }
        if(edx = edx - 1) {
            goto L0041b370;
        }
        goto L0041b5b8;
    }
    if(!(dl = eax + 0x7f - 4)) {
        if(dl = dl - 0x19) {
            goto L0041b224;
        }
    } else {
        M00648af3 = 0;
        M00648af2 = 0;
        M00648af1 = 0;
        M00648af0 = 0;
        *((eax & 0xff) + 6589039) = 0xff;
        goto L0041b6e1;
L0041b224:
        *L005003b0();
        M004d2a68 = 0;
        *L005003b4( *(M004d2a68 * 4 + 0x4d2fbc));
        goto L0041b6e1;
    }
    return *L0050039c(eax);
L0041b254:
    edx = (al & 0xff) + -133;
    if(edx > 0x19) {
        goto L0041b366;
    }
    switch(*(edx + 0x41b274)) {
        case 0:
            goto L0041b366;
        case 1:
            goto L0041b340;
        case 2:
            goto L0041b335;
        case 3:
            goto L0041b323;
        case 4:
            goto L0041b318;
        case 5:
            goto L0041b30d;
        case 6:
            goto L0041b302;
        case 7:
            goto L0041b2f7;
        case 8:
            goto L0041b2ec;
        case 9:
            goto L0041b2e1;
        case 0xa:
            goto L0041b2d6;
        case 0xb:
            goto L0041b2be;
    }
    *eax = *eax | ecx | *edx;
    (restore)es;
    (save)es;
    eax = eax + 33686276;
}

/*    Procedure: 0x0041B6F7 - 0x0041B74A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L0041B6F7()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    edx = 0;
    eax = 0x3e2;
    ecx = 0x3e2;
    if(M005015f0 != 0x3e2) {
        M00648ae8 = 0x3e2;
        M00648aec = 0;
        M005015f0 = 0x3e2;
        M0064a114 = 0;
        M00655678 = 0;
        M00655674 = 0;
        L0041D444(0x27, 1);
        edx = edx | -1;
    }
    return edx;
}

/*    Procedure: 0x0041B74B - 0x0041B7DD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0041B74B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A8;
    M004d2a68 = 0;
    M00648b54 = 0;
    bl = esi & 0xff;
    if(bl == 0) {
        M006323e0 = 0;
        *L004d3054();
    }
    eax = L0041D444(0x27, 1);
    if(bl == 4) {
        ebx = esi >> 8;
        esi = 6594806;
        edi = "Jameson";
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        eax = L0041AEF8("Jameson");
        if(bl == 5) {
            eax = *L004d305c();
        } else {
            if(bl == 6) {
                eax = *L004d3058();
            }
        }
    }
}

/*    Procedure: 0x0041B7DE - 0x0041B92E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 */

L0041B7DE()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 6572964;
    M006323e0 = 0;
    L00471128(6589168, 0x4d2a20, 0x32);
    *L004d3068();
    asm("cli");
    *(ebx + 16196) = 0x3e2;
    L0041D444(0x27, 1);
    eax = 0;
    *(ebx + 16200) = 0;
    M005015f0 = *(ebx + 16196);
    M0064a114 = 0;
    asm("sti");
    L00450E00(M00632aab, 6498858, 0x44);
    L00419ABC(6498858, 0x5c, 0x44);
    if(L00450E30("COMMANDR") != 0) {
        L004712A4(6498858, "COMMANDR", 0x44 - L00471288(6498858) - 1);
        L00419ABC(6498858, 0x5c, 0x44);
    }
    esi = ebx + 21816;
    edi = "FirstEnc";
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    esi = ebx + 21836;
    edi = "._01";
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    *(ebx + 21836) = 0x2e;
    M00632aac = 61194;
    M00632aac = M00632aac & -2;
    M00632ab0 = 100000;
    return L00476334(ebx + 21836);
}

/*    Procedure: 0x0041B92F - 0x0041B92F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B92F()
{



}

/*    Procedure: 0x0041B930 - 0x0041B95D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041B95E()
 *        L0041B99B()
 *        L0041B9BC()
 *        L0041B9D4()
 */

L0041B930()
{



    M00648ae8 = 0;
    M00648aec = 0;
    M00655674 = 0;
    L0041AC38(1);
    return L0041D444(0x25, 1);
}

/*    Procedure: 0x0041B95E - 0x0041B99A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B95E()
{



    if(M006323e0 == 0) {
        return *L004d305c();
    }
    M00648b54 = 0;
    L0041B930();
    *L004d3060();
    M00648b54 = 2;
    return *L004d307c(6497228);
}

/*    Procedure: 0x0041B99B - 0x0041B9B8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B99B()
{



    M00648b54 = 0;
    L0041B930();
    *L004d3060();
    return *L004d30f4();
}

/*    Procedure: 0x0041B9B9 - 0x0041B9BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B9B9()
{



}

/*    Procedure: 0x0041B9BC - 0x0041B9D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041B9D4()
 */

L0041B9BC()
{



    L0041934C(3, 1, 0);
    return L0041B930();
}

/*    Procedure: 0x0041B9D4 - 0x0041BA6C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041B9D4()
{



    if(M00648ae8 != 0) {
        L0041B930();
        L0041D4C0(0x25);
        L0041D49C(0x26);
        return L0041D444(0x26, 1);
    }
    if(M00648b54 != 0) {
        L0041B9BC();
        L0041D4C0(0x25);
        L0041D49C(0x26);
        return L0041D444(0x26, 1);
    }
    *L004d3060();
    *L005003b4( *(M004d2a68 * 4 + 0x4d2fbc));
    *L004d306c();
    L0041D4C0(0x26);
    L0041D49C(0x25);
    return L0041D444(0x25, 1);
}

/*    Procedure: 0x0041BA6D - 0x0041BB2A
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 12
 */

L0041BA6D()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = *(M004d2a68 * 4 + 0x4d2a54);
    esi = 0;
    ebx = 0;
    L00457D88();
    edi = *(M004d2a68 * 4 + 0x4d2fbc);
    Vfffffff4 = 6594806;
    *L004d3070( *(M004d2a68 * 4 + 0x4d2fd0), & Vffffffe8);
    if(M004d2a68 == 0) {
        ebx = ebx + 1;
    }
    eax = esi + 6572964;
    esi = eax + Vfffffffc + 16204;
    for(ebx = edi + (ebx + ebx * 4) * 4; *ebx >= 0; esi = esi + 1) {
        eax = 0x2d;
        if(M004d2a68 != 0) {
            if(*esi != 0) {
                eax = 0x2c;
            }
        } else {
            eax = 0x2c;
        }
        L00457DCC(eax, *ebx, *(ebx + 4));
        ebx = ebx + 0x14;
    }
    return L00458384();
}

/*    Procedure: 0x0041BB2B - 0x0041BB4F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0041BB2B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x4d2968);
}

/*    Procedure: 0x0041BB50 - 0x0041BB8D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041BB50()
{



    M00648b54 = 0;
    asm("cli");
    M00648ae8 = 0x3e2;
    M00648aec = 0;
    asm("sti");
    L0041AC38(1);
    L0041D444(0x27, 1);
    *L005003b0();
    return L00455238();
}

/*    Procedure: 0x0041BB8E - 0x0041BBFF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041BB8E()
{



    eax = 6572964;
    if(*L00648AF0 != 0) {
        *L00644BB4 = -1;
        *L00644BB8 = -2;
        *L00644BBC = 16640;
        return 6572964;
    }
    if(*(eax + 16205) != 0) {
        *(eax + 0x10) = 0;
        *(eax + 0x14) = 0;
        *(eax + 0x18) = 16432;
        return;
    }
    if(*(eax + 16206) != 0) {
        *(eax + 0x10) = 1;
        *(eax + 0x14) = 1;
        *(eax + 0x18) = 0;
        return;
    }
    *(eax + 0x10) = 1;
    *(eax + 0x14) = 1;
    *(eax + 0x18) = 0;
}

/*    Procedure: 0x0041BC00 - 0x0041BC5B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L0041BC00()
{
    /* unknown */ void  ecx;



    *L004eecd0(0xa);
    M00648b54 = 1;
    L0041D534(37914);
    *(ebp - 4) = 0x100;
    *(ebp - 2) = 0xbc;
    M00648ae8 = 0;
    M005015f0 = 0;
    eax = 3 & 0xff;
    M0063236e = al;
    M0063236d = al;
    M0063236c = M0063236d;
    return L004551F0(0, 6497132);
}

/*    Procedure: 0x0041BC5C - 0x0041BC65
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041BC5C()
{



    return L0043C3F0();
}

/*    Procedure: 0x0041BC66 - 0x0041BC67
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041BC66()
{



}

/*    Procedure: 0x0041BC68 - 0x0041BC85
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00453FA8()
 */

L0041BC68()
{



    L00451038();
    M00632aab = al;
    return L00451064(6497316, 5);
}

/*    Procedure: 0x0041BC86 - 0x0041BE96
 *    Argument size: 0
 *    Local size: 100
 *    Save regs size: 12
 */

L0041BC86()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffff9c;



    ebx = 0x4d3128;
    esi = & Vffffff9c;
    L00457D88();
    (save)esi;
    edi = esi;
    esi = "First Encounters Program Installation";
    eax = edi;
    ecx = 9;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    (restore)esi;
    L00455564(esi, 0xa, 0xa, 0x10);
    L00455564(ebx + 0xef7, 0xa, 0x14, 0x11);
    (save)esi;
    edi = esi;
    esi = ebx + 0xefc;
    eax = edi;
    ecx = 0xa;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 1;
    esi = esi + 1;
    (restore)esi;
    L00455564(esi, 0xa, 0x1e, 0x11);
    L00458384();
    if(!(eax = L0041987C(0x41, 0x44) - 0x41)) {
        if(eax = eax - 1) {
            goto L0041bd26;
        }
        if(eax = eax - 1) {
            goto L0041bd31;
        }
        if(eax = eax - 1) {
            goto L0041bd3c;
        }
    } else {
        M006dca56 = 0x220;
        goto L0041bd45;
L0041bd26:
        M006dca56 = 0x240;
        goto L0041bd45;
L0041bd31:
        M006dca56 = 0x260;
        goto L0041bd45;
L0041bd3c:
        M006dca56 = 0x280;
    }
L0041bd45:
    L00457D88();
    (save)esi;
    edi = esi;
    esi = ebx + 0xf25;
    eax = edi;
    ecx = 9;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    (restore)esi;
    L00455564(esi, 0xa, 0xa, 0x10);
    L00455564(ebx + 0xf4b, 0xa, 0x14, 0x10);
    (save)esi;
    edi = esi;
    esi = ebx + 0xf5c;
    eax = edi;
    ecx = 8;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    (restore)esi;
    L00455564(esi, 0xa, 0x1e, 0x11);
    L00458384();
    if(!(eax = L0041987C(0x41, 0x44) - 0x41)) {
        if(eax = eax - 1) {
            goto L0041bdd3;
        }
        if(eax = eax - 1) {
            goto L0041bdde;
        }
        if(eax = eax - 1) {
            goto L0041bde9;
        }
    } else {
        M006dca58 = 2;
        goto L0041bdf2;
L0041bdd3:
        M006dca58 = 5;
        goto L0041bdf2;
L0041bdde:
        M006dca58 = 7;
        goto L0041bdf2;
L0041bde9:
        M006dca58 = 0xa;
    }
L0041bdf2:
    L00457D88();
    (save)esi;
    edi = esi;
    esi = ebx + 0xf7e;
    eax = edi;
    ecx = 9;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    (restore)esi;
    L00455564(esi, 0xa, 0xa, 0x10);
    L00455564(ebx + 0xfa4, 0xa, 0x14, 0x11);
    (save)esi;
    edi = esi;
    esi = ebx + 0xfa8;
    eax = edi;
    ecx = 6;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 1;
    esi = esi + 1;
    (restore)esi;
    L00455564(esi, 0xa, 0x1e, 0x11);
    L00458384();
    if(!(eax = L0041987C(0x41, 0x43) - 0x41)) {
        if(eax = eax - 1) {
            goto L0041be7c;
        }
        if(eax = eax - 1) {
            goto L0041be87;
        }
    } else {
        M006dca5a = 0;
        goto L0041be90;
L0041be7c:
        M006dca5a = 1;
        goto L0041be90;
L0041be87:
        M006dca5a = 3;
    }
L0041be90:
}

/*    Procedure: 0x0041BE97 - 0x0041C00D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0041BE97(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -2048;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = A8;
    if(L004730F4(ebx, 0) == 0) {
        eax = 1;
    } else {
        esi = L00473538(ebx, "wb");
        if(esi != 0) {
            edi = L00473538(Ac, "rb");
            if(edi != 0) {
                goto L0041bfd3;
            }
        }
        L00473DA8("error errno = %d\n", M0060beac);
        L00473DA8("d = %d\n", esi);
        L00473DA8("s = %d\n", edi);
        do {
            *L00500398();
        } while(al == 0);
        L00474830(ebp + -2048, "There is a problem writing to your disk.\rPlease check your path and available disk space.\r Press a key to quit.");
        L00457D88();
        L00455564(ebp + -2048, 0xa, 0xa, 0x10);
        L00458384();
        do {
            *L00500398();
        } while(al == 0);
        L00419838();
L0041bfd3:
        while(1) {
            ebx = L004737C4(ebp + -2048, 1, 0x800, edi);
            if(ebx <= 0) {
                break;
            }
            if(L0047397C(ebp + -2048, 1, ebx, esi) == ebx) {
                continue;
            }
            L004731B8(edi);
            L004731B8(esi);
            L00474830(ebp + -2048, "There is a problem writing to your disk.\rPlease check your path and available disk space.\r Press a key to quit.");
            L00457D88();
            L00455564(ebp + -2048, 0xa, 0xa, 0x10);
            L00458384();
            do {
                *L00500398();
            } while(al == 0);
            L00419838();
        }
        L004731B8(edi);
        L004731B8(esi);
        eax = 1;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041C00E - 0x0041C048
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C00E()
{



    if(M00506374 != 0 && M00506378 != 0 && M00648b09 != 0) {
        if(M00649ed8 == -1) {
            goto L0041c03f;
        }
        if(!(eax = L00470A94() - 1)) {
L0041c03f:
            eax = L004700B4(-1);
        }
    }
}

/*    Procedure: 0x0041C049 - 0x0041C0C4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C049()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    if(!(eax = *( *(ebp + 8)) - 1)) {
        if(eax = eax - 4) {
            goto L0041c07f;
        }
        if(eax = eax - 0xc) {
            goto L0041c0c3;
        }
        (restore)ebp;
        return L0041C44F(8, 0);
    }
    M006321ea = 0;
    M006321e9 = M006321e9 & 0xfe;
    (restore)ebp;
    return;
L0041c07f:
    eax = *L00501b8c() & 7;
    if(eax < M00648ade) {
        edx = 0;
        eax = 0x20;
        do {
            if(!( *(eax + 6574000) & 0x80)) {
                edx = edx + ( *(eax * 2 + 6573272) & 65535);
            }
            eax = eax - 1;
        } while(eax >= 0);
        if(edx != 0) {
            eax = L0041C44F(7, M00644c70);
        }
    }
L0041c0c3:
    (restore)ebp;
}

/*    Procedure: 0x0041C0C5 - 0x0041C14F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041C1F3()
 */

L0041C0C5(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6595504;
    M00649cb4 = 0x7f;
    M00649cb5 = 0x7f;
    M00649cb6 = 0;
    M00649cb8 = 0;
    ebx = 0x72;
    do {
        if(!( *( *esi + ebx) & 8) && !( *( *esi + ebx) & 0x20)) {
            L0041C150(ebx * 0x152 + *esi + 0x74);
        }
        ebx = ebx - 1;
    } while(ebx > 0);
    if(M00649cb8 != 0) {
        bl = M00649cb4 - A8;
        if(bl > 0 && A8 <= 0x32 && ( *L00501b8c() & 7) <= bl) {
            goto L0041c14a;
        }
        eax = M00649cb8;
    } else {
L0041c14a:
        eax = 0;
    }
}

/*    Procedure: 0x0041C150 - 0x0041C1F2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041C0C5()
 */

L0041C150(A8)
/* unknown */ void  A8;
{



    edx = 6572964;
    if(*(A8 + 0x87) == 0xb) {
        if(*(A8 + 0x118) != 0xe || *(A8 + 0x88) > *L00649CB4) {
            goto L0041c1f1;
        }
        *L00649CB6 = *(A8 + 0x86);
        *L00649CB4 = *(A8 + 0x88);
        return *L00649CB4;
    }
    if(*(A8 + 0x87) == 1 && !( *(A8 + 0x14c) & 0x10)) {
        if(*(A8 + 0x88) <= *(edx + 20753)) {
            *(edx + 20756) = A8;
            *(edx + 20753) = *(A8 + 0x88);
        }
        if(*(A8 + 0x88) <= *(edx + 20752)) {
            *(edx + 20754) = *(A8 + 0x86);
            *(edx + 20752) = *(A8 + 0x88);
        }
    }
L0041c1f1:
}

/*    Procedure: 0x0041C1F3 - 0x0041C44E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L0041C44F()
 */

L0041C1F3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -228;
    (save)A8;
    (save)esi;
    (save)edi;
    (save)6572964;
    (save)Ac;
    esi = 0x4d4258;
    edi = ebp + -156;
    ecx = 0x26;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    (restore)edi;
    (restore)esi;
    *(ebp + -160) = *(ebp + ((edi << 3) - edi) * 2 + -156);
    *(ebp + -172) = *(ebp + ((edi << 3) - edi) * 2 + -152);
    *(ebp + -161) = *(ebp + ((edi << 3) - edi) * 2 + -144);
    *(ebp + -176) = *(ebp + ((edi << 3) - edi) * 2 + -148);
    eax = *(esi + 0x43c) & 65535;
    if(A8 == eax) {
        if(*(ebp + -161) & 4) {
            goto L0041c2b5;
        }
        eax = L0041C0C5( *(ebp + -176) + *(esi + 16186));
        *(ebp + -180) = eax;
        if(eax == 0) {
            goto L0041c448;
        }
        *(esi + 20700) = *(ebp + -180);
    } else {
L0041c2b5:
        if(A10 != 0) {
            *(esi + 20700) = A10;
        }
    }
    *(ebp + -168) = *(esi + A8 * 4 + 20728);
    *(esi + A8 * 4 + 20728) = *(esi + A8 * 4 + 20728) + *(ebp + -172) + *(ebp + -172) + ( *(ebp + -172) + *(ebp + -172)) * 4;
    if(*(esi + A8 * 4 + 20728) < *(ebp + -168)) {
        *(esi + A8 * 4 + 20728) = *(ebp + -168);
    }
    eax = *(esi + A8 * 4 + 0x184) + *(ebp + -160);
    *(esi + A8 * 4 + 0x184) = eax < *(esi + A8 * 4 + 0x184) ? -1 : eax;
    ecx = edi;
    *(esi + A8 * 4 + 20704) = *(esi + A8 * 4 + 20704) | 1 << cl;
    L00414070(0xa, 0, A8);
    L00414070(0x11, 0, A8);
    L00414070(0x15, 0, A8);
    eax = *(esi + 0x43c) & 65535;
    if(A8 == eax) {
        if(!( *(ebp + -161) & 2) && *(esi + 20700) != 0) {
            *(ebp + -220) = edi + 40450;
            eax = 40449;
            if(*(ebp + -168) == 0) {
                eax = 40448;
            }
            *(ebp + -228) = eax;
            *(ebp + -224) = *( *(esi + 20700) + 0x86) & 0xff;
            *(esi + 0x112) = *( *(esi + 20700) + 0x86);
            *(ebp + -204) = 9;
            *(ebp + -216) = *(ebp + -172);
            *(ebp + -200) = *(esi + 20700);
            L00421DEC(ebp + -228);
            eax = L004701BE(0x26);
        }
        if(!( *(ebp + -161) & 1)) {
            eax = *(esi + 20700);
            if(*(eax + 0x82) != 0x45) {
                eax = *(esi + 20700);
                if(*(eax + 0x82) != 0x4f) {
                    M006321e9 = M006321e9 | 1;
                    eax = *(esi + 16227) != 0 ? L004700B4(0xe) : L0047017D();
                }
            }
        }
    }
L0041c448:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0041C44F - 0x0041C469
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041C049()
 *        L0041C97C()
 *        L00422871()
 *        L00426900()
 *        L00426C08()
 *        L00430C87()
 *        L0043D05C()
 *        L0043DA28()
 *        L0044145D()
 *        L00442EC4()
 *        L00444610()
 */

L0041C44F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0041C1F3(M00644fe0 & 65535, A8, Ac);
}

/*    Procedure: 0x0041C46A - 0x0041C616
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L0041C46A()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6572964;
    if(M006321ea == 0 && *L00649C80 != 0) {
        if(*( *L00649C80 + 0x14c) & 0x40) {
            goto L0041c59b;
        }
        if(*( *L00649C80 + 0xdc) <= 0) {
            goto L0041c576;
        }
        if(*( *L00649C80 + 0xc9) == 0) {
            goto L0041c51a;
        }
        if(*( *L00649C80 + 0xca) == 0) {
            goto L0041c4ec;
        }
        eax = *( *L00649C80 + 0xca);
        if(eax == *L00644C64) {
L0041c4ec:
            *( *(esi + 20700) + 0xc9) = 1;
            *( *(esi + 20700) + 0xca) = 0;
            eax = *(esi + 20700);
            *(eax + 0xd8) = 0;
            goto L0041c613;
L0041c51a:
            ebx = 1;
            do {
                L0041C617( *(esi + 20700), ebx, 0x22);
                eax = *(esi + 20700);
                *(eax + 0xdc) = *(eax + 0xdc) - 1;
                if(*(eax + 0xdc) == 0) {
                    break;
                }
                ebx = ebx - 1;
            } while(ebx >= 0);
            *( *(esi + 20700) + 0xc9) = 0xff;
            M006321ea = 1;
            eax = *(esi + 20700);
            *(eax + 0xde) = 0;
            goto L0041c613;
L0041c576:
            *( *(esi + 20700) + 0xc9) = 1;
            M006321e9 = M006321e9 & 0xfe;
            eax = *(esi + 20700);
            *(eax + 0xdc) = 0;
            goto L0041c613;
L0041c59b:
            eax = *(esi + 20700);
            if(*(eax + 0xde) == 0) {
                M006321ea = 1;
            } else {
                eax = *L00501b8c();
                if(eax < 16384) {
                    eax = *(esi + 20700);
                    *(eax + 0xdc) = *(eax + 0xdc) - 1;
                    if(*(eax + 0xdc) < 0) {
                        M006321ea = 0xff;
                        M006321e9 = M006321e9 & 0xfe;
                        eax = *(esi + 20700);
                        *(eax + 0xdc) = 0;
                    } else {
                        eax = L0041C617( *(esi + 20700), *L004eeed4(4), 1);
                    }
                }
            }
        }
    }
L0041c613:
}

/*    Procedure: 0x0041C617 - 0x0041C720
 *    Argument size: 12
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L0041C46A()
 */

L0041C617(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    M00501ba8 = M0064a3b0;
    L0042CBE4(A8, Ac, & Vffffffe8);
    eax = L0042CD2C( & Vffffffe8);
    ebx = eax;
    if(ebx == 0) {
        *(A8 + 0xdc) = *(A8 + 0xdc) + 1;
    } else {
        *(ebx + 0xff) = A10;
        if(!( *(A8 + 0x14c) & 0x20)) {
            L0045A044(ebx + 0x3e, A8 + 0x3e);
            *(ebx + 0x56) = *(A8 + 0x56);
            *(ebx + 0x57) = *(A8 + 0x57);
            (save)A8;
            edi = ebx;
            ecx = 9;
            asm("rep movsd");
            (restore)A8;
        } else {
            *(ebx + 0x56) = *(A8 + 0x86);
            *(ebx + 0x57) = 1;
        }
        if(!( *(A8 + 0x14c) & 0x20) && !( *(A8 + 0x14c) & 0x40)) {
            *(ebx + 0x94) = 0;
            *(ebx + 0x90) = 0;
            *(ebx + 0x8c) = 0;
            goto L0041c6f6;
        }
        *(ebx + 0x8c) = *(ebx + 0x18) >> 0x15;
        *(ebx + 0x90) = *(ebx + 0x1c) >> 0x15;
        eax = *(ebx + 0x20) >> 0x15;
        *(ebx + 0x94) = eax;
        if(!( *(A8 + 0x14c) & 0x20)) {
L0041c6f6:
            *(ebx + 0x8c) = *(ebx + 0x8c) + ( *(ebx + 0xc) >> 0x16);
            *(ebx + 0x90) = *(ebx + 0x90) + ( *(ebx + 0x10) >> 0x16);
            eax = *(ebx + 0x14) >> 0x16;
            *(ebx + 0x94) = *(ebx + 0x94) + eax;
        }
    }
}

/*    Procedure: 0x0041C721 - 0x0041C79C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C721()
{



    edx = M00655674 >> 2;
    eax = *(M00649c80 + 0xde) & 65535;
    if(M006321ea < 0) {
        eax = eax - edx;
        if(eax <= 0) {
            M006321ea = 0;
            eax = M00649c80;
            *(eax + 0xde) = 0;
            return;
        }
        edx = M00649c80;
        *(edx + 0xde) = ax;
        return;
    }
    eax = eax + edx;
    if(eax >= 65535) {
        M006321ea = 0;
        eax = M00649c80;
        *(eax + 0xde) = 65535;
        return;
    }
    *(M00649c80 + 0xde) = ax;
}

/*    Procedure: 0x0041C79D - 0x0041C7BE
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C79D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x4d41f4);
}

/*    Procedure: 0x0041C7BF - 0x0041C7D2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C7BF()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    M00649cbe = 0;
    M00649cc2 = 0;
    (restore)ebp;
    return 0;
}

/*    Procedure: 0x0041C7D3 - 0x0041C8F8
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 12
 */

L0041C7D3(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffef;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    eax = *A8;
    if(eax == 0x10) {
        edi = 0;
        for(eax = 6593739; edi < M00649cbe; eax = eax + 0x34) {
            if(*eax > 0 && *(eax - 1) < 0xa) {
                *eax = *eax - 1;
                *(eax - 1) = *(eax - 1) + 1;
            }
            edi = edi + 1;
        }
    } else {
        if(eax == 2) {
            edi = 0;
            for(ebx = 6593764; 1; ebx = ebx + 0x34) {
                if(edi >= M00649cbe) {
                    goto L0041c8f2;
                }
                *ebx = 0;
                eax = M00644cae;
                if(eax == *(ebx - 0x1e)) {
                    M00501ba8 = M0064a3b0;
                    eax = *L004eeedc(M00501ba8, M00644c6c, 0xd, 0x6e, & Vfffffffc);
                    esi = eax;
                    if(esi != 0) {
                        *(esi + 0x87) = 0x11;
                        *(esi + 0x118) = 0xf9;
                        *(esi + 0xff) = 0;
                        *(esi + 0x9e) = 65535;
                        *(esi + 0x57) = 1;
                        (save)esi;
                        (save)edi;
                        edi = esi + 0x3e;
                        esi = ebx - 0x18;
                        ecx = 6;
                        asm("rep movsd");
                        (restore)edi;
                        (restore)esi;
                        *ebx = *(esi + 0x86);
                        L0041C8FC(M0064a3b0, esi, (edi + (edi + edi * 2) * 4 << 2) + 6593734);
                        eax = *"8tB"(esi, M0064a3b0, & Vfffffffb, & Vfffffffa, & Vfffffff4, & Vfffffff0, & Vffffffef);
                    }
                }
                edi = edi + 1;
            }
        }
    }
L0041c8f2:
}

/*    Procedure: 0x0041C8F9 - 0x0041C8FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C8F9()
{



}

/*    Procedure: 0x0041C8FC - 0x0041C93A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041C7D3()
 */

L0041C8FC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    M00501ba8 = eax;
    ebx = 0x72;
    esi = eax + 0x72;
    do {
        if(!( *esi & 0x20)) {
            eax = *L00501b90(ebx);
            eax = L0041C93C(eax, Ac, A10);
        }
        ebx = ebx - 1;
        esi = esi - 1;
    } while(ebx >= 0);
}

/*    Procedure: 0x0041C93B - 0x0041C93B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041C93B()
{



}

/*    Procedure: 0x0041C93C - 0x0041C97B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041C8FC()
 */

L0041C93C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A8 + 0x124;
    edx = A10 + 0x20;
    do {
        cl = *eax;
        if(cl != *edx) {
            break;
        }
        if(cl == 0) {
            goto L0041c96d;
        }
        cl = *(eax + 1);
        if(cl != *(edx + 1)) {
            break;
        }
        eax = eax + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41c979 : ;
L0041c96d:
    al = *(A8 + 0x86);
    *(Ac + 0x56) = al;
}

/*    Procedure: 0x0041C97C - 0x0041CD11
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044629C()
 */

L0041C97C()
{



    esp = esp + -172;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = 6572964;
    eax = L0041CFAC();
    ebx = eax;
    if(ebx != -1) {
        M00501ba8 = M0064a3b0;
        *(ebp - 0x1c) = *(edi + (ebx + (ebx + ebx * 2) * 4) * 4 + 20770) != -1 ? 0x6e : 0x6f;
        eax = *L004eeedc(M00501ba8, *(edi + 0xc8), 0xd, *(ebp - 0x1c), ebp - 4);
        esi = eax;
        if(esi != 0) {
            *(esi + 0x87) = 0x11;
            *(esi + 0x118) = 0xf9;
            *(esi + 0x9e) = 0;
            *(esi + 0xff) = 0;
            eax = *(edi + 0xc8);
            edx = *(eax + 0x18) >> 0xe;
            *(ebp - 0x4c) = edx - ( *(eax + 0xc) >> 0x10);
            edx = *(eax + 0x1c) >> 0xe;
            *(ebp - 0x48) = edx - ( *(eax + 0x10) >> 0x10);
            edx = *(eax + 0x20) >> 0xe;
            *(ebp - 0x44) = edx - ( *(eax + 0x14) >> 0x10);
            *L005016f4(esi, ebp - 0x4c);
            *"8tB"(esi, M0064a3b0, ebp - 0xd, ebp - 0xe, ebp - 0x18, ebp - 0x14, ebp - 0xf);
            *(edi + 0x118) = *(edi + 0x118) + 0x1e;
            eax = ebx + (ebx + ebx * 2) * 4;
            *(edi + eax * 4 + 20770) = *(edi + 0x10a);
            (save)esi;
            (save)edi;
            edi = edi + (ebx + (ebx + ebx * 2) * 4) * 4 + 20776;
            esi = esi + 0x3e;
            ecx = 6;
            asm("rep movsd");
            (restore)edi;
            (restore)esi;
            eax = ebx + (ebx + ebx * 2) * 4;
            *(edi + eax * 4 + 20800) = *(esi + 0x86);
            *(edi + (ebx + (ebx + ebx * 2) * 4) * 4 + 20774) = 0;
            *(edi + 20766) = *(edi + 20766) - 1;
            esi = *L00501b94( *( *(edi + 0xc8) + 0x56) & 0xff, M0064a3b0);
            *(ebp - 0xc) = 0;
            eax = 0;
            dx = *(esi + 0xe0);
            if(dx > 0x1d9) {
                *(ebp - 8) = 41490;
            } else {
                if(dx < 0x32) {
                    *(ebp - 8) = 41491;
                } else {
                    if(!(edx = *(esi + 0x82) - 0x7a)) {
                        if(edx = edx - 3 - 2) {
                            goto L0041cb6b;
                        }
                        == ? L0041cb53 : ;
                        if(edx = edx - 1 - 2) {
                            goto L0041cb6b;
                        }
                    } else {
                        *(ebp - 8) = 41492;
                        *(ebp - 0xc) = 0;
                        goto L0041cc64;
                        eax = 2;
                        *(ebp - 8) = 41493;
                        *(ebp - 0xc) = 65535;
                        goto L0041cc64;
L0041cb6b:
                        *(ebp - 8) = 41494;
                        *(ebp - 0xc) = 65535;
                        goto L0041cc64;
                    }
                    if(*(esi + 0xe0) < 0x107) {
                        *L00501b8c();
                        if(al & 1) {
                            goto L0041cba4;
                        }
                        eax = 2;
                        *(ebp - 8) = 41493;
                    } else {
L0041cba4:
                        L0043759C( *(edi + 0x10a), ebp - 0x24, ebp - 0x28, ebp - 0x2c, ebp - 0x30, ebp - 0x34, ebp - 0x38, ebp - 0x3c, ebp - 0x40);
                        al = *(ebp - 0x2c) == 0 ? 0xa : *(ebp - 0x2c) < 3 ? 9 : *(ebp - 0x2c) < 0xe ? 8 : *(ebp - 0x2c) < 0x1b ? 6 : 4;
                        edx = 3;
                        if(*(esi + 0xa6) < 0x1d) {
                            edx = 2;
                        }
                        *(ebp - 0x20) = edx;
                        eax = al;
                        *(ebp - 0x20) = *(ebp - 0x20) * *(ebp - 0x20);
                        *(ebp - 0x20) = *L004eeed4( *(ebp - 0x20));
                        eax = *(ebp - 0x20);
                        *(ebp - 0x20) = *(ebp - 0x20) * *(ebp - 0x20);
                        *(ebp - 0x20) = *(ebp - 0x20) >> 5;
                        if(*(ebp - 0x20) >= 0x1b) {
                            *(ebp - 0x20) = 0x1a;
                        }
                        eax = *(ebp - 0x20) + *(ebp - 0x20) * 2;
                        *(ebp - 8) = *(eax * 4 + 0x4d44f4);
                        *(ebp - 0xc) = *(eax * 4 + 0x4d44f8);
                        eax = *(eax * 4 + 0x4d44f0);
                    }
                }
            }
L0041cc64:
            dl = *(ebp - 0xc);
            *(edi + (ebx + (ebx + ebx * 2) * 4) * 4 + 20775) = dl;
            *(edi + (ebx + (ebx + ebx * 2) * 4) * 4 + 20801) = al;
            *(ebp - 0x7c) = 41484;
            *(ebp - 0x64) = -1;
            L00421DEC(ebp - 0x7c);
            *(ebp + -168) = *(esi + 0xe0) + -273;
            *(ebp + -164) = *(ebp - 8);
            *(ebp + -172) = 41489;
            *(ebp + -148) = -1;
            L00421DEC(ebp + -172);
            eax = ebx + (ebx + ebx * 2) * 4 << 2;
            L004713AC(eax + edi + 20802, esi + 0x124, 0x14);
            M006321f9 = 0x16;
            eax = L0041C44F(4, 0);
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041CD12 - 0x0041CD13
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041CD12()
{



}

/*    Procedure: 0x0041CD14 - 0x0041CEF4
 *    Argument size: 0
 *    Local size: 52
 *    Save regs size: 8
 *    Called by:
 *        L00446290()
 */

L0041CD14()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;



    esi = *L00501b94(M00649ece, M0064a3b0);
    eax = *(esi + 0x82);
    if(eax == 0x6e || eax == 0x6f) {
        eax = L0041CFDC( *(esi + 0x86) & 0xff);
        Vfffffffc = eax;
        if(!(eax = Vfffffffc + 1)) {
            if(*(esi + 0x82) == 0x6f) {
                eax = 0x72;
                ecx = M0064a3b0 + 38778;
                edx = M0064a3b0 + 0x72;
                do {
                    if(*edx != 0 && *ecx == 0x69) {
                        break;
                    }
                    eax = eax - 1;
                    ecx = ecx + -338;
                    edx = edx - 1;
                } while(eax > 0);
                if(eax > 0) {
                    edx = eax;
                    eax = edx + (edx + (edx + eax * 4) * 4) * 8;
                    if(*(M0064a3b0 + eax * 2 + 0xfc) < 8 && M00644cbc - M00644cc4 > 0) {
                        eax = 5;
                        edx = M00644cbc - M00644cc4;
                        if(5 > edx) {
                            eax = edx;
                        }
                        M00644cc4 = M00644cc4 + eax;
                        M00644d1e = M00644d1e + ax;
                        Vffffffcc = 41487;
                        Vffffffd0 = eax;
                        Vffffffd8 = 36387;
                        Vffffffe4 = -1;
                        L00421DEC( & Vffffffcc);
                    }
                }
            }
            edx = Vfffffffc;
            eax = edx;
            edx = eax + (eax + edx * 2) * 4;
            eax = *(edx * 4 + 6593738);
            if(eax != 0) {
                ecx = 41487;
                ebx = M00644cbc - M00644cc4;
                if(ebx < eax) {
                    eax = ebx;
                    ecx = 41488;
                }
                M00644cc4 = M00644cc4 + eax;
                *(edx * 4 + 6593738) = *(edx * 4 + 6593738) - al;
                dl = *(( *(edx * 4 + 6593765) & 0xff) + 0x4d4634);
                ebx = dl & 0xff;
                *(ebx * 2 + 6573272) = *(ebx * 2 + 6573272) + ax;
                Vffffffcc = ecx;
                Vffffffd8 = ebx + 36352;
                Vffffffe4 = -1;
                L00421DEC( & Vffffffcc);
                eax = L00419470(0x17, 0);
            } else {
                if(M00644cbc - M00644cc4 >= 0x1e) {
                    *(esi + 0xff) = 0xff;
                    M00644c6a = M00644c6a & 65519;
                    Vffffffcc = 41485;
                    Vffffffe4 = -1;
                    eax = L00421DEC( & Vffffffcc);
                } else {
                    Vffffffcc = 39139;
                    Vffffffe4 = -1;
                    eax = L00421DEC( & Vffffffcc);
                }
            }
        }
    }
}

/*    Procedure: 0x0041CEF5 - 0x0041CEF7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041CEF5()
{



}

/*    Procedure: 0x0041CEF8 - 0x0041CF3E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004237ED()
 */

L0041CEF8(A8)
/* unknown */ void  A8;
{



    M00649cc2 = M00649cc2 + 1;
    M00649cbe = M00649cbe + 1;
    if(A8 == 0x12) {
        eax = M00649cbe;
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(eax * 4 + 6593682) = -1;
        return;
    }
    eax = M00649cbe;
    edx = eax;
    eax = edx + (edx + eax * 2) * 4;
    *(eax * 4 + 6593682) = 0;
}

/*    Procedure: 0x0041CF3F - 0x0041CF3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041CF3F()
{



}

/*    Procedure: 0x0041CF40 - 0x0041CF90
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041CF94()
 *        L00423863()
 */

L0041CF40()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = L0041CFAC();
    if(ebx == -1) {
        eax = 0;
    } else {
        eax = (ebx + (ebx + ebx * 2) * 4) * 4 + 6593786;
        do {
            esi = eax;
            edi = eax - 0x34;
            ecx = 0xd;
            asm("rep movsd");
            ebx = ebx + 1;
            eax = eax + 0x34;
        } while(ebx < 8);
        M00649cbe = M00649cbe - 1;
        M00649cc2 = M00649cc2 - 1;
        eax = eax | -1;
    }
}

/*    Procedure: 0x0041CF91 - 0x0041CF93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041CF91()
{



}

/*    Procedure: 0x0041CF94 - 0x0041CFA8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00423EE4()
 *        L004404E7()
 *        L00444870()
 */

L0041CF94()
{



    while(M00649cc2 != 0) {
        eax = L0041CF40();
    }
}

/*    Procedure: 0x0041CFA9 - 0x0041CFAB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041CFA9()
{



}

/*    Procedure: 0x0041CFAC - 0x0041CFDB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041C97C()
 *        L0041CF40()
 */

L0041CFAC()
{



    edx = M00649cbe - 1;
    eax = (edx + (edx + edx * 2) * 4) * 4 + 6593734;
    if(edx >= 0) {
        do {
            ecx = *eax;
            if(ecx == 0 || !(ecx = ecx + 1)) {
                goto L0041cfcd;
            }
            edx = edx - 1;
            eax = eax - 0x34;
        } while(edx >= 0);
        goto L0041cfd8;
L0041cfcd:
        return edx;
    }
L0041cfd8:
    return eax | -1;
}

/*    Procedure: 0x0041CFDC - 0x0041D00E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041CD14()
 *        L0041D010()
 *        L0041D18C()
 */

L0041CFDC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = M00649cbe - 1;
    edx = (eax + (eax + eax * 2) * 4) * 4 + 6593764;
    do {
        if(A8 == *edx) {
            goto L0041d00c;
        }
        eax = eax - 1;
        edx = edx - 0x34;
    } while(eax >= 0);
    eax = eax | -1;
L0041d00c:
}

/*    Procedure: 0x0041D00F - 0x0041D00F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D00F()
{



}

/*    Procedure: 0x0041D010 - 0x0041D174
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L0041D175()
 */

L0041D010(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;



    edi = 6572964;
    if(*(A8 + 0xff) == 0) {
        eax = *(A8 + 0x9e) & 65535;
        eax = eax + (M00655674 >> 2);
        *(A8 + 0x9e) = eax <= 65535 ? ax : 65535;
        if(*(A8 + 0x88) <= 5 && *(edi + 0xe8) == 0x34) {
            al = *(A8 + 0x86);
            *(edi + 21290) = al;
            eax = *(edi + 0xc6) & 65535;
            eax :: 1;
            asm("sbb eax,eax");
            if(!( ~eax & 0x10)) {
                eax = L00419470(0x17, 0);
            }
            *(edi + 0xc6) = *(edi + 0xc6) | 0x10;
        }
    } else {
        eax = *(A8 + 0x9e) & 65535;
        eax = eax - (M00655674 >> 2);
        if(eax >= 0) {
            *(A8 + 0x9e) = ax;
        } else {
            *(A8 + 0x9e) = 0;
            eax = L0041CFDC( *(A8 + 0x86) & 0xff);
            esi = eax;
            if(esi != -1) {
                if(*(A8 + 0x82) == 0x6f) {
                    *(edi + (esi + (esi + esi * 2) * 4) * 4 + 20770) = -1;
                } else {
                    eax = esi + (esi + esi * 2) * 4;
                    *(edi + eax * 4 + 20770) = 0;
                }
                *(edi + 20766) = *(edi + 20766) + 1;
                *(edi + 0x118) = *(edi + 0x118) - 0x1e;
                Vffffffd0 = 41486;
                Vffffffe8 = -1;
                L00421DEC( & Vffffffd0);
                *(A8 + 0x82) = 0x9e;
                *L004eeed8(A8);
                L00419470(0x17, 0);
                eax = *(edi + 20766);
                if(eax == *(edi + 20762)) {
                    M006321f9 = 0;
                }
            }
        }
    }
}

/*    Procedure: 0x0041D175 - 0x0041D189
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D175(A8)
/* unknown */ void  A8;
{



    return L0041D010( *(A8 + 8));
}

/*    Procedure: 0x0041D18A - 0x0041D18B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D18A()
{



}

/*    Procedure: 0x0041D18C - 0x0041D208
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041D209()
 */

L0041D18C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A8;
    if(*(esi + 0x82) == 0x6e) {
        eax = L0041CFDC( *(esi + 0x86) & 0xff);
        ebx = eax;
        if(ebx != -1) {
            for(eax = (ebx + (ebx + ebx * 2) * 4) * 4 + 6593786; ebx < M00649cbe - 1; eax = eax + 0x34) {
                esi = eax;
                edi = eax - 0x34;
                ecx = 0xd;
                asm("rep movsd");
                ebx = ebx + 1;
            }
            M00649cbe = M00649cbe - 1;
            L00419470(0x17, 0);
            eax = M00649cc2;
            if(eax == M00649cbe) {
                M006321f9 = 0;
            }
        }
    }
}

/*    Procedure: 0x0041D209 - 0x0041D222
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D209(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*eax == 0) {
        eax = L0041D18C( *(eax + 4));
    }
}

/*    Procedure: 0x0041D223 - 0x0041D247
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D223(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, "=FM");
}

/*    Procedure: 0x0041D248 - 0x0041D262
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D248(A8)
/* unknown */ void  A8;
{



    if(!(eax = A8 - 3) && !(eax = eax - 0xc)) {
        return;
    }
    M00644bb1 :: 0;
}

/*    Procedure: 0x0041D263 - 0x0041D376
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0041D263(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6509468;
    if((A8 & 0xff) == 1) {
        M00644dd0 = 0;
        edx = 6499000;
        for(eax = 0x4d4a68; 1; eax = eax + 4) {
            ecx = *eax;
            if(ecx == -1) {
                break;
            }
            *edx = ecx;
            edx = edx + 4;
        }
        *esi = 0x43;
        *(esi + 4) = 0x11;
        *(esi + 8) = 0x73;
        *(esi + 0xc) = 0x73;
        *(esi + 0x10) = 0x10;
        *(esi + 0x14) = 0x10;
        *(esi + 0x18) = 0x5f;
        *(esi + 0x1c) = 0x5f;
        *(esi + 0x20) = 0x5f;
        *(esi + 0x24) = 0x12;
        *(esi + 0x28) = 0x12;
        *(esi + 0x2c) = 0x12;
        *(esi + 0x30) = 8;
        *(esi + 0x34) = 9;
        *(esi + 0x38) = 0xa;
        *(esi + 0x3c) = 0xb;
        *(esi + 0x40) = 0xc;
        *(esi + 0x44) = 0xd;
        *(esi + 0x48) = 0xe;
        L004552CC();
        ebx = 0x37;
        do {
            L0041D49C(ebx);
            ebx = ebx + 1;
        } while(ebx <= 0x39);
    }
    ebx = 0;
    eax = 6499097;
    do {
        *eax = 0;
        ebx = ebx + 1;
        eax = eax + 0x40e;
    } while(ebx < 0xa);
    M004d4a98 = 0;
    M004d4a9c = 0;
    M004d4aa0 = 0;
    M004d4aa4 = 0;
    M004d4a64 = -1;
    return 0;
}

/*    Procedure: 0x0041D377 - 0x0041D377
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D377()
{



}

/*    Procedure: 0x0041D378 - 0x0041D402
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041D4E1()
 *        L0041D4FC()
 */

L0041D378(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 >= 2) {
        if(A8 != 3) {
            eax = L0041D558(A10);
        }
        if(A8 != 4) {
            eax = L0041D544();
        }
    } else {
        eax = M00644dd0;
        M00644dd5 = A10;
        if(eax != 0) {
            if(Ac == eax) {
                goto L0041d3e2;
            }
            if(A8 == 0) {
                M00644dd0 = 0;
                L0041934C(eax, 8, 1);
            } else {
                L0041934C(eax, 8, -1);
            }
        } else {
L0041d3e2:
            M00644dd0 = A8 != 0 ? Ac : 0;
        }
        L0041D8B4();
        eax = L004552CC();
    }
}

/*    Procedure: 0x0041D403 - 0x0041D403
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D403()
{



}

/*    Procedure: 0x0041D404 - 0x0041D443
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041D8B4()
 */

L0041D404()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 0;
    ebx = 0x4d4adc;
    do {
        if(!( *ebx & 1)) {
            eax = ebx + *(ebx + 4) * 4 - 0x30;
            eax = L00457DCC( *(eax + M004d4aa8 * 4 + 8), *(ebx - 0x30), *(ebx - 0x2c));
        }
        esi = esi + 1;
        ebx = ebx + 0x3e;
    } while(esi < 0x52);
}

/*    Procedure: 0x0041D444 - 0x0041D499
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00416E20()
 *        L0041958C()
 *        L0041AC54()
 *        L0041B6F7()
 *        L0041B74B()
 *        L0041B7DE()
 *        L0041B930()
 *        L0041B9D4()
 *        L0041BB50()
 *        L0041E4BB()
 *        L0041E930()
 *        L00420558()
 *        L00421684()
 *        L00421B35()
 *        L00422AC4()
 *        L0042489C()
 *        L00426668()
 *        L00426D2C()
 *        L0042FD2C()
 *        L0042FF20()
 *        L0043475C()
 *        L00434A50()
 *        L00435957()
 *        L0043623A()
 *        L0043F26E()
 *        L0043FF64()
 *        L004405E2()
 *        L0044071C()
 *        L004407A8()
 *        L0044145D()
 *        L00442EC4()
 *        L004454FC()
 *        L00445DE4()
 *        L00445F40()
 *        L00446018()
 */

L0041D444(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    eax = (A8 << 5) - A8;
    ecx = *(eax * 2 + 0x4d4ae6);
    eax = *(eax * 2 + 0x4d4ae0);
    if(eax != Ac) {
        if(Ac != 0) {
            edx = 0;
            eax = 0x4d4ae6;
            do {
                if(ecx == *eax) {
                    *(eax - 6) = 0;
                }
                edx = edx + 1;
                eax = eax + 0x3e;
            } while(edx < 0x52);
        }
        eax = (A8 << 5) - A8;
        *(eax * 2 + 0x4d4ae0) = Ac;
    }
}

/*    Procedure: 0x0041D49A - 0x0041D49B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D49A()
{



}

/*    Procedure: 0x0041D49C - 0x0041D4BC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041B9D4()
 *        L0041D263()
 *        L0041E234()
 *        L00421684()
 *        L0043475C()
 *        L00434A50()
 *        L00435957()
 *        L0043623A()
 *        L0043ED7C()
 *        L0043FB38()
 *        L0044145D()
 *        L00445DE4()
 *        L00446018()
 *        L004509EF()
 */

L0041D49C(A8)
/* unknown */ void  A8;
{



    edx = (A8 << 5) - A8;
    if(!( *(edx * 2 + 0x4d4adc) & 1)) {
        *(edx * 2 + 0x4d4adc) = *(edx * 2 + 0x4d4adc) | 1;
    }
}

/*    Procedure: 0x0041D4BD - 0x0041D4BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D4BD()
{



}

/*    Procedure: 0x0041D4C0 - 0x0041D4E0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00414F1A()
 *        L0041B9D4()
 *        L0041E234()
 *        L0041E4BB()
 *        L00421A51()
 *        L0043716C()
 *        L0043ECB8()
 *        L0043FB38()
 *        L00440874()
 *        L0044145D()
 *        L00445DE4()
 *        L00445F40()
 *        L00446018()
 */

L0041D4C0(A8)
/* unknown */ void  A8;
{



    edx = (A8 << 5) - A8;
    if(!( *(edx * 2 + 0x4d4adc) & 1)) {
        *(edx * 2 + 0x4d4adc) = *(edx * 2 + 0x4d4adc) & -2;
    }
}

/*    Procedure: 0x0041D4E1 - 0x0041D4FA
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D4E1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0041D378(1, A8, Ac);
}

/*    Procedure: 0x0041D4FB - 0x0041D4FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D4FB()
{



}

/*    Procedure: 0x0041D4FC - 0x0041D510
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00434821()
 *        L0043482E()
 */

L0041D4FC(A8)
/* unknown */ void  A8;
{



    return L0041D378(0, 0, A8);
}

/*    Procedure: 0x0041D511 - 0x0041D513
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D511()
{



}

/*    Procedure: 0x0041D514 - 0x0041D527
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004405E2()
 */

L0041D514(A8)
/* unknown */ void  A8;
{



    L0041D544();
    return L0041D558(A8);
}

/*    Procedure: 0x0041D528 - 0x0041D531
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D528()
{



    return L0041D544();
}

/*    Procedure: 0x0041D532 - 0x0041D533
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D532()
{



}

/*    Procedure: 0x0041D534 - 0x0041D542
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041BC00()
 *        L0041E930()
 */

L0041D534(A8)
/* unknown */ void  A8;
{



    return L0041D558(A8);
}

/*    Procedure: 0x0041D543 - 0x0041D543
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D543()
{



}

/*    Procedure: 0x0041D544 - 0x0041D544
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D378()
 *        L0041D514()
 *        L0041D528()
 */

L0041D544()
{



}

/*    Procedure: 0x0041D545 - 0x0041D548
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D545()
{



}

/*    Procedure: 0x0041D549 - 0x0041D556
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D549()
{



    eax = M00644ba8;
    M00632af8 = eax;
    return M00632af8;
}

/*    Procedure: 0x0041D557 - 0x0041D557
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D557()
{



}

/*    Procedure: 0x0041D558 - 0x0041D5DE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D378()
 *        L0041D514()
 *        L0041D534()
 */

L0041D558(A8)
/* unknown */ void  A8;
{



    edx = 6572964;
    M00632afc = A8;
    if(!( *L00644C8D & 1)) {
        M00632af8 = 34329;
        return;
    }
    al = *(edx + 0xe8);
    if(al == 2) {
        M00632af8 = 34328;
        return;
    }
    if(al == 0x30) {
        M00632af8 = 34327;
        return;
    }
    if(al == 0x2a) {
        M00632af8 = 34326;
        return;
    }
    if(al == 0x34) {
        M00632af8 = 34325;
        return;
    }
    if(al == 0x24) {
        M00632af8 = 34324;
        return;
    }
    M00632af8 = 34323;
}

/*    Procedure: 0x0041D5DF - 0x0041D5DF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D5DF()
{



}

/*    Procedure: 0x0041D5E0 - 0x0041D6BE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D8B4()
 */

L0041D5E0()
{



    eax = M00644c6c;
    edx = *( *(eax + 0xd0) * 4 + 0x4d49ec);
    eax = ( *(eax + 0x11e) >> 0x10) * ( *(eax + 0x11e) >> 0x10) >> 8 & 65535;
    if(eax < 8192 && !(M00644ba5 & 0x80)) {
        eax = 65535;
    }
    eax = (eax << 2) + (eax << 2) * 2 >> 0x10;
    L00457DEC(0x113, 0xf9, 0xa1, 0, 0xad - eax, -1, -1);
    L00457DEC(0x112, 0xf2, 0xa1, 0, 0xad - ((( *(M00644c6c + 0xea) & 65535) << 2) + (( *(M00644c6c + 0xea) & 65535) << 2) * 2 >> 0x10), -1, -1);
    return L00457DEC(0x111, 0xed, 0xa1, 0, 0xad - ((M00644d90 << 2) + (M00644d90 << 2) * 2 >> 0x10), -1, -1);
}

/*    Procedure: 0x0041D6BF - 0x0041D6BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041D6BF()
{



}

/*    Procedure: 0x0041D6C0 - 0x0041D8B3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004171E4()
 *        L00421A51()
 *        L00421E0C()
 *        L00437090()
 *        L0043716C()
 *        L0043ECB8()
 *        L0043F26E()
 */

L0041D6C0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -1024;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = A8;
    if(esi != 0) {
        ebx = 0;
        (save)esi;
        edi = esi;
        esi = ebp + -1024;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
        *L005000d4(ebp + -1024, 0x78);
        for(eax = ebp + -1024; 1; eax = eax + 1) {
            dl = *eax;
            if(dl == 0) {
                break;
            }
            if(dl == 0xd) {
                ebx = ebx + 1;
            }
        }
        eax = M004d4aa4;
        edx = eax;
        eax = ((eax << 6) + edx << 3) - edx + ((eax << 6) + edx << 3) - edx + 6499097;
        (save)esi;
        edi = esi;
        esi = eax;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
        ecx = M004d4aa4;
        eax = ecx;
        ecx = ((ecx << 6) + eax << 3) - eax;
        *(ecx * 2 + 6500122) = A10;
        *(ecx * 2 + 6499096) = Ac;
        *(ecx * 2 + 6499088) = M00644ba8;
        *(ecx * 2 + 6499092) = M00644ba4;
        edi = M004d4aa4;
        esi = edi;
        M004d4aa0 = esi;
        eax = M004d4aa0 + 1;
        esi = 0xa;
        asm("cdq");
        M004d4a9c = esi / esi % esi / esi;
        if(!( *(ecx * 2 + 6500122) & 1)) {
            eax = edi + 1;
            ecx = 0xa;
            asm("cdq");
            M004d4aa4 = ecx / ecx % ecx / ecx;
            M004d4a64 = -1;
        } else {
            M004d4a64 = ebx;
        }
        eax = (ebx << 3) - 0x18 - M004d4a98 > 0 ? (ebx << 3) - 0x18 - M004d4a98 : ~((ebx << 3) - 0x18 - M004d4a98);
        M004d4a5c = eax;
        eax = eax | -1;
        if((ebx << 3) - 0x18 >= M004d4a98) {
            eax = eax + 2;
        }
        M00632b0c = eax;
        eax = M0063b308;
        M004d4a60 = eax;
    } else {
        ecx = M004d4aa4;
        eax = ecx;
        ecx = ((ecx << 6) + eax << 3) - eax;
        if(!( *(ecx * 2 + 6500122) & 1)) {
            M004d4aa0 = M004d4aa0 - 1;
            if(M004d4aa0 == -1) {
                M004d4aa0 = 9;
            }
            eax = M004d4aa0 + 1;
            ebx = 0xa;
            asm("cdq");
            M004d4a9c = ebx / ebx % ebx / ebx;
            eax = 0;
            *(ecx * 2 + 6500122) = 0;
            *(ecx * 2 + 6499097) = 0;
            M004d4a64 = -1;
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041D8B4 - 0x0041DCC5
 *    Argument size: 0
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L0041D378()
 *        L0041DD73()
 */

L0041D8B4()
{
    /* unknown */ void  Vfffffffc;



    eax = 2;
    do {
        esp = esp + -4092;
        (save)eax;
    } while(eax = eax - 1);
    eax = Vfffffffc;
    esp = esp + -2704;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = 0;
    ebx = ebp + -10644;
    ecx = ebp + -10900;
    ecx = L0044F097(ecx, M00644ba8, 1);
    *(ecx - 1) = 0x20;
    L0044F173(ecx, M00644ba4);
    *ebx = 1;
    ebx = ebx + 1;
    *ebx = 4;
    ebx = ebx + 1;
    (save)edi;
    esi = ebx;
    edi = ebp + -10900;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)edi;
    eax = L00471288(ebp + -10900);
    ebx = ebx + eax;
    *ebx = 0xd;
    ebx = ebx + 1;
    *ebx = 0;
    esi = M004d4aa0 + 1;
    Vfffffffc = 1;
    if(M00644bb1 != 0) {
        do {
            ecx = ebp + -10900;
            esi = esi - 1;
            if(esi < 0) {
                esi = 9;
            }
            eax = esi;
            (save)ecx;
            ecx = 0xa;
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
            (restore)ecx;
            if(*((((edx << 6) + edx << 3) - edx) * 2 + 6499097) != 0) {
                eax = esi;
                (save)ecx;
                ecx = 0xa;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
                if(!( *((((edx << 6) + edx << 3) - edx) * 2 + 6500122) & 1) && Vfffffffc == 0) {
                    *ebx = 1;
                    ebx = ebx + 1;
                    *ebx = 4;
                    ebx = ebx + 1;
                    (save)1;
                    eax = esi;
                    (save)ecx;
                    ecx = 0xa;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    (save) *((((edx << 6) + edx << 3) - edx) * 2 + 6499088);
                    (save)ecx;
                    esp = esp + 0xc;
                    ecx = L0044F097();
                    *(ecx - 1) = 0x20;
                    eax = esi;
                    (save)ecx;
                    ecx = 0xa;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    L0044F173(ecx, *((((edx << 6) + edx << 3) - edx) * 2 + 6499092));
                    (save)esi;
                    (save)edi;
                    esi = ebx;
                    edi = ebp + -10900;
                    eax = 0;
                    ecx = ecx | -1;
                    asm("repne scasb");
                    ecx = !ecx;
                    edi = edi - ecx;
                    asm("xchg esi,edi");
                    eax = edi;
                    edx = ecx;
                    ecx = ecx >> 2;
                    asm("rep movsd");
                    ecx = edx & 3;
                    asm("rep movsb");
                    (restore)edi;
                    (restore)esi;
                    ebx = ebx + L00471288(ebp + -10900);
                    *ebx = 0xd;
                    ebx = ebx + 1;
                }
                *ebx = 1;
                ebx = ebx + 1;
                *ebx = 6;
                ebx = ebx + 1;
                eax = esi;
                ecx = 0xa;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
                (save)esi;
                (save)edi;
                edi = ((edx << 6) + edx << 3) - edx + ((edx << 6) + edx << 3) - edx + 6499097;
                esi = ebx;
                eax = 0;
                ecx = ecx | -1;
                asm("repne scasb");
                ecx = !ecx;
                edi = edi - ecx;
                asm("xchg esi,edi");
                eax = edi;
                edx = ecx;
                ecx = ecx >> 2;
                asm("rep movsd");
                ecx = edx & 3;
                asm("rep movsb");
                (restore)edi;
                (restore)esi;
                eax = esi;
                ecx = 0xa;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                ebx = ebx + L00471288(((edx << 6) + edx << 3) - edx + ((edx << 6) + edx << 3) - edx + 6499097);
                *ebx = 0xd;
                ebx = ebx + 1;
                Vfffffffc = 0;
            }
            *ebx = 0;
        } while(esi != M004d4a9c);
        L00457DCC(0x2b, 0, 0x9e);
        L00457DCC(M004d4a28 + 0xfe, 0x65, 0xaf);
        L0041D404();
        L0041D5E0();
        if(!( *(M00644c6c + 0xca) & 4)) {
            L0041DF24();
        }
        *L005000d4(ebp + -10644, 0x7c);
        for(ebx = ebp + -10644; 1; ebx = ebx + 1) {
            al = *ebx;
            if(al == 0) {
                break;
            }
            if(al == 0xd) {
                edi = edi + 1;
            }
        }
        eax = 0x9f - M004d4a98;
        M006353e8 = eax;
        M006353ec = edi;
        M00502ebc = 0;
        M00502ec0 = 0;
        M00502ec4 = 0;
        M00502ecc = 0;
        M00502ed4 = 0;
        L004555B8(ebp + -10644, 0xc4, M006353e8, 0, 0x9e, -1, 8);
        M00502ebc = 0x10;
        M00502ec0 = 0x5f;
        M00502ec4 = 0x11;
        M00502ecc = 0xf;
        M00502ed4 = 0x43;
        L004555B8(ebp + -10644, 0xc3, M006353e8 - 1, 4, 0x9e, -1, 8);
        if(!(M00644bb0 & 1)) {
            ax = M00657642;
            if(ax > 0x9e) {
                M00503078 = M00503078 + 1;
                L004581C8(0x502e6c, M00657640, ax);
                M00503078 = M00503078 - 1;
                eax = L0046FC94(0x9e);
            } else {
                if(M00657642 > 0x90) {
                    L00458204(M00502e6c);
                    L004581C8(0x502e6c, M00657640, M00657642);
                    L0046FC94(0x90);
                    eax = L004582E8(M00502e6c);
                } else {
                    eax = L0046FC94(0x9e);
                }
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041DCC6 - 0x0041DD64
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 */

L0041DCC6(A8, Ac, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = bx;
    Vfffffffe = si;
    eax = A18;
    asm("imul dword [ebp+0x10]");
    ax = ~((eax >> 0x10) - bx);
    Vfffffff8 = ax;
    eax = A18;
    asm("imul dword [ebp+0x14]");
    Vfffffffa = (eax >> 0x10) + si;
    L00457ABC( & Vfffffffc, & Vfffffff8, M00632ab4);
    eax = A8 + 1;
    Vfffffff4 = ax;
    Vfffffff6 = si;
    eax = A18;
    asm("imul dword [ebp+0x10]");
    Vfffffff0 = ~((eax >> 0x10) - bx) + 1;
    Vfffffff2 = ~((A14 * A14 >> 0x10) - si);
    return L00457ABC( & Vfffffff4, & Vfffffff0, M00632ab4);
}

/*    Procedure: 0x0041DD65 - 0x0041DD72
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041DD65()
{



    M005015e0 = 1;
}

/*    Procedure: 0x0041DD73 - 0x0041DF20
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L0041DD73()
{
    /* unknown */ void  ebx;



    M004d4a28 = (M00644db4 & 65535) >> 9 & 7;
    if(M004d4a5c != 0) {
        M004d4a5c = M004d4a5c - 1;
        M004d4a98 = M004d4a98 + M00632b0c;
    }
    if(M004d4a5c != 0) {
        M004d4a5c = M004d4a5c - 1;
        M004d4a98 = M004d4a98 + M00632b0c;
    }
    *L00500398();
    ebx = al & 0xff;
    if(ebx != 0) {
        if(!(eax = ebx - 0xe)) {
            if(!(eax = eax - 1)) {
                *L0050039c(ebx);
            } else {
                if(M004d4a5c == 0 && (M006353ec << 3) - 8 > M004d4a98) {
                    eax = (M006353ec << 3) - 8 - M004d4a98 < 0x20 ? (M006353ec << 3) - 8 - M004d4a98 : 0x18;
                    M004d4a5c = eax;
                    M00632b0c = 1;
                }
                M004d4a60 = M0063b308;
            }
        } else {
            if(M004d4a5c == 0 && M004d4a98 > -24) {
                eax = M004d4a98 < 0 ? M004d4a98 + 0x20 : 0x20;
                M004d4a5c = eax;
                M00632b0c = -1;
            }
            M004d4a60 = M0063b308;
        }
    }
    if(M0063b308 - M004d4a60 > 248550 && (M004d4a64 << 3) - 0x18 != M004d4a98) {
        eax = M004d4a98 + 0x18 - (M004d4a64 << 3) > 0 ? M004d4a98 + 0x18 - (M004d4a64 << 3) : ~(M004d4a98 + 0x18 - (M004d4a64 << 3));
        M004d4a5c = eax;
        eax = eax | -1;
        if((M004d4a64 << 3) - 0x18 >= M004d4a98) {
            eax = eax + 2;
        }
        M00632b0c = eax;
    }
    return L0041D8B4();
}

/*    Procedure: 0x0041DF21 - 0x0041DF23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041DF21()
{



}

/*    Procedure: 0x0041DF24 - 0x0041DFA1
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L0041D8B4()
 */

L0041DF24()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;



    esi = 6595504;
    eax = M00644c6c;
    if(*(eax + 0x57) != 0) {
        *L005030e0(eax);
    }
    eax = *L005030d8( & Vffffffe8, M00644c6c);
    ebx = 0x72;
    do {
        edx = *esi;
        al = *(edx + ebx);
        if(!(al & 8)) {
            ecx = *esi;
            if(!(al & 0x20)) {
                eax = M00644c6c;
                eax = L0041DFB0(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + edx + 0x74, *(eax + 0x56) & 0xff, *(eax + 0x86) & 0xff);
            }
        }
        ebx = ebx - 1;
    } while(ebx > 0);
}

/*    Procedure: 0x0041DFA2 - 0x0041DFAF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041DFA2()
{



    M00644bb1 :: 0;
}

/*    Procedure: 0x0041DFB0 - 0x0041E233
 *    Argument size: 12
 *    Local size: 44
 *    Save regs size: 12
 *    Called by:
 *        L0041DF24()
 */

L0041DFB0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;



    eax = Ac;
    ebx = A8;
    edi = & Vffffffec;
    if(eax == ( *(ebx + 0x56) & 0xff) || eax == ( *(ebx + 0x86) & 0xff)) {
        eax = *(ebx + 0x86) & 0xff;
        if(eax != A10 && !( *(ebx + 0x14c) & 0x20)) {
            *L005030dc( & Vffffffd4, ebx, M00644c6c);
            eax = L00459E08( & Vffffffd4, 0x1c);
            if(eax <= 0) {
                ecx = M00644c6c;
                eax = M00644c6c;
                if(*(eax + 0x57) != 0 && *(ebx + 0x57) == 0 && *(eax + 0x56) != *(ebx + 0x86)) {
                    ecx = eax + 0x5a;
                }
                eax = Vffffffd4;
                esi = 0x131;
                asm("cdq");
                edx = esi / esi % esi / esi;
                *edi = eax;
                eax = Vffffffdc;
                esi = 0x131;
                asm("cdq");
                edx = esi / esi % esi / esi;
                *(edi + 4) = eax;
                eax = Vffffffe4;
                esi = 0x131;
                asm("cdq");
                edx = esi / esi % esi / esi;
                *(edi + 8) = eax;
                L0045A968(edi, edi, ecx);
                esi = L0045122F(edi);
                Vfffffffc = 0xf;
                eax = *L00501b9c( *(ebx + 0x82));
                if(*(eax + 0x38) != 0) {
                    dx = *( *(eax + 0x38) + 6);
                    if(dx < 0x12c && dx >= 0) {
                        eax = *((dx >> 4) * 4 + 6509468);
                        Vfffffffc = eax;
                    }
                }
                if(esi <= 327680) {
                    if(esi > 65536) {
                        ebx = esi;
                        *edi = L004537B0(L00452DF7( *edi, ebx), 65536);
                        *(edi + 4) = L004537B0(L00452DF7( *(edi + 4), ebx), 65536);
                        *(edi + 8) = L004537B0(L00452DF7( *(edi + 8), ebx), 65536);
                    } else {
                        if(esi < 13107) {
                            ebx = esi;
                            *edi = L004537B0(L00452DF7( *edi, ebx), 13107);
                            *(edi + 4) = L004537B0(L00452DF7( *(edi + 4), ebx), 13107);
                            *(edi + 8) = L004537B0(L00452DF7( *(edi + 8), ebx), 13107);
                        }
                    }
                    eax = *edi + *edi * 4 + ( *edi + *edi * 4) * 8;
                    if(eax < 0) {
                        eax = eax + 65535;
                    }
                    *edi = eax >> 0x10;
                    eax = *(edi + 4) + *(edi + 4) * 4 + ( *(edi + 4) + *(edi + 4) * 4) * 8;
                    if(eax < 0) {
                        eax = eax + 65535;
                    }
                    *(edi + 4) = eax >> 0x10;
                    ebx = *(edi + 8) + *(edi + 8) * 4 + ( *(edi + 8) + *(edi + 8) * 4) * 8;
                    if(ebx < 0) {
                        ebx = ebx + 65535;
                    }
                    ebx = ebx >> 0x10;
                    *(edi + 8) = ebx;
                    ecx = *edi;
                    ebx = 0x2d;
                    asm("cdq");
                    edx = ebx / ebx % ebx / ebx;
                    edx = ~eax;
                    eax = *(edi + 4) >> 1;
                    if(!(eax = ebx + ebx + (ebx + ebx) * 4)) {
                        asm("adc eax,+0x0");
                    }
                    Vfffffff8 = cx + 0x93;
                    Vfffffffa = dx + 0xbb;
                    edx = 0;
                    if(M0063218a >= 0) {
                        edx = -1;
                    }
                    eax = L004550D0( & Vfffffff8, eax, Vfffffffc, edx);
                }
            }
        }
    }
}

/*    Procedure: 0x0041E234 - 0x0041E2D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416E20()
 *        L0041E930()
 */

L0041E234()
{



    if(M00649cbe != 0) {
        L0041D49C(3);
    } else {
        L0041D4C0(3);
    }
    if(M00649a94 != 0) {
        L0041D49C(4);
    } else {
        L0041D4C0(4);
    }
    if(M00644cc4 != 0) {
        L0041D49C(5);
    } else {
        L0041D4C0(5);
    }
    if(M006495bc != 0) {
        L0041D49C(6);
    } else {
        L0041D4C0(6);
    }
    if(M00649bd4 != 0) {
        L0041D49C(7);
    } else {
        L0041D4C0(7);
    }
    L0041D49C(8);
    L0041D49C(9);
    return L0041D49C(0xa);
}

/*    Procedure: 0x0041E2D8 - 0x0041E2FB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0041E2D8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x4d5e88);
}

/*    Procedure: 0x0041E2FC - 0x0041E3F1
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 12
 */

L0041E2FC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    eax = A8;
    esi = *eax;
    if(*(esi + 0x88) < 0x11 && *(esi + 0x82) != 0x68 && *(esi + 0x82) != 0x69) {
        eax = *L00501b8c();
        if(eax < 0x1000) {
            bl = 1;
            L0042CBE4(esi, *L004eeed4(4), & Vffffffe8);
            if(*(esi + 0x124) == 0x2a) {
                eax = L0042CD3E( & Vffffffe8);
                edi = eax;
            } else {
                eax = L0042CD50( & Vffffffe8);
                edi = eax;
            }
            if(edi != 0) {
                *(edi + 0xff) = bl;
                L0045A044(edi + 0x3e, esi + 0x3e);
                *(edi + 0x56) = *(esi + 0x56);
                *(edi + 0x57) = *(esi + 0x57);
                (save)esi;
                (save)edi;
                ecx = 9;
                asm("rep movsd");
                (restore)edi;
                (restore)esi;
                eax = *(edi + 0x18) >> 0x15;
                *(edi + 0x8c) = eax + ( *(edi + 0xc) >> 0x15);
                eax = *(edi + 0x1c) >> 0x15;
                *(edi + 0x90) = eax + ( *(edi + 0x10) >> 0x15);
                eax = *(edi + 0x20) >> 0x15;
                eax = eax + ( *(edi + 0x14) >> 0x15);
                *(edi + 0x94) = eax;
            }
        }
    }
}

/*    Procedure: 0x0041E3F2 - 0x0041E412
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041E3F2()
{



    if(M006321e2 != 0) {
        eax = L0041E8C0();
        eax = L0041EA0C(M00649a8e);
    }
}

/*    Procedure: 0x0041E413 - 0x0041E4BA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0041E413(A8)
/* unknown */ void  A8;
{



    if(!(eax = (A8 & 0xff) - 2)) {
        == ? L0041e468 : ;
        return;
    }
    M006495bc = 0;
    M00649bd0 = 0;
    M00649bd4 = 0;
    M006495dd = 0;
    M00649a94 = 0;
    M00649c78 = 0;
    edx = 0;
    eax = 6593668;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 4;
    } while(edx < 6);
    return;
    L00413E60(0xb, 0, M00644c64, 0x41e3f4, 0, 1);
    L00413E60(0x12, 0, M00644c64, 0x41e3f4, 0, 1);
    return L00413E60(0x13, 0, M00644c64, 0x41e3f4, 0, 1);
}

/*    Procedure: 0x0041E4BB - 0x0041E537
 *    Argument size: 0
 *    Local size: 80
 *    Save regs size: 4
 */

L0041E4BB()
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffb1;
    /* unknown */ void  Vffffffb2;
    /* unknown */ void  Vffffffb3;



    M006321e2 = 0;
    M00644bb0 = M00644bb0 | 1;
    M006495dd = M00649a8e;
    L00420558(M00649a8e);
    ebx = 0;
    do {
        L0041D4C0(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0xa);
    eax = L0041D444(0xd, 0);
    Vffffffb1 = (M004eece0 << 2) + 3;
    Vffffffb2 = (M004eece1 << 2) + 3;
    Vffffffb3 = (M004eece2 << 2) + 3;
    return L0045527C( & Vffffffb1);
}

/*    Procedure: 0x0041E538 - 0x0041E559
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E55C()
 *        L0041F544()
 *        L0041F6D4()
 *        L00420574()
 *        L004205E8()
 *        L004207A0()
 *        L00420B84()
 *        L00420DD8()
 */

L0041E538(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return *L005000d8(A8, Ac, 0xf, A10, A14, 0);
}

/*    Procedure: 0x0041E55A - 0x0041E55B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041E55A()
{



}

/*    Procedure: 0x0041E55C - 0x0041E8BE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041EA0C()
 */

L0041E55C()
{



    esp = esp + -148;
    (save)ebx;
    (save)esi;
    (save)edi;
    L0043E55C(0);
    *(ebp - 6) = *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 0xe);
    *(ebp - 0x44) = *(ebp - 6);
    L00420F18(39940, ebp - 0x44);
    eax = M00644c6c;
    *(ebp - 4) = 5;
    *(ebp - 2) = 0x2f;
    edx = *(eax + 0xc8);
    ebx = edx << 0x10;
    ebx = ebx | edx >> 0x10;
    edx = *(eax + 0xcc);
    ecx = edx << 0x10;
    *(ebp - 0x10) = ecx | edx >> 0x10;
    ebx = ebx | *(ebp - 0x10);
    *(ebp - 0x10) = !( *(ebp - 0x10));
    edx = 0;
    eax = 1;
    do {
        ecx = eax & ebx;
        ecx :: 1;
        asm("sbb ecx,ecx");
        ecx = ~ecx;
        ecx :: 1;
        asm("sbb ecx,ecx");
        edx = edx + ~ecx;
        eax = eax + eax;
    } while(eax != 0);
    if(edx > 0x10) {
        *(ebp - 0x18) = 7;
        edx = edx + 1 >> 1;
        >= ? 0x41e615 : ;
        asm("adc edx,+0x0");
        *(ebp - 0x1c) = edx;
        eax = *(ebp - 0x1c) - *(ebp - 0x18);
        M006353f4 = eax;
        if(eax < M006353f0) {
            M006353f0 = eax;
        }
        *(ebp - 0x14) = M006353f0;
        if(eax > *(ebp - 0x14)) {
            L00457DCC(0x30, 0x14, 0x70);
        }
        if(*(ebp - 0x14) > 0) {
            L00457DCC(0x2f, 0x20, 0x70);
        }
    } else {
        M006353f4 = 0;
        *(ebp - 0x14) = 0;
        *(ebp - 0x18) = 8;
        *(ebp - 0x1c) = 8;
    }
    edi = 0;
    esi = 0x4d60bc;
    do {
        if(!(bl & 1)) {
            if(edi >= *(ebp - 0x14)) {
                eax = *(ebp - 0x14) + *(ebp - 0x18);
                if(edi < eax) {
                    al = 0x11;
                    if(!( *(ebp - 0x10) & 1)) {
                        eax = 0x10;
                    }
                    *(ebp - 0x58) = *(ebp - 6);
                    *L005000d8( *esi, ebp - 0x58, eax & 0xff, *(ebp - 4), *(ebp - 2), 0);
                    *(ebp - 2) = *(ebp - 2) + 9;
                }
            }
            edi = edi + 1;
            if(edi == *(ebp - 0x1c)) {
                edi = 0;
                *(ebp - 4) = 0x60;
                *(ebp - 2) = 0x2f;
            }
        }
        *(ebp - 0x10) = *(ebp - 0x10) >> 1;
        ebx = ebx >> 1;
        esi = esi + 4;
    } while(ebx != 0);
    ecx = M00644c6c;
    esi = ( *(ecx + 0xe2) & 65535) >> 6;
    eax = ( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535) + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535)) * 4 + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535) + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535)) * 4) * 4 + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535) + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535)) * 4 + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535) + (( *(ecx + 0xe4) & 65535) + ( *(ecx + 0xe4) & 65535)) * 4) * 4) * 4;
    edx = 0;
    edx = *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 6) / *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 6) % *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 6) / *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 6);
    ebx = eax;
    *(ebp - 0x20) = 1;
    L0043B970(ecx, ebp - 0x20, ebp - 0x28, ebp - 0x2c, ebp - 0x30, ebp - 0xc, ebp - 0x24);
    *(ebp - 4) = 5;
    *(ebp - 2) = 0xf;
    *(ebp - 0x60) = esi;
    *(ebp - 0x6c) = ebx;
    *(ebp - 0x68) = *(ebp - 0x24);
    *(ebp - 0x5c) = *(ebp - 0x28);
    *(ebp - 0x64) = *(ebp - 0x30);
    L0041E538(39954, ebp - 0x6c, *(ebp - 4), 0xf);
    edx = M00644c6c;
    eax = edx + 0xd2;
    *(ebp - 4) = 5;
    *(ebp - 2) = 0x7d;
    if(*(edx + 0xd1) == 0) {
        L00420574();
        eax = L0043E580(0xbd, 2, 0x13d, 0x82);
    } else {
        ebx = 0;
        for(esi = eax; 1; esi = esi + 1) {
            eax = M00644c6c;
            if(bl >= *(eax + 0xd1)) {
                break;
            }
            eax = ( *esi & 0x78) >> 3;
            if(*(M00644c6c + 0xd1) != 4 || bl != 2) {
                *(ebp + -148) = bl + 39024;
                *(ebp + -144) = *(eax * 4 + 0x4d6134);
                L0041E538(39948, ebp + -148, *(ebp - 4), *(ebp - 2));
            } else {
                *(ebp - 0x80) = 39028;
                eax = *(eax * 4 + 0x4d6134);
                *(ebp - 0x7c) = eax;
                ebx = ebx + 1;
                esi = esi + 1;
                *(ebp - 0x78) = *((( *esi & 0x78) >> 3) * 4 + 0x4d6134);
                L0041E538(39949, ebp - 0x80, *(ebp - 4), *(ebp - 2));
            }
            *(ebp - 2) = *(ebp - 2) + 0xa;
            ebx = ebx + 1;
        }
        L00420574();
        eax = L0043E580(0xbd, 2, 0x13d, 0x82);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041E8BF - 0x0041E8BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041E8BF()
{



}

/*    Procedure: 0x0041E8C0 - 0x0041E92F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E3F2()
 *        L0041E930()
 */

L0041E8C0()
{



    eax = *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 0xc);
    edx = (eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4 + ((eax << 4) + (eax << 4) * 4 + ((eax << 4) + (eax << 4) * 4) * 4) * 4) * 4) * 8;
    if(edx < 0) {
        edx = edx + 0xff;
    }
    M006495a4 = edx >> 8;
    edx = eax * 11000;
    if(edx < 0) {
        edx = edx + 0xff;
    }
    M006495ac = edx >> 8;
    eax = (eax << 3) + (eax << 3) * 4 + ((eax << 3) + (eax << 3) * 4) * 4 + ((eax << 3) + (eax << 3) * 4 + ((eax << 3) + (eax << 3) * 4) * 4) * 4;
    M006495b4 = eax;
    return M006495b4;
}

/*    Procedure: 0x0041E930 - 0x0041EA0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L0041E930()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    if(M006321e2 != 0) {
        L0041EA0C( *L006495DD);
        return L0041D444(0xd, 1);
    }
    *L004eecd0(0xe);
    M006321e2 = 1;
    L0041D534(39947);
    L0041E234();
    L0041D444(0xd, 1);
    *(ebx + 0x2c) = -18919;
    *(ebx + 0x30) = -18919;
    *(ebx + 0x34) = 18919;
    *(ebx + 0x56) = 7;
    *(ebx + 0x55) = 7;
    *(ebx + 0x54) = 7;
    *(ebx + 0x59) = 7;
    *(ebx + 0x58) = 7;
    *(ebx + 0x57) = 7;
    *(ebx + 0x5c) = 6;
    *(ebx + 0x5b) = 6;
    *(ebx + 0x5a) = 6;
    *(ebx + 0x5f) = 5;
    *(ebx + 0x5e) = 5;
    *(ebx + 0x5d) = 5;
    *(ebx + 0x62) = 4;
    *(ebx + 0x61) = 4;
    *(ebx + 0x60) = 4;
    *(ebx + 0x65) = 3;
    *(ebx + 0x64) = 3;
    *(ebx + 0x63) = 3;
    *(ebx + 0x68) = 2;
    *(ebx + 0x67) = 2;
    *(ebx + 0x66) = 2;
    *(ebx + 0x6b) = 1;
    *(ebx + 0x6a) = 1;
    *(ebx + 0x69) = 1;
    eax = L0041E8C0();
    return L0041EA0C( *(ebx + 19001));
}

/*    Procedure: 0x0041EA0C - 0x0041EBE9
 *    Argument size: 4
 *    Local size: 80
 *    Save regs size: 4
 *    Called by:
 *        L0041E3F2()
 *        L0041E930()
 *        L0041F15A()
 *        L0042093C()
 *        L00420AEC()
 */

L0041EA0C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffb1;
    /* unknown */ void  Vffffffb2;
    /* unknown */ void  Vffffffb3;



    M00649a8e = bl;
    L004204B4();
    *L005003b0();
    eax = bl;
    if(eax <= 6) {
        switch(eax) {
            case 0:
L0041ea56:
                *L005003b4(0x4d6390);
                Vffffffb1 = 0x13;
                Vffffffb2 = 0x13;
                Vffffffb3 = 0x23;
                L0045527C( & Vffffffb1);
                M00644bb0 = M00644bb0 & 0xfe;
                L0041E55C();
                L00458384();
                L0041E55C();
                eax = L0041EC08();
                goto L0041ebe5;
            case 1:
                Vffffffb1 = 0x13;
                Vffffffb2 = 0x13;
                Vffffffb3 = 0x13;
                L0045527C( & Vffffffb1);
                L004205E8();
                L00458384();
                L004205E8();
                eax = L0041EC08();
                goto L0041ebe5;
            case 2:
                M004d663c = 0;
                Vffffffb1 = 0x1b;
                Vffffffb2 = 0x1b;
                Vffffffb3 = 0x1b;
                L0045527C( & Vffffffb1);
                L004207A0();
                L00458384();
                L004207A0();
                eax = L0041EC08();
                goto L0041ebe5;
            case 3:
                M004d663c = 0;
                Vffffffb1 = 0x2b;
                Vffffffb2 = 0x13;
                Vffffffb3 = 0x13;
                L0045527C( & Vffffffb1);
                eax = L0041EBEC();
                goto L0041ebe5;
            case 4:
                Vffffffb1 = 0x23;
                Vffffffb2 = 0x13;
                Vffffffb3 = 3;
                L0045527C( & Vffffffb1);
                L0041F6D4();
                L00458384();
                L0041F6D4();
                eax = L0041EC08();
                goto L0041ebe5;
            case 5:
                Vffffffb1 = 0x13;
                Vffffffb2 = 0x1b;
                Vffffffb3 = 0x1b;
                L0045527C( & Vffffffb1);
                L00458384();
                L00420B84();
                L00458384();
                M00644bb0 = M00644bb0 & 0xfe;
                eax = L00420B84();
                goto L0041ebe5;
            case 6:
                M004d663c = 0;
                Vffffffb1 = 0x13;
                Vffffffb2 = 0x23;
                Vffffffb3 = 0x13;
                L0045527C( & Vffffffb1);
                L00420DD8();
                L00458384();
                eax = L0041EC08();
                goto L0041ebe5;
        }
        goto L0041ea56;
    }
    Vffffffb1 = 0x13;
    Vffffffb2 = 0x13;
    Vffffffb3 = 0x23;
    L0045527C( & Vffffffb1);
    M00644bb0 = M00644bb0 & 0xfe;
    L0041E55C();
    L00458384();
    L0041E55C();
    eax = L0041EC08();
L0041ebe5:
}

/*    Procedure: 0x0041EBEA - 0x0041EBEB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041EBEA()
{



}

/*    Procedure: 0x0041EBEC - 0x0041EC04
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041EA0C()
 *        L0041ECCC()
 *        L0041F15A()
 */

L0041EBEC()
{



    L0041F544();
    L00458384();
    L0041F544();
    return L0041EC08();
}

/*    Procedure: 0x0041EC05 - 0x0041EC07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041EC05()
{



}

/*    Procedure: 0x0041EC08 - 0x0041ECC9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041EA0C()
 *        L0041EBEC()
 *        L0041F15A()
 *        L0041F518()
 */

L0041EC08()
{



    esp = esp + -340;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = ebp + -340;
    L0043E580(0xbd, 2, 0x13d, 0x82);
    M00644bb0 = M00644bb0 & 0xfe;
    *L00501b98(ebx, M00644c6c, 0);
    *(ebx + 0x26) = 0;
    *(ebx + 0x2e) = 0;
    *(ebx + 0x36) = 0;
    *(ebx + 0x2a) = 0;
    *(ebx + 0x32) = 0;
    *(ebx + 0x3a) = 0;
    *(ebx + 0xb6) = 0;
    *(ebx + 0xba) = 0;
    esi = 6591908;
    edi = ebx + 0x26;
    ecx = 6;
    asm("rep movsd");
    *(ebx + 0x9c) = M00644ba4 >> 0xa;
    eax = M0064959c;
    M00644b9c = eax;
    edx = M006495a0;
    M00644ba0 = edx;
    L0045AFF0(ebx, M00644b9c, M00644ba0);
    eax = *L005030ec(ebx);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041ECCA - 0x0041ECCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041ECCA()
{



}

/*    Procedure: 0x0041ECCC - 0x0041EE24
 *    Argument size: 0
 *    Local size: 96
 *    Save regs size: 8
 *    Called by:
 *        L0041F15A()
 */

L0041ECCC()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;



    eax = 6572964;
    esi = *L00644C6C;
    dl = *(esi + 0xd0);
    ecx = *((dl & 0xff) * 4 + 0x4d6400);
    esi = *(esi + 0x11e);
    if(esi >= ecx - 26843545) {
        Vffffffd0 = 39395;
        Vffffffe8 = -1;
        L00421DEC( & Vffffffd0);
        eax = L0041EBEC();
    } else {
        if(dl >= 0xa) {
            if(*(eax + 0x15c) <= 0) {
                eax = L0041F518();
                goto L0041ee1f;
            }
            *(eax + 0x15c) = *(eax + 0x15c) - 1;
            *(eax + 0x16e) = *(eax + 0x16e) + 1;
        } else {
            if(*(eax + 0x15a) <= 0) {
                eax = L0041F518();
                goto L0041ee1f;
            }
            *(eax + 0x15a) = *(eax + 0x15a) - 1;
            *(eax + 0x120) = *(eax + 0x120) - 1;
        }
        *(eax + 0xc6) = *(eax + 0xc6) & 65534;
        edx = *(eax + 0xc8);
        *(edx + 0xbc) = *(eax + 0x214);
        *(edx + 0xbe) = *(eax + 0x218);
        *(edx + 0xc0) = *(eax + 0x21c);
        *(edx + 0xc2) = *(eax + 0x220);
        *(edx + 0xc4) = *(eax + 0x224);
        *(edx + 0xc6) = *(eax + 0x228);
        *(edx + 0x11e) = *(edx + 0x11e) + 536870912;
        edx = *( *(eax + 0xc8) + 0x11e);
        if(ecx >= edx) {
            if(esi >= edx) {
                goto L0041edf6;
            }
            eax = L0041EBEC();
        } else {
L0041edf6:
            *( *(eax + 0xc8) + 0x11e) = ecx;
            Vffffffa0 = 39395;
            Vffffffb8 = -1;
            L00421DEC( & Vffffffa0);
            eax = L0041EBEC();
        }
    }
L0041ee1f:
}

/*    Procedure: 0x0041EE25 - 0x0041EE27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041EE25()
{



}

/*    Procedure: 0x0041EE28 - 0x0041EF5B
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L00425ED4()
 *        L00426520()
 */

L0041EE28(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    esi = 6572964;
    *(6572964 + ( *L006495BC + *L006495BC * 4) * 4 + 19006) = eax;
    *(6572964 + ( *L006495BC + *L006495BC * 4) * 4 + 19002) = Ac;
    *(6572964 + ( *L006495BC + *L006495BC * 4) * 4 + 19010) = A10;
    *(6572964 + ( *L006495BC + *L006495BC * 4) * 4 + 19014) = A14;
    *(6572964 + ( *L006495BC + *L006495BC * 4) * 4 + 19018) = A18;
    *L006495BC = *L006495BC + 1;
    ebx = *(6572964 + ( *L006495BC + *L006495BC * 4) * 4 + 19006) >> 9 & 0xf;
    eax = ebx + ebx * 2;
    if(*(eax * 2 + 0x4d6640) != 0) {
        eax = *L00501b8c();
        if(eax <= *((ebx + ebx * 2) * 2 + 0x4d6640)) {
            eax = ebx + ebx * 2;
            if(!(al = *(eax * 2 + 0x4d6644) - 1)) {
                == ? L0041ef47 : ;
                if(al = al - 1) {
                    goto L0041eef3;
                }
                if(al = al - 1) {
                    goto L0041ef15;
                }
            } else {
                eax = L0042CD80( *(esi + 0xc0), A18);
                goto L0041ef57;
L0041eef3:
                L0042CDBF( *(esi + 0xc0), A18);
                eax = L0042CDBF( *(esi + 0xc0), A18);
                goto L0041ef57;
L0041ef15:
                L0042CD95( *(esi + 0xc0), A18);
                L0042CD95( *(esi + 0xc0), A18);
                eax = L0042CD95( *(esi + 0xc0), A18);
                goto L0041ef57;
                eax = L0042CDAA( *(esi + 0xc0), A18);
            }
        }
    }
L0041ef57:
}

/*    Procedure: 0x0041EF5C - 0x0041F159
 *    Argument size: 8
 *    Local size: 84
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L0041F15A()
 *        L00442EC4()
 */

L0041EF5C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffac;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;



    ebx = Ac;
    esi = A8;
    if(esi == M00644c6c) {
        L004124F8(5, ebx + 0x3e8);
        if(L00412518(5) == 0) {
            eax = 0;
            goto L0041f153;
        }
        L004124F8(5, 0);
        if(*(ebx * 2 + 6573272) != 0) {
            *(ebx * 2 + 6573272) = *(ebx * 2 + 6573272) + 65535;
            M00644cc4 = M00644cc4 - 1;
        } else {
            eax = 0;
            goto L0041f153;
        }
        Vffffffcc = 39983;
        Vffffffd0 = ebx + 36352;
        Vffffffe4 = -1;
        L00421DEC( & Vffffffcc);
    }
    edi = *(ebx + 0x4d643c);
    ebx = *L004eeedc(M0064a3b0, M00644c6c, 0xf, 0x99, & Vfffffffc);
    if(ebx != 0) {
        *(ebx + 0x9e) = di;
        *L005000c0(6594840, edi + 36352, & Vffffffb8);
        (save)esi;
        esi = ebx + 0x124;
        edi = 6594840;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
        *(ebx + 0x87) = 0xb;
        *(ebx + 0xff) = 0x16;
        Vffffffac = *(esi + 0xc);
        Vffffffb0 = *(esi + 0x10);
        Vffffffb4 = *(esi + 0x14);
        *L00501b8c();
        eax = M00644bc8;
        Vffffffac = (Vffffffac >> 0xb) + (eax >> 0x10);
        Vffffffb0 = (Vffffffb0 >> 0xb) + (eax << 0x10 >> 0x10);
        Vffffffb4 = (Vffffffb4 >> 0xb) + (M00644bcc >> 0x10);
        *(ebx + 0x8c) = *(ebx + 0x8c) - (Vffffffac >> 0xc);
        *(ebx + 0x90) = *(ebx + 0x90) - (Vffffffb0 >> 0xc);
        *(ebx + 0x94) = *(ebx + 0x94) - (Vffffffb4 >> 0xc);
        Vffffffac = *(esi + 0xc);
        Vffffffb0 = *(esi + 0x10);
        Vffffffb4 = *(esi + 0x14);
        edi = ~( *(esi + 0x140));
        Vffffffac = L004537B0( *(esi + 0xc), edi);
        Vffffffb0 = L004537B0( *(esi + 0x10), edi);
        Vffffffb4 = L004537B0( *(esi + 0x14), edi);
        *L005016f4(ebx, & Vffffffac);
        if(esi == M00644c6c) {
            L004701BE(0x20);
        }
    }
    eax = ebx;
L0041f153:
}

/*    Procedure: 0x0041F15A - 0x0041F514
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041F15A()
{



    esp = esp + -212;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = 6572964;
    ebx = *L00500398() & 0xff;
    if(ebx == 0) {
        eax = L0041F518();
    } else {
        if(ebx == 0xf5) {
            eax = L00416E20(0);
        } else {
            if(ebx == 0xf6) {
                eax = L0041EA0C(0);
            } else {
                if(ebx == 0xf7) {
                    eax = L0041EA0C(1);
                } else {
                    if(ebx == 0xf8) {
                        if(*(edi + 20528) == 0) {
                            goto L0041f1e2;
                        }
                        eax = L0041EA0C(2);
                    } else {
L0041f1e2:
                        if(ebx == 0xf9) {
                            if(*(edi + 18968) == 0) {
                                goto L0041f200;
                            }
                            eax = L0041EA0C(4);
                        } else {
L0041f200:
                            if(ebx == 0xfa) {
                                if(*(edi + 0x120) == 0) {
                                    goto L0041f21e;
                                }
                                eax = L0041EA0C(3);
                            } else {
L0041f21e:
                                if(ebx == 0xfb) {
                                    if(*(edi + 20208) == 0) {
                                        goto L0041f23c;
                                    }
                                    eax = L0041EA0C(5);
                                } else {
L0041f23c:
                                    if(ebx == 0xfc) {
                                        if(*(edi + 20762) == 0) {
                                            goto L0041f25a;
                                        }
                                        eax = L0041EA0C(6);
                                    } else {
L0041f25a:
                                        if(!(al = *(edi + 20202) - 1)) {
                                            if(al = al - 1) {
                                                goto L0041f2d5;
                                            }
                                            if(al = al - 1) {
                                                goto L0041f44a;
                                            }
                                            if(al = al - 3) {
                                                goto L0041f3b5;
                                            }
                                        } else {
                                            if(ebx == 5 && M006353f0 > 0) {
                                                M006353f0 = M006353f0 - 1;
                                                eax = L0041EA0C( *(edi + 20202));
                                                goto L0041f50e;
                                            }
                                            if(ebx == 6) {
                                                eax = M006353f0;
                                                if(eax < M006353f4) {
                                                    M006353f0 = M006353f0 + 1;
                                                    eax = L0041EA0C( *(edi + 20202));
                                                    goto L0041f50e;
L0041f2d5:
                                                    if(ebx >= 0x80) {
                                                        if(ebx >= 0x94) {
                                                            *L0050039c(ebx);
                                                            eax = L0041F518();
                                                            goto L0041f50e;
                                                        }
                                                        ebx = ebx - 0x80;
                                                        if(ebx >= *(edi + 20528)) {
                                                            eax = L0041F518();
                                                            goto L0041f50e;
                                                        }
                                                        al = *(edi + 0xe8);
                                                        if(al == 0x2a || al == 0x30) {
                                                            esi = ebx << 3;
                                                            esi = esi + edi + 20532;
                                                            L00430CB0(3, ebp - 0x14, *esi, 6640580);
                                                            *(ebp - 0x44) = 39964;
                                                            *(ebp - 0x2c) = 0;
                                                            *(ebp - 0x28) = 0;
                                                            L00421DEC(ebp - 0x44);
                                                            ebx = ebx + 1;
                                                            L00471128(esi, esi + 8, *(edi + 20528) - ebx << 3);
                                                            *(edi + 20528) = *(edi + 20528) - 1;
                                                            L004207A0();
                                                            L00458384();
                                                            L004207A0();
                                                            eax = L0041EC08();
                                                            goto L0041f50e;
                                                        }
                                                        *(ebp - 0x74) = 39965;
                                                        *(ebp - 0x5c) = -1;
                                                        eax = L00421DEC(ebp - 0x74);
                                                        goto L0041f50e;
L0041f3b5:
                                                        if(ebx >= 0x80) {
                                                            if(ebx >= 0x8a) {
                                                                *L0050039c(ebx);
                                                                eax = L0041F518();
                                                                goto L0041f50e;
                                                            }
                                                            ebx = ebx - 0x80;
                                                            if(ebx >= *(edi + 20762)) {
                                                                eax = L0041F518();
                                                                goto L0041f50e;
                                                            }
                                                            eax = ebx + (ebx + ebx * 2) * 4;
                                                            if(*(edi + eax * 4 + 20770) != *(edi + 0x10a)) {
                                                                eax = L0041F518();
                                                                goto L0041f50e;
                                                            }
                                                            *(edi + 0xec) = *(edi + eax * 4 + 20800);
                                                            *(ebp + -164) = 41483;
                                                            *(ebp + -140) = -1;
                                                            L00421DEC(ebp + -164);
                                                            eax = L0041F518();
                                                            goto L0041f50e;
L0041f44a:
                                                            if(ebx >= 0x80 && ebx < 0x98) {
                                                                ebx = ebx - 0x7f & 0xff;
                                                                esi = 0;
                                                                eax = edi + 0x134;
                                                                do {
                                                                    if(( *eax & 65535) != 0) {
                                                                        ebx = ebx - 1;
                                                                        if(ebx == 0) {
                                                                            break;
                                                                        }
                                                                    }
                                                                    esi = esi + 1;
                                                                    eax = eax + 2;
                                                                } while(esi < 0x26);
                                                                if(ebx != 0) {
                                                                    eax = L0041F518();
                                                                    goto L0041f50e;
                                                                }
                                                                if(*(edi + 0xe8) != 0) {
                                                                    *(ebp + -212) = 39984;
                                                                    *(ebp + -188) = -1;
                                                                    eax = L00421DEC(ebp + -212);
                                                                    goto L0041f50e;
                                                                }
                                                                L0041EF5C( *(edi + 0xc8), esi);
                                                                bl = *(esi + 0x4d643c);
                                                                L0041EBEC();
                                                                eax = *(edi + 0xc0) << 8;
                                                                eax = L00419470(0x11, eax | bl);
                                                                goto L0041f50e;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        if(ebx == 0x66) {
                                            eax = L0041ECCC();
                                        } else {
                                            *L0050039c(ebx);
                                            eax = L0041F518();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0041f50e:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0041F515 - 0x0041F517
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041F515()
{



}

/*    Procedure: 0x0041F518 - 0x0041F540
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041ECCC()
 *        L0041F15A()
 */

L0041F518()
{



    if(M00649a8e != 5) {
        L0041EC08();
        eax = M0064a110 >> 3;
        M0064959c = M0064959c + eax;
        eax = eax >> 1;
        M006495a0 = M006495a0 + eax;
    }
}

/*    Procedure: 0x0041F541 - 0x0041F543
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041F541()
{



}

/*    Procedure: 0x0041F544 - 0x0041F6D1
 *    Argument size: 0
 *    Local size: 96
 *    Save regs size: 12
 *    Called by:
 *        L0041EBEC()
 */

L0041F544()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffa4;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0x4d66a0;
    edi = & Vffffffcc;
    ecx = 0xa;
    asm("rep movsd");
    L0043E55C(0);
    L00420F18(39941, & Vffffffb4);
    Vfffffffc = 39955;
    Vfffffff4 = 0x12;
    Vfffffff8 = 0x23;
    esi = 0;
    ebx = 0;
    for(Vffffffc8 = 6573272; ebx < 0x26 && esi < 0x18; Vffffffc8 = Vffffffc8 + 2) {
        edi = *Vffffffc8 & 65535;
        if(edi != 0) {
            if(esi == 0xc) {
                Vfffffff4 = 0x6a;
                Vfffffff8 = 0x23;
                Vfffffffc = 39956;
            }
            if(M004d663c == 0) {
                eax = Vfffffff4;
                Vffffffcc = eax - 0xc;
                edx = Vfffffff8;
                Vffffffd0 = edx;
                Vffffffd4 = eax - 4;
                Vffffffd8 = Vffffffd0 + 8;
                Vffffffdc = esi + 0x80;
                *L005003b4( & Vffffffcc);
            }
            L00457DCC(0x31, Vfffffff4 - 0xc, Vfffffff8 - 1);
            Vffffffa0 = ebx + 36352;
            Vffffffa4 = edi;
            L0041E538(Vfffffffc, & Vffffffa0, Vfffffff4, Vfffffff8);
            Vfffffff8 = Vfffffff8 + 0xa;
            esi = esi + 1;
        }
        ebx = ebx + 1;
    }
    L00420574();
    Vfffffff4 = 0x78;
    Vfffffff8 = 0xf;
    L00457DCC(0x31, Vfffffff4, 0xf);
    if(M004d663c == 0) {
        Vffffffcc = 0x78;
        Vffffffd0 = 0xf;
        Vffffffd4 = 0x80;
        Vffffffd8 = 0x17;
        Vffffffdc = 0x66;
        *L005003b4( & Vffffffcc);
    }
    M004d663c = 3;
    return L0043E580(0xbd, 2, 0x13d, 0x82);
}

/*    Procedure: 0x0041F6D2 - 0x0041F6D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041F6D2()
{



}

/*    Procedure: 0x0041F6D4 - 0x0041F7C0
 *    Argument size: 0
 *    Local size: 60
 *    Save regs size: 8
 *    Called by:
 *        L0041EA0C()
 */

L0041F6D4()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0043E55C(0);
    L00420F18(39942, & Vffffffd8);
    Vfffffff4 = 2;
    Vfffffff6 = 0x23;
    eax = M006495bc <= 0xd ? M006495bc : 0xd;
    Vfffffff8 = eax - 1;
    Vfffffffc = 0;
    ebx = 6591966;
    do {
        Vfffffff0 = *ebx;
        eax = *(ebx + 4);
        Vffffffec = *(ebx + 8);
        edx = *(ebx + 0xc);
        ecx = *(ebx + 0x10);
        esi = 39958;
        if(!(ah & 0x20)) {
            esi = 39957;
        }
        if(ecx != 0) {
            edx = (eax & 7) + 1;
        } else {
            esi = 39960;
            if(!(ah & 0x40)) {
                esi = 39959;
            }
        }
        Vffffffc4 = Vfffffff0;
        Vffffffc8 = edx;
        Vffffffcc = Vffffffec;
        Vffffffd0 = ecx;
        L0041E538(esi, & Vffffffc4, Vfffffff4, Vfffffff6);
        Vfffffff6 = Vfffffff6 + 0xa;
        Vfffffff8 = Vfffffff8 - 1;
        ebx = ebx + 0x14;
        Vfffffffc = Vfffffffc + 1;
    } while(Vfffffff8 >= 0);
    L00420574();
    return L0043E580(0xbd, 2, 0x13d, 0x82);
}

/*    Procedure: 0x0041F7C1 - 0x0041F7E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041F7C1()
{



    (save)ebp;
    if(*( *(esp + 8)) > 0x19) {
        goto L0041f8f1;
    }
    switch(*(eax + 0x41f7e2)) {
        case 0:
            goto L0041f8f1;
        case 1:
            goto L0041f8d5;
        case 2:
            goto L0041f841;
        case 3:
            goto L0041f83a;
        case 4:
            goto L0041f814;
        case 5:
            goto L0041f8ec;
    }
    *eax = *eax + al;
    eax = eax + 262144;
}

/*    Procedure: 0x0041F8F3 - 0x0041F8F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041F8F3()
{



}

/*    Procedure: 0x0041F8F4 - 0x0041F987
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L0041F988()
 */

L0041F8F4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    eax = *L004eeedc(M0064a3b0, 0x4d64ea, 0xe, Ac, ebp - 4);
    ebx = eax;
    if(ebx == 0) {
        eax = ebx;
    } else {
        al = 0x2a;
        if(A8 == 0) {
            eax = 0x2b;
        }
        *(ebx + 0x124) = al;
        *(ebx + 0xce) = 0;
        *(ebx + 0x14c) = *(ebx + 0x14c) | 0x60;
        *(ebx + 0x87) = 0xe;
        *(ebx + 0x56) = A10;
        *(ebx + 0xa0) = A18;
        *(ebx + 0x57) = 1;
        *(ebx + 0x58) = 0;
        L00439D78(ebx, *(A14 * 8 + 0x4ec404), *(A14 * 8 + 0x4ec400), M0064a3b0);
        eax = ebx;
    }
}

/*    Procedure: 0x0041F988 - 0x0041FAF4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 */

L0041F988()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 6572964;
    esi = *L00649A94 - 1;
    eax = esi + (esi + esi * 2) * 4;
    ebx = 6572964 + eax * 4 + 20218;
    do {
        eax = *(edi + 0x10a);
        if(eax == *ebx) {
            if(!(eax = ( *(ebx - 2) & 0xf) - 3)) {
                goto L0041f9c9;
            }
            edx = *edi;
            eax = *(edi + 4);
            if(eax <= *(ebx + 8)) {
                if(eax != *(ebx + 8)) {
                    goto L0041f9f5;
                }
                if(edx <= *(ebx + 4)) {
L0041f9f5:
                    *(edi + 20203) = 0;
                    eax = esi + (esi + esi * 2) * 4 << 2;
                    eax = L0041936C(M0064a3b0, 0x41faf8, eax + edi + 20212);
                    if(*(edi + 20203) != 0) {
                        edx = *(ebx + 4);
                        eax = L0042CD62( *(ebx + 0x10), edx, eax, edx, *(ebx + 8));
                        goto L0041fae3;
L0041f9c9:
                        if(!(eax = eax - 4)) {
                            goto L0041f9ce;
                        }
                        *(edi + 20203) = 0;
                        eax = esi + (esi + esi * 2) * 4 << 2;
                        eax = L0041936C(M0064a3b0, 0x41faf8, eax + edi + 20212);
                        if(*(edi + 20203) != 0) {
                            *(ebp - 4) = *(ebx - 2) >> 4 & 7;
                            *(ebp - 4) = *( *(ebp - 4) * 4 + 0x4d64a0);
                            eax = *(ebx + 4);
                            M00644b9c = eax;
                            edx = eax << 0x10;
                            eax = edx | eax >> 0x10;
                            M00644ba0 = eax;
                            eax = L0041F8F4(esi & 1, *(ebp - 4), *(edi + 20203), M00644b9c & 0xf, M00644ba0);
                            *(ebx + 0x14) = *(eax + 0x86);
                            *(ebx + 0x15) = 0xff;
                            goto L0041fae3;
L0041f9ce:
                            == ? L0041fae3 : ;
                        }
                    }
                }
            }
        }
L0041fae3:
        esi = esi - 1;
        ebx = ebx - 0x34;
    } while(esi >= 0);
}

/*    Procedure: 0x0041FAF5 - 0x0041FB38
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L0041FAF5(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    eax = Ac + 0x1c;
    edx = A8 + 0x124;
    do {
        cl = *eax;
        if(cl != *edx) {
            goto L0041fb35;
        }
        if(cl == 0) {
            break;
        }
        cl = *(eax + 1);
        if(cl != *(edx + 1)) {
            goto L0041fb35;
        }
        eax = eax + 2;
        edx = edx + 2;
    } while(cl != 0);
    != ? 0x41fb35 : ;
    M00649a8f = *(A8 + 0x86);
L0041fb35:
}

/*    Procedure: 0x0041FB39 - 0x0041FB3B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041FB39()
{



}

/*    Procedure: 0x0041FB3C - 0x0041FDEE
 *    Argument size: 0
 *    Local size: 92
 *    Save regs size: 12
 *    Called by:
 *        L0041FED9()
 */

L0041FB3C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffa4;
    /* unknown */ void  Vffffffa8;
    /* unknown */ void  Vffffffac;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vffffffff;



    eax = M00649a94;
    if(eax == 0) {
        eax = 0;
    } else {
        esi = 6593176;
        Vfffffff0 = eax;
        if(Vfffffff0 >= 0) {
            do {
                if(*(esi + 0x30) == M00644cae) {
                    bl = *(esi + 4) & 0xf;
                    if(!(al = ebx - 3)) {
                        goto L0041fb82;
                    }
                    if(*(esi + 5) != 0) {
                        if(*(esi + 5) <= 0) {
                            Vffffffe8 = *(esi + 0x12) + *(esi + 0x12) + ( *(esi + 0x12) + *(esi + 0x12)) * 4;
                            M00644cb8 = M00644cb8 + Vffffffe8;
                            edi = 0x200;
                            Vffffffff = 0xc;
                            Vfffffff8 = 39978;
                            goto L0041fcbb;
                        }
                        edi = -512;
                        Vffffffff = 0xff;
                        Vfffffff8 = 39979;
                        goto L0041fcbb;
                    }
                    eax = M00644ba4;
                    Vffffffec = M00644ba8;
                    if(Vffffffec > *(esi + 0xe)) {
                        goto L0041fbc6;
                    }
                    if(Vffffffec == *(esi + 0xe) && eax > *(esi + 0xa)) {
L0041fbc6:
                        edi = -1024;
                        Vffffffff = 0xfb;
                        Vfffffff8 = 39977;
                        goto L0041fcbb;
L0041fb82:
                        if(!(al = al - 4)) {
                            goto L0041fb8a;
                        }
                        Vffffffec = M00644ba8;
                        if(Vffffffec > *(esi + 0xe)) {
                            goto L0041fc2f;
                        }
                        if(*(esi + 5) != 0) {
                            if(bl > 4) {
                                Vffffffe8 = *(esi + 0x12) + *(esi + 0x12) + ( *(esi + 0x12) + *(esi + 0x12)) * 4;
                                M00644cb8 = M00644cb8 + Vffffffe8;
                                Vffffffff = 0x12;
                                Vfffffff8 = 39978;
                            } else {
                                Vffffffe8 = *(esi + 0x12) + *(esi + 0x12) + ( *(esi + 0x12) + *(esi + 0x12)) * 4;
                                M00644cb8 = M00644cb8 + Vffffffe8;
                                if(*(esi + 0x1b) <= 0xa) {
                                    Vffffffff = 0x14;
                                    Vfffffff8 = 39982;
                                } else {
                                    Vffffffff = 0x10;
                                    Vfffffff8 = 39981;
                                    goto L0041fcbb;
L0041fc2f:
                                    if(*(esi + 5) != 0) {
                                        edi = -1024;
                                        Vffffffff = 0xff;
                                        Vfffffff8 = 39980;
                                    } else {
                                        edi = -1024;
                                        Vffffffff = 0xfb;
                                        Vfffffff8 = 39977;
                                        goto L0041fcbb;
L0041fb8a:
                                        == ? L0041fdd6 : ;
                                    }
                                }
                            }
L0041fcbb:
                            M00649a94 = M00649a94 - 1;
                            if(Vfffffff0 != 0) {
                                eax = Vfffffff0;
                                edx = eax;
                                L00471128(esi, esi + 0x34, edx + (edx + eax * 2) * 4 << 2);
                            }
                            *L005000c0(6640580, *(bl * 4 + 0x4d64c0), & Vffffffd4);
                            Vffffffa4 = Vfffffff8;
                            Vffffffa8 = Vffffffe8;
                            Vffffffac = Vffffffec;
                            Vffffffbc = *(bl + 0x4d64dc);
                            Vffffffc0 = 0;
                            eax = L00421DEC( & Vffffffa4);
                            if(bl != 0) {
                                goto L0041fd76;
                            }
                            if(edi <= 0) {
                                M00644d40 = ~edi <= M00644d40 ? M00644d40 + edi : 0;
                            } else {
                                if(268435455 - edi > M00644d40) {
                                    M00644d40 = M00644d40 + edi;
                                }
                            }
                            L00419470(0x19, 0);
                        }
                    }
                }
                Vfffffff0 = Vfffffff0 - 1;
                esi = esi + 0x34;
            } while(Vfffffff0 >= 0);
            goto L0041fde6;
L0041fd76:
            eax = eax | -1;
            if(Vffffffff >= 0) {
                eax = bl;
                Vffffffff = *(eax + 0x4d64dc);
                eax = *(eax + 0x4d64e3);
                if(Vffffffff == 0x14) {
                    eax = eax + 1;
                }
            }
            if(Vffffffff == 0xa) {
                eax = & Vfffffff4;
                L00420290(Vffffffff, eax, eax);
            } else {
                eax = & Vfffffff4;
                L004202D4(Vffffffff, eax, eax);
            }
            L00419470(0x19, 0);
            eax = 1;
        } else {
L0041fde6:
            eax = 0;
        }
    }
}

/*    Procedure: 0x0041FDEF - 0x0041FDEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041FDEF()
{



}

/*    Procedure: 0x0041FDF0 - 0x0041FED8
 *    Argument size: 0
 *    Local size: 68
 *    Save regs size: 8
 */

L0041FDF0()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffec;



    esi = 6572964;
    if(*L00644C8C != 4) {
        *L00644C6A = *L00644C6A & 65523;
        if(*L006495BC <= 0) {
            eax = L00419470(0x19, 0);
        } else {
            eax = esi + 19002;
            edx = *(esi + 18968) - 1;
            if(edx < 0) {
                goto L0041fec7;
            }
            do {
                if(*(esi + 4) > *(eax + 0xc) && !( *(eax + 5) & 0x80)) {
                    goto L0041fe50;
                }
                edx = edx - 1;
                eax = eax + 0x14;
            } while(edx >= 0);
            goto L0041fec7;
L0041fe50:
            *(eax + 4) = *(eax + 4) | 32768;
            ebx = *(eax + 0x10);
            if(ebx != 0) {
                *(esi + 0x1f0) = *(esi + 0x1f0) - 2;
                if(!( *(eax + 5) & 0x20)) {
                    L00430CB0(3, & Vffffffec, ebx, 6640580);
                    Vffffffbc = 39990;
                    Vffffffc8 = ebx;
                    Vffffffd4 = 0;
                    Vffffffd8 = 0;
                    eax = L00421DEC( & Vffffffbc);
                    al = *(esi + 0xe8);
                    if(al == 0x2a) {
                        goto L0041feab;
                    }
                    if(al == 0x30) {
L0041feab:
                        M006321e1 = M006321e1 | 1;
                        *(esi + 19000) = 0xa;
                        goto L0041fed3;
L0041fec7:
                        eax = L00419470(0x19, 0);
                    }
                }
            }
        }
    }
L0041fed3:
}

/*    Procedure: 0x0041FED9 - 0x004200B7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0041FED9()
{



    esp = esp + -140;
    (save)ebx;
    (save)esi;
    (save)edi;
    M006495dc = M006495dc - 1;
    al = M006495dc;
    if(al < 0) {
        M006495dc = 0xa;
        ebx = 6591966;
        esi = M006495bc - 1;
        if(esi >= 0) {
            do {
                if(*(ebx + 5) & 0x80) {
                    edx = *(ebx + 4);
                    eax = edx >> 8;
                    edx = edx & 0xff;
                    edi = *(ebx + 0x10);
                    if(al & 0x20) {
                        goto L00420001;
                    }
                    if(M00644cae != *(ebx + 8)) {
                        goto L00420095;
                    } else {
                        goto L0041ff61;
                    }
                }
                if(M00644cae == *(ebx + 8)) {
                    goto L0041ff2c;
                }
L00420095:
                esi = esi - 1;
                ebx = ebx + 0x14;
            } while(esi >= 0);
            goto L004200a1;
L0041ff2c:
            eax = L004200B8(ebx, esi);
            goto L004200b1;
L0041ff61:
            if(*(ebx + 0x10) == 0) {
                dl = 0xfd;
                edi = edi | -1;
                if(!(al & 0x40)) {
                    L004202D4(0xfd, ebp - 4, edi);
                    edi = 0xb;
                    eax = 40040;
                } else {
                    L00420290(edx, ebp - 4, edi);
                    eax = 40041;
                    edi = 0xa;
                }
                *L005000c0(6640580, eax, ebp - 0x18);
                *(ebp - 0x48) = 39992;
                *(ebp - 0x30) = edi;
                *(ebp - 0x2c) = 0;
                L00421DEC(ebp - 0x48);
                L00471128(ebx, ebx + 0x14, (esi + 1 << 2) + (esi + 1 << 2) * 4);
                M006495bc = M006495bc - 1;
                eax = L00419470(0x19, 0);
            } else {
L00420001:
                M00644d94 = M00644d94 - 2;
                if(edx == 7) {
                    eax = edi;
                    edx = eax << 0x18;
                    edi = edx | eax >> 8;
                } else {
                    M00644cc8 = M00644cc8 - edx + 1;
                    L00414070(1, 0, 0x10);
                }
                L00430CB0(3, ebp - 0x5c, edi, 6640580);
                *(ebp + -140) = 39991;
                *(ebp - 0x80) = edi;
                *(ebp - 0x74) = 0;
                *(ebp - 0x70) = 0;
                L00421DEC(ebp + -140);
                L00471128(ebx, ebx + 0x14, (esi + 1 << 2) + (esi + 1 << 2) * 4);
                M006495bc = M006495bc - 1;
                eax = L00419470(0x19, 0);
            }
        } else {
L004200a1:
            eax = L0041FB3C();
            if(eax == 0) {
                M006321e1 = M006321e1 & 0xfe;
            }
        }
    }
L004200b1:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004200B8 - 0x0042028F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041FED9()
 */

L004200B8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -136;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = Ac;
    eax = A8;
    *(ebp - 0x14) = *eax;
    ecx = *(eax + 4);
    *(ebp - 0x18) = ecx >> 8;
    *(ebp - 0x1c) = ecx & 0xff;
    *(ebp - 8) = *(eax + 8);
    *(ebp - 0xc) = *(eax + 0xc);
    *(ebp - 0x10) = *(eax + 0x10);
    do {
        esi = eax + 0x14;
        edi = eax;
        ecx = 5;
        asm("rep movsd");
        edx = edx - 1;
        eax = eax + 0x14;
    } while(edx >= 0);
    if(( *(ebp - 0x18) & 0x1f) == 0x14) {
        L00430CB0(3, ebp - 0x30, *(ebp - 0x10), 6640580);
        esi = 39989;
        if(*(ebp - 0x1c) != 7) {
            M00644cc8 = M00644cc8 - *(ebp - 0x1c) + 1;
            L00414070(1, 0, 0x10);
        } else {
            ebx = 0;
        }
    } else {
        *(ebp - 0x14) = *(ebp - 0x14) + *(ebp - 0x14) + ( *(ebp - 0x14) + *(ebp - 0x14)) * 4;
        eax = *(ebp - 0x14);
        M00644cb8 = M00644cb8 + eax;
        if(*(ebp - 0x10) == 0) {
            edx = *(ebp - 0x18) & 3;
            al = 2;
            if(!( *(ebp - 0x18) & 0x40)) {
                L004202D4(2, ebp - 4, *(edx + 0x4d649b));
                bl = 0xb;
                esi = 40040;
            } else {
                L00420290(eax, ebp - 4, *(edx + 0x4d6498));
                bl = 0xa;
                esi = 40041;
            }
            *L005000c0(6640580, esi, ebp - 0x44);
            esi = 39987;
        } else {
            if(M00644d94 < 5) {
                M00644d94 = M00644d94 + 1;
            }
            L00430CB0(3, ebp - 0x58, *(ebp - 0x10), 6640580);
            if(*(ebp - 0x1c) < 7) {
                esi = 39986;
                if(*(ebp - 0x1c) == 0) {
                    esi = 39985;
                }
                M00644cc8 = M00644cc8 - *(ebp - 0x1c) + 1;
                L00414070(1, 0, 0x10);
            } else {
                esi = *(ebp - 0x1c) == 7 ? 39988 : 39988;
            }
            ebx = 0;
        }
    }
    *(ebp + -136) = esi;
    *(ebp - 0x7c) = *(ebp - 0x10);
    *(ebp - 0x70) = bl;
    *(ebp + -132) = *(ebp - 8);
    *(ebp - 0x80) = *(ebp - 0xc);
    *(ebp - 0x6c) = 0;
    L00421DEC(ebp + -136);
    M006495bc = M006495bc - 1;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return L00419470(0x19, 0);
}

/*    Procedure: 0x00420290 - 0x004202D0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 *        L00415010()
 *        L0041FB3C()
 *        L0041FED9()
 *        L004200B8()
 *        L004205E8()
 */

L00420290(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L0042043C(A10, 40013, 40041, 0xa, Ac);
    return L00420318(A8, 6573380, 40013, 40041, 0xa, Ac);
}

/*    Procedure: 0x004202D1 - 0x004202D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004202D1()
{



}

/*    Procedure: 0x004202D4 - 0x00420314
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 *        L00415010()
 *        L0041FB3C()
 *        L0041FED9()
 *        L004200B8()
 *        L004205E8()
 */

L004202D4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L0042043C(A10, 40026, 40040, 0xb, Ac);
    return L00420318(A8, 6573384, 40026, 40040, 0xb, Ac);
}

/*    Procedure: 0x00420315 - 0x00420317
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420315()
{



}

/*    Procedure: 0x00420318 - 0x00420438
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00420290()
 *        L004202D4()
 */

L00420318(A8, Ac, A10, A14, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A1c;
{



    esp = esp + -140;
    (save)A8;
    (save)esi;
    esi = *Ac;
    eax = 0;
    edx = 0x4d6464;
    do {
        if(esi < *edx) {
            break;
        }
        eax = eax + 1;
        edx = edx + 4;
    } while(eax < 0xd);
    edx = *(eax * 4 + 0x4d6460);
    *(ebp - 4) = *(eax * 4 + 0x4d6464);
    esi = A10 + eax;
    *A1c = esi;
    if(bl >= 0) {
        esi = bl;
        eax = *Ac;
        eax = esi + eax >= eax ? bl + *Ac : 65535;
        *Ac = eax;
    } else {
        eax = ~bl <= *Ac ? bl + *Ac : 0;
        *Ac = eax;
    }
    eax = *Ac;
    if(eax >= *(ebp - 4)) {
        if(eax == 65535) {
            eax = 0;
        } else {
            *A1c = *A1c + 1;
            *L005000c0(6640580, A14, ebp - 0x18);
            *(ebp - 0x48) = 39993;
            *(ebp - 0x40) = *A1c;
            *(ebp - 0x2c) = 0;
            L00421DEC(ebp - 0x48);
            eax = L004700B4(7);
            al = 1;
        }
    } else {
        if(edx > *Ac) {
            *A1c = *A1c - 1;
            *L005000c0(6640580, A14, ebp - 0x5c);
            *(ebp + -140) = 39994;
            *(ebp + -132) = *A1c;
            *(ebp - 0x70) = 0;
            eax = L00421DEC(ebp + -140);
            al = 1;
        } else {
            eax = 0;
        }
    }
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x00420439 - 0x0042043B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420439()
{



}

/*    Procedure: 0x0042043C - 0x004204B3
 *    Argument size: 16
 *    Local size: 68
 *    Save regs size: 4
 *    Called by:
 *        L00420290()
 *        L004202D4()
 */

L0042043C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffec;



    if(A8 >= 0) {
        ecx = A8;
        eax = 1 << cl;
        if(!(edx = eax & M00649c7c)) {
            M00649c7c = M00649c7c | eax;
            *L005000c0(6640580, A10, & Vffffffec);
            Vffffffbc = 40048;
            Vffffffc4 = A8 + 40049;
            Vffffffe0 = Ac;
            Vffffffcc = A8;
            Vffffffd8 = 0;
            Vffffffd4 = A14;
            L00421DEC( & Vffffffbc);
            eax = L004700B4(0xa);
        }
    }
}

/*    Procedure: 0x004204B4 - 0x00420557
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041EA0C()
 */

L004204B4()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6572964;
    al = *L00649A8E;
    ebx = eax + 1;
    eax = L00420558(eax);
    if(bl == 1) {
        *(esi + 19001) = bl;
    } else {
        if(bl == 2) {
            if(*(esi + 20528) != 0) {
                *(esi + 19001) = bl;
                goto L00420554;
            }
            ebx = ebx + 1;
        }
        if(bl == 3) {
            if(*(esi + 0x120) != 0) {
                *(esi + 19001) = bl;
                goto L00420554;
            }
            ebx = ebx + 1;
        }
        if(bl == 4) {
            if(*(esi + 18968) != 0) {
                *(esi + 19001) = bl;
                goto L00420554;
            }
            ebx = ebx + 1;
        }
        if(bl == 5) {
            if(*(esi + 20208) != 0) {
                *(esi + 19001) = bl;
                goto L00420554;
            }
            ebx = ebx + 1;
        }
        if(bl <= 6) {
            if(*(esi + 20762) == 0) {
                goto L0042054d;
            }
            *(esi + 19001) = bl;
        } else {
L0042054d:
            *(esi + 19001) = 0;
        }
    }
L00420554:
}

/*    Procedure: 0x00420558 - 0x00420573
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E4BB()
 *        L004204B4()
 */

L00420558(A8)
/* unknown */ void  A8;
{



    return L0041D444( *((A8 & 0xff) * 4 + 0x4d66c8), 1);
}

/*    Procedure: 0x00420574 - 0x004205C0
 *    Argument size: -20
 *    Local size: 20
 *    Save regs size: 0
 *    Called by:
 *        L0041E55C()
 *        L0041F544()
 *        L0041F6D4()
 *        L004207A0()
 *        L00420DD8()
 */

L00420574()
{
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vffffffec = M00644cb8;
    Vfffffff0 = M00644cc4;
    Vfffffff4 = M00644cc8;
    Vfffffff8 = M00644cbc;
    Vfffffffc = M00644cc0;
    return L0041E538(39995, & Vffffffec, 0xbe, 0x8a);
}

/*    Procedure: 0x004205C1 - 0x004205C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004205C1()
{



}

/*    Procedure: 0x004205C4 - 0x004205E6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004205E8()
 */

L004205C4(A8)
/* unknown */ void  A8;
{



    edx = 0x4d63cc;
    eax = 3;
    do {
        if(A8 >= *edx) {
            break;
        }
        eax = eax - 1;
        edx = edx + 4;
    } while(eax >= 0);
    return eax + 40009;
}

/*    Procedure: 0x004205E7 - 0x004205E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004205E7()
{



}

/*    Procedure: 0x004205E8 - 0x0042079C
 *    Argument size: 0
 *    Local size: 104
 *    Save regs size: 12
 *    Called by:
 *        L0041EA0C()
 */

L004205E8()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffff98;
    /* unknown */ void  Vffffffac;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffff4 = 6573430;
    L00420F18(39943, & Vffffffe8);
    edx = 0x4d63dc;
    eax = 8;
    do {
        if(*edx <= M00644d40) {
            break;
        }
        eax = eax - 1;
        edx = edx + 4;
    } while(eax >= 0);
    Vffffffd4 = eax + 39999;
    Vffffffd8 = L004205C4(M00649ca4);
    Vffffffdc = L004205C4(M00649ca0);
    Vffffffe0 = L004205C4(M00649c9c);
    Vffffffe4 = (M00644fe0 & 65535) + 40042;
    *L005000d8(39996, & Vffffffd4, 0xf, 2, 0x14, 0);
    L004202D4(0, & Vffffffc4, -1);
    L00420290(0, & Vffffffc0, -1);
    *L005000d8(39997, & Vffffffc0, 0xf, 2, 0x1e, 0);
    Vfffffffc = 4;
    Vfffffffe = 0x4b;
    ebx = *((M00644fe0 & 65535) * 4 + 6593668);
    esi = 40450;
    for(edi = 0; 1; esi = esi + 1) {
        al = ebx & 1;
        ebx = ebx >> 1;
        if(ebx == 0 && al == 0) {
            break;
        }
        if(al != 0) {
            L0041E538(esi, & Vffffffac, Vfffffffc, Vfffffffe);
            Vfffffffe = Vfffffffe + 9;
            edi = edi + 1;
            if(edi == 5) {
                Vfffffffc = 0x6c;
                Vfffffffe = 0x4b;
            }
        }
    }
    Vfffffffc = 4;
    Vfffffffe = 0x84;
    ebx = M00649c7c;
    for(esi = 40049; 1; esi = esi + 1) {
        al = ebx & 1;
        ebx = ebx >> 1;
        if(ebx == 0 && al == 0) {
            break;
        }
        if(al != 0) {
            L0041E538(esi, & Vffffff98, Vfffffffc, Vfffffffe);
            Vfffffffe = Vfffffffe + 9;
            if(Vfffffffe >= 0xa1) {
                Vfffffffc = Vfffffffc + 0x4c;
                Vfffffffe = 0x84;
            }
        }
    }
    return L0043E580(0xbd, 2, 0x13d, 0x82);
}

/*    Procedure: 0x0042079D - 0x0042079F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042079D()
{



}

/*    Procedure: 0x004207A0 - 0x0042093A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041EA0C()
 *        L0041F15A()
 */

L004207A0()
{



    esp = esp + -132;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = 0x4d66f4;
    edi = ebp - 0x34;
    ecx = 0xa;
    asm("rep movsd");
    L00420F18(39944, ebp - 0x48);
    esi = 6593496;
    *(ebp - 8) = 0x18;
    *(ebp - 4) = 0x23;
    for(ebx = 0; ebx <= M00649bd4 - 1; ebx = ebx + 1) {
        if(M004d663c == 0) {
            eax = *(ebp - 8);
            *(ebp - 0x34) = eax - 0x14;
            edx = *(ebp - 4);
            *(ebp - 0x30) = edx;
            *(ebp - 0x2c) = eax - 0xc;
            *(ebp - 0x28) = edx + 8;
            *(ebp - 0x24) = ebx + 0x80;
            *L005003b4(ebp - 0x34);
        }
        edi = *esi;
        *(ebp - 0xc) = *(esi + 4);
        esi = esi + 8;
        L00457DCC(0x31, *(ebp - 8) - 0x12, *(ebp - 4) - 1);
        *(ebp - 0x50) = edi;
        *(ebp - 0x54) = *(ebp - 0xc);
        L0041E538(39961, ebp - 0x5c, *(ebp - 8), *(ebp - 4));
        *(ebp - 4) = *(ebp - 4) + 9;
        if(ebx == 0xb) {
            *(ebp - 8) = 0x72;
            *(ebp - 4) = 0x23;
        }
    }
    M004d663c = 2;
    eax = M00649c78;
    if(eax != 0) {
        *(ebp - 0x70) = eax;
        *L005000d8(39962, ebp - 0x70, 0xf, 6, 0x82, 0);
    }
    eax = M00644ba8;
    edx = 0;
    eax = 7 / 7 % 7 / 7;
    edx = al != 0 ? M00644ba8 + 7 - al : M00644ba8;
    *(ebp + -132) = edx;
    *(ebp - 0x80) = M00649bd0;
    *L005000d8(39963, ebp + -132, 0xf, 6, 0x91, 0);
    L00420574();
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return L0043E580(0xbd, 2, 0x13d, 0x82);
}

/*    Procedure: 0x0042093B - 0x0042093B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042093B()
{



}

/*    Procedure: 0x0042093C - 0x00420AE8
 *    Argument size: 44
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L00424ED5()
 *        L00425AD0()
 */

L0042093C(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c, A30)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 6572964;
    esi = 0;
    if(*L00649A94 >= 6) {
        eax = eax | -1;
    } else {
        edx = 0;
        for(eax = ebx + 20212; edx < *(ebx + 20208); eax = eax + 0x34) {
            ecx = *eax;
            if(esi < ecx) {
                esi = ecx;
            }
            edx = edx + 1;
        }
        esi = esi + 1;
        eax = *(ebx + 20208);
        edx = eax;
        *(ebx + (edx + (edx + eax * 2) * 4) * 4 + 20212) = esi;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20216) = A8;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20217) = Ac;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20218) = A10;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20222) = A14;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20226) = A18;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20230) = A1c;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20234) = A20;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20238) = A24;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20239) = A28;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4 << 2;
        eax = eax + ebx + 20240;
        (save)esi;
        esi = eax;
        edi = A2c;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
        eax = *(ebx + 20208);
        edx = eax;
        eax = edx + (edx + eax * 2) * 4;
        *(ebx + eax * 4 + 20260) = A30;
        *(ebx + 20208) = *(ebx + 20208) + 1;
        if(M006321e2 != 0 && *(ebx + 20202) == 5) {
            L0041EA0C( *(ebx + 20202));
        }
        eax = esi;
    }
}

/*    Procedure: 0x00420AE9 - 0x00420AEB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420AE9()
{



}

/*    Procedure: 0x00420AEC - 0x00420B80
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 */

L00420AEC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    ecx = A8;
    esi = 6572964;
    eax = 0;
    for(edx = 6593176; eax < *(esi + 20208) && ecx != *edx; edx = edx + 0x34) {
        eax = eax + 1;
    }
    edx = *(esi + 20208);
    if(eax < edx) {
        edx = edx - eax - 1;
        ecx = edx;
        edx = eax + (eax + eax * 2) * 4 << 2;
        edx = eax;
        eax = edx + (edx + eax * 2) * 4 << 2;
        eax = L0047114C(eax + esi + 20212, edx + esi + 20264, ecx + (ecx + edx * 2) * 4 << 2);
        *(esi + 20208) = *(esi + 20208) - 1;
    }
    if(M006321e2 != 0 && *(esi + 20202) == 5) {
        eax = L0041EA0C( *(esi + 20202));
    }
}

/*    Procedure: 0x00420B81 - 0x00420B83
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420B81()
{



}

/*    Procedure: 0x00420B84 - 0x00420DD4
 *    Argument size: 0
 *    Local size: 44
 *    Save regs size: 12
 *    Called by:
 *        L0041EA0C()
 */

L00420B84()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    eax = L00420F18(39945, & Vffffffe8);
    ebx = 6593176;
    Vfffffffc = 2;
    Vfffffffe = 0x1b;
    edi = M00649a94 - 1;
    if(edi >= 0) {
        do {
            esi = *(ebx + 4) & 0xf;
            if(eax = esi - 3) {
                eax = 39356;
                if(esi == 0) {
                    eax = 39348;
                }
                esi = esi + 39966;
                Vffffffd8 = eax + ( *(ebx + 4) >> 4 & 0xf);
                Vffffffdc = *(ebx + 0x30);
                Vffffffe0 = *(ebx + 0xa);
                *L005000d8(esi, & Vffffffd4, 0xf, Vfffffffc, Vfffffffe, 0x78);
                Vffffffdc = *(ebx + 6);
                Vffffffe0 = *(ebx + 0xa);
                Vffffffe4 = ebx + 0x1c;
                L0041E538(39969, & Vffffffd4, Vfffffffc, Vfffffffe);
                L00430CB0(0x12, & Vffffffd4, *(ebx + 0xa), 6640580);
                eax = *( *L00501b9c( *(ebx + 0x16)) + 0x38);
                Vffffffd4 = *(ebx + 0xa);
                Vffffffd8 = *(ebx + 0xe);
                Vffffffdc = *(ebx + 0x12);
                Vffffffe0 = 6640580;
                Vffffffe4 = *(eax + 0xe);
                eax = L0041E538(39970, & Vffffffd4, Vfffffffc, Vfffffffe);
            } else {
                if(!(eax = eax - 4)) {
                    goto L00420bd6;
                }
                if(esi <= 6) {
                    esi = esi + 39969;
                    eax = *(ebx + 0x30);
                    Vffffffdc = eax;
                    Vffffffd8 = (( *(ebx + 4) & 0xff) >> 4) + 39270;
                    *L005000d8(esi, & Vffffffd4, 0xf, Vfffffffc, Vfffffffe, 0x78);
                    Vffffffd4 = *(ebx + 0x12);
                    Vffffffd8 = *(ebx + 0xe);
                    Vffffffdc = *(ebx + 6);
                    Vffffffe4 = ebx + 0x1c;
                    eax = L0041E538(39976, & Vffffffd4, Vfffffffc, Vfffffffe);
                    goto L00420d97;
L00420bd6:
                    == ? L00420d36 : ;
                }
            }
L00420d97:
            if(*(ebx + 5) != 0 && esi != 7) {
                eax = L0041E538(39971, & Vffffffd4, Vfffffffc, Vfffffffe);
            }
            ebx = ebx + 0x34;
            Vfffffffe = Vfffffffe + 0x18;
            edi = edi - 1;
        } while(edi >= 0);
        goto L00420dce;
        L004124F8(8, *ebx);
        L004124F8(8, 0);
        Vffffffd4 = L00412518(1);
        Vffffffd8 = L00412518(2);
        Vffffffdc = L00412518(3);
        eax = *L005000d8(L00412518(9), & Vffffffd4, 0xf, Vfffffffc, Vfffffffe, 0x13b);
        goto L00420d97;
    }
L00420dce:
}

/*    Procedure: 0x00420DD5 - 0x00420DD7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420DD5()
{



}

/*    Procedure: 0x00420DD8 - 0x00420F17
 *    Argument size: 0
 *    Local size: 104
 *    Save regs size: 12
 *    Called by:
 *        L0041EA0C()
 */

L00420DD8()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffff98;
    /* unknown */ void  Vffffff9c;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffa4;
    /* unknown */ void  Vffffffac;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0x4d671c;
    edi = & Vffffffc0;
    ecx = 0xa;
    asm("rep movsd");
    L0043E55C(0);
    L00420F18(39946, & Vffffffac);
    Vfffffff0 = 0x18;
    Vfffffff4 = 0x23;
    esi = 0;
    edi = 0;
    for(ebx = 6593734; esi < M00649cbe && edi < 0xc; ebx = ebx + 0x34) {
        L00457DCC(0x31, Vfffffff0 - 0x12, Vfffffff4 - 1);
        if(M004d663c == 0) {
            eax = Vfffffff0;
            Vffffffc0 = eax - 0x12;
            edx = Vfffffff4;
            Vffffffc4 = edx;
            Vffffffc8 = eax - 0xa;
            Vffffffcc = Vffffffc4 + 8;
            Vffffffd0 = edi + 0x80;
            *L005003b4( & Vffffffc0);
        }
        edx = (esi + (esi + esi * 2) * 4 << 2) + 6593766;
        eax = *ebx;
        Vfffffff8 = *(ebx + 0x1f);
        ecx = eax == 0 || eax == -1 ? 41473 : 41472;
        Vfffffffc = ecx;
        Vffffff9c = Vfffffff8 + 41474;
        Vffffffa0 = eax;
        Vffffffa4 = edx;
        L0041E538(Vfffffffc, & Vffffff98, Vfffffff0, Vfffffff4);
        Vfffffff4 = Vfffffff4 + 0xa;
        edi = edi + 1;
        esi = esi + 1;
    }
    M004d663c = 6;
    L00420574();
    return L0043E580(0xbd, 2, 0x13d, 0x82);
}

/*    Procedure: 0x00420F18 - 0x00420F46
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E55C()
 *        L0041F544()
 *        L0041F6D4()
 *        L004205E8()
 *        L004207A0()
 *        L00420B84()
 *        L00420DD8()
 */

L00420F18(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L0043E55C(0);
    eax = M00632ac0;
    M00502eec = eax;
    return *L005000d8(A8, Ac, M00502eec, 0x1e, 5, 0);
}

/*    Procedure: 0x00420F47 - 0x00420F6B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420F47()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    eax = *L005000c8( *(ebp + 0x10), *(ebp + 8) & 0x1ff, *(ebp + 0xc), 0x4d8340);
    (restore)ebp;
}

/*    Procedure: 0x00420F6C - 0x00420FC0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00420F6C(A8)
/* unknown */ void  A8;
{



    if(!(eax = (A8 & 0xff) - 2)) {
        == ? L00420fa8 : ;
        return;
    }
    M0064947e = 0;
    M006321d2 = 0;
    M006321d3 = 0;
    M00649598 = 0;
    M004d8e70 = 1;
    return 0;
    return L00413E60(1, 0, 2, 0x42100c, 0, 0);
}

/*    Procedure: 0x00420FC1 - 0x00420FEF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00420FC1(A8)
/* unknown */ void  A8;
{



    eax = *A8;
    if(eax == 5) {
        return L00421020();
    }
    if(eax == 0xf) {
        return L0042110C();
    }
    if(eax == 0x19) {
        eax = L004211F4();
    }
}

/*    Procedure: 0x00420FF0 - 0x0042100B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00420FF0()
{



    if(M006321d2 != 0 && M0064948c == 6) {
        eax = L00421208();
    }
}

/*    Procedure: 0x0042100C - 0x0042101E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042100C()
{



    if(M006321d2 != 0) {
        eax = L00421208();
    }
}

/*    Procedure: 0x0042101F - 0x0042101F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042101F()
{



}

/*    Procedure: 0x00421020 - 0x0042110A
 *    Argument size: 0
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L00420FC1()
 */

L00421020()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    esi = 6572964;
    *L00649598 = 0;
    eax = L004222DC();
    if(*(esi + 0x43c) != 4) {
        eax = *(esi + 0xcc);
        if(*(eax + 0x82) != 0x45) {
            eax = *(esi + 0x43a) & 65535;
            ebx = eax < 0xb3 ? 0xa : eax < 0xcc ? 0x14 : eax < 0xee ? 0x1e : 0x28;
            if(ebx > *(esi + 0x114)) {
                *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728) = *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728) + ebx;
                eax = *(esi + 0x43c) & 65535;
                if(ebx > *(esi + eax * 4 + 20728)) {
                    *(esi + eax * 4 + 20728) = *(esi + eax * 4 + 20728) - ebx;
                }
                L00414070(0xa, 0, *(esi + 0x43c) & 65535);
                Vffffffd0 = 39253;
            } else {
                *(esi + 0x114) = *(esi + 0x114) - ebx;
                Vffffffd0 = 39252;
            }
            Vffffffdc = ebx;
            Vffffffe8 = 8;
            Vffffffec = *(esi + 0xcc);
            eax = L00421DEC( & Vffffffd0);
        }
    }
}

/*    Procedure: 0x0042110B - 0x0042110B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042110B()
{



}

/*    Procedure: 0x0042110C - 0x004211F0
 *    Argument size: 0
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L00420FC1()
 */

L0042110C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    esi = 6572964;
    al = *L00644C8C;
    if(al == 0x2a || al == 0x30) {
        *(esi + 18932) = 0;
        eax = *(esi + 0x43a) & 65535;
        ebx = eax < 0xb3 ? 5 : eax < 0xcc ? 0xa : eax < 0xee ? 0x14 : 0x1e;
        if(ebx > *(esi + 0x114)) {
            *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728) = *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728) + ebx;
            eax = *(esi + 0x43c) & 65535;
            if(ebx > *(esi + eax * 4 + 20728)) {
                *(esi + eax * 4 + 20728) = *(esi + eax * 4 + 20728) - ebx;
            }
            L00414070(0xa, 0, *(esi + 0x43c) & 65535);
            Vffffffd0 = 39253;
        } else {
            *(esi + 0x114) = *(esi + 0x114) - ebx;
            Vffffffd0 = 39255;
        }
        if(M006321d2 != 0) {
            L00421208();
        }
        Vffffffdc = ebx;
        Vffffffec = *(esi + 0xcc);
        Vffffffe8 = 8;
        eax = L00421DEC( & Vffffffd0);
    }
}

/*    Procedure: 0x004211F1 - 0x004211F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004211F1()
{



}

/*    Procedure: 0x004211F4 - 0x00421206
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00420FC1()
 */

L004211F4()
{



    if(M006321d2 != 0) {
        eax = L00421208();
    }
}

/*    Procedure: 0x00421207 - 0x00421207
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421207()
{



}

/*    Procedure: 0x00421208 - 0x004212B7
 *    Argument size: -48
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L00420FF0()
 *        L0042100C()
 *        L0042110C()
 *        L004211F4()
 */

L00421208()
{
    /* unknown */ void  Vffffffd0;



    eax = M0064948c;
    if(eax > 0xb) {
        goto L004212af;
    }
    switch(eax) {
        case 0:
L004212af:
            eax = L004219E8();
            goto L004212b4;
        case 1:
            eax = L004262B0();
            goto L004212b4;
        case 2:
            eax = L0042489C( & Vffffffd0);
            goto L004212b4;
        case 3:
L00421253:
            eax = L00426720( & Vffffffd0);
            goto L004212b4;
        case 4:
            eax = L00422DF4();
            goto L004212b4;
        case 5:
            eax = L00423B80( & Vffffffd0);
            goto L004212b4;
        case 6:
            eax = L00423D14(6589390);
            goto L004212b4;
        case 7:
            eax = L004258D0( & Vffffffd0);
            goto L004212b4;
        case 8:
            eax = L00424544();
            goto L004212b4;
        case 9:
            goto L004212af;
        case 0xa:
            goto L004212af;
        case 0xb:
            eax = L004267FC(0xb);
            goto L004212b4;
    }
    goto L00421253;
L004212b4:
}

/*    Procedure: 0x004212B8 - 0x00421459
 *    Argument size: 4
 *    Local size: 60
 *    Save regs size: 12
 *    Called by:
 *        L004219F8()
 *        L004221BB()
 *        L004267CC()
 */

L004212B8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L004222A4();
    M0064948c = A8;
    eax = M00649482;
    if(eax != 0) {
        Vfffffff8 = M00649494;
        Vfffffffc = M00644c70 + 0x124;
        *L005000d8(eax, & Vffffffec, M004d79da, 4, 6, 0x79);
    }
    ebx = M006353f8;
    if(ebx != 0) {
        Vffffffd8 = M006353fc;
        Vffffffdc = M00635400;
        Vffffffe0 = M00635404;
        esi = *((A8 + A8 * 4) * 8 + 0x4d8c98);
        eax = A8 + A8 * 4;
        ebx = *L005000d8(ebx, & Vffffffd8, M004d79da, esi, 1, 0x140 - esi - 3) + *L005000d8(ebx, & Vffffffd8, M004d79da, esi, 1, 0x140 - esi - 3) + ( *L005000d8(ebx, & Vffffffd8, M004d79da, esi, 1, 0x140 - esi - 3) + *L005000d8(ebx, & Vffffffd8, M004d79da, esi, 1, 0x140 - esi - 3)) * 4;
    } else {
        ebx = 0;
    }
    esi = A8 + A8 * 4;
    eax = *(esi * 8 + 0x4d8c8c);
    if(eax != 0) {
        edx = A8 + A8 * 4;
        *L005000d8(eax, & Vffffffc4, M004d79dc, *(esi * 8 + 0x4d8c90), ebx + 2, 0);
    }
    ebx = ebx + *(esi * 8 + 0x4d8c94);
    esi = M0064947a;
    for(edi = (A8 + A8 * 4) * 8 + 0x4d8c9c; esi < M0064947e && *edi + ebx < 0x94; esi = esi + 1) {
        eax = (esi << 4) + (esi << 4) * 2 + 6589390;
        eax = L004214B0(eax, A8, ebx, esi - M0064947a);
        ebx = ebx + *edi;
        if(eax > ebx) {
            ebx = eax;
        }
    }
    edx = esi;
    eax = M0064947a;
    M00635428 = edx - eax;
    L00421600(esi :: M0064947e < 0 & 0xff & 1, 0);
    eax = A8 + A8 * 4;
    if(*(eax * 8 + 0x4d8cac) != 0) {
        eax = L004273D0();
    }
    M0063542c = 1;
}

/*    Procedure: 0x0042145A - 0x0042145B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042145A()
{



}

/*    Procedure: 0x0042145C - 0x004214AC
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004214B0()
 *        L00421600()
 *        L004273D0()
 */

L0042145C(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    eax = L00457DCC(A8, Ac, A10);
    if(M0063542c == 0) {
        *L00500394(Ac, A10, A14, A18, A1c);
        eax = M00635430;
        *(eax * 4 + 6509620) = A1c;
        M00635430 = M00635430 + 1;
    }
}

/*    Procedure: 0x004214AD - 0x004214AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004214AD()
{



}

/*    Procedure: 0x004214B0 - 0x004215FD
 *    Argument size: 16
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L004212B8()
 */

L004214B0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(!(eax = *((Ac + Ac * 4) * 8 + 0x4d8cb0) - 1)) {
        == ? L00421530 : ;
        if(!(eax = eax - 1)) {
            L0042145C(0x2e, *((Ac + Ac * 4) * 8 + 0x4d8ca0), A10, 8, 9, A14 + 0x80);
            if(!( *(A8 + 0x18) & 1)) {
                L0042145C(0x2e, *((Ac + Ac * 4) * 8 + 0x4d8ca4), A10, 8, 9, A14 + 0x90);
                goto L0042159b;
                L0042145C(0x2e, *((Ac + Ac * 4) * 8 + 0x4d8ca0), A10, 8, 9, A14 + 0x80);
                L0042145C(0x2e, *((Ac + Ac * 4) * 8 + 0x4d8ca4), A10, 8, 9, A14 + 0x90);
            }
        }
    } else {
        L0042145C(0x2e, *((Ac + Ac * 4) * 8 + 0x4d8ca0), A10, 8, 9, A14 + 0x80);
    }
L0042159b:
    Vffffffec = *(A8 + 4);
    Vfffffff0 = *(A8 + 8);
    Vfffffff4 = *(A8 + 0xc);
    Vfffffff8 = *(A8 + 0x24);
    Vfffffffc = *(A8 + 0x2c);
    eax = *((Ac + Ac * 4) * 8 + 0x4d8ca8);
    edx = Ac + Ac * 4;
    return A10 + *L005000d8( *A8, & Vffffffec, M004d79da, eax, A10 + 1, 0x140 - eax - 3) + *L005000d8( *A8, & Vffffffec, M004d79da, eax, A10 + 1, 0x140 - eax - 3) + ( *L005000d8( *A8, & Vffffffec, M004d79da, eax, A10 + 1, 0x140 - eax - 3) + *L005000d8( *A8, & Vffffffec, M004d79da, eax, A10 + 1, 0x140 - eax - 3)) * 4;
}

/*    Procedure: 0x004215FE - 0x004215FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004215FE()
{



}

/*    Procedure: 0x00421600 - 0x00421681
 *    Argument size: 8
 *    Local size: 20
 *    Save regs size: 4
 *    Called by:
 *        L004212B8()
 */

L00421600(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffec;



    eax = A8;
    if(eax != 0 || Ac != 0) {
        if(eax != 0) {
            L0042145C(0x30, 0x7c, 0x93, 8, 9, 0x8f);
        }
        if(Ac != 0) {
            L0042145C(0x2f, 0x88, 0x93, 8, 9, 0x9f);
        }
        eax = *L005000d8(39145, & Vffffffec, M004d79da, 0x94, 0x94, 0xa9);
    }
}

/*    Procedure: 0x00421682 - 0x00421683
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421682()
{



}

/*    Procedure: 0x00421684 - 0x00421709
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 *        L0042173C()
 *        L00422AC4()
 *        L00422D8C()
 *        L00423B80()
 *        L0042489C()
 *        L00424C2D()
 *        L00425544()
 *        L00426203()
 */

L00421684(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;



    if(M006321d2 == 0) {
        *L004eecd0(0xc);
        M006321d2 = 0xff;
        ebx = 0x32;
        do {
            L0041D444(ebx, 0);
            L0041D49C(ebx);
            ebx = ebx + 1;
        } while(ebx <= 0x36);
        L0041D444(0xb, 1);
    }
    M0064948c = A8;
    M00649482 = Ac;
    M00649494 = A14;
    M00649498 = A18;
    M006494c0 = A1c;
    if(A10 != 0) {
        L00421EFC(A10);
    }
    return L00421B0C();
}

/*    Procedure: 0x0042170A - 0x0042170B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042170A()
{



}

/*    Procedure: 0x0042170C - 0x00421738
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L00421AE0()
 */

L0042170C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L004222DC();
    M006321d3 = M006321d3 | 1;
    M00649476 = Ac;
    M0064948c = A8;
    M00649482 = 0;
    return L00421B0C();
}

/*    Procedure: 0x00421739 - 0x0042173B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421739()
{



}

/*    Procedure: 0x0042173C - 0x004219CC
 *    Argument size: 0
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L00421B35()
 */

L0042173C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffec;



    ebx = 6572964;
    esi = 0x49cfa8;
    if(M004d8e70 != 0) {
        cx = *( *( *L00501b9c( *( *L00644C6C + 0x82)) + 0x38) + 6);
        eax = (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 2) + (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 2) * 4 + ((( *( *(ebx + 0xc8) + 0xe4) & 65535) << 2) + (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 2) * 4) * 4;
        if(eax < 0) {
            eax = eax + 3;
        }
        eax = eax >> 2;
        ecx = cx;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        edi = eax;
        M004d8e70 = 0;
        if(*(ebx + 0x43c) == 0) {
            *esi = 0x4d767c;
            *(esi + 4) = 8;
            if(edi < 0x4b && *L004eeed4(2) != 0) {
                *esi = 0x4d760c;
                *(esi + 4) = 0xd;
            }
            if(*(ebx + ( *(ebx + 0x43c) & 65535) * 4 + 20728) > 0x32 && *L004eeed4(2) != 0) {
                *esi = 0x4d7640;
                *(esi + 4) = 8;
            }
            if(*(ebx + 0x43a) < 0xb4 && *L004eeed4(2) != 0) {
                *esi = 0x4d76a0;
                *(esi + 4) = 0xa;
            }
        } else {
            if(*(ebx + 0x43c) != 1) {
                goto L00421882;
            }
            *esi = 0x4d7570;
            *(esi + 4) = 9;
            if(*(ebx + 0x1a0) >= 10000 && *L004eeed4(2) != 0) {
                *esi = 0x4d75a0;
                *(esi + 4) = 6;
                goto L004218ed;
L00421882:
                if(*(ebx + 0x43c) != 2) {
                    goto L004218e0;
                }
                *esi = 0x4d7554;
                *(esi + 4) = 7;
                if(*(ebx + 0x1a4) >= 10000 && *L004eeed4(2) != 0) {
                    *esi = 0x4d7500;
                    *(esi + 4) = 6;
                }
                if(edi < 0x4b && *L004eeed4(2) != 0) {
                    *esi = 0x4d74e8;
                    *(esi + 4) = 4;
                    goto L004218ed;
L004218e0:
                    *esi = 0x4d7700;
                    *(esi + 4) = 9;
                }
            }
        }
L004218ed:
        if(*L004eeed4(0x14) < 3) {
            *esi = 0x4d7700;
            *(esi + 4) = 9;
        }
        if(*(ebx + 0x43c) == 4) {
            goto L00421921;
        }
        if(*( *(ebx + 0xcc) + 0x82) == 0x45) {
L00421921:
            *esi = 0;
            *(esi + 4) = 0;
        }
    }
    *(ebx + 16194) = 0;
    *(ebx + 18720) = 0;
    eax = *(ebx + 0xcc);
    Vffffffec = eax;
    edx = *(Vffffffec + 0xa0);
    eax = edx << 0x10;
    Vffffffd0 = 39132;
    L00421684(0, 39122, & Vffffffd0, eax | edx >> 0x10, 1, 32768);
    L00421DD8(38937, & Vffffffd0);
    if(*(ebx + 0x43c) != 4) {
        L00421DD8(38922, & Vffffffd0);
        L00421DD8(38923, & Vffffffd0);
        L00421DD8(38924, & Vffffffd0);
    }
    return L004219E8();
}

/*    Procedure: 0x004219CD - 0x004219CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004219CD()
{



}

/*    Procedure: 0x004219D0 - 0x004219E6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004238E4()
 *        L004260D0()
 *        L00426151()
 */

L004219D0(A8)
/* unknown */ void  A8;
{



    L00421EFC(A8);
    return L004219F8(0);
}

/*    Procedure: 0x004219E7 - 0x004219E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004219E7()
{



}

/*    Procedure: 0x004219E8 - 0x004219F4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421208()
 *        L0042173C()
 *        L00422120()
 *        L00422AC4()
 *        L00426151()
 */

L004219E8()
{



    return L004219F8(0);
}

/*    Procedure: 0x004219F5 - 0x004219F7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004219F5()
{



}

/*    Procedure: 0x004219F8 - 0x00421A2C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004219D0()
 *        L004219E8()
 *        L00421A44()
 */

L004219F8(A8)
/* unknown */ void  A8;
{



    L004551F0(0, 0x4d8e74);
    L0043E55C(0);
    L004212B8(A8);
    L00427380();
    L00426FBC();
    return L00458384();
}

/*    Procedure: 0x00421A2D - 0x00421A2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421A2D()
{



}

/*    Procedure: 0x00421A30 - 0x00421A43
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042489C()
 */

L00421A30(A8)
/* unknown */ void  A8;
{



    L00421EFC(A8);
    return L00421A44();
}

/*    Procedure: 0x00421A44 - 0x00421A50
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421A30()
 *        L00422120()
 */

L00421A44()
{



    return L004219F8(2);
}

/*    Procedure: 0x00421A51 - 0x00421ADC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00421A51(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    if(A8 == 0) {
        if(M006321d2 != 0) {
            goto L00421a70;
        }
        if(!(M006321d3 & 1)) {
L00421a70:
            L004124F8(0, 2);
            L004124F8(0, 0);
            M006321d2 = 0;
            M006321d3 = 0;
            L00418168();
            L004222A4();
            L0041D6C0(0, 0, 0);
            if(M006494c4 != 0) {
                L00419470(0x12, 0);
            }
            L00455238();
            ebx = 0x32;
            do {
                eax = L0041D4C0(ebx);
                ebx = ebx + 1;
            } while(ebx <= 0x36);
        }
    }
}

/*    Procedure: 0x00421ADD - 0x00421ADF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421ADD()
{



}

/*    Procedure: 0x00421AE0 - 0x00421AF3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421B35()
 *        L004225C4()
 *        L004225F7()
 *        L004228EF()
 */

L00421AE0()
{



    return L0042170C(9, 347970);
}

/*    Procedure: 0x00421AF4 - 0x00421B0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421B0C()
 *        L00422C6C()
 */

L00421AF4()
{



    M006353f8 = 0;
    M0064947e = 0;
    return L004222A4();
}

/*    Procedure: 0x00421B0C - 0x00421B34
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L00421684()
 *        L0042170C()
 *        L004238E4()
 *        L00423D14()
 *        L004241FC()
 *        L0042436C()
 *        L00424A39()
 *        L00424ED5()
 *        L00425174()
 *        L00425278()
 *        L00425400()
 *        L00425668()
 *        L004257C0()
 *        L004258D0()
 *        L0042598C()
 *        L00425AD0()
 *        L00425D8A()
 *        L00425E60()
 *        L00425E89()
 *        L00425ED4()
 *        L004260D0()
 *        L004261D4()
 *        L00426270()
 *        L00426720()
 *        L004269C4()
 */

L00421B0C()
{



    L004124F8(0, 2);
    L004124F8(0, 0);
    L00421AF4();
    M0064947a = 0;
    return 0;
}

/*    Procedure: 0x00421B35 - 0x00421CA7
 *    Argument size: 0
 *    Local size: 48
 *    Save regs size: 12
 */

L00421B35()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;



    esi = 6572964;
    edi = 6595504;
    M005014c4 = 0;
    al = *L00644C8C;
    if(al == 0x2a || al == 0x30) {
        ebx = 0x2c;
        do {
            L0041D444(ebx, 0);
            ebx = ebx + 1;
        } while(ebx <= 0x36);
        eax = L0042173C();
    } else {
        L00421AE0();
        L00421DD8(38915, & Vffffffd0);
        al = *(esi + 0xec);
        if(al != 0) {
            eax = *L00501b94(al, *edi);
            if(*(eax + 0x118) != 0xff) {
                edx = *(eax + 0x82);
                if(edx >= 0xf && edx <= 0x3f) {
                    goto L00421bd2;
                }
            }
            if(!( *(eax + 0x14c) & 0x10)) {
L00421bd2:
                Vffffffd0 = 38914;
                Vffffffec = eax;
                Vfffffff4 = eax + 0x124;
                L00421CFC( & Vffffffd0);
            }
        }
        eax = *L00501b94( *( *(esi + 0xc8) + 0x56) & 0xff, *edi);
        if(!( *(eax + 0x14c) & 0x10)) {
            Vffffffd0 = 38912;
            Vffffffec = eax;
            Vfffffff4 = eax + 0x124;
            L00421CFC( & Vffffffd0);
        } else {
            ebx = 0x72;
            do {
                eax = *edi;
                if(*(eax + ebx) != 0) {
                    edx = *(esi + 0xc8);
                    L00421CA8(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + eax + 0x74, *(edx + 0x56));
                }
                ebx = ebx - 1;
            } while(ebx > 0);
        }
        eax = *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728);
        Vffffffdc = eax;
        if(eax != 0) {
            Vffffffd0 = 38921;
            eax = L00421CFC( & Vffffffd0);
        }
        if(*(esi + 0x112) != 0) {
            Vffffffd0 = 38960;
            eax = L00421CFC( & Vffffffd0);
        }
    }
}

/*    Procedure: 0x00421CA8 - 0x00421CFA
 *    Argument size: 8
 *    Local size: 48
 *    Save regs size: 4
 *    Called by:
 *        L00421B35()
 */

L00421CA8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;



    eax = A8;
    dl = *(eax + 0x14c);
    if(!(dl & 0x10) && Ac == ( *(eax + 0x56) & 0xff) && *(eax + 0x88) <= 0x13) {
        ecx = 38913;
        if(!(dl & 0x20)) {
            ecx = 38912;
        }
        Vffffffd0 = ecx;
        Vffffffec = eax;
        Vfffffff4 = eax + 0x124;
        eax = L00421CFC( & Vffffffd0);
    }
}

/*    Procedure: 0x00421CFB - 0x00421CFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421CFB()
{



}

/*    Procedure: 0x00421CFC - 0x00421D30
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 *        L00421B35()
 *        L00421CA8()
 *        L00421DD8()
 *        L00422C6C()
 *        L00423B80()
 *        L00423D14()
 *        L0042436C()
 *        L0042489C()
 *        L00424A39()
 *        L00424C04()
 *        L00424C2D()
 *        L00425174()
 *        L00425544()
 *        L004258D0()
 *        L0042598C()
 *        L00425D8A()
 *        L00425E89()
 *        L004260D0()
 *        L00426270()
 *        L00426720()
 *        L004269C4()
 */

L00421CFC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  edi;



    if(M0064947e < 0x2d) {
        eax = M0064947e;
        M0064947e = M0064947e + 1;
        eax = eax + eax + (eax + eax) * 2;
        edi = eax * 8 + 6589390;
        ecx = 0xc;
        asm("rep movsd");
    }
}

/*    Procedure: 0x00421D31 - 0x00421D33
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421D31()
{



}

/*    Procedure: 0x00421D34 - 0x00421DB9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 */

L00421D34()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 8);
    ebx = M0064947e;
    if(ebx <= 0x2d) {
        if(ebx > 0) {
            eax = *esi;
            edx = eax << 0x10 | eax;
            *(ebp - 8) = edx;
            *(ebp - 4) = *(ebp - 8);
            eax = *L004eeed0(ebx, ebp - 4, ebp - 8);
        } else {
            eax = 0;
        }
        edx = eax + eax + (eax + eax) * 2;
        ecx = M0064947e;
        M0064947e = M0064947e + 1;
        ecx = ecx + ecx + (ecx + ecx) * 2;
        (save)esi;
        esi = edx * 8 + 6589390;
        edi = ecx * 8 + 6589390;
        ecx = 0xc;
        asm("rep movsd");
        (restore)esi;
        (save)esi;
        edi = edx * 8 + 6589390;
        ecx = 0xc;
        asm("rep movsd");
        (restore)esi;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00421DBA - 0x00421DBB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421DBA()
{



}

/*    Procedure: 0x00421DBC - 0x00421DD5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 */

L00421DBC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A8;
    edi = 6509560;
    ecx = 0xc;
    asm("rep movsd");
}

/*    Procedure: 0x00421DD6 - 0x00421DD7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421DD6()
{



}

/*    Procedure: 0x00421DD8 - 0x00421DEB
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042173C()
 *        L00421B35()
 *        L004225C4()
 *        L004225F7()
 *        L004228EF()
 *        L00422AC4()
 *        L004238E4()
 *        L00424ED5()
 *        L00425174()
 *        L00425278()
 *        L00425400()
 *        L00425544()
 *        L00425668()
 *        L004257C0()
 *        L004258D0()
 *        L0042598C()
 *        L00425AB4()
 *        L00425AD0()
 *        L00425E60()
 *        L00425ED4()
 *        L004261D4()
 */

L00421DD8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *Ac = A8;
    return L00421CFC(Ac);
}

/*    Procedure: 0x00421DEC - 0x00421E09
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L0041C1F3()
 *        L0041C97C()
 *        L0041CD14()
 *        L0041D010()
 *        L0041ECCC()
 *        L0041EF5C()
 *        L0041F15A()
 *        L0041FB3C()
 *        L0041FDF0()
 *        L0041FED9()
 *        L004200B8()
 *        L00420318()
 *        L0042043C()
 *        L00421020()
 *        L0042110C()
 *        L0042273C()
 *        L0042CB40()
 *        L0042E38F()
 *        L0042FA73()
 *        L00430410()
 *        L004373AB()
 *        L0043C0E0()
 *        L0043CDC4()
 *        L0043D484()
 *        L0043DA28()
 *        L0043DD28()
 *        L0043DFCC()
 *        L004413F4()
 *        L0044145D()
 *        L00441A7C()
 *        L00442EC4()
 *        L00444850()
 */

L00421DEC(A8)
/* unknown */ void  A8;
{



    if(M00644c8c != 4) {
        *L004d3050();
    }
    return L00421ED0(A8);
}

/*    Procedure: 0x00421E0A - 0x00421E0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421E0A()
{



}

/*    Procedure: 0x00421E0C - 0x00421ECE
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421ED0()
 *        L00421EFC()
 */

L00421E0C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -2068;
    (save)ebx;
    (save)esi;
    eax = A8;
    esi = ebp + -2068;
    *(esi + 4) = *(eax + 8);
    *(esi + 8) = *(eax + 0xc);
    if(*(eax + 0x18) >= 0) {
        if(!(dl & 1)) {
            *esi = *eax;
            *(esi + 0xc) = *(eax + 0x2c);
            edx = *(eax + 0x1c);
            *(esi + 0x10) = edx == 0 ? 6640580 : edx + 0x124;
            eax = 39191;
            bl = 0x5f;
        } else {
            *esi = *(eax + 4);
            *(esi + 0xc) = *(eax + 0x24);
            *(esi + 0x10) = *(eax + 0x2c);
            eax = *eax;
            bl = 0x5f;
        }
    } else {
        *esi = *(eax + 4);
        *(esi + 4) = *(eax + 8);
        *(esi + 8) = *(eax + 0xc);
        *(esi + 0xc) = *(eax + 0x24);
        *(esi + 0x10) = *(eax + 0x2c);
        eax = *eax;
        bl = 0x11;
    }
    *L005000c0(ebp + -2048, eax, esi);
    eax = 0;
    if(Ac == 0) {
        eax = 1;
    }
    eax = L0041D6C0(ebp + -2048, ebx, eax);
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00421ECF - 0x00421ECF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421ECF()
{



}

/*    Procedure: 0x00421ED0 - 0x00421EFB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00421DEC()
 *        L00422988()
 */

L00421ED0(A8)
/* unknown */ void  A8;
{



    if(M00644c8c != 0x2c) {
        if(*(A8 + 0x18) >= 0) {
            L004701BE(0x16);
        }
        eax = L00421E0C(A8, 1);
    }
}

/*    Procedure: 0x00421EFC - 0x00421F2D
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 *        L00421684()
 *        L004219D0()
 *        L00421A30()
 *        L00421F30()
 *        L00422539()
 *        L004228EF()
 *        L00422F6C()
 *        L00423B80()
 *        L00423EC0()
 *        L004241FC()
 *        L0042434A()
 *        L00424551()
 *        L0042477C()
 *        L004247E9()
 *        L00424842()
 *        L00424A39()
 *        L00424C04()
 *        L00424ED5()
 *        L0042500A()
 *        L00425066()
 *        L004250C2()
 *        L00425174()
 *        L00425278()
 *        L00425400()
 *        L004258D0()
 *        L0042598C()
 *        L00425AD0()
 *        L00425C59()
 *        L00425D8A()
 *        L00425E89()
 *        L00425ED4()
 *        L00425FDA()
 *        L00426151()
 *        L004261D4()
 *        L00426310()
 *        L00426520()
 *        L00426720()
 *        L004269C4()
 *        L00426C08()
 *        L00426FA0()
 */

L00421EFC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;



    edi = & Vffffffd0;
    ecx = 0xc;
    asm("rep movsd");
    Vffffffe8 = -1;
    return L00421E0C( & Vffffffd0, 0);
}

/*    Procedure: 0x00421F2E - 0x00421F2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421F2E()
{



}

/*    Procedure: 0x00421F30 - 0x00421F4C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00424B91()
 *        L004252A7()
 *        L0042531C()
 *        L00425400()
 *        L00425688()
 *        L00425743()
 *        L00425782()
 *        L004257C0()
 *        L004257FE()
 *        L00425CB0()
 *        L00425CC6()
 *        L00425CDE()
 *        L00425ED4()
 *        L00425F91()
 *        L00425FAA()
 *        L00425FC2()
 *        L00426001()
 *        L004262BD()
 *        L004262E8()
 *        L00426337()
 *        L004263AC()
 *        L0042640A()
 *        L00426487()
 *        L00426500()
 *        L00426520()
 *        L00426A83()
 *        L00426B1C()
 *        L00426B56()
 *        L00426BA8()
 *        L00426C08()
 */

L00421F30(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = *( *(A8 + 0x20));
    *A8 = 39213;
    return L00421EFC(A8);
}

/*    Procedure: 0x00421F4D - 0x004220EC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00421F4D()
{



    esp = esp + -240;
    (save)ebx;
    ebx = 6572964;
    if(*L00648AE6 == 0) {
        eax = *L00500398() & 0xff;
        if(eax != 0) {
            *(ebx + 18660) = M005015ec;
        }
    }
    if(eax != 0) {
        if(eax == 0xf5) {
            eax = L00422988(ebp - 0x30);
            goto L004220e8;
        }
        if(eax == 0xf6) {
            eax = L00422AC4(ebp - 0x60);
            goto L004220e8;
        }
        if(eax == 0xf7) {
            eax = L0042489C(ebp + -144);
            goto L004220e8;
        }
        if(eax == 0xf8) {
            eax = L00426668(ebp + -192);
            goto L004220e8;
        }
        if(eax == 0xf9) {
            eax = L00426D2C(ebp + -240);
            goto L004220e8;
        }
        if(eax < 0x31 || eax > 0x34) {
            goto L00422030;
        }
        edx = *(ebx + 18646) + eax - 0x31;
        if(edx < *(ebx + 18650)) {
            L004223B4(edx, 0);
            goto L004220a3;
L00422030:
            if(eax == 0x8f || eax == 6) {
                eax = L00422120(1);
                goto L004220e8;
            }
            if(eax == 0x9f || eax == 5) {
                eax = L00422120(-1);
                goto L004220e8;
            }
            if(eax == 3) {
                eax = L00422408();
                goto L004220e8;
            }
            if(eax < 0x80 || eax > 0x9f) {
                goto L0042209b;
            }
            edx = (eax & 0xf) + *(ebx + 18646);
            if(edx < *(ebx + 18650)) {
                L004223B4(edx, eax);
                goto L004220a3;
L0042209b:
                *L0050039c(eax);
            }
        }
    }
L004220a3:
    if(*(ebx + 18664) == 6) {
        eax = L0042723C();
    } else {
        eax = *(ebx + 18716);
        if(eax != 0) {
            edx = M00655674;
            if(eax > edx) {
                eax = eax - edx;
                *(ebx + 18716) = eax;
            } else {
                *(ebx + 18716) = 0;
                L00457D34();
                L00427334();
                eax = L00458384();
            }
        }
    }
L004220e8:
    (restore)ebx;
}

/*    Procedure: 0x004220ED - 0x004220EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004220ED()
{



}

/*    Procedure: 0x004220F0 - 0x0042211F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00422120()
 *        L004221BB()
 */

L004220F0(A8)
/* unknown */ void  A8;
{



    eax = A8 + M0064947a;
    if(eax < 0 || M00635428 + eax > M0064947e) {
        return 1;
    }
    M0064947a = eax;
    return 0;
}

/*    Procedure: 0x00422120 - 0x004221BA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421F4D()
 */

L00422120(A8)
/* unknown */ void  A8;
{



    eax = L004220F0(A8);
    if(eax == 0) {
        eax = M0064948c;
        if(eax > 0xb) {
            goto L004221b4;
        }
        switch(eax) {
            case 0:
L004221b4:
                eax = L004219E8();
                goto L004221b9;
            case 1:
                return L004262B0();
            case 2:
                M00649598 = M0064947a;
                return L00421A44();
            case 3:
                return L004267BC();
            case 4:
L0042218b:
                return L00422DF4();
            case 5:
                goto L0042218b;
            case 6:
                goto L0042218b;
            case 7:
L00422176:
                return L0042596C();
            case 8:
                return L00424544();
            case 9:
                goto L004221b4;
            case 0xa:
                goto L004221b4;
            case 0xb:
                return L004267FC(0xb);
        }
        goto L00422176;
    }
L004221b9:
}

/*    Procedure: 0x004221BB - 0x004222A2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004221BB()
{
    /* unknown */ void  ebx;



    if(!(M006321d3 & 1)) {
        if(M0063218a >= 0) {
            goto L0042229b;
        }
        *L00500398();
        ebx = al & 0xff;
        if(ebx == 0) {
            goto L00422273;
        }
        eax = ebx;
        if(eax <= 0x8f) {
            == ? L00422217 : ;
            if(eax = eax - 0x31 - 4) {
                goto L0042222b;
            }
            if(eax = eax - 0x4b - 0xf) {
                goto L0042224b;
            }
            goto L0042226b;
        }
        if(eax = eax + -144 - 0xf) {
            goto L0042224b;
        }
        == ? L00422221 : ;
        goto L0042226b;
        L004220F0(1);
        goto L00422273;
        L004220F0(-1);
        goto L00422273;
L0042222b:
        eax = M0064947a + ebx - 0x31;
        if(eax < M0064947e) {
            return L004223B4(eax, 0);
L0042224b:
            eax = (ebx & 0xf) + M0064947a;
            if(eax < M0064947e) {
                return L004223B4(eax, ebx);
L0042226b:
                *L0050039c(ebx);
L00422273:
                L004212B8(M0064948c);
                eax = M00649476 - M0064a110;
                M00649476 = eax;
                if(eax < 0) {
                    return L004222DC();
L0042229b:
                    eax = L004222DC();
                }
            }
        }
    }
}

/*    Procedure: 0x004222A3 - 0x004222A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004222A3()
{



}

/*    Procedure: 0x004222A4 - 0x004222D9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004212B8()
 *        L00421A51()
 *        L00421AF4()
 *        L004222DC()
 */

L004222A4()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 0;
    for(ebx = 6509620; esi < M00635430; ebx = ebx + 4) {
        *L005003c0( *ebx);
        esi = esi + 1;
    }
    M0063542c = 0;
    M00635430 = 0;
    return 0;
}

/*    Procedure: 0x004222DA - 0x004222DB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004222DA()
{



}

/*    Procedure: 0x004222DC - 0x0042230D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L00421020()
 *        L0042170C()
 *        L004221BB()
 *        L004224D8()
 *        L00422539()
 *        L004228EF()
 */

L004222DC()
{



    if(!(M006321d3 & 1)) {
        L004124F8(0, 2);
        L004124F8(0, 0);
    }
    M006321d3 = M006321d3 & 0xfe;
    return L004222A4();
}

/*    Procedure: 0x0042230E - 0x0042230F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042230E()
{



}

/*    Procedure: 0x00422310 - 0x004223B2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 *        L004223B4()
 */

L00422310(A8)
/* unknown */ void  A8;
{



    L00418168();
    al = M00644c8c;
    if(al == 0x2a || al == 0x30) {
        L0042718C();
        L00458384();
    }
    if(M005015f0 != 0x3e2) {
        *L004d3050();
    }
    eax = *A8 + -38912;
    if(eax >= 0 && eax < 0x74 && *(eax * 4 + 0x4d79e0) != 0) {
        return *( *(eax * 4 + 0x4d79e0))(A8);
    }
    L004124F8(1, *(A8 + 4));
    L004124F8(2, *(A8 + 8));
    L004124F8(3, *(A8 + 0xc));
    L004124F8(0, *A8);
    return L004124F8(0, 0);
}

/*    Procedure: 0x004223B3 - 0x004223B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004223B3()
{



}

/*    Procedure: 0x004223B4 - 0x00422405
 *    Argument size: 8
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L00421F4D()
 *        L004221BB()
 */

L004223B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff0;



    esi = (A8 + A8 + (A8 + A8) * 2) * 8 + 6589390;
    edi = & Vffffffd0;
    ecx = 0xc;
    asm("rep movsd");
    Vfffffff0 = (A8 << 4) + (A8 << 4) * 2 + 6589390;
    Vffffffe8 = Ac & 0xff;
    L004701BE(0x14);
    return L00422310( & Vffffffd0);
}

/*    Procedure: 0x00422406 - 0x00422407
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422406()
{



}

/*    Procedure: 0x00422408 - 0x00422482
 *    Argument size: -48
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L00421F4D()
 */

L00422408()
{
    /* unknown */ void  Vffffffd0;



    L00471198( & Vffffffd0, 0, 0x30);
    eax = *((M0064948c + M0064948c * 4) * 8 + 0x4d8cac);
    if(eax != 0) {
        eax = eax - 38912;
        if(eax >= 0) {
            if(eax >= 0x74 || *(eax * 4 + 0x4d79e0) == 0) {
                goto L00422459;
            }
            eax = *( *(eax * 4 + 0x4d79e0))( & Vffffffd0);
        } else {
L00422459:
            L004124F8(0, *((M0064948c + M0064948c * 4) * 8 + 0x4d8cac));
            eax = L004124F8(0, 0);
        }
    }
}

/*    Procedure: 0x00422483 - 0x00422483
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422483()
{



}

/*    Procedure: 0x00422484 - 0x004224AF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004224B0()
 */

L00422484(A8)
/* unknown */ void  A8;
{



    if(M00644c9c == 0) {
        eax = M00644c70;
        L0042C96C(M00644c64, eax);
    }
    return L004224D8(A8);
}

/*    Procedure: 0x004224B0 - 0x004224D4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004224B0(A8)
/* unknown */ void  A8;
{



    al = M00644c8c;
    if(al == 0x26 || al == 0x24) {
        return L00422484(A8);
    }
    return L004224D8(A8);
}

/*    Procedure: 0x004224D5 - 0x004224D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004224D5()
{



}

/*    Procedure: 0x004224D8 - 0x00422538
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 4
 *    Called by:
 *        L00422484()
 *        L004224B0()
 */

L004224D8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;



    L0042CA40(M00644c6c, *(A8 + 0x1c), & Vffffffe4, & Vfffffffc);
    if(al == 0) {
        eax = *(A8 + 0x1c);
        M00644c70 = eax;
        M00644c69 = *(M00644c70 + 0x86);
        M00644c8f = 0;
        M00644c8c = 0;
        L00414070(1, 0, 0xd);
    }
    return L004222DC();
}

/*    Procedure: 0x00422539 - 0x004225C3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00422539(A8)
/* unknown */ void  A8;
{



    eax = 6572964;
    *(A8 + 0xc) = *(6572964 + ( *L00644FE0 & 65535) * 4 + 20728);
    edx = *(6572964 + ( *L00644FE0 & 65535) * 4 + 20728);
    if(edx <= *L00644CB8) {
        ecx = *L00644FE0 & 65535;
        *L00644CB8 = *L00644CB8 - edx;
        *(6572964 + ( *L00644FE0 & 65535) * 4 + 20728) = 0;
        L00414070(0xa, 0, *L00644FE0 & 65535);
        *A8 = 39249;
        L00421EFC(A8);
    } else {
        *A8 = 39248;
        L00421EFC(A8);
    }
    return L004222DC();
}

/*    Procedure: 0x004225C4 - 0x004225F6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004225C4(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x1c) = M00644c6c;
    L00421AE0();
    L00421DD8(38919, A8);
    return L00421DD8(38920, A8);
}

/*    Procedure: 0x004225F7 - 0x00422678
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L004225F7(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = *(A8 + 0x1c);
    L00421AE0();
    if(!( *(esi + 0x14c) & 0x10)) {
        L00421DD8(38918, A8);
        eax = L00421DD8(38961, A8);
    } else {
        L00421DD8(38916, A8);
        L00421DD8(38917, A8);
        L00421DD8(38919, A8);
        L00421DD8(38920, A8);
        eax = L00421DD8(38918, A8);
    }
}

/*    Procedure: 0x00422679 - 0x004226C2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00422679(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0x1c);
    dl = *(eax + 0x118);
    if(*(eax + 0x87) == 0xb) {
        if(!(dl = dl - 1) && !(dl = dl - 0xc)) {
            if(dl = dl - 1) {
                goto L004226a8;
            }
            if(!(dl = dl - 2)) {
                goto L004226ba;
L004226a8:
                return L004227A4(eax);
            }
        }
        return L004226C4(eax);
L004226ba:
        eax = L00422780(eax);
    }
}

/*    Procedure: 0x004226C3 - 0x004226C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004226C3()
{



}

/*    Procedure: 0x004226C4 - 0x00422706
 *    Argument size: -44
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L00422679()
 */

L004226C4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffd0;



    eax = A8;
    if(*(eax + 0xff) == 0x24) {
        eax = L00422708(eax);
    } else {
        Vffffffd0 = 39372;
        if(*(eax + 0x82) <= 0x24) {
            Vffffffd0 = 39373;
        }
        eax = L0042273C( & Vffffffd0, eax);
    }
}

/*    Procedure: 0x00422707 - 0x00422707
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422707()
{



}

/*    Procedure: 0x00422708 - 0x00422738
 *    Argument size: -44
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L004226C4()
 */

L00422708(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffd0;



    Vffffffd0 = 39374;
    if(*(A8 + 0x82) <= 0x24) {
        Vffffffd0 = 39375;
    }
    return L0042273C( & Vffffffd0, A8);
}

/*    Procedure: 0x00422739 - 0x0042273B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422739()
{



}

/*    Procedure: 0x0042273C - 0x0042277F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004226C4()
 *        L00422708()
 *        L00422780()
 *        L004227A4()
 *        L004227C5()
 *        L00422840()
 *        L00422871()
 */

L0042273C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *(A8 + 0x1c) = Ac;
    L004701BE(0x26);
    M00644cb6 = *(Ac + 0x86);
    eax = *(Ac + 0xa0);
    edx = eax << 0x10;
    *(A8 + 0xc) = edx | eax >> 0x10;
    *(A8 + 0x18) = 0;
    return L00421DEC(A8);
}

/*    Procedure: 0x00422780 - 0x004227A0
 *    Argument size: -44
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L00422679()
 *        L004227C5()
 */

L00422780(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffd0;



    Vffffffd0 = 39376;
    return L0042273C( & Vffffffd0, A8);
}

/*    Procedure: 0x004227A1 - 0x004227A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004227A1()
{



}

/*    Procedure: 0x004227A4 - 0x004227C4
 *    Argument size: -44
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L00422679()
 *        L004227C5()
 */

L004227A4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffd0;



    Vffffffd0 = 39377;
    return L0042273C( & Vffffffd0, A8);
}

/*    Procedure: 0x004227C5 - 0x0042283C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L004227C5(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = *(A8 + 0x1c);
    if(!(al = *(ebx + 0x118) - 0xfb)) {
        if(al = al - 0x11) {
            goto L004227ee;
        }
        if(al = al - 2) {
            goto L004227f7;
        }
        (save)ebx;
        eax = L004227A4();
    } else {
L004227ee:
        (save)ebx;
        eax = L00422780();
        goto L00422839;
L004227f7:
        al = *(ebx + 0x100);
        if(al == 0) {
            eax = L00422840(ebx);
        } else {
            eax = *L00501b94(al, M0064a3b0) + 0x124;
            *(A8 + 0x2c) = eax;
            *(A8 + 0x24) = *(A8 + 0x2c);
            *A8 = 39378;
            eax = L0042273C(A8, ebx);
        }
    }
L00422839:
}

/*    Procedure: 0x0042283D - 0x0042283F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042283D()
{



}

/*    Procedure: 0x00422840 - 0x00422870
 *    Argument size: -44
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L004227C5()
 */

L00422840(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffd0;



    Vffffffd0 = 39379;
    if(*(A8 + 0xff) != 0x24) {
        Vffffffd0 = 39380;
    }
    return L0042273C( & Vffffffd0, A8);
}

/*    Procedure: 0x00422871 - 0x004228EE
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 4
 */

L00422871(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffd0;



    eax = A8;
    ebx = *(eax + 0x1c);
    if(!( *(ebx + 0x14c) & 0x10)) {
        eax = L0041C44F(0xa, ebx);
    } else {
        if(*(ebx + 0x87) == 0xb && *(ebx + 0x82) >= 0xf && *(ebx + 0x82) <= 0x3f) {
            Vffffffd0 = 39381;
            eax = L0042273C( & Vffffffd0, ebx);
            if(*(ebx + 0x118) == 1 && *(ebx + 0xff) == 0) {
                *(ebx + 0xff) = 4;
                *(ebx + 0xfe) = M00644c64;
            }
        }
    }
}

/*    Procedure: 0x004228EF - 0x0042295D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004228EF(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xc) = 0xa;
    if(M00644cb8 < 0xa) {
        *A8 = 39248;
        L00421EFC(A8);
        return L004222DC();
    }
    M00644cb8 = M00644cb8 - 0xa;
    L00421AE0();
    *(A8 + 0x24) = L0042C788( *( *(A8 + 0x1c) + 0x86) & 0xff);
    L00421DD8(36863, A8);
    M00649476 = 1491300;
    return L00422960(A8);
}

/*    Procedure: 0x0042295E - 0x0042295F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042295E()
{



}

/*    Procedure: 0x00422960 - 0x0042296C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004228EF()
 */

L00422960()
{



    return L004701BE(0x26);
}

/*    Procedure: 0x0042296D - 0x00422986
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042296D()
{



    M00644c90 = M00644cb6;
    return L004701BE(0x15);
}

/*    Procedure: 0x00422987 - 0x00422987
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422987()
{



}

/*    Procedure: 0x00422988 - 0x00422AC2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00421F4D()
 */

L00422988(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 6572964;
    ebx = *L00644C70;
    *(A8 + 0x1c) = ebx;
    if(*( *L00644C6C + 0xd0) == 0) {
        eax = 39104;
    } else {
        if(*(edi + 20528) != *(edi + 20524)) {
            eax = 39224;
        } else {
            eax = *(edi + 0x43c) & 65535;
            if(*(edi + eax * 4 + 20728) != 0) {
                eax = 39397;
            } else {
                L0042CA00( *(edi + 0xc0), ebx);
                if(al == 0) {
                    eax = 39095;
                } else {
                    L004124F8(4, 1);
                    eax = L00412518(4);
                    if(eax == 0) {
                        goto L00422abe;
                    }
                    L004124F8(4, 0);
                    if(!( *(ebx + 0x14c) & 0x40)) {
                        *(edi + 0xe8) = 0x1a;
                        *(edi + 0x106) = 95536;
                        L00414070(1, 0, 0xe);
                    }
                    *(edi + 0xf0) = 1;
                    *(edi + 0xf8) = 0;
                    L00419470(7, 0);
                    eax = *(ebx + 0x86) & 0xff;
                    *(M00501ba8 + eax) = 0x4f;
                    L0041934C(3, 1, 0);
                    eax = 39099;
                }
            }
        }
    }
    *A8 = eax;
    eax = *(ebx + 0xa0);
    edx = eax << 0x10;
    *(A8 + 0xc) = edx | eax >> 0x10;
    *(A8 + 0x18) = 8;
    eax = L00421ED0(A8);
L00422abe:
}

/*    Procedure: 0x00422AC3 - 0x00422AC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422AC3()
{



}

/*    Procedure: 0x00422AC4 - 0x00422C6B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00421F4D()
 *        L00426DA4()
 */

L00422AC4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 6572964;
    ax = *L00644FE0;
    if(ax != 4) {
        if(ax == 0) {
            M0049cfa8 = 0x4d7724;
            M0049cfac = 9;
        } else {
            if(ax == 1) {
                M0049cfa8 = 0x4d776c;
                M0049cfac = 9;
            } else {
                if(ax == 2) {
                    M0049cfa8 = 0x4d7748;
                    M0049cfac = 9;
                } else {
                    M0049cfa8 = 0x4d7724;
                    M0049cfac = 9;
                }
            }
        }
        if(*L004eeed4(0x14) < 3) {
            M0049cfa8 = 0x4d7724;
            M0049cfac = 9;
        }
        cx = *( *( *L00501b9c( *( *(esi + 0xc8) + 0x82)) + 0x38) + 6);
        eax = (( *( *(esi + 0xc8) + 0xe4) & 65535) << 2) + (( *( *(esi + 0xc8) + 0xe4) & 65535) << 2) * 4 + ((( *( *(esi + 0xc8) + 0xe4) & 65535) << 2) + (( *( *(esi + 0xc8) + 0xe4) & 65535) << 2) * 4) * 4;
        if(eax < 0) {
            eax = eax + 3;
        }
        eax = eax >> 2;
        ecx = cx;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        if(eax < 0x4b && *L004eeed4(2) != 0) {
            M0049cfa8 = 0x4d77d8;
            M0049cfac = 4;
        }
        L0041D444(0x35, 1);
        *(esi + 18672) = *( *(esi + 0xcc) + 0xa0);
        L00425D58(esi + 18672, 0x15);
        *A8 = 39132;
        L00421684(0, 39123, A8, *(esi + 18672), 2, 32768);
        L00421DD8(38925, A8);
        L00421DD8(38926, A8);
        L00421DD8(38927, A8);
        L00421DD8(38928, A8);
        eax = L004219E8();
    }
}

/*    Procedure: 0x00422C6C - 0x00422D8A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00422D8C()
 *        L00422E01()
 *        L00423A74()
 */

L00422C6C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    L00421AF4();
    M006494c6 = 0xc;
    if(M00644fde >= 0xb3) {
        M006494c6 = 0xb;
        if(M00644fde >= 0xcc) {
            M006494c6 = 0xa;
            if(M00644fde >= 0x17) {
                M006494c6 = 9;
            }
        }
    }
    L004124F8(0xa, M006494c6);
    L004124F8(0xb, 1);
    L004124F8(0xb, 0);
    *(ebp - 4) = L00412518(0xa);
    *A8 = 39023;
    edi = 0;
    ebx = 0x4d7bc3;
    do {
        if((M00644fde & 65535) >= ( *ebx & 0xff)) {
            if(*(ebx + 1) == 0) {
                eax = *(ebx - 0x13);
                asm("imul dword [0x6494c6]");
                *(A8 + 4) = eax;
                eax = *(ebx - 0xf);
                asm("imul dword [0x6494c6]");
                *(A8 + 8) = eax;
            } else {
                eax = *(ebx - 0x13);
                asm("imul dword [ebp-0x4]");
                *(A8 + 4) = eax;
                eax = *(ebx - 0xf);
                asm("imul dword [ebp-0x4]");
                *(A8 + 8) = eax;
            }
            *(A8 + 0xc) = *(ebx - 0xb);
            *(A8 + 0x24) = edi + 39029;
            *(A8 + 0x10) = edi;
            eax = L004230B4(M00644c6c, edi);
            *(A8 + 0x18) = 0;
            L00421CFC(A8);
        }
        edi = edi + 1;
        ebx = ebx + 0x16;
    } while(edi < 0x42);
    return L00422DF4();
}

/*    Procedure: 0x00422D8B - 0x00422D8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422D8B()
{



}

/*    Procedure: 0x00422D8C - 0x00422DF2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00423A74()
 */

L00422D8C(A8)
/* unknown */ void  A8;
{



    M0049cfa8 = 0x4d7790;
    M0049cfac = 0x12;
    M00649494 = *(M00644c70 + 0xa0);
    L00425D58(6591636, 0x17);
    *A8 = 39147;
    L00421684(4, 39123, A8, M00649494, 4, 32768);
    return L00422C6C(A8);
}

/*    Procedure: 0x00422DF3 - 0x00422DF3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422DF3()
{



}

/*    Procedure: 0x00422DF4 - 0x00422E00
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421208()
 *        L00422120()
 *        L00422C6C()
 *        L00422E01()
 *        L00422F6C()
 */

L00422DF4()
{



    return L004267FC(4);
}

/*    Procedure: 0x00422E01 - 0x00422F20
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 12
 */

L00422E01(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffec;



    eax = *(A8 + 0x10);
    esi = A8;
    edi = & Vffffffd0;
    ecx = 0xc;
    asm("rep movsd");
    Vffffffec = M00644c6c;
    Vffffffd0 = eax + 39029;
    esi = M0064947e;
    if(!( *(A8 + 0x18) & 0x10)) {
        if(*(A8 + 4) + *(A8 + 4) + ( *(A8 + 4) + *(A8 + 4)) * 4 > M00644cb8) {
            L00422F6C(39396, & Vffffffd0);
        } else {
            edx = eax + (eax + eax * 4) * 2;
            ecx = *(edx * 2 + 0x4d7bb8);
            if(ecx > M00644cbc - M00644cc4) {
                L00422F6C(39166, & Vffffffd0);
            } else {
                *( *((( *(edx * 2 + 0x4d7bc0) & 0xff) + ( *(edx * 2 + 0x4d7bc0) & 0xff) * 4) * 4 + 0x4d815c))( & Vffffffd0, eax + (eax + eax * 4) * 2 + eax + (eax + eax * 4) * 2 + 0x4d7bb0, eax);
            }
        }
    } else {
        edx = eax;
        *( *((( *((edx + (edx + eax * 4) * 2) * 2 + 0x4d7bc0) & 0xff) + ( *((edx + (edx + eax * 4) * 2) * 2 + 0x4d7bc0) & 0xff) * 4) * 4 + 0x4d8160))( & Vffffffd0, eax + (eax + eax * 4) * 2 + eax + (eax + eax * 4) * 2 + 0x4d7bb0, eax);
    }
    L00419470(0x12, 0);
    eax = esi == M0064947e ? L00422C6C(A8) : L00422DF4();
}

/*    Procedure: 0x00422F21 - 0x00422F23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422F21()
{



}

/*    Procedure: 0x00422F24 - 0x00422F47
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042312A()
 *        L004232A9()
 *        L004234B5()
 *        L004235EE()
 *        L004236D9()
 *        L00423820()
 *        L00423AE0()
 */

L00422F24(A8)
/* unknown */ void  A8;
{



    M00644cb8 = M00644cb8 - *(A8 + 4) + *(A8 + 4) + ( *(A8 + 4) + *(A8 + 4)) * 4;
    return L00422F6C(39168, A8);
}

/*    Procedure: 0x00422F48 - 0x00422F6B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00423204()
 *        L00423306()
 *        L00423545()
 *        L00423638()
 *        L00423770()
 *        L0042388B()
 *        L00423B28()
 */

L00422F48(A8)
/* unknown */ void  A8;
{



    M00644cb8 = M00644cb8 + *(A8 + 8) + *(A8 + 8) + ( *(A8 + 8) + *(A8 + 8)) * 4;
    return L00422F6C(39169, A8);
}

/*    Procedure: 0x00422F6C - 0x00422F92
 *    Argument size: -40
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L00422E01()
 *        L00422F24()
 *        L00422F48()
 *        L0042312A()
 *        L00423204()
 *        L00423306()
 *        L004234B5()
 *        L00423545()
 *        L00423638()
 *        L004236D9()
 *        L00423770()
 *        L00423820()
 *        L0042388B()
 *        L00423B28()
 *        L00427414()
 */

L00422F6C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;



    Vffffffd0 = A8;
    Vffffffd4 = *Ac;
    L00421EFC( & Vffffffd0);
    return L00422DF4();
}

/*    Procedure: 0x00422F93 - 0x00422F93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00422F93()
{



}

/*    Procedure: 0x00422F94 - 0x00423022
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042312A()
 *        L004232A9()
 *        L004234B5()
 *        L004235EE()
 *        L004236D9()
 *        L00423820()
 */

L00422F94(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    if(Ac < 0 || Ac >= 0x42) {
        eax = 1;
    } else {
        esi = Ac + (Ac + Ac * 4) * 2 + Ac + (Ac + Ac * 4) * 2 + 0x4d7bb0;
        if(*( *((( *(esi + 0x10) & 0xff) + ( *(esi + 0x10) & 0xff) * 4) * 4 + 0x4d8164))(A8, esi) == 0) {
            if(A8 == M00644c6c) {
                M00644cbc = M00644cbc - *(esi + 8);
            }
            L00414070(0xc, *(A8 + 0x86) & 0xff, Ac + 0x64);
            L00414070(0x13, 0, *(A8 + 0x86) & 0xff);
            eax = 0;
        } else {
            eax = 1;
        }
    }
}

/*    Procedure: 0x00423023 - 0x00423023
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00423023()
{



}

/*    Procedure: 0x00423024 - 0x004230B2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00423204()
 *        L00423306()
 *        L00423545()
 *        L00423638()
 *        L00423770()
 *        L0042388B()
 */

L00423024(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    if(Ac < 0 || Ac >= 0x42) {
        eax = 1;
    } else {
        esi = Ac + (Ac + Ac * 4) * 2 + Ac + (Ac + Ac * 4) * 2 + 0x4d7bb0;
        if(*( *((( *(esi + 0x10) & 0xff) + ( *(esi + 0x10) & 0xff) * 4) * 4 + 0x4d8168))(A8, esi) == 0) {
            if(A8 == M00644c6c) {
                M00644cbc = M00644cbc + *(esi + 8);
            }
            L00414070(0xc, *(A8 + 0x86) & 0xff, Ac + 0x64);
            L00414070(0x13, 0, *(A8 + 0x86) & 0xff);
            eax = 0;
        } else {
            eax = 1;
        }
    }
}

/*    Procedure: 0x004230B3 - 0x004230B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004230B3()
{



}

/*    Procedure: 0x004230B4 - 0x004230F0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00422C6C()
 */

L004230B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    if(eax < 0 || eax >= 0x42) {
        return 0;
    }
    edx = eax;
    eax = edx + (edx + eax * 4) * 2 + edx + (edx + eax * 4) * 2 + 0x4d7bb0;
    return *( *((( *(eax + 0x10) & 0xff) + ( *(eax + 0x10) & 0xff) * 4) * 4 + 0x4d816c))(A8, eax);
}

/*    Procedure: 0x004230F1 - 0x00423129
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L004230F1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = 1 << ( *(Ac + 0x12) & 0xff ^ 0x10);
    if(!(ecx = ebx & *(A8 + 0xc8))) {
        return 1;
    }
    *(A8 + 0xc8) = *(A8 + 0xc8) | ebx;
    return 0;
}

/*    Procedure: 0x0042312A - 0x004231C8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0042312A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = *(A8 + 0x1c);
    esi = *(Ac + 0x12) & 0xff;
    ecx = esi ^ 0x10;
    if(!(eax = 1 << cl & *(ebx + 0xc8))) {
        (save)A8;
        (save)39159;
        eax = L00422F6C();
    } else {
        if(esi == 4) {
            if(*( *( *L00501b9c( *(ebx + 0x82)) + 0x38) + 4) & 1) {
                goto L00423192;
            }
            (save)A8;
            (save)39171;
            eax = L00422F6C();
        } else {
L00423192:
            if(esi == 0xd) {
                if(*(ebx + 0xca) & 0x10) {
                    goto L004231b0;
                }
                (save)A8;
                (save)39172;
                eax = L00422F6C();
            } else {
L004231b0:
                L00422F94(ebx, A10);
                eax = L00422F24(A8);
            }
        }
    }
}

/*    Procedure: 0x004231C9 - 0x00423203
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L004231C9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = 1 << ( *(Ac + 0x12) & 0xff ^ 0x10);
    if(!(ecx = ebx & *(A8 + 0xc8))) {
        *(A8 + 0xc8) = *(A8 + 0xc8) & !ebx;
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00423204 - 0x00423250
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00423204(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = *(A8 + 0x1c);
    if(!(eax = 1 << ( *(Ac + 0x12) & 0xff ^ 0x10) & *(edx + 0xc8))) {
        L00423024(edx, A10);
        return L00422F48(A8);
    }
    (save)A8;
    (save)39162;
    return L00422F6C();
}

/*    Procedure: 0x00423251 - 0x0042327B
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00423251(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = 1;
    if(!(edx = 1 << ( *(Ac + 0x12) & 0xff ^ 0x10) & *(A8 + 0xc8))) {
        eax = 0;
    }
}

/*    Procedure: 0x0042327C - 0x004232A8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042327C(A8)
/* unknown */ void  A8;
{



    if(A8 == M00644c6c) {
        M00644cc0 = M00644cc0 + 1;
        L00414070(1, 0, 0xf);
        return 0;
    }
    return 1;
}

/*    Procedure: 0x004232A9 - 0x004232CC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L004232A9(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    L00422F94( *(A8 + 0x1c), A10);
    return L00422F24(A8);
}

/*    Procedure: 0x004232CD - 0x00423305
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004232CD(A8)
/* unknown */ void  A8;
{



    if(A8 == M00644c6c && M00644cc0 > 0) {
        M00644cc0 = M00644cc0 - 1;
        L00414070(1, 0, 0xf);
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00423306 - 0x00423368
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00423306(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    *(A8 + 0x18) = M00644cc0;
    if(M00644cc0 == 0) {
        (save)A8;
        (save)39162;
        return L00422F6C();
    }
    if(M00644cc8 == M00644cc0) {
        (save)A8;
        (save)39164;
        return L00422F6C();
    }
    L00423024( *(A8 + 0x1c), A10);
    return L00422F48(A8);
}

/*    Procedure: 0x00423369 - 0x00423384
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423369(A8)
/* unknown */ void  A8;
{



    if(A8 == M00644c6c) {
        return M00644cc0;
    }
    return 0;
}

/*    Procedure: 0x00423385 - 0x004233C0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00423385(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    ecx = *(eax + 0xd1);
    edx = 0;
    eax = eax + 0xd2;
    if(ecx > 0) {
        do {
            if(*eax == 0) {
                goto L004233ac;
            }
            edx = edx + 1;
            eax = eax + 1;
        } while(ecx > edx);
        goto L004233b9;
L004233ac:
        *eax = *(Ac + 0x12);
        return 0;
    }
L004233b9:
    return 1;
}

/*    Procedure: 0x004233C1 - 0x004233D8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004233C1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L004238E4(A8, Ac);
}

/*    Procedure: 0x004233D9 - 0x00423415
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L004233D9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    eax = A8;
    ecx = *(eax + 0xd1);
    edx = 0;
    eax = eax + 0xd2;
    if(ecx > 0) {
        do {
            if(*(Ac + 0x12) == *eax) {
                goto L00423400;
            }
            edx = edx + 1;
            eax = eax + 1;
        } while(ecx > edx);
        goto L0042340d;
L00423400:
        *eax = 0;
        eax = 0;
    } else {
L0042340d:
        eax = 1;
    }
}

/*    Procedure: 0x00423416 - 0x0042342C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00423416(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L004238E4(A8, Ac);
}

/*    Procedure: 0x0042342D - 0x00423464
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L0042342D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    eax = A8;
    edx = eax + 0xd2;
    ecx = 0;
    eax = *(eax + 0xd1) - 1;
    edx = edx + eax;
    do {
        if(*(Ac + 0x12) == *edx) {
            ecx = ecx + 1;
        }
        eax = eax - 1;
        edx = edx - 1;
    } while(eax >= 0);
    return ecx;
}

/*    Procedure: 0x00423465 - 0x004234B4
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00423465(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*(A8 + 0xd0) != 0) {
        return 1;
    }
    *(A8 + 0xd0) = *(Ac + 0x12);
    M00644d9c = 0x1f4;
    M00644da4 = M00644ba8;
    if(A8 == M00644c6c) {
        M00644c6a = M00644c6a & 65534;
    }
    return 0;
}

/*    Procedure: 0x004234B5 - 0x004234F5
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L004234B5(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    if(*( *(A8 + 0x1c) + 0xd0) != 0) {
        (save)A8;
        (save)39161;
        return L00422F6C();
    }
    L00422F94( *(A8 + 0x1c), A10);
    return L00422F24(A8);
}

/*    Procedure: 0x004234F6 - 0x00423544
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L004234F6(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x14) >= 0) {
        eax = *(A8 + 0xd0);
        if(eax == ( *(Ac + 0x12) & 0xff)) {
            *(A8 + 0xd0) = 0;
            *(A8 + 0x11e) = 0;
            return 0;
        }
    }
    return 1;
}

/*    Procedure: 0x00423545 - 0x004235BA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00423545(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = *( *(A8 + 0x1c) + 0xd0);
    if(eax != ( *(Ac + 0x12) & 0xff)) {
        (save)A8;
        (save)39162;
        return L00422F6C();
    }
    if(*( *( *L00501b9c( *( *(A8 + 0x1c) + 0x82)) + 0x38) + 0x14) < 0) {
        (save)A8;
        (save)39163;
        return L00422F6C();
    }
    L00423024( *(A8 + 0x1c), A10);
    return L00422F48(A8);
}

/*    Procedure: 0x004235BB - 0x004235DB
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004235BB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = 1;
    if(*(A8 + 0xd0) != ( *(Ac + 0x12) & 0xff)) {
        eax = 0;
    }
}

/*    Procedure: 0x004235DC - 0x004235ED
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004235DC(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xe2) = *(A8 + 0xe2) + 0x40;
    return 0;
}

/*    Procedure: 0x004235EE - 0x00423610
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L004235EE(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    L00422F94( *(A8 + 0x1c), A10);
    return L00422F24(A8);
}

/*    Procedure: 0x00423611 - 0x00423637
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423611(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0xe2) >= 0x40) {
        *(A8 + 0xe2) = *(A8 + 0xe2) + 65472;
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00423638 - 0x00423676
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00423638(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    if(*( *(A8 + 0x1c) + 0xe2) < 0x40) {
        (save)A8;
        (save)39162;
        return L00422F6C();
    }
    L00423024( *(A8 + 0x1c), A10);
    return L00422F48(A8);
}

/*    Procedure: 0x00423677 - 0x00423690
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423677(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0xe2) & 65535;
    if(eax < 0) {
        eax = eax + 0x3f;
    }
    return eax >> 6;
}

/*    Procedure: 0x00423691 - 0x004236D8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00423691(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    edx = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x12);
    eax = A8 + 0xd6 + edx;
    goto L004236cc;
L004236c6:
    *eax = *(Ac + 0x12);
    eax = 0;
    goto L004236d5;
L004236cc:
    do {
        eax = eax - 1;
        if(!(edx = edx - 1)) {
            goto L004236d0;
        }
    } while(*eax != 0);
    goto L004236c6;
L004236d0:
    eax = 1;
L004236d5:
}

/*    Procedure: 0x004236D9 - 0x0042373B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L004236D9(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    edx = *( *( *L00501b9c( *( *(A8 + 0x1c) + 0x82)) + 0x38) + 0x12);
    eax = *(A8 + 0x1c) + 0xd6 + edx;
    goto L00423726;
L00423715:
    L00422F94( *(A8 + 0x1c), A10);
    eax = L00422F24(A8);
    goto L00423738;
L00423726:
    do {
        eax = eax - 1;
        if(!(edx = edx - 1)) {
            goto L0042372a;
        }
    } while(*eax != 0);
    goto L00423715;
L0042372a:
    (save)A8;
    (save)39160;
    eax = L00422F6C();
L00423738:
}

/*    Procedure: 0x0042373C - 0x0042376F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L0042373C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = 9;
    eax = A8 + 0xd6 + 9;
    do {
        if(*eax == *(Ac + 0x12)) {
            goto L0042375a;
        }
        edx = edx - 1;
        eax = eax - 1;
    } while(edx >= 0);
    return 1;
L0042375a:
    *eax = 0;
    return 0;
    return 1;
}

/*    Procedure: 0x00423770 - 0x004237C2
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L00423770(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    esi = *(A8 + 0x1c);
    eax = esi + 0xd6;
    edx = 9;
    eax = eax + 9;
    do {
        if(*(Ac + 0x12) == *eax) {
            goto L00423799;
        }
        edx = edx - 1;
        eax = eax - 1;
    } while(edx >= 0);
    goto L004237b0;
L00423799:
    L00423024(esi, A10);
    eax = L00422F48(A8);
    goto L004237be;
L004237b0:
    (save)A8;
    (save)39162;
    eax = L00422F6C();
L004237be:
}

/*    Procedure: 0x004237C3 - 0x004237EC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L004237C3(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = 0;
    eax = A8 + 0xd6;
    edx = 0;
    do {
        if(*(Ac + 0x12) == *eax) {
            ecx = ecx + 1;
        }
        edx = edx + 1;
        eax = eax + 1;
    } while(edx < 0xa);
    return ecx;
}

/*    Procedure: 0x004237ED - 0x0042381F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004237ED(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == M00644c6c && M00649cbe < 0xa) {
        L0041CEF8( *(Ac + 0x12) & 0xff);
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00423820 - 0x00423862
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00423820(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    *(A8 + 0x18) = M00649cbe;
    if(M00649cbe >= 0xa) {
        (save)A8;
        (save)39382;
        return L00422F6C();
    }
    L00422F94( *(A8 + 0x1c), A10);
    return L00422F24(A8);
}

/*    Procedure: 0x00423863 - 0x0042388A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423863(A8)
/* unknown */ void  A8;
{



    if(A8 == M00644c6c && M00649cc2 > 0) {
        L0041CF40();
        return 0;
    }
    return 1;
}

/*    Procedure: 0x0042388B - 0x004238C6
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0042388B(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    if(M00649cc2 > 0) {
        L00423024( *(A8 + 0x1c), A10);
        return L00422F48(A8);
    }
    (save)A8;
    (save)39162;
    return L00422F6C();
}

/*    Procedure: 0x004238C7 - 0x004238E0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004238C7(A8)
/* unknown */ void  A8;
{



    if(A8 == M00644c6c) {
        return M00649cc2;
    }
    return 0;
}

/*    Procedure: 0x004238E1 - 0x004238E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004238E1()
{



}

/*    Procedure: 0x004238E4 - 0x00423A22
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L004233C1()
 *        L00423416()
 */

L004238E4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(A8 + 0x1c);
    Vfffffffc = eax + 0xd2;
    esi = *(eax + 0xd1);
    Vfffffff8 = 0;
    edi = !( *(A8 + 0x18) & 0x10) ? *(Ac + 0x12) & 0xff : 0;
    eax = 0;
    edx = Vfffffffc;
    if(esi > 0) {
        do {
            if(edi == ( *edx & 0xff)) {
                Vfffffff8 = Vfffffff8 + 1;
                Vfffffff4 = eax;
            }
            eax = eax + 1;
            edx = edx + 1;
        } while(esi > eax);
    }
    if(Vfffffff8 < 1) {
        eax = L00427414(39167, A8);
    } else {
        if(Vfffffff8 == 1) {
            eax = !( *(A8 + 0x18) & 0x10) ? L00423B28(Vfffffff4, A8, Ac) : L00423AE0(Vfffffff4, A8, Ac);
        } else {
            L00421B0C();
            *(A8 + 0x2c) = *(A8 + 0x18);
            *(A8 + 0x18) = 0;
            if(esi > 0 && edi == ( *Vfffffffc & 0xff)) {
                L00421DD8(39024, A8);
            }
            if(esi > 1 && edi == ( *(Vfffffffc + 1) & 0xff)) {
                L00421DD8(39025, A8);
            }
            if(esi > 2 && edi == ( *(Vfffffffc + 2) & 0xff)) {
                L00421DD8(39026, A8);
            }
            if(esi > 3 && edi == ( *(Vfffffffc + 3) & 0xff)) {
                L00421DD8(39027, A8);
            }
            *A8 = 39170;
            eax = L004219D0(A8);
        }
    }
}

/*    Procedure: 0x00423A23 - 0x00423A36
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423A23(A8)
/* unknown */ void  A8;
{



    return L00423A74(1, A8);
}

/*    Procedure: 0x00423A37 - 0x00423A4A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423A37(A8)
/* unknown */ void  A8;
{



    return L00423A74(2, A8);
}

/*    Procedure: 0x00423A4B - 0x00423A5E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423A4B(A8)
/* unknown */ void  A8;
{



    return L00423A74(3, A8);
}

/*    Procedure: 0x00423A5F - 0x00423A72
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423A5F(A8)
/* unknown */ void  A8;
{



    return L00423A74(0, A8);
}

/*    Procedure: 0x00423A73 - 0x00423A73
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00423A73()
{



}

/*    Procedure: 0x00423A74 - 0x00423ADF
 *    Argument size: 8
 *    Local size: 96
 *    Save regs size: 8
 *    Called by:
 *        L00423A23()
 *        L00423A37()
 *        L00423A4B()
 *        L00423A5F()
 */

L00423A74(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffd0;



    L00422D8C( & Vffffffd0);
    if(!( *(Ac + 0x2c) & 0x10)) {
        eax = *(Ac + 0x10);
        edx = eax;
        L00423B28(A8, Ac, edx + (edx + eax * 4) * 2 + edx + (edx + eax * 4) * 2 + 0x4d7bb0);
    } else {
        eax = *(Ac + 0x10);
        edx = eax;
        L00423AE0(A8, Ac, edx + (edx + eax * 4) * 2 + edx + (edx + eax * 4) * 2 + 0x4d7bb0);
    }
    return L00422C6C( & Vffffffa0);
}

/*    Procedure: 0x00423AE0 - 0x00423B27
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004238E4()
 *        L00423A74()
 */

L00423AE0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = M00644c6c + 0xd2;
    if(*(eax + A8) != 0) {
        eax = L00427414(39165, Ac);
    } else {
        *(eax + A8) = *(A10 + 0x12);
        M00644cbc = M00644cbc - *(A10 + 8);
        eax = L00422F24(Ac);
    }
}

/*    Procedure: 0x00423B28 - 0x00423B6F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004238E4()
 *        L00423A74()
 */

L00423B28(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = M00644c6c + 0xd2;
    if(*(eax + A8) != *(A10 + 0x12)) {
        (save)Ac;
        (save)39162;
        eax = L00422F6C();
    } else {
        *(eax + A8) = 0;
        M00644cbc = M00644cbc + *(A10 + 8);
        eax = L00422F48(Ac);
    }
}

/*    Procedure: 0x00423B70 - 0x00423B7E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00423B70(A8)
/* unknown */ void  A8;
{



    return L00423B80(A8);
}

/*    Procedure: 0x00423B7F - 0x00423B7F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00423B7F()
{



}

/*    Procedure: 0x00423B80 - 0x00423CD1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00421208()
 *        L00423B70()
 */

L00423B80(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    *A8 = 39148;
    *(A8 + 0x1c) = M00644c70;
    eax = *(M00644c70 + 0xa0);
    edx = eax << 8;
    edx = edx | eax >> 0x18;
    M00649494 = edx;
    L00421684(5, 39123, A8, M00649494, 5, 32768);
    esi = L0042C788( *(M00644c70 + 0x86) & 0xff);
    M0064949c = esi;
    eax = *(esi + 0x31e) - 1;
    *(A8 + 0x18) = eax;
    if(*(A8 + 0x18) >= 0) {
        eax = M00644c6c;
        edi = *( *(eax + 0xd0) * 4 + 0x4d8ad8);
        eax = *( *L00501b9c( *(eax + 0x82)) + 0x38);
        edi = edi + *(eax + 0xa);
        edi = edi - *(( *(eax + 0x14) & 0xff) * 4 + 0x4d8ad8);
        edi = (((edi << 4) - edi << 3) - edi << 2) - edi + (((edi << 4) - edi << 3) - edi << 2) - edi;
        *A8 = 38929;
        *(ebp - 4) = 0;
        for(esi = esi + 0x2e6; *(A8 + 0x18) >= 0; *(A8 + 0x18) = *(A8 + 0x18) - 1) {
            eax = *( *L00501b9c( *esi & 65535) + 0x38);
            edx = ( *(eax + 0xa) << 3) + ( *(eax + 0xa) << 3) * 4 + (( *(eax + 0xa) << 3) + ( *(eax + 0xa) << 3) * 4) * 4 + (( *(eax + 0xa) << 3) + ( *(eax + 0xa) << 3) * 4 + (( *(eax + 0xa) << 3) + ( *(eax + 0xa) << 3) * 4) * 4) * 4;
            *(A8 + 4) = edx;
            *(A8 + 8) = *(A8 + 4) - edi;
            *(A8 + 0xc) = *(eax + 8);
            *(A8 + 0x24) = *(eax + 0xe);
            eax = ( *(esi + 2) & 65535) << 0x10;
            *(A8 + 0x10) = eax + ( *esi & 65535);
            L00421CFC(A8);
            esi = esi + 4;
            *(ebp - 4) = *(ebp - 4) + 1;
        }
    } else {
        *A8 = 39149;
        L00421EFC(A8);
    }
    return L004267FC(5);
}

/*    Procedure: 0x00423CD2 - 0x00423D10
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00423CD2(A8)
/* unknown */ void  A8;
{



    L00418168();
    al = M00644c8c;
    if(al == 0x2a || al == 0x30) {
        L0042718C();
        L00458384();
    }
    if(!( *(A8 + 0x18) & 0x10)) {
        return L00423D14(A8);
    }
    return L004241FC(A8);
}

/*    Procedure: 0x00423D11 - 0x00423D13
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00423D11()
{



}

/*    Procedure: 0x00423D14 - 0x00423EBC
 *    Argument size: 4
 *    Local size: 100
 *    Save regs size: 12
 *    Called by:
 *        L00421208()
 *        L00423CD2()
 *        L004241FC()
 */

L00423D14(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffff9c;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;



    (save)A8;
    (save) & Vffffff9c;
    edi = & Vffffffb0;
    ecx = 0xc;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    Vffffffb0 = 38929;
    L00421B0C();
    L00421CFC( & Vffffffb0);
    eax = (Vffffffc0 >> 0x10) * 18957;
    M006495c0 = eax;
    L00430CB0(0x12, edi, M006495c0, 6591940);
    L004267CC(6);
    ebx = *( *L00501b9c(Vffffffc0 & 65535 & 65535) + 0x38);
    *edi = *(ebx + 6);
    eax = *(ebx + 8);
    *(edi + 4) = eax;
    *(edi + 8) = *(ebx + 4) & 0xf;
    *(edi + 0xc) = *(ebx + 0x12);
    *(edi + 0x10) = *(ebx + 0x10);
    *L005000d8(39187, edi, M004d79da, 0x87, 0x19, 0);
    eax = & Vffffffe0;
    L0043BA00(Vffffffc0 & 65535, eax);
    *edi = Vffffffe0;
    *(edi + 4) = Vffffffe4;
    *(edi + 8) = Vffffffe8;
    *L005000d8(39189, edi, M004d79da, 0x87, 0x73, 0);
    *edi = Vffffffec;
    *(edi + 4) = Vfffffff0;
    *(edi + 8) = Vfffffff4;
    *L005000d8(39190, edi, M004d79da, 0xd7, 0x87, 0);
    eax = *ebx;
    ecx = 0x36;
    asm("cdq");
    edx = ecx / ecx % ecx / ecx;
    *edi = eax;
    eax = ~( *(ebx + 2));
    ecx = 0x36;
    asm("cdq");
    edx = ecx / ecx % ecx / ecx;
    *(edi + 4) = eax;
    *(edi + 8) = Vfffffff8;
    *(edi + 0xc) = *( *(ebx + 0x14) * 4 + 0x4d8b14);
    *(edi + 0x10) = 6591940;
    *L005000d8(39188, edi, M004d79da, 0x87, 0x4b, 0);
    L00458384();
    L00457D34();
    *esi = *(esi + 0x10);
    return L00427014(esi);
}

/*    Procedure: 0x00423EBD - 0x00423EBF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00423EBD()
{



}

/*    Procedure: 0x00423EC0 - 0x00423EE0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004241FC()
 *        L00424551()
 *        L004245BF()
 *        L004245FF()
 *        L00424643()
 *        L0042477C()
 *        L004247E9()
 *        L00424842()
 *        L00424B91()
 */

L00423EC0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    M00644cb8 = M00644cb8 + A8;
    *(Ac + 0xc) = A8;
    *Ac = 39248;
    return L00421EFC(Ac);
}

/*    Procedure: 0x00423EE1 - 0x00423EE3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00423EE1()
{



}

/*    Procedure: 0x00423EE4 - 0x004241F8
 *    Argument size: 12
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L004241FC()
 */

L00423EE4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;



    esi = 6572964;
    edi = *L00501b9c(Ac);
    edx = 0;
    eax = A8 + 0xd6;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 1;
    } while(edx < 0xa);
    *(A8 + 0xc8) = 0;
    *(A8 + 0xcc) = 0;
    *(A8 + 0xd2) = 0;
    *(A8 + 0xd3) = 0;
    *(A8 + 0xd4) = 0;
    *(A8 + 0xd5) = 0;
    *(A8 + 0xe0) = 0;
    *(A8 + 0xe2) = 0;
    *(A8 + 0x11e) = 536870912;
    *(A8 + 0xa0) = A10;
    if(A8 == *(esi + 0xc8) && *(esi + 0xe8) == 0x2a && !( *( *(esi + 0xcc) + 0x14c) & 0x40)) {
        L0044EB99(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), L004537B0( *(A8 + 0xc), *(A8 + 0x140)));
        L0044EB99(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), L004537B0( *(A8 + 0x10), *(A8 + 0x140)));
        L0044EB99(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), L004537B0( *(A8 + 0x14), *(A8 + 0x140)));
    }
    *L00501b98(A8, A8, Ac);
    L00430CB0(0x12, & Vffffffec, *(A8 + 0xa0), A8 + 0x124);
    eax = *(edi + 0x38);
    if(*(eax + 0x14) >= 0) {
        *(A8 + 0xd0) = *(eax + 0x14) & 0xff;
    }
    if(A8 == *(esi + 0xc8) && *(esi + 0xe8) == 0x2a && !( *( *(esi + 0xcc) + 0x14c) & 0x40)) {
        eax = *(esi + 0xc8);
        L0044EB67( *(esi + 0xc8) + 0x3e, *(eax + 0x3e), *(eax + 0x42), L004537B0( *( *(esi + 0xc8) + 0xc), *( *(esi + 0xc8) + 0x140)));
        eax = *(esi + 0xc8);
        L0044EB67( *(esi + 0xc8) + 0x46, *(eax + 0x46), *(eax + 0x4a), L004537B0( *( *(esi + 0xc8) + 0x10), *( *(esi + 0xc8) + 0x140)));
        eax = *(esi + 0xc8);
        L0044EB67( *(esi + 0xc8) + 0x4e, *(eax + 0x4e), *(eax + 0x52), L004537B0( *( *(esi + 0xc8) + 0x14), *( *(esi + 0xc8) + 0x140)));
    }
    if(A8 == *(esi + 0xc8)) {
        *(esi + 0x1f4) = 0x1f4;
        *(esi + 0x1f8) = 0x1f4;
        *(esi + 0x1fc) = *(esi + 4);
        *(esi + 0x200) = *(esi + 4);
        *(esi + 20524) = *( *(edi + 0x38) + 0x10) - 1;
        L0043FC64(A8);
        L0041CF94();
        *(esi + 0x214) = *(A8 + 0xbc);
        *(esi + 0x218) = *(A8 + 0xbe);
        *(esi + 0x21c) = *(A8 + 0xc0);
        *(esi + 0x220) = *(A8 + 0xc2);
        *(esi + 0x224) = *(A8 + 0xc4);
        *(esi + 0x228) = *(A8 + 0xc6);
        eax = *(edi + 0x38);
        if(*(eax + 0x14) >= 0) {
            *(esi + 0x118) = *(esi + 0x118) - *((eax & 0xff) * 4 + 0x4d8b50);
        }
    }
    return L00414070(0xb, 0, *(A8 + 0x86) & 0xff);
}

/*    Procedure: 0x004241F9 - 0x004241FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004241F9()
{



}

/*    Procedure: 0x004241FC - 0x00424349
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L00423CD2()
 */

L004241FC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 6572964;
    if(*L00644CC8 != 0) {
        *A8 = 39151;
        eax = L00421EFC(A8);
    } else {
        eax = *(A8 + 8) + *(A8 + 8) + ( *(A8 + 8) + *(A8 + 8)) * 4;
        *(esi + 0x114) = *(esi + 0x114) - eax;
        if(*(esi + 0x114) < 0) {
            eax = L00423EC0(eax, A8);
        } else {
            eax = *(esi + 0xc8);
            Vfffffffc = *(eax + 0x82);
            Vfffffff8 = *(eax + 0xa0);
            L00423D14(A8);
            L00423EE4( *(esi + 0xc8), *(A8 + 0x10) & 65535, *(esi + 18972));
            L0043E55C(0);
            L00423D14(A8);
            M0049cfa8 = 0x4d77e8;
            M0049cfac = 6;
            *(A8 + 4) = *(A8 + 0x10);
            eax = *(A8 + 0x10);
            edx = eax << 0x10;
            edx = edx | eax >> 0x10;
            *(A8 + 0x10) = edx;
            edx = *(A8 + 0x10) & 65535;
            ecx = *( *(esi + 18680) + 0x31e) - 1;
            eax = *(esi + 18680) + ecx * 4 + 0x2e8;
            do {
                if(edx == ( *eax & 65535)) {
                    break;
                }
                ecx = ecx - 1;
                eax = eax - 4;
            } while(ecx >= 0);
            edi = *(esi + 18680);
            ax = Vfffffffc;
            *(edi + ecx * 4 + 0x2e6) = ax;
            (save)ecx;
            edx = 0;
            edx = 18957 / 18957 % 18957 / 18957;
            (restore)ecx;
            *(edi + ecx * 4 + 0x2e8) = Vfffffff8;
            *A8 = 39150;
            L00421EFC(A8);
            L00421B0C();
            L004273D0();
            eax = L00419470(0x12, 0);
        }
    }
}

/*    Procedure: 0x0042434A - 0x00424369
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042434A(A8)
/* unknown */ void  A8;
{



    *A8 = 39152;
    L00421EFC(A8);
    return L0042436C(A8);
}

/*    Procedure: 0x0042436A - 0x0042436B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042436A()
{



}

/*    Procedure: 0x0042436C - 0x00424540
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0042434A()
 *        L00424551()
 *        L004245BF()
 *        L004245FF()
 *        L00424643()
 *        L0042477C()
 *        L004247E9()
 *        L00424842()
 */

L0042436C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    L00421B0C();
    M00649482 = 39123;
    eax = *(M00644c70 + 0xa0);
    edx = eax << 0xe;
    M00649494 = edx | eax >> 0x12;
    M006494c0 = 32768;
    M00649498 = 6;
    eax = M00644c6c;
    *(A8 + 0x1c) = eax;
    edi = *(A8 + 0x1c);
    esi = *( *L00501b9c( *(edi + 0x82)) + 0x38);
    *(A8 + 0x2c) = esi;
    *(A8 + 0xc) = ( *(esi + 0xa) << 4) + ( *(esi + 0xa) << 4) * 4;
    *A8 = 38933;
    L00421CFC(A8);
    if(*(edi + 0xd0) != 0) {
        *(A8 + 0xc) = *(esi + 0xa) + *(esi + 0xa) + ( *(esi + 0xa) + *(esi + 0xa)) * 4 + ( *(esi + 0xa) + *(esi + 0xa) + ( *(esi + 0xa) + *(esi + 0xa)) * 4) * 4;
        *(A8 + 8) = M00644da4;
        *A8 = 38934;
        L00421CFC(A8);
    }
    *(A8 + 8) = M00644da0;
    *(A8 + 0xc) = *(esi + 0xa) + *(esi + 0xa) + ( *(esi + 0xa) + *(esi + 0xa)) * 4 + ( *(esi + 0xa) + *(esi + 0xa) + ( *(esi + 0xa) + *(esi + 0xa)) * 4) * 4;
    *A8 = 38935;
    L00421CFC(A8);
    eax = *(esi + 6) << 2;
    Vfffffffc = eax - ( *(edi + 0xe4) & 65535);
    if(Vfffffffc != 0) {
        *(A8 + 4) = Vfffffffc + Vfffffffc * 4 + (Vfffffffc + Vfffffffc * 4) * 4;
        *(A8 + 0xc) = 0xa;
        *A8 = 38931;
        L00421CFC(A8);
        *(A8 + 4) = Vfffffffc + Vfffffffc * 4 + (Vfffffffc + Vfffffffc * 4) * 4;
        *(A8 + 8) = *(esi + 6) << 2;
        *(A8 + 0xc) = Vfffffffc + Vfffffffc + (Vfffffffc + Vfffffffc) * 4;
        *A8 = 38936;
        L00421CFC(A8);
    }
    if(*(edi + 0xd0) != 0) {
        *(A8 + 0xc) = 0x64;
        esi = 0;
        Vfffffff4 = 6573496;
        do {
            if(*Vfffffff4 == 0) {
                *(A8 + 4) = esi + 39342;
                *A8 = 38932;
                L00421CFC(A8);
            }
            esi = esi + 1;
            Vfffffff4 = Vfffffff4 + 4;
        } while(esi < 6);
    }
    eax = *(edi + 0xcc);
    edx = eax << 0x10;
    Vfffffff8 = edx | eax >> 0x10;
    esi = 0x1f;
    edi = 0x4d8c84;
    do {
        if(Vfffffffb & 0x80) {
            Vfffffff8 = Vfffffff8 << 1;
            *(A8 + 4) = esi;
            *(A8 + 8) = *edi;
            *(A8 + 0xc) = *(edi + 4);
            *A8 = 38930;
            L00421CFC(A8);
        } else {
            Vfffffff8 = Vfffffff8 << 1;
        }
        esi = esi - 1;
        edi = edi - 8;
    } while(esi >= 0);
    return L00424544();
}

/*    Procedure: 0x00424541 - 0x00424543
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424541()
{



}

/*    Procedure: 0x00424544 - 0x00424550
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421208()
 *        L00422120()
 *        L0042436C()
 */

L00424544()
{



    return L004267FC(8);
}

/*    Procedure: 0x00424551 - 0x004245BE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00424551(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    M00644cb8 = M00644cb8 - eax;
    if(M00644cb8 < 0) {
        return L00423EC0(eax, A8);
    }
    ecx = *(A8 + 4) ^ 0x10;
    eax = 1 << cl;
    edx = !eax;
    *(M00644c6c + 0xcc) = *(M00644c6c + 0xcc) & edx;
    *(M00644c6c + 0xc8) = *(M00644c6c + 0xc8) | eax;
    *A8 = 39153;
    L00421EFC(A8);
    return L0042436C(A8);
}

/*    Procedure: 0x004245BF - 0x004245FE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004245BF(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    M00644cb8 = M00644cb8 - edx;
    if(M00644cb8 < 0) {
        return L00423EC0(edx, A8);
    }
    *(M00644c6c + 0xe4) = *(M00644c6c + 0xe4) + 1;
    return L0042436C(A8);
}

/*    Procedure: 0x004245FF - 0x00424642
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004245FF(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    M00644cb8 = M00644cb8 - edx;
    if(M00644cb8 < 0) {
        return L00423EC0(edx, A8);
    }
    *(M00644c6c + 0xe4) = *(A8 + 8);
    return L0042436C(A8);
}

/*    Procedure: 0x00424643 - 0x0042477B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00424643(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    eax = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    M00644cb8 = M00644cb8 - eax;
    if(M00644cb8 < 0) {
        eax = L00423EC0(eax, A8);
    } else {
        edx = *(A8 + 4) + -39342;
        ax = ~( *( *( *L00501b9c( *(M00644c6c + 0x82)) + 0x38) + 2));
        esi = edx;
        if(esi <= 5) {
            switch(esi) {
                case 0:
L004246c2:
                    *(M00644c6c + 0xbc) = ax;
                    *(edx * 4 + 6573496) = ax;
                    goto L00424771;
                case 1:
                    cx = ~eax;
                    *(M00644c6c + 0xbe) = cx;
                    *(edx * 4 + 6573496) = ~ax;
                    goto L00424771;
                case 2:
                    *(M00644c6c + 0xc0) = ax;
                    *(edx * 4 + 6573496) = ax;
                    goto L00424771;
                case 3:
                    cx = ~eax;
                    *(M00644c6c + 0xc2) = cx;
                    *(edx * 4 + 6573496) = ~ax;
                    goto L00424771;
                case 4:
                    ax = *ecx;
                    *(M00644c6c + 0xc4) = ax;
                    *(edx * 4 + 6573496) = ax;
                    goto L00424771;
                case 5:
                    cx = ~eax;
                    *(M00644c6c + 0xc6) = cx;
                    *(edx * 4 + 6573496) = ~ax;
                    goto L00424771;
            }
            goto L004246c2;
        }
L00424771:
        eax = L0042436C(A8);
    }
}

/*    Procedure: 0x0042477C - 0x004247E8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042477C(A8)
/* unknown */ void  A8;
{



    edx = 6572964;
    eax = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    *L00644CB8 = *L00644CB8 - eax;
    if(*L00644CB8 < 0) {
        return L00423EC0(eax, A8);
    }
    *(edx + 0x1f4) = 0x1f4;
    *(edx + 0x1f8) = 0x1f4;
    *(edx + 0x1fc) = *(edx + 4);
    *(edx + 0x200) = *(edx + 4);
    *A8 = 39154;
    L00421EFC(A8);
    return L0042436C(A8);
}

/*    Procedure: 0x004247E9 - 0x00424841
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004247E9(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    M00644cb8 = M00644cb8 - eax;
    if(M00644cb8 < 0) {
        return L00423EC0(eax, A8);
    }
    M00644d9c = 0x1f4;
    M00644da4 = M00644ba8;
    *A8 = 39155;
    L00421EFC(A8);
    return L0042436C(A8);
}

/*    Procedure: 0x00424842 - 0x00424899
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00424842(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0xc) + *(A8 + 0xc) + ( *(A8 + 0xc) + *(A8 + 0xc)) * 4;
    M00644cb8 = M00644cb8 - eax;
    if(M00644cb8 < 0) {
        return L00423EC0(eax, A8);
    }
    M00644d98 = 0x1f4;
    M00644da0 = M00644ba8;
    *A8 = 39155;
    L00421EFC(A8);
    return L0042436C(A8);
}

/*    Procedure: 0x0042489A - 0x0042489B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042489A()
{



}

/*    Procedure: 0x0042489C - 0x004249FD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421208()
 *        L00421F4D()
 *        L00426325()
 */

L0042489C()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 8);
    ax = M00644fe0;
    if(ax != 4) {
        if(ax == 2) {
            M0049cfa8 = 0x4d78f8;
            M0049cfac = 3;
        } else {
            if(ax == 1) {
                M0049cfa8 = 0x4d7904;
                M0049cfac = 5;
            } else {
                M0049cfa8 = 0x4d7918;
                M0049cfac = 0xd;
            }
        }
        L0041D444(0x34, 1);
        *(ebp - 8) = *(M00644c70 + 0xa0);
        L00425D24(ebp - 8, 0x13);
        L00421684(2, 39125, 0, *(ebp - 8), 0, 32768);
        M0064947a = M00649598;
        eax = L0042C788( *(M00644c70 + 0x86) & 0xff);
        M0064949c = eax;
        *(esi + 0x14) = 0;
        *(ebp - 4) = *(eax + 0x2e2);
        edi = 0;
        ebx = eax + 0x132;
        if(0 < *(ebp - 4)) {
            do {
                eax = *ebx;
                if(eax != 0) {
                    *esi = eax;
                    *(esi + 0x14) = edi;
                    *(esi + 8) = *(ebx + 4);
                    *(esi + 0xc) = *(ebx + 8);
                    eax = *(ebx + 0xc);
                    *(esi + 0x10) = eax;
                    *(esi + 0x2c) = *(esi + 0x10);
                    *(esi + 4) = *(ebx + 0x10);
                    *(esi + 0x24) = *(ebx + 0x14);
                    L00421CFC(esi);
                }
                edi = edi + 1;
                ebx = ebx + 0x18;
            } while(edi < *(ebp - 4));
        }
        L004124F8(0, 1);
        L004124F8(0, 0);
        *esi = M0064947e > 0 ? 39133 : 39134;
        eax = L00421A30(esi);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004249FE - 0x00424A28
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004249FE(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xc) = *(A8 + 8);
    *(A8 + 8) = 39127;
    *(A8 + 4) = *(A8 + 0x1c);
    return L004266D4(0x80, A8);
}

/*    Procedure: 0x00424A29 - 0x00424A30
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424A29()
{



}

/*    Procedure: 0x00424A31 - 0x00424A38
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424A31()
{



}

/*    Procedure: 0x00424A39 - 0x00424B90
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 12
 */

L00424A39(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;



    ebx = & Vffffffd0;
    (save)6572964;
    edi = ebx;
    ecx = 0xc;
    asm("rep movsd");
    (restore)A8;
    edi = *(ebx + 0x1c);
    M0049cfa8 = 0x4d7978;
    M0049cfac = 0xc;
    *(A8 + 18684) = *ebx + -38912;
    *(A8 + 18688) = *(ebx + 4);
    *(A8 + 18692) = *(ebx + 8);
    *(A8 + 18696) = *(ebx + 0xc);
    *(A8 + 18700) = *(ebx + 0x10);
    *(A8 + 18704) = *(ebx + 0x14);
    *(A8 + 18708) = *(ebx + 0x24);
    L00421B0C();
    *(A8 + 18654) = 39128;
    *(A8 + 18672) = *(ebx + 0x24);
    *(A8 + 18716) = 32768;
    *(A8 + 18676) = 0;
    *(ebx + 4) = *(A8 + 18688);
    *(ebx + 8) = *(A8 + 18692);
    *(ebx + 0x10) = *(A8 + 18700);
    *(ebx + 0x14) = *(A8 + 18704);
    *(ebx + 0x24) = *(A8 + 18708);
    *ebx = 39022;
    *(ebx + 0xc) = 1;
    L00421CFC(ebx);
    *(ebx + 0xc) = 0xa;
    L00421CFC(ebx);
    *(ebx + 0xc) = 0x64;
    L00421CFC(ebx);
    *(ebx + 0xc) = 0x3e8;
    L00421CFC(ebx);
    *(ebx + 0xc) = 10000;
    L00421CFC(ebx);
    *(ebx + 0xc) = 100000;
    L00421CFC(ebx);
    *ebx = 38975;
    L00421CFC(ebx);
    *ebx = 39391;
    *(ebx + 0x2c) = edi;
    L00421EFC(ebx);
    return L004262B0();
}

/*    Procedure: 0x00424B91 - 0x00424C01
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00424B91(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0xc);
    M00644cb8 = M00644cb8 - eax;
    if(M00644cb8 < 0) {
        return L00423EC0(eax, A8);
    }
    *(A8 + 0x2c) = 39392;
    if(eax >= 0x3e8) {
        M00644d94 = M00644d94 + 1;
    }
    if(eax >= 10000 || M00644d94 > 5) {
        M00644d94 = 5;
    }
    if(eax >= 100000) {
        *(A8 + 0x2c) = 39393;
    }
    L00421F30(A8);
    return L004262B0();
}

/*    Procedure: 0x00424C02 - 0x00424C03
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424C02()
{



}

/*    Procedure: 0x00424C04 - 0x00424C2C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00424C2D()
 */

L00424C04(A8)
/* unknown */ void  A8;
{



    *A8 = 39365;
    L00421EFC(A8);
    *A8 = 38975;
    L00421CFC(A8);
    return L004262B0();
}

/*    Procedure: 0x00424C2D - 0x00424D2A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00424C2D(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    *(A8 + 8) = *(A8 + 8) + 1187063;
    M00649494 = *(A8 + 0x24);
    M006494a0 = *A8;
    *A8 = 39364;
    L00421684(1, 39128, A8, *(A8 + 0x24), 0, 32768);
    if(( *(A8 + 0x24) << 6 << 8 >> 0x10) + 0x1000 > M00644d40 || L00424E48(A8) != 0) {
        eax = L00424C04(A8);
    } else {
        *(ebp - 2) = *(A8 + 0x24);
        M006494d0 = L0042CBCC(0x10, ebp - 2);
        *A8 = 39009;
        L00421CFC(A8);
        edi = *(A8 + 4);
        esi = *(A8 + 8);
        *(A8 + 4) = esi;
        *(A8 + 8) = *(A8 + 0x2c);
        *A8 = 39010;
        L00421CFC(A8);
        *(A8 + 4) = edi;
        *(A8 + 8) = esi;
        *A8 = 39011;
        L00421CFC(A8);
        *A8 = 39012;
        L00421CFC(A8);
        *A8 = 38974;
        L00421CFC(A8);
        *A8 = 38975;
        L00421CFC(A8);
        eax = L004262B0();
    }
}

/*    Procedure: 0x00424D2B - 0x00424D2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424D2B()
{



}

/*    Procedure: 0x00424D2C - 0x00424D62
 *    Argument size: -32
 *    Local size: 40
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00415010()
 *        L00424E48()
 *        L00424ED5()
 *        L0042500A()
 *        L00425066()
 *        L0042598C()
 *        L00425AD0()
 *        L00425C59()
 *        L00430CB0()
 */

L00424D2C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffd8;



    if(L00436EA9( & Vffffffd8, Ac) != 0) {
        eax = 1;
    } else {
        L0043980C(A8, & Vffffffd8);
        eax = 0;
    }
}

/*    Procedure: 0x00424D63 - 0x00424D63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424D63()
{



}

/*    Procedure: 0x00424D64 - 0x00424D81
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00415010()
 *        L00424E48()
 */

L00424D64(A8)
/* unknown */ void  A8;
{



    edx = 0;
    for(eax = A8; *eax != 0; eax = eax + 0x44) {
        if(*(eax + 0xa) >= 0x20) {
            edx = edx + 1;
        }
    }
    return edx;
}

/*    Procedure: 0x00424D82 - 0x00424D83
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424D82()
{



}

/*    Procedure: 0x00424D84 - 0x00424DC1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00411810()
 *        L00415010()
 *        L00424E48()
 */

L00424D84(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = Ac;
    edx = 0;
    eax = A8;
    goto L00424db7;
L00424daf:
    eax = ((edx << 4) + edx << 2) + A8;
    goto L00424dbe;
L00424db7:
    while(*eax != 0) {
        if(*(eax + 0xa) >= 0x20) {
            ebx = ecx;
            ecx = ecx - 1;
            if(ebx == 0) {
                goto L00424daf;
            }
        }
        edx = edx + 1;
        eax = eax + 0x44;
    }
    eax = 0;
L00424dbe:
}

/*    Procedure: 0x00424DC2 - 0x00424DC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424DC2()
{



}

/*    Procedure: 0x00424DC4 - 0x00424DFF
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00430CB0()
 */

L00424DC4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = 0;
    eax = A8;
    goto L00424df5;
L00424ded:
    eax = ((edx << 4) + edx << 2) + A8;
    goto L00424dfc;
L00424df5:
    while(*eax != 0) {
        if(*(eax + 0xa) >= 0x20 && *(eax + 4) == Ac) {
            goto L00424ded;
        }
        edx = edx + 1;
        eax = eax + 0x44;
    }
    eax = 0;
L00424dfc:
}

/*    Procedure: 0x00424E00 - 0x00424E44
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00430CB0()
 */

L00424E00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = 0;
    eax = A8;
    goto L00424e3a;
L00424e32:
    eax = ((ecx << 4) + ecx << 2) + A8;
    goto L00424e41;
L00424e3a:
    while(*eax != 0) {
        dx = *(eax + 0xa);
        if(dx >= 1 && dx <= 0x10 && *(eax + 4) == Ac) {
            goto L00424e32;
        }
        ecx = ecx + 1;
        eax = eax + 0x44;
    }
    eax = 0;
L00424e41:
}

/*    Procedure: 0x00424E45 - 0x00424E47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00424E45()
{



}

/*    Procedure: 0x00424E48 - 0x00424ED4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00424C2D()
 *        L00425D8A()
 */

L00424E48(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)ebx;
    (save)A8;
    *(ebp - 4) = *(A8 + 0xc);
    (save) *(ebp - 4);
    (save)ebp + -4084;
    if(L00424D2C() != 0) {
        eax = 1;
    } else {
        if(L00424D64(ebp + -4084) == 0) {
            M006494ce = 0xff;
            eax = 1;
        } else {
            eax = *(A8 + 0x24) & 65535;
            asm("imul ebx");
            eax = L00424D84(ebp + -4084, eax >> 0x10);
            eax = eax - ebp + -4084;
            ecx = 0x44;
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
            M006494ce = al;
            eax = 0;
        }
    }
    (restore)A8;
    (restore)ebx;
}

/*    Procedure: 0x00424ED5 - 0x00425009
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00424ED5(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)A8;
    (save)esi;
    esi = 6572964;
    if(*L00649A94 >= 6) {
        *A8 = 39371;
        eax = L00421EFC(A8);
    } else {
        *A8 = 39370;
        L00421EFC(A8);
        *(ebp - 4) = *(A8 + 0xc);
        (save) *(ebp - 4);
        (save)ebp + -4084;
        L00424D2C();
        if(*(esi + 18684) == 38999) {
            eax = *(esi + 18730);
            edx = eax;
            eax = (eax << 4) + edx << 2;
            eax = *(A8 + 0xc);
            L0042093C(( *(A8 + 0x2c) + 0x44 << 4) + *(esi + 0x43c), 0, eax, *(A8 + 0x24), *(A8 + 8), *(A8 + 4), *(esi + 18732), 0, 0, eax + ebp + -4046, *(esi + 0x10a));
            eax = L00425E60(A8);
        } else {
            eax = *(esi + 18730);
            edx = eax;
            eax = (eax << 4) + edx << 2;
            eax = *(A8 + 0xc);
            L0042093C( *(A8 + 0x2c) + 0x4c << 4, 0, eax, *(A8 + 0x24), *(A8 + 8), *(A8 + 4), *(esi + 18732), 0, 0, eax + ebp + -4046, *(esi + 0x10a));
            L00426648(A8);
            L00421B0C();
            L00421DD8(38975, A8);
            eax = L004262B0();
        }
    }
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0042500A - 0x00425065
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042500A(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)A8;
    *(ebp - 4) = *(A8 + 0xc);
    (save) *(ebp - 4);
    (save)ebp + -4084;
    L00424D2C();
    eax = M006494ce;
    edx = eax;
    eax = (eax << 4) + edx << 2;
    *(A8 + 0x2c) = eax + ebp + -4046;
    *(A8 + 4) = *(A8 + 8);
    *A8 = 39368;
    eax = L00421EFC(A8);
    (restore)A8;
}

/*    Procedure: 0x00425066 - 0x004250C1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425066(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)A8;
    *(ebp - 4) = *(A8 + 0xc);
    (save) *(ebp - 4);
    (save)ebp + -4084;
    L00424D2C();
    eax = M006494ce;
    edx = eax;
    eax = (eax << 4) + edx << 2;
    *(A8 + 0x2c) = eax + ebp + -4046;
    *(A8 + 8) = *(A8 + 0x24);
    *A8 = 39366;
    eax = L00421EFC(A8);
    (restore)A8;
}

/*    Procedure: 0x004250C2 - 0x0042511B
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 4
 */

L004250C2(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffec;



    L00430CB0(0x12, & Vffffffec, *(A8 + 0x24), 6640580);
    *(A8 + 8) = *(A8 + 0x2c);
    *(A8 + 0xc) = *( *( *L00501b9c(M006494d0) + 0x38) + 0xe);
    *(A8 + 0x2c) = 6640580;
    *A8 = 39367;
    return L00421EFC(A8);
}

/*    Procedure: 0x0042511C - 0x0042513C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042511C(A8)
/* unknown */ void  A8;
{



    if(M00644d94 < 0) {
        return L00425278(A8);
    }
    return L00425174(A8);
}

/*    Procedure: 0x0042513D - 0x00425160
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042513D(A8)
/* unknown */ void  A8;
{



    if(M00644d94 < -9) {
        return L00425278(A8);
    }
    return L00425174(A8);
}

/*    Procedure: 0x00425161 - 0x00425172
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425161(A8)
/* unknown */ void  A8;
{



    return L00425174(A8);
}

/*    Procedure: 0x00425173 - 0x00425173
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425173()
{



}

/*    Procedure: 0x00425174 - 0x00425277
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042511C()
 *        L0042513D()
 *        L00425161()
 */

L00425174(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 6572964;
    M0049cfa8 = 0x4d794c;
    M0049cfac = 0xb;
    eax = *( *(A8 + 0x20));
    *A8 = eax;
    *L006494A0 = *A8;
    *L006494B0 = *(A8 + 0x14);
    *L006494A4 = *(A8 + 8);
    *L006494A8 = *(A8 + 0xc);
    *L006494AC = *(A8 + 0x10);
    *L006494B4 = *(A8 + 0x24);
    *L006494B8 = *(A8 + 0x2c);
    L00421B0C();
    *(edi + 18654) = 39128;
    *(edi + 18672) = *(A8 + 0x1c);
    *(edi + 18716) = 32768;
    *(edi + 18676) = 0;
    *A8 = 38977;
    esi = 1;
    do {
        L00421CFC(A8);
        *A8 = *A8 + 1;
        esi = esi + 1;
    } while(esi <= 6);
    L00421DD8(38975, A8);
    *(A8 + 8) = *(edi + 18688);
    *(A8 + 0xc) = *(edi + 18692);
    *(A8 + 0x10) = *(edi + 18696);
    *(A8 + 0x14) = *(edi + 18700);
    *(A8 + 0x24) = *(edi + 18704);
    *(A8 + 0x2c) = *(edi + 18708);
    *A8 = 39217;
    L00421EFC(A8);
    return L004262B0();
}

/*    Procedure: 0x00425278 - 0x004252A6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042511C()
 *        L0042513D()
 */

L00425278(A8)
/* unknown */ void  A8;
{



    L00421B0C();
    L00421DD8(38975, A8);
    *A8 = 39218;
    L00421EFC(A8);
    return L004262B0();
}

/*    Procedure: 0x004252A7 - 0x0042531B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004252A7(A8)
/* unknown */ void  A8;
{



    *A8 = *L006494A0;
    *(A8 + 8) = *L006494A4;
    *(A8 + 0xc) = *L006494A8 + 39348;
    *(A8 + 0x10) = *L006494AC;
    *(A8 + 0x14) = *L006494B0;
    *(A8 + 0x2c) = *L006494B8;
    edx = *L006494B4;
    *(A8 + 0x24) = edx;
    *(A8 + 4) = *(A8 + 0x24);
    *(A8 + 0x2c) = !( *(A8 + 0x24) & 65535) ? 39222 : 39221;
    return L00421F30(A8);
}

/*    Procedure: 0x0042531C - 0x0042537F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042531C(A8)
/* unknown */ void  A8;
{



    *A8 = *L006494A0;
    *(A8 + 8) = *L006494A4;
    *(A8 + 0xc) = *L006494A8 + 39348;
    *(A8 + 0x10) = *L006494AC;
    *(A8 + 0x14) = *L006494B0;
    edx = *L006494B4;
    *(A8 + 0x24) = edx;
    edx = (( *(A8 + 0x24) & 65535) >> 0xd) + 39225;
    *(A8 + 4) = edx;
    *(A8 + 0x2c) = *(A8 + 4);
    return L00421F30(A8);
}

/*    Procedure: 0x00425380 - 0x0042539C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425380(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = 16384;
    *(A8 + 0xc) = 0x32;
    return L00425400(A8);
}

/*    Procedure: 0x0042539D - 0x004253BC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042539D(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = 24576;
    *(A8 + 0xc) = 0x64;
    return L00425400(A8);
}

/*    Procedure: 0x004253BD - 0x004253DC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004253BD(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = 57344;
    *(A8 + 0xc) = 0x96;
    return L00425400(A8);
}

/*    Procedure: 0x004253DD - 0x004253FC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004253DD(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = 65535;
    *(A8 + 0xc) = 0xc8;
    return L00425400(A8);
}

/*    Procedure: 0x004253FD - 0x004253FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004253FD()
{



}

/*    Procedure: 0x00425400 - 0x00425543
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00425380()
 *        L0042539D()
 *        L004253BD()
 *        L004253DD()
 */

L00425400(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 6572964;
    *L006494A8 = *(A8 + 0xc);
    *(A8 + 0x10) = *L006494AC;
    *(A8 + 0x14) = *L006494B0;
    *(A8 + 0x24) = *L006494B4;
    *(A8 + 0x2c) = *L006494B8;
    if(*L00649BD4 >= *L00649BD0) {
        *A8 = 39223;
        eax = L00421EFC(A8);
    } else {
        if(( *(A8 + 0x24) & 65535) >= *(A8 + 8)) {
            *A8 = *(esi + 18684);
            *(A8 + 8) = *(esi + 18688);
            *(A8 + 0xc) = *(esi + 18692);
            *(A8 + 0x10) = *(esi + 18696);
            *(A8 + 0x14) = *(esi + 18700);
            *(A8 + 0x24) = *(esi + 18704);
            *(A8 + 0x2c) = 39220;
            eax = L00421F30(A8);
        } else {
            eax = *(esi + 20528);
            *(esi + eax * 8 + 20532) = *(A8 + 0x24);
            eax = *(esi + 20528);
            *(esi + eax * 8 + 20536) = *(A8 + 0xc);
            *(esi + 20528) = *(esi + 20528) + 1;
            *(A8 + 0x2c) = 39219;
            L00421F30(A8);
            *A8 = *(esi + 18684);
            *(A8 + 8) = *(esi + 18688);
            *(A8 + 0xc) = *(esi + 18692);
            *(A8 + 0x10) = *(esi + 18696);
            *(A8 + 0x14) = *(esi + 18700);
            *(A8 + 0x24) = *(esi + 18704);
            *(A8 + 0x2c) = *(esi + 18708);
            L00426648(A8);
            L00421B0C();
            L00421DD8(38975, A8);
            eax = L004262B0();
        }
    }
}

/*    Procedure: 0x00425544 - 0x00425666
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00425544(A8)
/* unknown */ void  A8;
{



    if(M00644d94 < 0) {
        *A8 = 39199;
        eax = *(A8 + 0x24);
        edx = eax << 0x1c;
        L00421684(1, 39128, A8, edx | eax >> 4, 0, 32768);
        return L00425668(A8);
    }
    *A8 = 39233;
    eax = *(A8 + 0x24);
    edx = eax << 0x1c;
    L00421684(1, 39128, A8, edx | eax >> 4, 0, 32768);
    L00421DD8(38983, A8);
    if(M00644d54 != 0) {
        *(A8 + 8) = M00648ad2;
        *(A8 + 0xc) = M00644d54;
        L00421DD8(38984, A8);
        if(M00644d50 != 0) {
            *(A8 + 8) = M00648ad6;
            *(A8 + 0xc) = M00644d50;
            L00421DD8(38984, A8);
            if(M00644d4c != 0) {
                *(A8 + 8) = M00648ada;
                *(A8 + 0xc) = M00644d4c;
                L00421DD8(38984, A8);
            }
        }
    }
    *A8 = 38985;
    L00421CFC(A8);
    *A8 = 38986;
    L00421CFC(A8);
    L00421DD8(38975, A8);
    return L004262B0();
}

/*    Procedure: 0x00425667 - 0x00425667
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425667()
{



}

/*    Procedure: 0x00425668 - 0x00425687
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00425544()
 *        L00425688()
 *        L00425743()
 *        L00425782()
 */

L00425668(A8)
/* unknown */ void  A8;
{



    L00421B0C();
    L00421DD8(38975, A8);
    return L004262B0();
}

/*    Procedure: 0x00425688 - 0x00425742
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00425688(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 0;
    edx = 0;
    eax = 6591982;
    goto L004256b0;
L004256a9:
    esi = esi + 1;
    goto L004256b8;
L004256b0:
    while(edx < M006495bc) {
        if(*(A8 + 0x24) == *eax && !( *(eax - 0xb) & 0x20)) {
            goto L004256a9;
        }
        edx = edx + 1;
        eax = eax + 0x14;
    }
L004256b8:
    if(esi != 0) {
        M00644cc8 = M00644cc8 - (( *((edx + edx * 4) * 4 + 6591970) & 0xff) >> 2) + 1;
        M006495bc = M006495bc - 1;
        for(eax = (edx + edx * 4) * 4 + 6591966; edx < M006495bc; asm("rep movsd");) {
            edx = edx + 1;
            eax = eax + 0x14;
            esi = eax;
            edi = eax;
            ecx = 5;
        }
        M00644d94 = M00644d94 - 8;
        *(A8 + 0x2c) = 39235;
        L004257C0(A8);
        eax = L00414070(1, 0, 0x10);
    } else {
        *(A8 + 0x2c) = 39238;
        M00644d94 = M00644d94 - 1;
        L00421F30(A8);
        eax = L00425668(A8);
    }
}

/*    Procedure: 0x00425743 - 0x00425781
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00425743(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39234;
    if(*(A8 + 8) == *(A8 + 0x24)) {
        return L004257C0(A8);
    }
    *(A8 + 0x2c) = 39236;
    M00644d94 = M00644d94 - 1;
    L00421F30(A8);
    return L00425668(A8);
}

/*    Procedure: 0x00425782 - 0x004257BF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00425782(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39240;
    if(*(A8 + 0x10) == 1) {
        return L004257C0(A8);
    }
    *(A8 + 0x2c) = 39237;
    M00644d94 = M00644d94 - 1;
    L00421F30(A8);
    return L00425668(A8);
}

/*    Procedure: 0x004257C0 - 0x004257FD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00425688()
 *        L00425743()
 *        L00425782()
 */

L004257C0(A8)
/* unknown */ void  A8;
{



    L00421F30(A8);
    M00644cb8 = M00644cb8 + *(A8 + 4) + *(A8 + 4) + ( *(A8 + 4) + *(A8 + 4)) * 4;
    L00426648(A8);
    L00421B0C();
    L00421DD8(38975, A8);
    return L004262B0();
}

/*    Procedure: 0x004257FE - 0x00425815
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004257FE(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39239;
    return L00421F30(A8);
}

/*    Procedure: 0x00425816 - 0x00425862
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425816(A8)
/* unknown */ void  A8;
{



    *L00649498 = 0xa;
    *L00649482 = 39176;
    *L006494C5 = 2;
    eax = *( *L00644C70 + 0xa0);
    ecx = eax << 8;
    *L00649494 = ecx | eax >> 0x18;
    return L004258AC(A8);
}

/*    Procedure: 0x00425863 - 0x004258AA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425863(A8)
/* unknown */ void  A8;
{



    M00649498 = 0xb;
    M00649482 = 39177;
    M006494c5 = 1;
    edx = *(M00644c70 + 0xa0);
    ecx = edx << 0xf;
    *(A8 + 0x24) = ecx | edx >> 0x11;
    *(A8 + 0x24) = *(A8 + 0x24) & -2;
    return L004258AC(A8);
}

/*    Procedure: 0x004258AB - 0x004258AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004258AB()
{



}

/*    Procedure: 0x004258AC - 0x004258CD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00425816()
 *        L00425863()
 */

L004258AC(A8)
/* unknown */ void  A8;
{



    M00649494 = *(A8 + 0x24);
    M006494c0 = 32768;
    return L004258D0(A8);
}

/*    Procedure: 0x004258CE - 0x004258CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004258CE()
{



}

/*    Procedure: 0x004258D0 - 0x00425968
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00421208()
 *        L004258AC()
 *        L00426052()
 */

L004258D0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    *(A8 + 0x1c) = M00644c70;
    L00421B0C();
    for(ebx = 6588510; 1; ebx = ebx + 0x18) {
        eax = *ebx;
        if(eax == 0) {
            break;
        }
        *A8 = eax;
        *(A8 + 4) = *(ebx + 0x10);
        *(A8 + 8) = *(ebx + 8);
        *(A8 + 0xc) = *(ebx + 4);
        *(A8 + 0x24) = *(ebx + 0x14);
        *(A8 + 0x2c) = *(ebx + 0xc);
        L00421CFC(A8);
    }
    L004124F8(0, 3);
    L004124F8(0, 0);
    *A8 = M0064947e == 0 ? 39179 : 39178;
    L00421EFC(A8);
    L00421DD8(38975, A8);
    return L0042596C();
}

/*    Procedure: 0x00425969 - 0x0042596B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425969()
{



}

/*    Procedure: 0x0042596C - 0x00425978
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00422120()
 *        L004258D0()
 */

L0042596C()
{



    return L004267FC(7);
}

/*    Procedure: 0x00425979 - 0x0042598A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425979(A8)
/* unknown */ void  A8;
{



    return L0042598C(A8);
}

/*    Procedure: 0x0042598B - 0x0042598B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042598B()
{



}

/*    Procedure: 0x0042598C - 0x00425AB0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00425979()
 */

L0042598C(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)A8;
    (save)esi;
    (save)edi;
    M006494a0 = *A8;
    L00421EFC(A8);
    L00421B0C();
    *(ebp - 4) = *(A8 + 0xc);
    (save) *(ebp - 4);
    (save)ebp + -4084;
    if(L00424D2C() != 0) {
        eax = L00425AB4(A8);
    } else {
        M006494ce = 0xff;
        esi = 0;
        for(edi = ebp + -4084; *edi != 0; edi = edi + 0x44) {
            eax = (esi << 4) + esi << 2;
            L00425CF8(eax + ebp + -4084, *(A8 + 0x24), esi);
            if(al >= 0) {
                M006494ce = al;
            }
            esi = esi + 1;
        }
        if(M006494ce < 0) {
            eax = L00425AB4(A8);
        } else {
            L00421DD8(39000, A8);
            if(M006494a0 == 38997) {
                L00421DD8(39014, A8);
            } else {
                L00421DD8(39015, A8);
                L00421DD8(39016, A8);
            }
            L00421DD8(39013, A8);
            *A8 = 39001;
            esi = 0;
            do {
                L00421CFC(A8);
                *A8 = *A8 + 1;
                esi = esi + 1;
            } while(esi < 7);
            L00421DD8(39008, A8);
            eax = L004262B0();
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x00425AB1 - 0x00425AB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425AB1()
{



}

/*    Procedure: 0x00425AB4 - 0x00425ACE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042598C()
 *        L00425D8A()
 */

L00425AB4(A8)
/* unknown */ void  A8;
{



    L00421DD8(39008, A8);
    return L004262B0();
}

/*    Procedure: 0x00425ACF - 0x00425ACF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425ACF()
{



}

/*    Procedure: 0x00425AD0 - 0x00425C58
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00425ED4()
 */

L00425AD0(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = 6572964;
    if(*L00649A94 >= 6) {
        *A8 = 39371;
        eax = L00421EFC(A8);
    } else {
        if(*(esi + 18684) == 38998) {
            eax = *( *( *L00501b9c( *( *(esi + 0xc8) + 0x82)) + 0x38) + 0x12) - 1;
            if(*(esi + 0x120) >= *(esi + 0x118) || eax < 0) {
                *A8 = 39160;
                eax = L00421EFC(A8);
                goto L00425c52;
L00425b4e:
                *A8 = 39160;
                eax = L00421EFC(A8);
                goto L00425c52;
            }
            do {
                if(*( *(esi + 0xc8) + eax + 0xd6) == 0) {
                    goto L00425b70;
                }
            } while(eax = eax - 1);
            goto L00425b4e;
L00425b70:
            *(esi + 0x118) = *(esi + 0x118) - 1;
            *( *(esi + 0xc8) + eax + 0xd6) = 0x89;
        } else {
            *( *(esi + 0xc8) + 0xc8) = *( *(esi + 0xc8) + 0xc8) | 4;
            *( *(esi + 0xc8) + 0xcc) = *( *(esi + 0xc8) + 0xcc) & -5;
        }
        edi = *(A8 + 0x2c) + -39270 << 4;
        edi = edi + *(esi + 18684) + -38997 + *(esi + 18684) + -38997;
        edi = edi + ( *(esi + 0x43c) & 65535) + 2;
        *(ebp - 4) = *(A8 + 0xc);
        (save) *(ebp - 4);
        (save)ebp + -4084;
        L00424D2C();
        eax = *(esi + 18730);
        edx = eax;
        eax = (eax << 4) + edx << 2;
        L0042093C(edi & 0xff, 0, *(A8 + 0xc), *(A8 + 0x24), *(A8 + 8), *(A8 + 4), 0, 0, 0, eax + ebp + -4046, *(esi + 0x10a));
        *A8 = 39370;
        L00421EFC(A8);
        L00426064(A8);
        L00421B0C();
        L00421DD8(39008, A8);
        eax = L004262B0();
    }
L00425c52:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x00425C59 - 0x00425CAF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425C59(A8)
/* unknown */ void  A8;
{



    esp = esp + -4084;
    (save)A8;
    *(ebp - 4) = *(A8 + 0xc);
    (save) *(ebp - 4);
    (save)ebp + -4084;
    L00424D2C();
    eax = M006494ce;
    edx = eax;
    eax = (eax << 4) + edx << 2;
    *(A8 + 0x24) = eax + ebp + -4046;
    *A8 = 39259;
    eax = L00421EFC(A8);
    (restore)A8;
}

/*    Procedure: 0x00425CB0 - 0x00425CC5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425CB0(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39256;
    return L00421F30(A8);
}

/*    Procedure: 0x00425CC6 - 0x00425CDD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425CC6(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39257;
    return L00421F30(A8);
}

/*    Procedure: 0x00425CDE - 0x00425CF5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425CDE(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39258;
    return L00421F30(A8);
}

/*    Procedure: 0x00425CF6 - 0x00425CF7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425CF6()
{



}

/*    Procedure: 0x00425CF8 - 0x00425D23
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042598C()
 */

L00425CF8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = eax | -1;
    if(!(dx = *(A8 + 0xc) - 0x77 - 4)) {
    } else {
        if(M006494ce < 0) {
            goto L00425d1f;
        }
        if(!(Ac & 3)) {
L00425d1f:
        }
    }
}

/*    Procedure: 0x00425D24 - 0x00425D55
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042489C()
 *        L00426810()
 *        L004269C4()
 */

L00425D24(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    ecx = Ac;
    ebx = *eax;
    esi = ebx >> cl;
    *eax = esi | ebx << 0x20 - Ac;
    eax = *eax == 0 ? 0 : 1;
}

/*    Procedure: 0x00425D56 - 0x00425D57
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00425D56()
{



}

/*    Procedure: 0x00425D58 - 0x00425D89
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00422AC4()
 *        L00422D8C()
 */

L00425D58(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    ecx = Ac;
    ebx = *eax;
    esi = ebx << cl;
    *eax = esi | ebx >> 0x20 - Ac;
    eax = *eax == 0 ? 0 : 1;
}

/*    Procedure: 0x00425D8A - 0x00425E5F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00425D8A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    M006494a0 = *A8;
    M006494a4 = 0;
    L00421B0C();
    if(L00424E48(A8) != 0) {
        eax = L00425AB4(A8);
    } else {
        *A8 = 39364;
        L00421EFC(A8);
        *(ebp - 2) = *(A8 + 0x24);
        M006494d0 = L0042CBCC(0x10, ebp - 2);
        *A8 = 39009;
        L00421CFC(A8);
        edi = *(A8 + 4);
        esi = *(A8 + 8);
        *(A8 + 4) = esi;
        *(A8 + 8) = *(A8 + 0x2c);
        *A8 = 39010;
        L00421CFC(A8);
        *(A8 + 4) = edi;
        *(A8 + 8) = esi;
        *A8 = 39011;
        L00421CFC(A8);
        *A8 = 39012;
        L00421CFC(A8);
        *A8 = 39001;
        esi = 0;
        do {
            L00421CFC(A8);
            *A8 = *A8 + 1;
            esi = esi + 1;
        } while(esi < 7);
        *A8 = 39008;
        L00421CFC(A8);
        eax = L004262B0();
    }
}

/*    Procedure: 0x00425E60 - 0x00425E88
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00424ED5()
 */

L00425E60(A8)
/* unknown */ void  A8;
{



    L00426064(A8);
    L00421B0C();
    L00421DD8(39008, A8);
    return L004262B0();
}

/*    Procedure: 0x00425E89 - 0x00425ED3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00425E89(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    M006494a0 = *A8;
    L00421EFC(A8);
    L00421B0C();
    *A8 = 39000;
    esi = 0;
    do {
        L00421CFC(A8);
        *A8 = *A8 + 1;
        esi = esi + 1;
    } while(esi < 8);
    *A8 = 39008;
    L00421CFC(A8);
    return L004262B0();
}

/*    Procedure: 0x00425ED4 - 0x00425F90
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00425ED4(A8)
/* unknown */ void  A8;
{



    if(M006494a0 >= 38997) {
        return L00425AD0(A8);
    }
    if(M006495bc >= 0x3b) {
        *A8 = 39209;
        return L00421EFC(A8);
    }
    L00426064(A8);
    *(A8 + 0x10) = 8192;
    if(M006494a0 >= 39286) {
        *(A8 + 0x10) = *(A8 + 0x10) + 0x100;
    }
    if(M006494a0 >= 39290) {
        *(A8 + 0x10) = *(A8 + 0x10) + 0x100;
    }
    if(M006494c5 != 2) {
        *(A8 + 0x10) = *(A8 + 0x10) | 16384;
    }
    L0041EE28( *(A8 + 0x10), *(A8 + 4), *(A8 + 0xc), *(A8 + 8), 0);
    *(A8 + 0x2c) = 39210;
    L00421F30(A8);
    L00421B0C();
    L00421DD8(39008, A8);
    return L004262B0();
}

/*    Procedure: 0x00425F91 - 0x00425FA9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425F91(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39180;
    return L00421F30(A8);
}

/*    Procedure: 0x00425FAA - 0x00425FC1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425FAA(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39181;
    return L00421F30(A8);
}

/*    Procedure: 0x00425FC2 - 0x00425FD9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425FC2(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39182;
    return L00421F30(A8);
}

/*    Procedure: 0x00425FDA - 0x00426000
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00425FDA(A8)
/* unknown */ void  A8;
{



    edx = M006494a0;
    *A8 = edx;
    if(*A8 == 38999) {
        *A8 = 39364;
    }
    return L00421EFC(A8);
}

/*    Procedure: 0x00426001 - 0x00426051
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426001(A8)
/* unknown */ void  A8;
{



    if(!(edx = M006494a0 + -38997 - 2)) {
        == ? L00426027 : ;
        if(edx = edx - 0x123) {
            goto L00426039;
        }
        goto L00426042;
        *(A8 + 0x2c) = 39184;
    } else {
        *(A8 + 0x2c) = 39185;
        goto L00426049;
L00426039:
        *(A8 + 0x2c) = 39184;
        goto L00426049;
L00426042:
        *(A8 + 0x2c) = 39183;
    }
L00426049:
    return L00421F30(A8);
}

/*    Procedure: 0x00426052 - 0x00426062
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426052(A8)
/* unknown */ void  A8;
{



    return L004258D0(A8);
}

/*    Procedure: 0x00426063 - 0x00426063
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426063()
{



}

/*    Procedure: 0x00426064 - 0x004260A1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00425AD0()
 *        L00425E60()
 *        L00425ED4()
 */

L00426064(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ecx = 0;
    eax = 6588510;
    goto L0042609a;
L00426095:
    return L004260A4(ecx);
L0042609a:
    while(*eax != 0) {
        if(*(eax + 8) == *(A8 + 8) && *(eax + 4) == *(A8 + 0xc) && *(eax + 0x14) == *(A8 + 0x24)) {
            goto L00426095;
        }
        ecx = ecx + 1;
        eax = eax + 0x18;
    }
}

/*    Procedure: 0x004260A2 - 0x004260A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004260A2()
{



}

/*    Procedure: 0x004260A4 - 0x004260CF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00426064()
 */

L004260A4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    for(eax = (A8 + A8 * 2) * 8 + 6588510; *eax != 0; eax = eax + 0x18) {
        esi = eax + 0x18;
        edi = eax;
        ecx = 6;
        asm("rep movsd");
    }
}

/*    Procedure: 0x004260D0 - 0x00426150
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L004260D0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 6572964;
    L00421B0C();
    *(esi + 18654) = 39128;
    *(esi + 18672) = *(A8 + 0x1c);
    *(esi + 18716) = 32768;
    *(esi + 18676) = 0;
    *A8 = 38976;
    eax = *(A8 + 8) + -36352;
    *(A8 + 0x10) = eax;
    *(A8 + 4) = *(esi + *(A8 + 0x10) * 2 + 0x134) & 65535;
    L00421CFC(A8);
    *A8 = 38975;
    L00421CFC(A8);
    *A8 = 39214;
    *(A8 + 0x24) = *(esi + 18672);
    return L004219D0(A8);
}

/*    Procedure: 0x00426151 - 0x004261D3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426151(A8)
/* unknown */ void  A8;
{



    edx = 6572964;
    *(A8 + 4) = *(A8 + 8);
    *A8 = 39141;
    if(*(6572964 + *(A8 + 0x10) * 2 + 0x134) == 0) {
        return L00421EFC(A8);
    }
    *(edx + 18720) = 0xff;
    *(edx + 0x114) = *(edx + 0x114) + *(A8 + 0xc);
    *(edx + *(A8 + 0x10) * 2 + 0x134) = *(edx + *(A8 + 0x10) * 2 + 0x134) - 1;
    *(edx + 0x120) = *(edx + 0x120) - 1;
    *( *(A8 + 0x20) + 4) = *( *(A8 + 0x20) + 4) - 1;
    if(*(edx + 18660) == 0) {
        *A8 = 39143;
        L004219D0(A8);
    } else {
        L004219E8();
    }
    return L00419470(0x12, 0);
}

/*    Procedure: 0x004261D4 - 0x00426202
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00426203()
 */

L004261D4(A8)
/* unknown */ void  A8;
{



    *A8 = 39198;
    L00421EFC(A8);
    L00421B0C();
    L00421DD8(38975, A8);
    return L004262B0();
}

/*    Procedure: 0x00426203 - 0x0042626C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00426203(A8)
/* unknown */ void  A8;
{



    M006494a0 = 0;
    M006494a4 = *(A8 + 4);
    *A8 = 39197;
    L00421684(1, M00649482, A8, *(A8 + 0x24), 0, 32768);
    if(~( *L004eeed4(9)) > M00644d94) {
        return L004261D4(A8);
    }
    *A8 = 38963;
    return L00426270(A8, 0xd);
}

/*    Procedure: 0x0042626D - 0x0042626F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042626D()
{



}

/*    Procedure: 0x00426270 - 0x004262AC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00426203()
 *        L00426520()
 *        L00426A83()
 *        L00426B1C()
 *        L00426C08()
 */

L00426270(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    L00421B0C();
    esi = 0;
    if(Ac > 0) {
        do {
            if(*A8 != 38964 || !( *(A8 + 0x11) & 0x20)) {
                L00421CFC(A8);
            }
            *A8 = *A8 + 1;
            esi = esi + 1;
        } while(Ac > esi);
    }
    return L004262B0();
}

/*    Procedure: 0x004262AD - 0x004262AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004262AD()
{



}

/*    Procedure: 0x004262B0 - 0x004262BC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421208()
 *        L00422120()
 *        L00424A39()
 *        L00424B91()
 *        L00424C04()
 *        L00424C2D()
 *        L00424ED5()
 *        L00425174()
 *        L00425278()
 *        L00425400()
 *        L00425544()
 *        L00425668()
 *        L004257C0()
 *        L0042598C()
 *        L00425AB4()
 *        L00425AD0()
 *        L00425D8A()
 *        L00425E60()
 *        L00425E89()
 *        L00425ED4()
 *        L004261D4()
 *        L00426270()
 *        L004269C4()
 */

L004262B0()
{



    return L004267FC(1);
}

/*    Procedure: 0x004262BD - 0x004262E7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004262BD(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = ( *(A8 + 0x10) >> 9 & 0x1f) + 39294;
    *(A8 + 0x24) = *(A8 + 0x24) + -4660;
    return L00421F30(A8);
}

/*    Procedure: 0x004262E8 - 0x0042630F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004262E8(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = ( *(A8 + 0x10) >> 9 & 0xf) + 39326;
    *(A8 + 0x24) = *(A8 + 0x24) + -4660;
    return L00421F30(A8);
}

/*    Procedure: 0x00426310 - 0x00426324
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426310(A8)
/* unknown */ void  A8;
{



    *A8 = 39197;
    return L00421EFC(A8);
}

/*    Procedure: 0x00426325 - 0x00426336
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426325(A8)
/* unknown */ void  A8;
{



    return L0042489C(A8);
}

/*    Procedure: 0x00426337 - 0x00426372
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00426337(A8)
/* unknown */ void  A8;
{



    if(L00426374(A8) != 0) {
        *(A8 + 0x2c) = 39216;
        M006494a0 = M006494a0 | 0x10;
        return L00421F30(A8);
    }
    *(A8 + 0x2c) = 39215;
    return L00421F30(A8);
}

/*    Procedure: 0x00426373 - 0x00426373
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426373()
{



}

/*    Procedure: 0x00426374 - 0x004263AB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00426337()
 *        L00426520()
 */

L00426374(A8)
/* unknown */ void  A8;
{



    eax = 0;
    ecx = *(A8 + 0xc);
    if(ecx == 178566936) {
        eax = 0xe;
    } else {
        if(ecx == 379885336) {
            eax = 0xd;
        } else {
            if(ecx == 178558746) {
                eax = 0xf;
            }
        }
    }
}

/*    Procedure: 0x004263AC - 0x00426409
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004263AC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    if(M00644d94 >= 5) {
        if(!(M006494a0 & 0x20)) {
            *(A8 + 0x2c) = 39206;
        } else {
            M006494a0 = M006494a0 | 0x20;
            eax = M006494a4;
            ebx = 0xa;
            asm("cdq");
            edx = ebx / ebx % ebx / ebx;
            M006494a4 = M006494a4 + eax;
            *(A8 + 4) = M006494a4;
            *(A8 + 0x2c) = 39207;
        }
    } else {
        *(A8 + 0x2c) = 39201;
    }
    return L00421F30(A8);
}

/*    Procedure: 0x0042640A - 0x00426486
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0042640A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    if(( *(A8 + 0x10) >> 8 & 0x1e) == 0x14) {
        *(A8 + 0x2c) = 39202;
    } else {
        if(!(M006494a0 & 0x80)) {
            *(A8 + 0x2c) = 39206;
        } else {
            esi = 2 - M00644d94;
            if(esi > 0) {
                if(*L004eeed0(esi, A8 + 0x10, A8 + 0x24) == 0) {
                    goto L0042646b;
                }
                *(A8 + 0x2c) = 39205;
            } else {
L0042646b:
                M006494a0 = M006494a0 | 0x80;
                *(A8 + 0x2c) = 39203;
            }
        }
    }
    return L00421F30(A8);
}

/*    Procedure: 0x00426487 - 0x004264FF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00426487(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    if(( *(A8 + 0x10) >> 8 & 0x1e) == 0x14) {
        *(A8 + 0x2c) = 39202;
    } else {
        if(!(M006494a0 & 0x80)) {
            *(A8 + 0x2c) = 39206;
        } else {
            esi = 0xa - M00644d94;
            if(esi > 0) {
                if(*L004eeed0(esi, A8 + 0x10, A8 + 0x24) == 0) {
                    goto L004264e7;
                }
                *(A8 + 0x2c) = 39205;
            } else {
L004264e7:
                M006494a0 = M006494a0 | 0x40;
                *(A8 + 0x2c) = 39204;
            }
        }
    }
    return L00421F30(A8);
}

/*    Procedure: 0x00426500 - 0x0042651F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426500(A8)
/* unknown */ void  A8;
{



    *(A8 + 4) = ( *(A8 + 0x10) & 7) + 1;
    *(A8 + 0x2c) = 39200;
    return L00421F30(A8);
}

/*    Procedure: 0x00426520 - 0x00426647
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00426520(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 6572964;
    if(*L006495BC >= 0x3b) {
        *A8 = 39209;
        eax = L00421EFC(A8);
    } else {
        if(!( *(A8 + 0x10) & 0x20)) {
            eax = (eax & 7) + 1;
            if(eax > *(esi + 0x11c) - *(esi + 0x124)) {
                *A8 = 39208;
                eax = L00421EFC(A8);
                goto L00426643;
            }
            *(esi + 0x124) = *(esi + 0x124) + eax;
            L00414070(1, 0, 0x10);
        }
        if(!( *(esi + 18684) & 0x10)) {
            edi = L00426374(A8);
            if(edi != 0) {
                ecx = edi;
                *(esi + 20696) = *(esi + 20696) | 1 << cl;
            }
        }
        *(A8 + 0x2c) = 39210;
        *(A8 + 4) = *(esi + 18688);
        eax = *(esi + 18684);
        if(!(al & 0x80)) {
            if(!(al & 0x40)) {
                *(A8 + 0x2c) = 39212;
                eax = *(A8 + 4);
                *(A8 + 4) = 0;
            } else {
                *(A8 + 0x2c) = 39211;
                eax = *(A8 + 4) >> 1;
                >= ? 0x4265f0 : ;
                asm("adc eax,+0x0");
                *(A8 + 4) = eax;
            }
            *(esi + 0x114) = *(esi + 0x114) + eax + eax + (eax + eax) * 4;
        }
        L00421F30(A8);
        L00426648(A8);
        eax = *(esi + 4) + 0x1c;
        *(A8 + 8) = eax;
        L0041EE28( *(A8 + 0x10), *(A8 + 4), *(A8 + 0xc), eax, *(A8 + 0x24));
        *A8 = 38975;
        eax = L00426270(A8, 1);
    }
L00426643:
}

/*    Procedure: 0x00426648 - 0x00426664
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00424ED5()
 *        L00425400()
 *        L004257C0()
 *        L00426520()
 */

L00426648(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0x14) + *(A8 + 0x14) * 2;
    *(M0064949c + eax * 8 + 0x132) = 0;
}

/*    Procedure: 0x00426665 - 0x00426667
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426665()
{



}

/*    Procedure: 0x00426668 - 0x004266D2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00421F4D()
 */

L00426668(A8)
/* unknown */ void  A8;
{



    if(M00644fe0 != 4) {
        M0049cfa8 = 0x4d782c;
        M0049cfac = 0x1e;
        L0041D444(0x33, 1);
        *(A8 + 0x1c) = M00644c70;
        eax = *(M00644c70 + 0xa0);
        edx = eax << 0xa;
        *(A8 + 4) = edx | eax >> 0x16;
        *(A8 + 8) = 39126;
        *(A8 + 0xc) = 0;
        eax = L004266D4(0, A8);
    }
}

/*    Procedure: 0x004266D3 - 0x004266D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004266D3()
{



}

/*    Procedure: 0x004266D4 - 0x0042671D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004249FE()
 *        L00426668()
 */

L004266D4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *L00649490 = A8;
    *L00649494 = *(Ac + 4);
    *L006494C0 = 32768;
    *L00649498 = 0;
    *L00649482 = *(Ac + 8);
    *L00649487 = *(Ac + 0xc);
    return L00426720(Ac);
}

/*    Procedure: 0x0042671E - 0x0042671F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042671E()
{



}

/*    Procedure: 0x00426720 - 0x004267BA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00421208()
 *        L004266D4()
 */

L00426720(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    *A8 = 39135;
    L00421EFC(A8);
    L00421B0C();
    M0064949c = L0042C788( *(M00644c70 + 0x86) & 0xff);
    *A8 = 38962;
    ebx = 0;
    *(ebp - 4) = 6573272;
    edi = 6574000;
    do {
        eax = *edi ^ M00649490;
        if(!(al & 0x80)) {
            *(A8 + 4) = *(M0064949c + ebx * 8 + 4);
            *(A8 + 8) = *(M0064949c + ebx * 8);
            *(A8 + 0xc) = *( *(ebp - 4)) & 65535;
            *(A8 + 0x24) = ebx + 36352;
            L00421CFC(A8);
        }
        ebx = ebx + 1;
        *(ebp - 4) = *(ebp - 4) + 2;
        edi = edi + 1;
    } while(ebx < 0x21);
    return L004267BC();
}

/*    Procedure: 0x004267BB - 0x004267BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004267BB()
{



}

/*    Procedure: 0x004267BC - 0x004267C8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00422120()
 *        L00426720()
 *        L00426E1C()
 *        L00426EE8()
 *        L00426FA0()
 */

L004267BC()
{



    return L004267FC(3);
}

/*    Procedure: 0x004267C9 - 0x004267CB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004267C9()
{



}

/*    Procedure: 0x004267CC - 0x004267FB
 *    Argument size: -16
 *    Local size: 20
 *    Save regs size: 0
 *    Called by:
 *        L00423D14()
 *        L004267FC()
 */

L004267CC(A8)
/* unknown */ void  A8;
{



    L0043E55C(0);
    L004212B8(A8);
    L00426FBC();
    return L004551F0(0, 0x4d8e77);
}

/*    Procedure: 0x004267FC - 0x0042680F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421208()
 *        L00422120()
 *        L00422DF4()
 *        L00423B80()
 *        L00424544()
 *        L0042596C()
 *        L004262B0()
 *        L004267BC()
 */

L004267FC(A8)
/* unknown */ void  A8;
{



    (save)A8;
    L004267CC();
    return L00458384();
}

/*    Procedure: 0x00426810 - 0x004268FC
 *    Argument size: 0
 *    Local size: 20
 *    Save regs size: 4
 */

L00426810()
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff8;



    ebx = 6572964;
    if(*L00644FE0 == 0) {
        M0049cfa8 = 0x4d782c;
        M0049cfac = 0x1e;
    }
    *L004d3050();
    L004552D4();
    *(ebx + 0x74) = *(ebx + 0x74) | 0x20;
    L004580FC();
    L004551F0(0, 0x4d8e7a);
    *(ebx + 18672) = *( *(ebx + 0xcc) + 0xa0);
    L00425D24(ebx + 18672, 0x16);
    *(ebx + 18676) = 9;
    Vfffffff8 = *(ebx + 0xcc) + 0x124;
    *L005000e0(M004d8e6c, & Vffffffec, M004d79da, 0x8c, 0x3c, 0xa0);
    L00427380();
    L00458384();
    eax = 0;
    do {
        L00458384();
    } while(( *L00500398() & 0xff) == 0);
    *(ebx + 4) = *(ebx + 4) + *L004eeed4(10950) + 0x16d;
    return L0043C3F0();
}

/*    Procedure: 0x004268FD - 0x004268FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004268FD()
{



}

/*    Procedure: 0x00426900 - 0x004269C1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00426DB3()
 */

L00426900(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 6572964;
    ax = *L00644FE0;
    if(ax == 0) {
        M0049cfa8 = 0x4d78a4;
        M0049cfac = 1;
    } else {
        if(ax == 1) {
            M0049cfa8 = 0x4d78a8;
            M0049cfac = 1;
        } else {
            if(ax == 2) {
                M0049cfa8 = 0x4d78ac;
                M0049cfac = 1;
            } else {
                M0049cfa8 = 0x4d78b0;
                M0049cfac = 0x12;
            }
        }
    }
    *(esi + 18654) = 39128;
    L0041C44F(5, *(esi + 0xcc));
    *(A8 + 0x20) = *(esi + 0xcc);
    *A8 = 38987;
    *(A8 + 4) = 39241;
    *(A8 + 0xc) = 0x1388;
    return L004269C4(6, A8);
}

/*    Procedure: 0x004269C2 - 0x004269C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004269C2()
{



}

/*    Procedure: 0x004269C4 - 0x00426A82
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00426900()
 *        L00426D2C()
 */

L004269C4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    esi = 6572964;
    *L00649494 = *( *L00644C70 + 0xa0);
    L00425D24(6591636, 0x14);
    *(esi + 18716) = 16384;
    *(esi + 18676) = 9;
    *(Ac + 0x24) = *(esi + 0xcc) + 0x124;
    *(Ac + 0xc) = *(Ac + 0xc) + *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728);
    eax = *(Ac + 0xc);
    if(eax > 0) {
        *(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728) = eax;
        L00414070(0xa, 0, *(esi + 0x43c) & 65535);
    }
    esi = *Ac;
    *Ac = *(Ac + 4);
    L00421EFC(Ac);
    L00421B0C();
    *Ac = esi;
    esi = A8;
    do {
        L00421CFC(Ac);
        *Ac = *Ac + 1;
        esi = esi - 1;
    } while(esi >= 0);
    return L004262B0();
}

/*    Procedure: 0x00426A83 - 0x00426B1A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00426A83(A8)
/* unknown */ void  A8;
{



    eax = 6572964;
    if(*(6572964 + ( *L00644FE0 & 65535) * 4 + 20728) > *L00644CB8) {
        return L00426B1C(A8);
    }
    *(A8 + 0xc) = *(eax + ( *(eax + 0x43c) & 65535) * 4 + 20728);
    *(eax + 0x114) = *(eax + 0x114) - *(eax + ( *(eax + 0x43c) & 65535) * 4 + 20728);
    edx = *(eax + 0x43c) & 65535;
    *(eax + edx * 4 + 20728) = 0;
    L00414070(0xa, 0, *(eax + 0x43c) & 65535);
    *(A8 + 0x2c) = 39242;
    L00421F30(A8);
    *A8 = 38975;
    return L00426270(A8, 1);
}

/*    Procedure: 0x00426B1B - 0x00426B1B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426B1B()
{



}

/*    Procedure: 0x00426B1C - 0x00426B55
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00426A83()
 */

L00426B1C(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39243;
    *(A8 + 0xc) = *((M00644fe0 & 65535) * 4 + 6593692);
    L00421F30(A8);
    *A8 = 38975;
    return L00426270(A8, 1);
}

/*    Procedure: 0x00426B56 - 0x00426BA7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00426B56(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = M00644fe0 & 65535;
    ebx = *(eax * 4 + 6593692) + 0x9c4;
    if(ebx >= 0) {
        *(eax * 4 + 6593692) = ebx;
        L00414070(0xa, 0, M00644fe0 & 65535);
        *(A8 + 0x2c) = 39244;
        *(A8 + 0xc) = ebx;
        eax = L00421F30(A8);
    }
}

/*    Procedure: 0x00426BA8 - 0x00426BBD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426BA8(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x2c) = 39245;
    return L00421F30(A8);
}

/*    Procedure: 0x00426BBE - 0x00426BD4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426BBE(A8)
/* unknown */ void  A8;
{



    return L00426C08(0x14, 0x64, A8);
}

/*    Procedure: 0x00426BD5 - 0x00426BEF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426BD5(A8)
/* unknown */ void  A8;
{



    return L00426C08(6, 0x1f4, A8);
}

/*    Procedure: 0x00426BF0 - 0x00426C07
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426BF0(A8)
/* unknown */ void  A8;
{



    return L00426C08(2, 0x9c4, A8);
}

/*    Procedure: 0x00426C08 - 0x00426D29
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00426BBE()
 *        L00426BD5()
 *        L00426BF0()
 */

L00426C08(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = Ac;
    edi = 6572964;
    eax = *( *L00644C70 + 0xa0);
    edx = eax << 0xc;
    *L00649494 = edx | eax >> 0x14;
    *(A10 + 0x24) = *L00649494;
    eax = *L00649494;
    *(A10 + 8) = eax;
    *(A10 + 4) = *(A10 + 8);
    if(*L004eeed0(A8, A10 + 4, A10 + 8) != 0) {
        eax = *(edi + 0x43c) & 65535;
        esi = *(edi + eax * 4 + 20728) + 20000;
        if(esi > 0) {
            *(A10 + 0xc) = esi;
            *(edi + ( *(edi + 0x43c) & 65535) * 4 + 20728) = esi;
            L00414070(0xa, 0, *(edi + 0x43c) & 65535);
            *(A10 + 0x2c) = 39246;
            L00421F30(A10);
            eax = L0041C44F(6, *(edi + 0xcc));
        }
    } else {
        if(esi <= *(edi + 0x114)) {
            *(edi + 0x114) = *(edi + 0x114) - esi;
            eax = *(edi + 0x43c) & 65535;
            *(edi + eax * 4 + 20728) = 0;
            L00414070(0xa, 0, *(edi + 0x43c) & 65535);
            *(A10 + 0x2c) = 39247;
            L00421F30(A10);
            *A10 = 38994;
            eax = L00426270(A10, 1);
        } else {
            *A10 = 39248;
            eax = L00421EFC(A10);
        }
    }
}

/*    Procedure: 0x00426D2A - 0x00426D2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426D2A()
{



}

/*    Procedure: 0x00426D2C - 0x00426DA3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00421F4D()
 */

L00426D2C(A8)
/* unknown */ void  A8;
{



    L0041D444(0x32, 1);
    if(*((M00644fe0 & 65535) * 4 + 6593692) != 0) {
        *A8 = 38987;
        *(A8 + 4) = 39241;
        *(A8 + 0xc) = 0;
        return L004269C4(7, A8);
    }
    M0049cfa8 = 0x4d7800;
    M0049cfac = 0xb;
    *A8 = 38994;
    *(A8 + 4) = 39251;
    *(A8 + 0xc) = 0;
    return L004269C4(0, A8);
}

/*    Procedure: 0x00426DA4 - 0x00426DB2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426DA4(A8)
/* unknown */ void  A8;
{



    return L00422AC4(A8);
}

/*    Procedure: 0x00426DB3 - 0x00426E18
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00426DB3(A8)
/* unknown */ void  A8;
{



    if(M00649487 != 0) {
        return L00426900(A8);
    }
    M006494c4 = 0xff;
    *(A8 + 4) = *(A8 + 0x1c);
    edx = *(A8 + 0x24) + -36352;
    *(A8 + 0x14) = edx;
    *(A8 + 0x10) = edx;
    *(A8 + 0xc) = *(M0064949c + edx * 8 + 4);
    if(!( *(A8 + 0x18) & 0x10)) {
        L00426EE8(A8);
    } else {
        L00426E1C(A8);
    }
    return L00419470(0x12, 0);
}

/*    Procedure: 0x00426E19 - 0x00426E1B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426E19()
{



}

/*    Procedure: 0x00426E1C - 0x00426EE6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00426DB3()
 */

L00426E1C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    ecx = 6572964;
    esi = *L00649488 >> 6;
    do {
        if(*(ecx + 0x120) >= *(ecx + 0x118)) {
            goto L00426e40;
        }
        edx = *(ecx + 18680);
        if(*(edx + *(eax + 0x14) * 8) == 0) {
            goto L00426e61;
        }
        edx = *(eax + 0xc);
        if(edx > 0 && edx > *(ecx + 0x114)) {
            goto L00426e7f;
        }
        *(ecx + 0x114) = *(ecx + 0x114) - edx;
        edx = *(ecx + 18680);
        *(edx + *(eax + 0x14) * 8) = *(edx + *(eax + 0x14) * 8) - 1;
        *(ecx + *(eax + 0x10) * 2 + 0x134) = *(ecx + *(eax + 0x10) * 2 + 0x134) + 1;
        *(ecx + 0x120) = *(ecx + 0x120) + 1;
        *( *(eax + 0x20) + 8) = *( *(eax + 0x20) + 8) - 1;
        *( *(eax + 0x20) + 0xc) = *( *(eax + 0x20) + 0xc) + 1;
        esi = esi - 1;
    } while(esi > 0);
    goto L00426ec6;
L00426e40:
    *eax = 39139;
    eax = L00426FA0(eax);
    goto L00426ee3;
L00426e61:
    *eax = 39140;
    eax = L00426FA0(eax);
    goto L00426ee3;
L00426e7f:
    *eax = 39137;
    eax = L00426FA0(eax);
    goto L00426ee3;
L00426ec6:
    if(*(ecx + 18660) >= 0x40) {
        eax = L004267BC();
    } else {
        *eax = 39142;
        eax = L00426FA0(eax);
    }
L00426ee3:
}

/*    Procedure: 0x00426EE7 - 0x00426EE7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426EE7()
{



}

/*    Procedure: 0x00426EE8 - 0x00426F9E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00426DB3()
 */

L00426EE8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    esi = 6572964;
    ecx = *L00649488 >> 6;
    *eax = 39141;
    do {
        if(*(esi + *(eax + 0x10) * 2 + 0x134) == 0) {
            goto L00426f12;
        }
        edx = *(eax + 0xc);
        if(edx < 0 && ~edx > *(esi + 0x114)) {
            goto L00426f34;
        }
        *(esi + 0x114) = *(esi + 0x114) + edx;
        *(esi + *(eax + 0x10) * 2 + 0x134) = *(esi + *(eax + 0x10) * 2 + 0x134) + 65535;
        edx = *(esi + 18680);
        *(edx + *(eax + 0x14) * 8) = *(edx + *(eax + 0x14) * 8) + 1;
        *(esi + 0x120) = *(esi + 0x120) - 1;
        *( *(eax + 0x20) + 8) = *( *(eax + 0x20) + 8) + 1;
        *( *(eax + 0x20) + 0xc) = *( *(eax + 0x20) + 0xc) - 1;
        ecx = ecx - 1;
    } while(ecx > 0);
    goto L00426f7e;
L00426f12:
    *eax = 39141;
    eax = L00426FA0(eax);
    goto L00426f9b;
L00426f34:
    *eax = 39138;
    *(eax + 0xc) = ~edx;
    eax = L00426FA0(eax);
    goto L00426f9b;
L00426f7e:
    if(*(esi + 18660) >= 0x40) {
        eax = L004267BC();
    } else {
        *eax = 39143;
        eax = L00426FA0(eax);
    }
L00426f9b:
}

/*    Procedure: 0x00426F9F - 0x00426F9F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426F9F()
{



}

/*    Procedure: 0x00426FA0 - 0x00426FB9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00426E1C()
 *        L00426EE8()
 */

L00426FA0(A8)
/* unknown */ void  A8;
{



    *(A8 + 4) = *(A8 + 0x24);
    L00421EFC(A8);
    return L004267BC();
}

/*    Procedure: 0x00426FBA - 0x00426FBB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00426FBA()
{



}

/*    Procedure: 0x00426FBC - 0x00427010
 *    Argument size: -20
 *    Local size: 20
 *    Save regs size: 0
 *    Called by:
 *        L004219F8()
 *        L004267CC()
 */

L00426FBC()
{
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vffffffec = M00644cb8;
    Vfffffff0 = M00644cc4;
    Vfffffff8 = M00644cbc;
    Vfffffff4 = M00644cc8;
    Vfffffffc = M00644cc0;
    return *L005000d8(39144, & Vffffffec, M004d79dc, 1, 0x8a, 0);
}

/*    Procedure: 0x00427011 - 0x00427013
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00427011()
{



}

/*    Procedure: 0x00427014 - 0x00427188
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00423D14()
 */

L00427014(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 6572964;
    eax = *A8 & 65535;
    *L006494BC = eax;
    eax = *( *L00501b9c( *L006494BC) + 0x38);
    *(ebx + 18664) = 6;
    *(ebx + 20204) = *(eax + 0x14);
    *(ebx + 18996) = 0x1194;
    esi = *(eax + 0xc);
    if(esi != 0) {
        eax = *(ebx + 18996);
        asm("cdq");
        esi = esi / esi;
        edx = esi % esi;
        *(ebx + 18996) = eax;
    }
    eax = esi * -93000;
    if(eax < 0) {
        eax = eax + 0xff;
    }
    *(ebx + 18944) = eax >> 8;
    eax = ( ~esi << 3) + ( ~esi << 3) * 4 + (( ~esi << 3) + ( ~esi << 3) * 4) * 4 + (( ~esi << 3) + ( ~esi << 3) * 4 + (( ~esi << 3) + ( ~esi << 3) * 4) * 4) * 4;
    if(eax < 0) {
        eax = eax + 0xff;
    }
    *(ebx + 18952) = eax >> 8;
    *(ebx + 18960) = (esi << 3) + (esi << 3) * 4 + ((esi << 3) + (esi << 3) * 4) * 4 + ((esi << 3) + (esi << 3) * 4 + ((esi << 3) + (esi << 3) * 4) * 4) * 4;
    L00455244();
    eax = L0045527C(0x4d8e7d);
    *(ebx + 0xc) = *(ebx + 0xc) & 0xfe;
    *(ebx + 0x2c) = -18919;
    *(ebx + 0x30) = -18919;
    *(ebx + 0x34) = 18919;
    *(ebx + 0x54) = M004d8e80;
    *(ebx + 0x56) = M004d8e82;
    *(ebx + 0x57) = M004d8e80;
    *(ebx + 0x59) = M004d8e82;
    *(ebx + 0x5a) = M004d8e83;
    *(ebx + 0x5c) = M004d8e85;
    *(ebx + 0x5d) = M004d8e86;
    *(ebx + 0x5f) = M004d8e88;
    *(ebx + 0x60) = M004d8e89;
    *(ebx + 0x62) = M004d8e8b;
    *(ebx + 0x63) = M004d8e8c;
    *(ebx + 0x65) = M004d8e8e;
    *(ebx + 0x66) = M004d8e8f;
    *(ebx + 0x68) = M004d8e91;
    *(ebx + 0x69) = M004d8e92;
    *(ebx + 0x6b) = M004d8e94;
    return *(ebx + 0x6b);
}

/*    Procedure: 0x00427189 - 0x0042718B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00427189()
{



}

/*    Procedure: 0x0042718C - 0x004271A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418264()
 *        L00418EAB()
 *        L00422310()
 *        L00423CD2()
 *        L0042723C()
 *        L00427380()
 */

L0042718C()
{



    return L0043E580(1, 0x11, 0x79, 0x89);
}

/*    Procedure: 0x004271A4 - 0x00427239
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042723C()
 */

L004271A4()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    *(ebp - 4) = 4;
    *(ebp - 2) = 0x86;
    *(ebp - 8) = 4;
    *(ebp - 6) = 0x83;
    L00457ABC(ebp - 4, ebp - 8, 0xf);
    ax = M006495d8 + 4;
    *(ebp - 4) = ax;
    *(ebp - 2) = 0x86;
    *(ebp - 8) = *(ebp - 4);
    *(ebp - 6) = 0x83;
    L00457ABC(ebp - 4, ebp - 8, 0xf);
    *(ebp - 4) = 4;
    *(ebp - 2) = 0x85;
    *(ebp - 8) = M006495d8 + 4;
    *(ebp - 6) = 0x85;
    eax = L00457ABC(ebp - 4, ebp - 8, 0xf);
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0042723A - 0x0042723B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042723A()
{



}

/*    Procedure: 0x0042723C - 0x00427333
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421F4D()
 */

L0042723C()
{



    esp = esp + -340;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = 6572964;
    esi = ebp + -340;
    eax = M0064a110 >> 3;
    *L0064959C = *L0064959C + eax;
    *L006495A0 = *L006495A0 + (eax >> 1);
    L0042718C();
    L004271A4();
    *(ebx + 0xc) = *(ebx + 0xc) & 0xfe;
    *L00501b98(esi, 0x4d81ec, 0);
    (save)esi;
    edi = esi + 0x26;
    esi = ebx + 18944;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    *(esi + 0xa0) = *(ebx + 18972);
    *(esi + 0xc8) = -1;
    *(esi + 0xd2) = -2004318072;
    *(esi + 0xd6) = -2105376126;
    *(esi + 0xd0) = 2;
    *(esi + 0x82) = *(ebx + 18712);
    (save)esi;
    esi = esi + 0x124;
    edi = ebx + 18976;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)esi;
    *(esi + 0x9c) = *ebx >> 0xa;
    L0045AFF0(esi, *(ebx + 18936), *(ebx + 18940));
    eax = *L005030ec(esi);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00427334 - 0x0042734C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421F4D()
 *        L00427380()
 */

L00427334()
{



    return L00427350(M00649494, M00649498);
}

/*    Procedure: 0x0042734D - 0x0042734F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042734D()
{



}

/*    Procedure: 0x00427350 - 0x0042737C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00427334()
 */

L00427350(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(M00644fe0 != 4) {
        eax = M00644c70;
        if(*(eax + 0x82) != 0x45) {
            eax = L0043C31C(A8, Ac);
        }
    }
}

/*    Procedure: 0x0042737D - 0x0042737F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042737D()
{



}

/*    Procedure: 0x00427380 - 0x004273CE
 *    Argument size: -20
 *    Local size: 20
 *    Save regs size: 0
 *    Called by:
 *        L004219F8()
 *        L00426810()
 */

L00427380()
{
    /* unknown */ void  Vffffffec;



    if(M006494c0 == 0) {
        eax = L00427334();
    } else {
        eax = L0042718C();
        if(M004d8e70 != 0 && M0049cfa8 != 0) {
            eax = *L005000e0(39129, & Vffffffec, M00632ac0, 0x1e, 0x4c, 0);
        }
    }
}

/*    Procedure: 0x004273CF - 0x004273CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004273CF()
{



}

/*    Procedure: 0x004273D0 - 0x00427412
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004212B8()
 *        L004241FC()
 */

L004273D0()
{



    L0042145C(0x2e, 0xc8, 0x93, 8, 9, 3);
    return *L005000d8(39146, 0, M004d79da, 0xd2, 0x93, 0);
}

/*    Procedure: 0x00427413 - 0x00427413
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00427413()
{



}

/*    Procedure: 0x00427414 - 0x00427436
 *    Argument size: -40
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L004238E4()
 *        L00423AE0()
 */

L00427414(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffd0;



    Vffffffd0 = *(Ac + 4);
    (save) & Vffffffd0;
    (save)A8;
    return L00422F6C();
}

/*    Procedure: 0x00427437 - 0x00427467
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00427437()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    M006355ac = 0;
    eax = L00427498( *(ebp + 8), *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18), *(ebp + 0x1c), *(ebp + 0x20));
    (restore)ebp;
}

/*    Procedure: 0x00427468 - 0x00427497
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 */

L00427468(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    M006355ac = 0xff;
    return L00427498(A8, Ac, A10, A14, A18, A1c, A20);
}

/*    Procedure: 0x00427498 - 0x004276D7
 *    Argument size: 28
 *    Local size: 56
 *    Save regs size: 12
 *    Called by:
 *        L00427437()
 *        L00427468()
 */

L00427498(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vffffffff;



    M006355a8 = 0;
    M006355a9 = 0;
    M006355aa = 0;
    M006355ad = 0;
    M006355b4 = -1;
    M006355c4 = 0;
    if(*(A8 + 0x56) != 0) {
        esi = *L00501b94(A10 & 0xff, Ac);
        M006355b0 = esi;
        (save)M006355b0;
        esi = A8 + 0x3e;
        edi = & Vffffffe0;
        ecx = 6;
        asm("rep movsd");
        (restore)esi;
        L00427898( & Vffffffe0, A8, esi);
        Vffffffff = al;
        edx = *(A8 + 0x148);
        if(edx != 0) {
            A10 = M00655674 >> 1;
            >= ? 0x42752d : ;
            asm("adc eax,+0x0");
            *(A8 + 0x148) = A10 <= edx ? *(A8 + 0x148) - A10 : 0;
        } else {
            if(Vffffffff & 2) {
                goto L00427565;
            }
            if(*(A8 + 0x57) == 0) {
                L00427724(A8, esi);
                *(A8 + 0x148) = 0x7f;
                goto L0042757f;
L00427565:
                if(*(A8 + 0x57) != 0) {
                    L004277A8(A8, esi);
                    *(A8 + 0x148) = 0x7f;
                }
            }
        }
    }
L0042757f:
    *A14 = *(A8 + 0x56);
    Vffffffff = M006355a8;
    edi = 0x72;
    Vfffffff8 = Ac + 0x72;
    do {
        if(!( *Vfffffff8 & 4) && edi != ( *(A8 + 0x86) & 0xff)) {
            esi = *L00501b94(edi, Ac);
            if(*(esi + 0x8b) == 0 && *A14 == ( *(esi + 0x56) & 0xff)) {
                if(*(esi + 0x82) != 0x99) {
                    goto L004275fd;
                }
                if(*(A8 + 0x82) == 0x99) {
L004275fd:
                    if(*(A8 + 0x57) == *(esi + 0x57)) {
                        (save)esi;
                        (save)edi;
                        esi = A8 + 0x3e;
                        edi = & Vffffffe0;
                        ecx = 6;
                        asm("rep movsd");
                        (restore)edi;
                        (restore)esi;
                        L0045A098( & Vffffffe0, esi + 0x3e);
                    } else {
                        *L005030d8( & Vffffffe0, A8);
                        *L005030d8( & Vffffffc8, esi);
                        L0045A098( & Vffffffe0, & Vffffffc8);
                    }
                    L00427898( & Vffffffe0, A8, esi);
                }
            }
        }
        edi = edi - 1;
        Vfffffff8 = Vfffffff8 - 1;
    } while(edi > 0);
    M006355a8 = M006355a8 | Vffffffff;
    *A1c = M006355b8 != 0 || M006355b4 < 0 ? -1 : M006355b4;
    *A18 = M006355b0;
    *A20 = M006355ad & 0x1f;
    *A14 = M006355aa;
    *A10 = M006355a8;
    return M006355a8;
}

/*    Procedure: 0x004276D8 - 0x00427722
 *    Argument size: -8
 *    Local size: 12
 *    Save regs size: 0
 *    Called by:
 *        L00427898()
 */

L004276D8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff4 = *(A8 + 0x18);
    Vfffffff8 = *(A8 + 0x1c);
    Vfffffffc = *(A8 + 0x20);
    *(A8 + 0x18) = *(A8 + 0xc);
    *(A8 + 0x1c) = *(A8 + 0x10);
    *(A8 + 0x20) = *(A8 + 0x14);
    *(A8 + 0xc) = Vfffffff4;
    *(A8 + 0x10) = Vfffffff8;
    *(A8 + 0x14) = Vfffffffc;
    *A8 = ~( *A8);
    *(A8 + 4) = ~( *(A8 + 4));
    *(A8 + 8) = ~( *(A8 + 8));
}

/*    Procedure: 0x00427723 - 0x00427723
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00427723()
{



}

/*    Procedure: 0x00427724 - 0x004277A7
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00427498()
 */

L00427724(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = L00459E08(A8 + 0x3e, 0x1c);
    Vfffffff4 = *(A8 + 0x3e);
    Vfffffff8 = *(A8 + 0x46);
    Vfffffffc = *(A8 + 0x4e);
    L0045A968( & Vfffffff4, & Vfffffff4, Ac);
    *L00501700(A8 + 0x3e, & Vfffffff4, edi);
    eax = L0045AD2C(A8, A8, Ac);
    *(A8 + 0x58) = M00644bb2 - 1;
    *(A8 + 0x57) = 1;
    eax = A8 + 0x8c;
    return L0045A968(eax, eax, Ac);
}

/*    Procedure: 0x004277A8 - 0x00427822
 *    Argument size: 8
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L00427498()
 */

L004277A8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;



    edi = L00459E08(A8 + 0x3e, 0x1c);
    Vffffffdc = *(A8 + 0x3e);
    Vffffffe0 = *(A8 + 0x46);
    Vffffffe4 = *(A8 + 0x4e);
    L0045A7A8( & Vffffffdc, & Vffffffdc, Ac);
    *L00501700(A8 + 0x3e, & Vffffffdc, edi);
    L0045AB0C(A8, A8, Ac);
    *(A8 + 0x57) = 0;
    eax = A8 + 0x8c;
    return L0045A7A8(eax, eax, Ac);
}

/*    Procedure: 0x00427823 - 0x00427823
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00427823()
{



}

/*    Procedure: 0x00427824 - 0x00427897
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00439D78()
 */

L00427824(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    M006355ac = 0;
    M006355a8 = 0;
    M006355a9 = 0;
    M006355aa = 0;
    M006355ad = 0;
    M006355b4 = -1;
    M006355c4 = 0;
    eax = L00427898(Ac, A10, A14);
    if(M006355b8 != 0 || M006355b4 < 0) {
        *A8 = -1;
        return;
    }
    eax = M006355b4;
    *A8 = eax;
    return *A8;
}

/*    Procedure: 0x00427898 - 0x0042806C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00427498()
 *        L00427824()
 */

L00427898(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -212;
    (save)Ac;
    (save)esi;
    (save)edi;
    (save)A8;
    (save)A10;
    edi = ebp - 0x38;
    ecx = 6;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    L0045A154(esi, esi);
    L0044EB4E(ebp - 8, *esi, *(esi + 4), *(esi + 8), *(esi + 0xc));
    L0044EB4E(ebp - 8, *(ebp - 8), *(ebp - 4), *(esi + 0x10), *(esi + 0x14));
    L0044EC90(ebp - 8, -1);
    L0044EB80(ebp - 8, *(ebp - 8), *(ebp - 4), *(Ac + 0x138), *(Ac + 0x13c));
    if(*(ebp - 4) >= 0) {
        L0044EB80(ebp - 8, *(ebp - 8), *(ebp - 4), *(edi + 0x138), *(edi + 0x13c));
        if(*(ebp - 4) < 0) {
            goto L00427951;
        }
        eax = 0;
    } else {
L00427951:
        M006355c4 = 0;
        if(*(edi + 0x14c) < 0) {
            eax = L00428070(Ac, edi, ebp - 0x38);
            if(eax == 0) {
                if(M006355c4 != 0) {
                    goto L004279ed;
                }
                eax = L004283B0(Ac, edi);
                al = M006355a8;
            } else {
                al = M006355a8;
            }
        } else {
            (save)esi;
            eax = ebp - 0x38;
            edx = 5;
            do {
                (save) *(eax + edx * 4);
            } while(edx = edx - 1);
            (save)edi;
            (save)Ac;
            (save)ebp - 0xc;
            eax = L00428244();
            esp = esp + 0x28;
            if(eax == 0) {
                if(*(edi + 0x86) != *(Ac + 0x56)) {
                    eax = L004283B0(Ac, edi);
                    al = M006355a8;
                    goto L00428066;
                }
                M006355c4 = 2;
            } else {
                al = M006355a8;
                goto L00428066;
            }
L004279ed:
            M006355a8 = M006355a8 | 2;
            esi = L004765BC( *(Ac + 0x8c));
            esi = esi + L004765BC( *(Ac + 0x90));
            *(ebp - 0x10) = esi + L004765BC( *(Ac + 0x94));
            if(M006355c4 == 1) {
                (save)edi;
                esi = ebp - 0x38;
                edi = ebp - 0x50;
                ecx = 6;
                asm("rep movsd");
                (restore)edi;
                L00459E08(ebp - 0x50, 0x1c);
                *(ebp - 0x80) = *(ebp - 0x50);
                *(ebp - 0x7c) = *(ebp - 0x48);
                *(ebp - 0x78) = *(ebp - 0x40);
                L00452EC2(ebp - 0x80, 2147483647);
            } else {
                *(ebp - 0x80) = *(ebp - 0x38);
                *(ebp - 0x7c) = *(ebp - 0x30);
                *(ebp - 0x78) = *(ebp - 0x28);
                L004536D2(ebp - 0x80, ebp - 0x80);
            }
            esi = L004537B0( *(Ac + 0xc), *(ebp - 0x80));
            esi = esi + L004537B0( *(Ac + 0x10), *(ebp - 0x7c));
            eax = esi + L004537B0( *(Ac + 0x14), *(ebp - 0x78));
            if(*(ebp - 0x10) <= 0x258) {
                if(*(Ac + 0x9e) != 65535 || eax < 2013265920) {
                    goto L00427afb;
                }
                M006355a8 = M006355a8 | 0x40;
                M006355a8 = M006355a8 & 0x7f;
                M006355ab = 0;
            } else {
L00427afb:
                M006355ab = M006355ac;
            }
            *(ebp - 0x18) = *L00501b9c( *(Ac + 0x82));
            edx = *L00501b9c( *(edi + 0x82));
            if(M006355c4 == 1) {
                L0044EB80(ebp - 0x20, *(Ac + 0x140), *(Ac + 0x144), M006355bc, M006355c0);
                *(ebp + -152) = L004537B0( *(ebp - 0x80), *(ebp - 0x20));
                *(ebp + -144) = L004537B0( *(ebp - 0x7c), *(ebp - 0x20));
                eax = L004537B0( *(ebp - 0x78), *(ebp - 0x20));
                *(ebp + -136) = eax;
                eax = *(ebp + -136) | -1;
                if(*(ebp + -152) >= 0) {
                    eax = eax + 1;
                }
                *(ebp + -148) = eax;
                eax = eax | -1;
                if(*(ebp + -144) >= 0) {
                    eax = eax + 1;
                }
                *(ebp + -140) = eax;
                eax = eax | -1;
                if(*(ebp + -136) >= 0) {
                    eax = eax + 1;
                }
                *(ebp + -132) = eax;
                L0044EB4E(Ac + 0x3e, *(Ac + 0x3e), *(Ac + 0x42), *(ebp + -152), *(ebp + -148));
                L0044EB4E(Ac + 0x46, *(Ac + 0x46), *(Ac + 0x4a), *(ebp + -144), *(ebp + -140));
                L0044EB4E(Ac + 0x4e, *(Ac + 0x4e), *(Ac + 0x52), *(ebp + -136), *(ebp + -132));
            } else {
                eax = *(edx + 0x2c) << 0x10;
                esi = *(edx + 0x14) + *(edx + 0x18);
                edx = *( *(ebp - 0x18) + 0x14);
                (save)edx + *( *(ebp - 0x18) + 0x18);
                edx = esi;
                (restore)ecx;
                edx = edx - ecx;
                *(ebp - 0x14) = *( *(ebp - 0x18) + 0x30) << 0x10;
                if(edx != 0) {
                    *(ebp - 0x14) = *(ebp - 0x14) >> edx;
                }
                eax = eax + *(ebp - 0x14);
                if(eax < 0) {
                    eax = eax >> 1;
                    *(ebp - 0xc) = *(ebp - 0xc) + 1;
                }
                *(ebp - 0x68) = *(ebp - 0x38);
                *(ebp - 0x64) = *(ebp - 0x30);
                *(ebp - 0x60) = *(ebp - 0x28);
                L00452EFE(ebp - 0x68, eax, *(ebp - 0xc));
                esi = ~(esi - 0x37) + 1;
                eax = 0x20 - esi;
                ecx = eax;
                *(Ac + 0x3e) = *(ebp - 0x68) << cl;
                ecx = eax;
                *(Ac + 0x46) = *(ebp - 0x64) << cl;
                ecx = eax;
                *(Ac + 0x4e) = *(ebp - 0x60) << cl;
                ecx = esi;
                *(Ac + 0x42) = *(ebp - 0x68) >> cl;
                ecx = esi;
                *(Ac + 0x4a) = *(ebp - 0x64) >> cl;
                ecx = esi;
                *(Ac + 0x52) = *(ebp - 0x60) >> cl;
            }
            if(M006355ab != 0) {
                M006355a8 = M006355a8 | 0x80;
                if(( *(Ac + 0x86) & 0xff) == M00644c64) {
                    (save)edi;
                    esi = Ac;
                    edi = ebp + -212;
                    ecx = 9;
                    asm("rep movsd");
                    (restore)edi;
                    *(Ac + 0xc) = *(ebp - 0x80);
                    *(Ac + 0x10) = *(ebp - 0x7c);
                    *(Ac + 0x14) = *(ebp - 0x78);
                    (save)Ac;
                    L004276D8();
                    *"Z7E"(Ac);
                    (save)Ac;
                    L004276D8();
                    esi = L004537B0( *(Ac + 0x8c), *(ebp - 0x80));
                    esi = esi + L004537B0( *(Ac + 0x90), *(ebp - 0x7c));
                    esi = esi + L004537B0( *(Ac + 0x94), *(ebp - 0x78));
                    *(ebp - 0x68) = L004537B0( *(ebp - 0x80), esi);
                    *(ebp - 0x64) = L004537B0( *(ebp - 0x7c), esi);
                    *(ebp - 0x60) = L004537B0( *(ebp - 0x78), esi);
                    eax = *(Ac + 0x8c) + *(Ac + 0x8c);
                    ecx = 3;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    ecx = eax;
                    eax = *(ebp - 0x68) + *(ebp - 0x68) + ( *(ebp - 0x68) + *(ebp - 0x68)) * 4;
                    esi = 0xc;
                    asm("cdq");
                    edx = esi / esi % esi / esi;
                    *(Ac + 0x8c) = ecx - eax;
                    eax = *(Ac + 0x90) + *(Ac + 0x90);
                    ecx = 3;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    ecx = eax;
                    eax = *(ebp - 0x64) + *(ebp - 0x64) + ( *(ebp - 0x64) + *(ebp - 0x64)) * 4;
                    esi = 0xc;
                    asm("cdq");
                    edx = esi / esi % esi / esi;
                    *(Ac + 0x90) = ecx - eax;
                    eax = *(Ac + 0x94) + *(Ac + 0x94);
                    ecx = 3;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    ecx = eax;
                    eax = *(ebp - 0x60) + *(ebp - 0x60) + ( *(ebp - 0x60) + *(ebp - 0x60)) * 4;
                    esi = 0xc;
                    asm("cdq");
                    edx = esi / esi % esi / esi;
                    *(Ac + 0x94) = ecx - eax;
                    *(ebp - 0x68) = *(Ac + 0x8c);
                    *(ebp - 0x64) = *(Ac + 0x90);
                    *(ebp - 0x60) = *(Ac + 0x94);
                    esi = L004537B0( *(ebp + -188), *(Ac + 0x8c));
                    esi = esi + L004537B0( *(ebp + -184), *(Ac + 0x90));
                    if(esi + L004537B0( *(ebp + -180), *(Ac + 0x94)) < 0) {
                        *(ebp - 0x68) = ~( *(ebp - 0x68));
                        *(ebp - 0x64) = ~( *(ebp - 0x64));
                        *(ebp - 0x60) = ~( *(ebp - 0x60));
                    }
                    esi = L004765BC( *(Ac + 0x8c));
                    esi = esi + L004765BC( *(Ac + 0x90));
                    *(ebp - 0x10) = *(ebp - 0x10) - esi + L004765BC( *(Ac + 0x94));
                    ecx = *( *( *L00501b9c( *(Ac + 0x82)) + 0x38) + 6) << 2;
                    eax = ecx;
                    asm("imul dword [ebp-0x10]");
                    esi = 0x708;
                    asm("cdq");
                    edx = esi / esi % esi / esi;
                    edx = ecx;
                    if(edx < 0) {
                        edx = edx + 3;
                    }
                    edx = edx >> 2;
                    if(eax < edx) {
                        eax = edx;
                    }
                    L0043E288(Ac, eax, 0);
                    if(*(ebp - 0x68) == 0 && *(ebp - 0x64) == 0 && *(ebp - 0x60) == 0) {
                        *(ebp - 0x68) = *(ebp + -188);
                        *(ebp - 0x64) = *(ebp + -184);
                        *(ebp - 0x60) = *(ebp + -180);
                    }
                    L00452EC2(ebp - 0x68, 2147483647);
                    (save)edi;
                    esi = ebp + -212;
                    edi = Ac;
                    ecx = 9;
                    asm("rep movsd");
                    (restore)edi;
                    *(Ac + 0x18) = *(ebp - 0x68);
                    *(Ac + 0x1c) = *(ebp - 0x64);
                    *(Ac + 0x20) = *(ebp - 0x60);
                    *"Z7E"(Ac);
                } else {
                    if(*(Ac + 0x82) > 0xd) {
                        al = *(Ac + 0x87);
                        if(al == 0xb) {
                            goto L00427f9a;
                        }
                        if(al == 0xe) {
L00427f9a:
                            *(Ac + 0xc) = *(ebp - 0x80);
                            *(Ac + 0x10) = *(ebp - 0x7c);
                            *(Ac + 0x14) = *(ebp - 0x78);
                            (save)Ac;
                            L004276D8();
                            *"Z7E"(Ac);
                            (save)Ac;
                            L004276D8();
                            *(Ac + 0x8c) = 0;
                            *(Ac + 0x90) = 0;
                            *(Ac + 0x94) = 0;
                            if(M006355ac != 0) {
                                L0043E288(Ac, -1, 0);
                            }
                        }
                    }
                }
            } else {
                *(Ac + 0xc) = *(ebp - 0x80);
                *(Ac + 0x10) = *(ebp - 0x7c);
                *(Ac + 0x14) = *(ebp - 0x78);
                (save)Ac;
                L004276D8();
                *"Z7E"(Ac);
                (save)Ac;
                L004276D8();
                *(Ac + 0x8c) = 0;
                *(Ac + 0x90) = 0;
                *(Ac + 0x94) = 0;
            }
            eax = *(edi + 0x140);
            if(eax != *(edi + 0x138)) {
                M006355a8 = M006355a8 | 1;
            }
            if(M006355aa == 0) {
                M006355aa = *(edi + 0x86);
                M006355b0 = edi;
            }
            al = M006355a8;
        }
    }
L00428066:
    (restore)edi;
    (restore)esi;
    (restore)Ac;
}

/*    Procedure: 0x0042806D - 0x0042806F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042806D()
{



}

/*    Procedure: 0x00428070 - 0x00428241
 *    Argument size: 12
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L00427898()
 */

L00428070(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    esi = A8;
    M006355a9 = 0;
    eax = *L00501b9c( *(esi + 0x82));
    Vfffffff4 = 0x17 - *(eax + 0x14);
    Vfffffffc = *(eax + 0x34);
    ebx = *(esi + 0x140);
    (save)esi;
    esi = A10;
    edi = & Vffffffdc;
    ecx = 6;
    asm("rep movsd");
    for((restore)esi; 1; L0044EB67( & Vffffffec, *(eax + 0x10), *(eax + 0x14), Vffffffd8)) {
        eax = L00428550( & Vfffffffb, esi, Ac, & Vffffffdc, ebx);
        if(al > 0) {
            M006355a9 = M006355a9 | 0x80;
        }
        dl = M006355a9;
        if(dl != 0) {
            cl = *(Ac + 0x86);
            M006355aa = cl;
            M006355b0 = Ac;
            M006355a8 = dl;
            M006355ad = Vfffffffb;
        }
        if(al >= 0) {
            break;
        }
        if(*(esi + 0x14c) >= 0) {
            goto L0042811f;
        }
        Vfffffffc = Vfffffffc - 2;
        eax = *Vfffffffc;
        if(eax == 0) {
            goto L00428135;
        }
        Vfffffffc = Vfffffffc - 2;
        ebx = *Vfffffffc;
        if(edx = (ebx & 6) - 1) {
            Vffffffd0 = *esi;
            Vffffffd4 = *(esi + 4);
            Vffffffd8 = *(esi + 8);
        } else {
            if(edx = edx - 1) {
                Vffffffd0 = *(esi + 0xc);
                Vffffffd4 = *(esi + 0x10);
                Vffffffd8 = *(esi + 0x14);
            } else {
                if(edx = edx - 2) {
                    Vffffffd0 = *(esi + 0x18);
                    Vffffffd4 = *(esi + 0x1c);
                    Vffffffd8 = *(esi + 0x20);
                }
            }
        }
        if(!(bl & 1)) {
            Vffffffd0 = ~Vffffffd0;
            Vffffffd4 = ~Vffffffd4;
            Vffffffd8 = ~Vffffffd8;
        }
        edx = Vffffffd0 >> 0x10;
        Vffffffd0 = eax * eax;
        edx = Vffffffd4 >> 0x10;
        Vffffffd4 = eax * eax;
        edx = Vffffffd8 >> 0x10;
        Vffffffd8 = eax * eax;
        ebx = (ebx & 65528) << 0xf;
        if(Vfffffff4 != 0) {
            ecx = Vfffffff4;
            Vffffffd0 = Vffffffd0 >> cl;
            ecx = Vfffffff4;
            Vffffffd4 = Vffffffd4 >> cl;
            ecx = Vfffffff4;
            Vffffffd8 = Vffffffd8 >> cl;
            ebx = ebx >> Vfffffff4;
        }
        eax = A10;
        L0044EB67( & Vffffffdc, *eax, *(eax + 4), Vffffffd0);
        eax = A10;
        L0044EB67( & Vffffffe4, *(eax + 8), *(eax + 0xc), Vffffffd4);
        eax = A10;
    }
    eax = 0;
    goto L0042823b;
L0042811f:
    eax = eax | -1;
    goto L0042823b;
L00428135:
    eax = eax | -1;
L0042823b:
}

/*    Procedure: 0x00428242 - 0x00428243
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00428242()
{



}

/*    Procedure: 0x00428244 - 0x004283AE
 *    Argument size: 40
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00427898()
 */

L00428244(A8, Ac, A10, A14, A1c, A24, A2c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A1c;
/* unknown */ void  A24;
/* unknown */ void  A2c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A2c;
    Vfffffffc = *(ebx + 4) | *(ebx + 0xc) | *(ebx + 0x14) | *(A10 + 0x13c);
    ebx = Vfffffffc != 0 ? L00459CEC(Vfffffffc) + 3 : L00459CEC( *ebx | *(ebx + 8) | *(ebx + 0x10) | *(A10 + 0x138)) - 0x1d;
    if(ebx <= 0) {
        ebx = ~ebx;
        ecx = ebx;
        Vfffffff8 = *(Ac + 0x140) + *(A10 + 0x138) << cl;
        ecx = ebx;
        A14 = A14 << cl;
        ecx = ebx;
        A1c = A1c << cl;
        A24 = A24 << ebx;
        ebx = ~ebx;
    } else {
        L00459F90( & A14, ebx);
        eax = Ac;
        L0044EB4E( & Vfffffff0, *(A10 + 0x138), *(A10 + 0x13c), *(eax + 0x138), *(eax + 0x13c));
        L0044EC90( & Vfffffff0, ~ebx);
        Vfffffff8 = Vfffffff0;
    }
    (save) *L005016d0(A14);
    (restore)edx;
    (save)edx + *L005016d0(A1c);
    (restore)edx;
    *A8 = edx + *L005016d0(A24);
    if(*L005016d0(Vfffffff8) > *A8) {
        eax = 0;
    } else {
        M006355a8 = M006355a8 | 2;
        M006355b4 = *L005016d4( *A8 >> 1) + *L005016d4( *A8 >> 1);
        if(M006355b4 < 0) {
            M006355b4 = 0;
        }
        M006355b8 = 0;
        L0044EC90(6510004, ebx);
        eax = *(A10 + 0x140);
        if(eax != *(A10 + 0x138)) {
            M006355a8 = M006355a8 | 1;
        }
        eax = eax | -1;
    }
}

/*    Procedure: 0x004283AF - 0x004283AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004283AF()
{



}

/*    Procedure: 0x004283B0 - 0x0042854F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00427898()
 */

L004283B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    esi = Ac;
    M006355a8 = M006355a8 | 0x80;
    if(*(A8 + 0x56) != *(esi + 0x86) && *(esi + 0x87) != 1) {
        goto L0042845d;
    }
    *(A8 + 0x8c) = ~( *(A8 + 0x8c) >> 2);
    *(A8 + 0x90) = ~( *(A8 + 0x90) >> 2);
    *(A8 + 0x94) = ~( *(A8 + 0x94) >> 2);
    esi = L004765BC( *(A8 + 0x8c));
    esi = esi + L004765BC( *(A8 + 0x90));
    eax = esi + L004765BC( *(A8 + 0x94)) + 0xa;
    if(*(A8 + 0x82) > 0xd) {
        eax = L0043E288(A8, eax, 0);
        goto L0042854c;
L0042845d:
        eax = *(A8 + 0x8c) + *(esi + 0x8c) >> 1;
        *(esi + 0x8c) = eax;
        *(A8 + 0x8c) = *(esi + 0x8c);
        eax = *(A8 + 0x90) + *(esi + 0x90) >> 1;
        *(esi + 0x90) = eax;
        *(A8 + 0x90) = *(esi + 0x90);
        eax = *(A8 + 0x94) + *(esi + 0x94) >> 1;
        *(esi + 0x94) = eax;
        *(A8 + 0x94) = eax;
        if(M006355ac != 0 && *(A8 + 0x82) > 0xd && *(esi + 0x82) > 0xd) {
            ax = *(esi + 0xe4);
            if(ax <= *(A8 + 0xe4)) {
                L0043E288(esi, (ax & 65535) + (ax & 65535), *(A8 + 0x86) & 0xff);
                eax = L0043E288(A8, ( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535), *(esi + 0x86) & 0xff);
            } else {
                L0043E288(esi, ( *(A8 + 0xe4) & 65535) + ( *(A8 + 0xe4) & 65535), *(A8 + 0x86) & 0xff);
                eax = L0043E288(A8, ( *(A8 + 0xe4) & 65535) + ( *(A8 + 0xe4) & 65535), *(esi + 0x86) & 0xff);
            }
        }
    }
L0042854c:
}

/*    Procedure: 0x00428550 - 0x00428626
 *    Argument size: 20
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L00428070()
 */

L00428550(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = *L00501b9c( *(A10 + 0x82));
    Vfffffff0 = *(ebx + 0xc);
    Vfffffff4 = *(ebx + 4);
    Vfffffff8 = *(ebx + 0x14) + *(ebx + 0x18);
    eax = L00459E08(A14, 0x1c);
    Vffffffe4 = *A14;
    Vffffffe8 = *(A14 + 8);
    Vffffffec = *(A14 + 0x10);
    Vfffffffc = eax;
    eax = eax - Vfffffff8 - 0x17;
    if(eax < 0) {
        eax = ~eax;
        Vfffffffc = Vfffffffc + eax;
        ecx = eax;
        Vffffffe4 = Vffffffe4 >> cl;
        ecx = eax;
        Vffffffe8 = Vffffffe8 >> cl;
        ecx = eax;
        Vffffffec = Vffffffec >> cl;
    }
    eax = Vfffffffc;
    if(eax < 0) {
        A18 = A18 << ~eax;
    } else {
        if(eax > 0) {
            A18 = A18 >> eax;
        }
    }
    if(*(Ac + 0x57) == 0 || *(Ac + 0x56) != *(A10 + 0x86)) {
        L0045A968( & Vffffffe4, & Vffffffe4, A10);
    }
    L00428DEC(A8, & Vffffffe4, *(ebx + 0x34), A10, A18);
    return al;
}

/*    Procedure: 0x00428627 - 0x00428627
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00428627()
{



}

/*    Procedure: 0x00428628 - 0x004287E3
 *    Argument size: 28
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L00428DEC()
 */

L00428628(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    esi = *L00501b9c(A10);
    Vffffffdc = *(esi + 0xc);
    Vffffffe0 = *(esi + 4);
    Vffffffe4 = *(esi + 0x14) + *(esi + 0x18);
    Vffffffe8 = *(Ac + 0x18);
    eax = (A14 >> 1) + (A14 >> 1) * 2;
    edx = *(Ac + 0x10);
    Vfffffff8 = *(edx + eax * 2);
    Vfffffffc = *(edx + eax * 2 + 4);
    Vffffffec = !(A14 & 1) ? ~Vfffffffa : Vfffffffa;
    Vfffffff0 = Vfffffffb;
    Vfffffff4 = Vfffffffc;
    eax = *(Ac + 0x14) - *(Ac + 0x18);
    if(eax < 0) {
        eax = ~eax;
        ecx = eax;
        Vffffffec = Vffffffec >> cl;
        ecx = eax;
        Vfffffff0 = Vfffffff0 >> cl;
        Vfffffff4 = Vfffffff4 >> eax;
    } else {
        if(eax != 0) {
            ecx = eax;
            Vffffffec = Vffffffec << cl;
            ecx = eax;
            Vfffffff0 = Vfffffff0 << cl;
            Vfffffff4 = Vfffffff4 << eax;
        }
    }
    Vffffffec = *Ac - Vffffffec;
    Vfffffff0 = *(Ac + 4) - Vfffffff0;
    eax = *(Ac + 8) - Vfffffff4;
    Vfffffff4 = eax;
    if(A18 == 0) {
        Vffffffd0 = Vffffffec;
        Vffffffd4 = Vfffffff0;
        Vffffffd8 = Vfffffff4;
    } else {
        al = A18;
        if(!(al & 0x20)) {
            Vffffffec = ~Vffffffec;
        }
        if(!(al & 0x10)) {
            Vfffffff0 = ~Vfffffff0;
        }
        if(!(al & 8)) {
            Vfffffff4 = ~Vfffffff4;
        }
        eax = A18 & 7;
        if(eax <= 5) {
            switch(eax) {
                case 0:
L00428749:
                    Vffffffd0 = Vffffffec;
                    Vffffffd4 = Vfffffff0;
                    Vffffffd8 = Vfffffff4;
                    goto L004287bf;
                case 1:
                    Vffffffd4 = Vffffffec;
                    Vffffffd8 = Vfffffff0;
                    Vffffffd0 = Vfffffff4;
                    goto L004287bf;
                case 2:
                    Vffffffd8 = Vffffffec;
                    Vffffffd0 = Vfffffff0;
                    Vffffffd4 = Vfffffff4;
                    goto L004287bf;
                case 3:
                    Vffffffd8 = Vffffffec;
                    Vffffffd4 = Vfffffff0;
                    Vffffffd0 = Vfffffff4;
                    goto L004287bf;
                case 4:
                    Vffffffd4 = Vffffffec;
                    Vffffffd0 = Vfffffff0;
                    Vffffffd8 = Vfffffff4;
                    goto L004287bf;
                case 5:
                    Vffffffd0 = Vffffffec;
                    Vffffffd8 = Vfffffff0;
                    Vffffffd4 = Vfffffff4;
                    goto L004287bf;
            }
            goto L00428749;
        }
    }
L004287bf:
    L00428DEC(A8, & Vffffffd0, *(esi + 0x34), A20, A1c);
    return al;
}

/*    Procedure: 0x004287E4 - 0x00428DE9
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00428DEC()
 */

L004287E4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    esp = esp + -144;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = *(Ac + 1) & 0xff;
    ebx = *(Ac + 2) & 0xff;
    *(ebp - 4) = *(Ac + 3) & 0xff;
    *(ebp - 8) = ( *(Ac + 5) & 0xff) << 8 | *(Ac + 4) & 0xff;
    M006355c4 = 0xff;
    ecx = (( *Ac & 0xff) >> 1) + (( *Ac & 0xff) >> 1) * 2;
    esi = *(A18 + 0x10);
    *(ebp - 0x10) = *(esi + ecx * 2);
    *(ebp - 0xc) = *(esi + ecx * 2 + 4);
    *(ebp - 0x30) = !( *Ac & 0xff & 1) ? ~( *(ebp - 0xe)) : *(ebp - 0xe);
    *(ebp - 0x2c) = *(ebp - 0xd);
    *(ebp - 0x28) = *(ebp - 0xc);
    Ac = (edx >> 1) + (edx >> 1) * 2;
    ecx = *(A18 + 0x10);
    *(ebp - 0x10) = *(ecx + Ac * 2);
    *(ebp - 0xc) = *(ecx + Ac * 2 + 4);
    *(ebp - 0x78) = !(dl & 1) ? ~( *(ebp - 0xe)) : *(ebp - 0xe);
    *(ebp - 0x74) = *(ebp - 0xd);
    *(ebp - 0x70) = *(ebp - 0xc);
    Ac = (ebx >> 1) + (ebx >> 1) * 2;
    edx = *(A18 + 0x10);
    *(ebp - 0x10) = *(edx + Ac * 2);
    *(ebp - 0xc) = *(edx + Ac * 2 + 4);
    *(ebp - 0x6c) = !(bl & 1) ? ~( *(ebp - 0xe)) : *(ebp - 0xe);
    *(ebp - 0x68) = *(ebp - 0xd);
    *(ebp - 0x64) = *(ebp - 0xc);
    Ac = ( *(ebp - 4) >> 1) + ( *(ebp - 4) >> 1) * 2;
    edx = *(A18 + 0x10);
    *(ebp - 0x10) = *(edx + Ac * 2);
    *(ebp - 0xc) = *(edx + Ac * 2 + 4);
    *(ebp - 0x60) = !( *(ebp - 4) & 1) ? ~( *(ebp - 0xe)) : *(ebp - 0xe);
    *(ebp - 0x5c) = *(ebp - 0xd);
    *(ebp - 0x58) = *(ebp - 0xc);
    Ac = *(A18 + 0x14) - *(A18 + 0x18);
    if(Ac < 0) {
        Ac = ~Ac;
        ecx = Ac;
        *(ebp - 0x30) = *(ebp - 0x30) >> cl;
        ecx = Ac;
        *(ebp - 0x2c) = *(ebp - 0x2c) >> cl;
        ecx = Ac;
        *(ebp - 0x28) = *(ebp - 0x28) >> cl;
        ecx = Ac;
        *(ebp - 0x78) = *(ebp - 0x78) >> cl;
        ecx = Ac;
        *(ebp - 0x74) = *(ebp - 0x74) >> cl;
        ecx = Ac;
        *(ebp - 0x70) = *(ebp - 0x70) >> cl;
        ecx = Ac;
        *(ebp - 0x6c) = *(ebp - 0x6c) >> cl;
        ecx = Ac;
        *(ebp - 0x68) = *(ebp - 0x68) >> cl;
        ecx = Ac;
        *(ebp - 0x64) = *(ebp - 0x64) >> cl;
        ecx = Ac;
        *(ebp - 0x60) = *(ebp - 0x60) >> cl;
        ecx = Ac;
        *(ebp - 0x5c) = *(ebp - 0x5c) >> cl;
        *(ebp - 0x58) = *(ebp - 0x58) >> Ac;
    } else {
        ecx = Ac;
        *(ebp - 0x30) = *(ebp - 0x30) << cl;
        ecx = Ac;
        *(ebp - 0x2c) = *(ebp - 0x2c) << cl;
        ecx = Ac;
        *(ebp - 0x28) = *(ebp - 0x28) << cl;
        ecx = Ac;
        *(ebp - 0x78) = *(ebp - 0x78) << cl;
        ecx = Ac;
        *(ebp - 0x74) = *(ebp - 0x74) << cl;
        ecx = Ac;
        *(ebp - 0x70) = *(ebp - 0x70) << cl;
        ecx = Ac;
        *(ebp - 0x6c) = *(ebp - 0x6c) << cl;
        ecx = Ac;
        *(ebp - 0x68) = *(ebp - 0x68) << cl;
        ecx = Ac;
        *(ebp - 0x64) = *(ebp - 0x64) << cl;
        ecx = Ac;
        *(ebp - 0x60) = *(ebp - 0x60) << cl;
        ecx = Ac;
        *(ebp - 0x5c) = *(ebp - 0x5c) << cl;
        *(ebp - 0x58) = *(ebp - 0x58) << Ac;
    }
    Ac = ~( *(ebp - 0x30));
    *(ebp - 0x78) = *(ebp - 0x78) + Ac;
    edx = ~( *(ebp - 0x2c));
    *(ebp - 0x74) = *(ebp - 0x74) + edx;
    ecx = ~( *(ebp - 0x28));
    *(ebp - 0x70) = *(ebp - 0x70) + ecx;
    ebx = ~( *(ebp - 0x30));
    *(ebp - 0x6c) = *(ebp - 0x6c) + Ac;
    ebx = ~( *(ebp - 0x2c));
    *(ebp - 0x68) = *(ebp - 0x68) + edx;
    ebx = ~( *(ebp - 0x28));
    *(ebp - 0x64) = *(ebp - 0x64) + ecx;
    ebx = ~( *(ebp - 0x30));
    *(ebp - 0x60) = *(ebp - 0x60) + Ac;
    Ac = ~( *(ebp - 0x2c));
    *(ebp - 0x5c) = *(ebp - 0x5c) + edx;
    Ac = ~( *(ebp - 0x28));
    *(ebp - 0x58) = *(ebp - 0x58) + ecx;
    *(ebp - 0x30) = *(ebp - 0x30) - *A18;
    *(ebp - 0x2c) = *(ebp - 0x2c) - *(A18 + 4);
    *(ebp - 0x28) = *(ebp - 0x28) - *(A18 + 8);
    *(ebp - 0x14) = L0045122F(ebp - 0x30);
    Ac = A10;
    *(ebp - 0x20) = *(Ac + 0x138);
    *(ebp - 0x1c) = *(Ac + 0x13c);
    L0044EC90(ebp - 0x20, ~( *(A18 + 0x18)));
    if(*(ebp - 0x14) - *(ebp - 0x20) >= A14) {
        *A8 = -1;
        M006355c4 = 0;
        Ac = L0046250C(Ac + 6);
    } else {
        Ac = A10;
        *(ebp - 0x20) = *(Ac + 0x140);
        *(ebp - 0x1c) = *(Ac + 0x144);
        L0044EC90(ebp - 0x20, ~( *(A18 + 0x18)));
        if(*(ebp - 0x14) - *(ebp - 0x20) <= A14) {
            *A8 = 0;
            M006355c4 = 1;
            Ac = L0046250C(Ac + 6);
        } else {
            Ac = *(ebp - 0x30);
            if(Ac != 0) {
                *(ebp + -132) = Ac;
                *(ebp - 0x80) = *(ebp - 0x2c);
                *(ebp - 0x7c) = 0;
                edi = L0045122F(ebp + -132);
                ebx = *(ebp + -132);
                if(ebx < 0) {
                    ebx = L004537CD( ~ebx, edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                    ebx = ~ebx;
                } else {
                    ebx = L004537CD( *(ebp + -132), edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                }
                esi = *(ebp - 0x80);
                if(esi < 0) {
                    esi = L004537CD( ~esi, edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                    esi = ~esi;
                } else {
                    esi = L004537CD( *(ebp - 0x80), edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                }
                *(ebp - 0x54) = esi;
                *(ebp - 0x50) = ebx;
                *(ebp - 0x4c) = 0;
                *(ebp - 0x48) = ~ebx;
                *(ebp - 0x44) = esi;
                *(ebp - 0x40) = 0;
                *(ebp - 0x3c) = 0;
                *(ebp - 0x38) = 0;
                *(ebp - 0x34) = 2147483647;
                *(ebp - 0x2c) = edi;
            } else {
                *(ebp - 0x54) = 2147483647;
                *(ebp - 0x50) = 0;
                *(ebp - 0x4c) = 0;
                *(ebp - 0x48) = 0;
                *(ebp - 0x44) = 2147483647;
                *(ebp - 0x40) = 0;
                *(ebp - 0x3c) = 0;
                *(ebp - 0x38) = 0;
                *(ebp - 0x34) = 2147483647;
            }
            Ac = *(ebp - 0x2c);
            if(Ac != 0) {
                *(ebp + -144) = 0;
                *(ebp + -140) = Ac;
                *(ebp + -136) = *(ebp - 0x28);
                edi = L0045122F(ebp + -144);
                ebx = *(ebp + -140);
                if(ebx < 0) {
                    ebx = L004537CD( ~ebx, edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                    ebx = ~ebx;
                } else {
                    ebx = L004537CD( *(ebp + -140), edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                }
                esi = *(ebp + -136);
                if(esi < 0) {
                    esi = L004537CD( ~esi, edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                    esi = ~esi;
                } else {
                    esi = L004537CD( *(ebp + -136), edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                }
                *(ebp - 0x4c) = L004537B0( *(ebp - 0x50), ebx);
                *(ebp - 0x50) = L004537B0( *(ebp - 0x50), esi);
                *(ebp - 0x40) = L004537B0( *(ebp - 0x44), ebx);
                *(ebp - 0x44) = L004537B0( *(ebp - 0x44), esi);
                *(ebp - 0x38) = ~ebx;
                *(ebp - 0x34) = esi;
            }
            *(ebp - 0x30) = 0;
            *(ebp - 0x2c) = 0;
            *(ebp - 0x28) = *(ebp - 0x14);
            L0045A7A8(ebp - 0x78, ebp - 0x78, ebp - 0x54);
            L0045A7A8(ebp - 0x6c, ebp - 0x6c, ebp - 0x54);
            L0045A7A8(ebp - 0x60, ebp - 0x60, ebp - 0x54);
            Ac = L0046D648(ebp - 0x18, 2000000000 >> *(A18 + 0x18), A10, 0, Ac + 6, ebp - 0x30, ebp - 0x78, *(ebp - 8), 0, 0, 0, 1);
            Ac = 0;
            if(A14 >> 0x10 <= *(ebp - 0x18)) {
                Ac = -1;
            }
            *A8 = Ac;
            Ac = *(A18 + 0x18);
            ecx = Ac;
            if(2000000000 >> cl > *(ebp - 0x18)) {
                M006355b4 = *(ebp - 0x18);
                M006355b8 = *(ebp - 0x18) >> 0x1f;
                L0044EC90(6510004, Ac);
            }
            M006355bc = M006355b4;
            M006355c0 = M006355b8;
            if(*A8 == 0) {
                M006355b4 = 0;
                M006355b8 = 0;
                M006355c4 = 1;
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00428DEA - 0x00428DEB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00428DEA()
{



}

/*    Procedure: 0x00428DEC - 0x00429078
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00428550()
 *        L00428628()
 */

L00428DEC()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    bl = *esi;
    esi = esi + 1;
    if(bl != 0) {
        do {
            eax = *esi & 0xff;
            *(ebp - 4) = eax;
            esi = esi + 1;
            if(!(bl & 0x20)) {
                al = *esi;
                esi = esi + 1;
                eax = eax & 0xff;
                edx = *( *(ebp + 0x14) + eax * 2 + 0x9c) & 65535;
                al = *esi;
                esi = esi + 1;
                ecx = al & 0x1f;
                edx = edx >> cl;
                edx = edx ^ al >> 7;
                if(!(dl & 1)) {
                    goto L00428e45;
                }
            }
            if(eax = (ebx & 0xc0) - 1) {
                edi = *esi & 0xff;
                esi = esi + 1;
                if(edi == 0xff) {
                    goto L00428f03;
                }
                if(edi != 0) {
                    do {
                        if(L0042907C( *(ebp + 0x18), edi, *(ebp + 0xc)) != 0) {
                            goto L00428f52;
                        }
                        esi = esi + 1;
                        edi = *(esi - 1) & 0xff;
                    } while(edi != 0);
                    goto L0042905f;
L00428f03:
                    esi = L004287E4(ebp - 8, esi, *(ebp + 0x14), *(ebp + 0x18), *(ebp + 0xc));
                    if(*(ebp - 8) == 0) {
                        goto L00428f0e;
                    }
                    M006355a9 = M006355a9 | *(ebp - 4) & 0x7f;
                }
            } else {
                if(eax = eax - 0x3f) {
                    do {
                        edi = *esi & 0xff;
                        esi = esi + 1;
                        if(edi == 0) {
                            goto L00428f80;
                        }
                    } while(L0042907C( *(ebp + 0x18), edi, *(ebp + 0xc)) != 0);
                    do {
                        al = *esi;
                        esi = esi + 1;
                    } while(al != 0);
                } else {
                    if(!(eax = eax - 0x40)) {
                        goto L00428ed0;
                    }
                    edi = ( *esi & 0xff) << 8;
                    esi = esi + 1;
                    eax = *esi & 0xff;
                    edi = edi | eax;
                    esi = esi + 1;
                    dl = *esi;
                    esi = esi + 1;
                    al = *esi;
                    esi = esi + 1;
                    eax = L00428628( *(ebp + 8), *(ebp + 0xc), edi, eax, edx, *(ebp + 0x18), *(ebp + 0x14));
                    edx = *(ebp + 8);
                    dl = *edx;
                    M006355ad = M006355ad | dl;
                    if(eax < 0) {
                        goto L00428ff7;
                    }
                    if(eax <= 0) {
                        M006355a9 = M006355a9 | *(ebp - 4);
                        if(*(ebp - 4) & 0x80) {
                            goto L0042905f;
                        } else {
                            goto L0042901d;
                        }
L00428ed0:
                        if(eax = eax - 0x40) {
                            do {
                                edi = *esi & 0xff;
                                esi = esi + 1;
                                if(edi == 0) {
                                    M006355a9 = M006355a9 | *(ebp - 4);
                                    if(!( *(ebp - 4) & 0x80)) {
                                        goto L0042903d;
                                    }
                                }
                            } while(L0042907C( *(ebp + 0x18), edi, *(ebp + 0xc)) == 0);
                            do {
                                bl = *esi;
                                esi = esi + 1;
                            } while(bl != 0);
                        } else {
                            goto L0042905f;
L00428e45:
                            if(!(ebx = (ebx & 0xc0) - 1)) {
                                goto L00428e4a;
                            }
                            edi = *esi & 0xff;
                            esi = esi + 1;
                            if(edi == 0xff) {
                                goto L00428e74;
                            }
                            if(edi != 0) {
                                do {
                                    edi = *esi & 0xff;
                                    esi = esi + 1;
                                } while(edi != 0);
                                goto L0042905f;
L00428e74:
                                esi = L0046250C(esi + 6);
                                goto L0042905f;
L00428e4a:
                                if(ebx = ebx - 0x3f) {
                                    do {
                                        edi = *esi & 0xff;
                                        esi = esi + 1;
                                    } while(edi != 0);
                                } else {
                                    if(ebx = ebx - 0x40) {
                                        esi = esi + 4;
                                    } else {
                                        if(ebx = ebx - 0x40) {
                                            do {
                                                edi = *esi & 0xff;
                                                esi = esi + 1;
                                            } while(edi != 0);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
L0042905f:
            bl = *esi;
            esi = esi + 1;
        } while(bl != 0);
        goto L0042906a;
L00428f0e:
        M006355a9 = M006355a9 | *(ebp - 4);
        *( *(ebp + 8)) = bl;
        eax = 0;
        goto L00429072;
L00428f52:
        M006355a9 = M006355a9 | *(ebp - 4) & 0x7f;
        eax = *(ebp + 8);
        *eax = bl;
        eax = eax | -1;
        goto L00429072;
L00428f80:
        M006355a9 = M006355a9 | *(ebp - 4) & 0x7f;
        eax = *(ebp + 8);
        *eax = bl;
        eax = eax | -1;
        goto L00429072;
L00428ff7:
        M006355a9 = M006355a9 | *(ebp - 4) & 0x7f;
        eax = *(ebp + 8);
        *eax = bl;
        eax = eax | -1;
        goto L00429072;
L0042901d:
        *( *(ebp + 8)) = bl;
        eax = 0;
        goto L00429072;
L0042903d:
        *( *(ebp + 8)) = bl;
        eax = 0;
    } else {
L0042906a:
        eax = *(ebp + 8);
        *eax = 0;
        al = 1;
    }
L00429072:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00429079 - 0x0042907B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00429079()
{



}

/*    Procedure: 0x0042907C - 0x004291EE
 *    Argument size: 12
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L00428DEC()
 */

L0042907C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff3;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    edx = A10;
    ecx = (Ac >> 1) + (Ac >> 1) * 2;
    ebx = *(edx + 0xc);
    Vfffffff8 = *(ebx + ecx * 2 - 6);
    Vfffffffc = *(ebx + ecx * 2 - 2);
    bl = Vfffffff8;
    ecx = ((bl & 0xff) >> 1) + ((bl & 0xff) >> 1) * 2;
    esi = *(edx + 0x10);
    Vfffffff0 = *(esi + ecx * 2);
    Vfffffff4 = *(esi + ecx * 2 + 4);
    if(!(Ac & 1)) {
        Vffffffe4 = ~Vfffffffa << 8;
        Vffffffe8 = Vfffffffb << 8;
        Vffffffec = Vfffffffc << 8;
        if(!(Vfffffff8 & 0xff & 1)) {
            Vfffffff2 = ~Vfffffff2;
        }
    } else {
        Vffffffe4 = Vfffffffa << 8;
        Vffffffe8 = Vfffffffb << 8;
        Vffffffec = Vfffffffc << 8;
        if(!(bl & 1)) {
            Vfffffff2 = ~Vfffffff2;
        }
    }
    eax = *(edx + 0x14) - *(edx + 0x18);
    if(eax < 0) {
        eax = ~eax;
        ecx = eax;
        Vffffffd8 = Vfffffff2 >> cl;
        ecx = eax;
        Vffffffdc = Vfffffff3 >> cl;
        ecx = eax;
        Vffffffe0 = Vfffffff4 >> cl;
    } else {
        ecx = eax;
        Vffffffd8 = Vfffffff2 << cl;
        ecx = eax;
        Vffffffdc = Vfffffff3 << cl;
        ecx = eax;
        Vffffffe0 = Vfffffff4 << cl;
    }
    Vffffffd8 = Vffffffd8 - *edx;
    Vffffffdc = Vffffffdc - *(edx + 4);
    Vffffffe0 = Vffffffe0 - *(edx + 8);
    ebx = L004765BC(Vffffffd8);
    ebx = ebx | L004765BC(Vffffffdc);
    eax = L00459CEC(ebx | L004765BC(Vffffffe0)) - 0xd;
    if(eax < 0) {
        eax = 0;
    }
    ecx = eax;
    edx = Vffffffd8 >> cl;
    ecx = eax;
    ebx = Vffffffdc >> cl;
    ecx = eax;
    ebx = Vffffffe0 >> cl;
    ecx = eax;
    eax = A8 >> cl;
    ~(Vffffffe4 * Vffffffe4 + Vffffffe8 * Vffffffe8 + Vffffffec * Vffffffec) + ~(Vffffffe4 * Vffffffe4 + Vffffffe8 * Vffffffe8 + Vffffffec * Vffffffec) :: eax;
    asm("setnl al");
    return eax & 1;
}

/*    Procedure: 0x004291EF - 0x004291EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004291EF()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004291F0 - 0x0042929A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042929B()
 */

L004291F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*A8 >= 0x9fb) {
        *Ac = 2;
        *A8 = 0x9fb;
        return;
    }
    if(*A8 >= 0x511) {
        *Ac = 3;
        *A8 = 0x511;
        return;
    }
    if(*A8 >= 0x28b) {
        *Ac = 4;
        *A8 = 0x28b;
        return;
    }
    if(*A8 >= 0x146) {
        *Ac = 5;
        *A8 = 0x146;
        return;
    }
    if(*A8 >= 0xa3) {
        *Ac = 6;
        *A8 = 0xa3;
        return;
    }
    if(*A8 >= 0x52) {
        *Ac = 7;
        *A8 = 0x52;
        return;
    }
    if(*A8 >= 0x29) {
        *Ac = 8;
        *A8 = 0x29;
        return;
    }
    *Ac = 9;
    *A8 = 0x14;
}

/*    Procedure: 0x0042929B - 0x004294DE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042929B()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0x14);
    esi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    edi = ebp - 4;
    edx = *(ebx + 0x82);
    if(edx >= 0x35) {
        esi = esi >> 1;
        if(edx >= 0x3b) {
            esi = esi >> 1;
        }
    }
    if(*(ebp + 0x10) != 0) {
        if(eax >= 32767) {
            eax = 32767;
        }
        edx = *(ebx + 0x110);
        edx = eax * eax >> 0x10;
        *(ebx + 0xb0) = *(ebx + 0xb0) + dx;
        edx = *(ebx + 0x112);
        edx = eax * eax >> 0x10;
        *(ebx + 0xb2) = *(ebx + 0xb2) + dx;
        edx = *(ebx + 0x114);
        *(ebx + 0xb4) = *(ebx + 0xb4) + (eax * eax >> 0x10);
    }
    if(esi >= 32767) {
        esi = 32767;
    }
    *edi = *(ebx + 0xb0);
    if(*edi >= 0) {
        if(esi < *edi) {
            *edi = esi;
        }
        if(*edi >= 0xf) {
            L004291F0(edi, ebp - 8);
            *(ebx + 0xb0) = *(ebx + 0xb0) - *edi;
            L0042B1C4(ebx, ebx + 0x18, ebx + 0xc, 0x70, *(ebp - 8));
        }
    } else {
        *edi = ~( *edi);
        if(esi < *edi) {
            *edi = esi;
        }
        if(*edi >= 0xf) {
            L004291F0(edi, ebp - 8);
            *(ebx + 0xb0) = *(ebx + 0xb0) + *edi;
            L0042B1C4(ebx, ebx + 0x18, ebx + 0xc, 0x6d, *(ebp - 8));
        }
    }
    *edi = *(ebx + 0xb2);
    if(*edi >= 0) {
        if(esi < *edi) {
            *edi = esi;
        }
        if(*edi >= 0xf) {
            L004291F0(edi, ebp - 8);
            *(ebx + 0xb2) = *(ebx + 0xb2) - *edi;
            L0042B1C4(ebx, ebx + 0xc, ebx, 0x70, *(ebp - 8));
        }
    } else {
        *edi = ~( *edi);
        if(esi < *edi) {
            *edi = esi;
        }
        if(*edi >= 0xf) {
            L004291F0(edi, ebp - 8);
            *(ebx + 0xb2) = *(ebx + 0xb2) + *edi;
            L0042B1C4(ebx, ebx + 0xc, ebx, 0x6d, *(ebp - 8));
        }
    }
    eax = *(ebx + 0xb4);
    *edi = eax;
    if(*edi >= 0) {
        if(esi < *edi) {
            *edi = esi;
        }
        if(*edi >= 0xf) {
            L004291F0(edi, ebp - 8);
            *(ebx + 0xb4) = *(ebx + 0xb4) - *edi;
            L0042B1C4(ebx, ebx, ebx + 0x18, 0x70, *(ebp - 8));
            eax = *(ebx + 0x86) & 0xff;
            if(eax == M00644c64) {
                M00644db4 = M00644db4 - *edi;
            }
        }
    } else {
        *edi = ~( *edi);
        if(esi < *edi) {
            *edi = esi;
        }
        if(*edi >= 0xf) {
            L004291F0(edi, ebp - 8);
            *(ebx + 0xb4) = *(ebx + 0xb4) + *edi;
            L0042B1C4(ebx, ebx, ebx + 0x18, 0x6d, *(ebp - 8));
            eax = *(ebx + 0x86) & 0xff;
            if(eax == M00644c64) {
                M00644db4 = M00644db4 + *edi;
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004294DF - 0x0042950C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004294DF(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0xb6) >> 3;
    *(A8 + 0x114) = dx;
    *(A8 + 0x110) = ~( *(A8 + 0xb8) >> 2);
}

/*    Procedure: 0x0042950D - 0x0042960B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042950D(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    edx = *(A8 + 0x108);
    edx = ( *(A8 + 0xc) >> 0x10) * ( *(A8 + 0xc) >> 0x10);
    ecx = *(A8 + 0x10a);
    edx = edx + ( *(A8 + 0x10) >> 0x10) * ( *(A8 + 0x10) >> 0x10);
    ecx = *(A8 + 0x10c);
    edx = ~(edx + ( *(A8 + 0x14) >> 0x10) * ( *(A8 + 0x14) >> 0x10) + edx + ( *(A8 + 0x14) >> 0x10) * ( *(A8 + 0x14) >> 0x10)) >> 0x10;
    *(A8 + 0x110) = dx;
    edx = *(A8 + 0x108);
    edx = ( *A8 >> 0x10) * ( *A8 >> 0x10);
    ecx = *(A8 + 0x10a);
    edx = edx + ( *(A8 + 4) >> 0x10) * ( *(A8 + 4) >> 0x10);
    ecx = *(A8 + 0x10c);
    edx = edx + ( *(A8 + 8) >> 0x10) * ( *(A8 + 8) >> 0x10) + edx + ( *(A8 + 8) >> 0x10) * ( *(A8 + 8) >> 0x10) >> 0x10;
    *(A8 + 0x114) = dx;
    *(A8 + 0x112) = 0;
    edx = *(A8 + 0x108);
    edx = ( *(A8 + 0x18) >> 0x10) * ( *(A8 + 0x18) >> 0x10);
    ecx = *(A8 + 0x10a);
    edx = edx + ( *(A8 + 0x1c) >> 0x10) * ( *(A8 + 0x1c) >> 0x10);
    ecx = *(A8 + 0x10c);
    if(edx + ( *(A8 + 0x20) >> 0x10) * ( *(A8 + 0x20) >> 0x10) < 0) {
        edx = 16384;
        if(*(A8 + 0x110) < 0) {
            edx = ~L00004000;
        }
        *(A8 + 0x110) = dx;
        edx = 16384;
        if(*(A8 + 0x114) < 0) {
            edx = ~L00004000;
        }
        *(A8 + 0x114) = dx;
    }
}

/*    Procedure: 0x0042960C - 0x00429705
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042960C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    edx = *(A8 + 0x108);
    edx = ( *(A8 + 0xc) >> 0x10) * ( *(A8 + 0xc) >> 0x10);
    ecx = *(A8 + 0x10a);
    edx = edx + ( *(A8 + 0x10) >> 0x10) * ( *(A8 + 0x10) >> 0x10);
    ecx = *(A8 + 0x10c);
    edx = edx + ( *(A8 + 0x14) >> 0x10) * ( *(A8 + 0x14) >> 0x10) + edx + ( *(A8 + 0x14) >> 0x10) * ( *(A8 + 0x14) >> 0x10) >> 0x10;
    *(A8 + 0x110) = dx;
    edx = *(A8 + 0x108);
    edx = ( *A8 >> 0x10) * ( *A8 >> 0x10);
    ecx = *(A8 + 0x10a);
    edx = edx + ( *(A8 + 4) >> 0x10) * ( *(A8 + 4) >> 0x10);
    ecx = *(A8 + 0x10c);
    edx = ~(edx + ( *(A8 + 8) >> 0x10) * ( *(A8 + 8) >> 0x10) + edx + ( *(A8 + 8) >> 0x10) * ( *(A8 + 8) >> 0x10)) >> 0x10;
    *(A8 + 0x114) = dx;
    *(A8 + 0x112) = 0;
    edx = *(A8 + 0x108);
    edx = ( *(A8 + 0x18) >> 0x10) * ( *(A8 + 0x18) >> 0x10);
    ecx = *(A8 + 0x10a);
    edx = edx + ( *(A8 + 0x1c) >> 0x10) * ( *(A8 + 0x1c) >> 0x10);
    ecx = *(A8 + 0x10c);
    if(edx + ( *(A8 + 0x20) >> 0x10) * ( *(A8 + 0x20) >> 0x10) >= 0) {
        edx = *(A8 + 0x110) >> 8 ^ 16383;
        *(A8 + 0x110) = dx;
        *(A8 + 0x114) = *(A8 + 0x114) >> 8 ^ 16383;
    }
}

/*    Procedure: 0x00429706 - 0x00429823
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00429706(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    edx = Ac;
    if(*(A8 + 0x56) == *(edx + 0x86)) {
        if(*(A8 + 0x57) == 0) {
            goto L00429769;
        }
        dx = ~( *(A8 + 4) >> 0x11);
        *(A8 + 0x112) = dx;
        if(A10 != 0) {
            edx = *(A8 + 0x14) >> 0x11;
            *(A8 + 0x110) = dx;
            *(A8 + 0x114) = *(A8 + 0x18) >> 0x11;
        }
    } else {
        if(*(A8 + 0x56) == *(edx + 0x56)) {
L00429769:
            ecx = *A8 >> 0x10;
            ecx = ( *(edx + 0xc) >> 0x10) * ( *(edx + 0xc) >> 0x10);
            ebx = *(A8 + 4) >> 0x10;
            ecx = ecx + ( *(edx + 0x10) >> 0x10) * ( *(edx + 0x10) >> 0x10);
            ebx = *(A8 + 8) >> 0x10;
            ecx = ~(ecx + ( *(edx + 0x14) >> 0x10) * ( *(edx + 0x14) >> 0x10)) >> 0x10;
            *(A8 + 0x112) = cx;
            if(A10 != 0) {
                ecx = *(A8 + 0xc) >> 0x10;
                ecx = ( *(edx + 0x18) >> 0x10) * ( *(edx + 0x18) >> 0x10);
                ebx = *(A8 + 0x10) >> 0x10;
                ecx = ecx + ( *(edx + 0x1c) >> 0x10) * ( *(edx + 0x1c) >> 0x10);
                ebx = *(A8 + 0x14) >> 0x10;
                ecx = ecx + ( *(edx + 0x20) >> 0x10) * ( *(edx + 0x20) >> 0x10) >> 0x10;
                *(A8 + 0x110) = cx;
                ecx = *(A8 + 0x18) >> 0x10;
                ecx = ( *edx >> 0x10) * ( *edx >> 0x10);
                ebx = *(A8 + 0x1c) >> 0x10;
                ecx = ecx + ( *(edx + 4) >> 0x10) * ( *(edx + 4) >> 0x10);
                ebx = *(A8 + 0x20) >> 0x10;
                *(A8 + 0x114) = ecx + ( *(edx + 8) >> 0x10) * ( *(edx + 8) >> 0x10) >> 0x10;
            }
        }
    }
}

/*    Procedure: 0x00429824 - 0x0042987B
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L0042AAA8()
 */

L00429824(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;



    *L005030d8( & Vffffffe8, A8);
    *L005030dc( & Vffffffe8, Ac, A8);
    *A14 = L00459E08( & Vffffffe8, 0xd);
    *A10 = Vffffffe8;
    *(A10 + 4) = Vfffffff0;
    eax = Vfffffff8;
    *(A10 + 8) = eax;
    return *(A10 + 8);
}

/*    Procedure: 0x0042987C - 0x004298A4
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0042987C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *L005030d8(A10, A8);
    return *L005030dc(A10, Ac, A8);
}

/*    Procedure: 0x004298A5 - 0x004298A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004298A5()
{



}

/*    Procedure: 0x004298A8 - 0x00429950
 *    Argument size: 20
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00429B91()
 *        L0042ADEB()
 */

L004298A8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;



    *L005030d8( & Vffffffe8, A8);
    L00429954(A8, Ac, & Vffffffe8);
    if(*(A8 + 0x57) != 0) {
        if(*(Ac + 0x57) != 0) {
            goto L00429926;
        }
        *A14 = L00459E08( & Vffffffe8, 0xd);
        *A10 = Vffffffe8;
        *(A10 + 4) = Vfffffff0;
        *(A10 + 8) = Vfffffff8;
        eax = L0045A968(A10, A10, *L00501b94( *(A8 + 0x56) & 0xff, A18));
    } else {
L00429926:
        *A14 = L00459E08( & Vffffffe8, 0xd);
        *A10 = Vffffffe8;
        *(A10 + 4) = Vfffffff0;
        eax = Vfffffff8;
        *(A10 + 8) = eax;
    }
}

/*    Procedure: 0x00429951 - 0x00429953
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00429951()
{



}

/*    Procedure: 0x00429954 - 0x004299E0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004298A8()
 *        L00429C28()
 *        L0042ECAE()
 */

L00429954(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    *L005030dc(A10, Ac, A8);
    eax = *(A8 + 0x102) << 0xa;
    edx = eax >> 0x1f;
    ecx = *A10;
    eax = ecx + eax;
    if(ecx > eax) {
        *(A10 + 4) = *(A10 + 4) + 1;
    }
    *A10 = eax;
    *(A10 + 4) = *(A10 + 4) + edx;
    eax = *(A8 + 0x104) << 0xa;
    edx = eax >> 0x1f;
    ecx = *(A10 + 8);
    eax = ecx + eax;
    if(ecx > eax) {
        *(A10 + 0xc) = *(A10 + 0xc) + 1;
    }
    *(A10 + 8) = eax;
    *(A10 + 0xc) = *(A10 + 0xc) + edx;
    eax = *(A8 + 0x106) << 0xa;
    edx = eax >> 0x1f;
    ecx = *(A10 + 0x10);
    eax = ecx + eax;
    if(ecx > eax) {
        *(A10 + 0x14) = *(A10 + 0x14) + 1;
    }
    *(A10 + 0x10) = eax;
    *(A10 + 0x14) = *(A10 + 0x14) + edx;
}

/*    Procedure: 0x004299E1 - 0x004299E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004299E1()
{



}

/*    Procedure: 0x004299E4 - 0x00429A5A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00429B91()
 *        L00429C28()
 *        L0042ADEB()
 */

L004299E4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    al = *(A8 + 0x56);
    ecx = al;
    if(ecx != ( *(Ac + 0x86) & 0xff)) {
        eax = al;
        if(eax != ( *(Ac + 0x56) & 0xff)) {
            goto L00429a36;
        }
        L00429A5C(Ac, A10);
        *A10 = *A10 - *(A8 + 0x8c);
        *(A10 + 4) = *(A10 + 4) - *(A8 + 0x90);
        eax = *(A8 + 0x94);
        *(A10 + 8) = *(A10 + 8) - eax;
    } else {
L00429a36:
        *A10 = ~( *(A8 + 0x8c));
        *(A10 + 4) = ~( *(A8 + 0x90));
        eax = ~( *(A8 + 0x94));
        *(A10 + 8) = eax;
    }
}

/*    Procedure: 0x00429A5B - 0x00429A5B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00429A5B()
{



}

/*    Procedure: 0x00429A5C - 0x00429B90
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004299E4()
 *        L0042A968()
 *        L0042AA00()
 */

L00429A5C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -384;
    (save)A8;
    (save)Ac;
    if(*(A8 + 0x87) != 1) {
        *Ac = *(A8 + 0x8c);
        *(Ac + 4) = *(A8 + 0x90);
        eax = *(A8 + 0x94);
        *(Ac + 8) = eax;
    } else {
        if(!( *(A8 + 0x14c) & 0x20)) {
            *Ac = 0;
            *(Ac + 4) = 0;
            eax = 0;
            *(Ac + 8) = 0;
        } else {
            *L00501b98(ebp + -348, A8, 0);
            *(ebp - 8) = *(ebp + -180);
            *(ebp - 4) = *(ebp + -176);
            *(ebp + -372) = *(A8 + 0x3e);
            *(ebp + -368) = *(A8 + 0x46);
            *(ebp + -364) = *(A8 + 0x4e);
            edx = *(ebp - 8);
            eax = edx + 535552;
            if(edx > eax) {
                *(ebp - 4) = *(ebp - 4) + 1;
            }
            edx = eax;
            *(ebp - 8) = edx;
            *(ebp + -384) = *(ebp - 8);
            *(ebp + -380) = *(ebp - 4);
            *(ebp + -376) = ebp + -348;
            L00437250(ebp + -384);
            *(ebp + -372) = *(ebp + -372) - *(A8 + 0x3e);
            *(ebp + -368) = *(ebp + -368) - *(A8 + 0x46);
            *(ebp + -364) = *(ebp + -364) - *(A8 + 0x4e);
            *(ebp + -372) = ~( *(ebp + -372));
            *(ebp + -368) = ~( *(ebp + -368));
            *(ebp + -364) = ~( *(ebp + -364));
            *(ebp + -372) = *(ebp + -372) >> 0xa;
            *(ebp + -368) = *(ebp + -368) >> 0xa;
            *(ebp + -364) = *(ebp + -364) >> 0xa;
            *Ac = *(ebp + -372);
            *(Ac + 4) = *(ebp + -368);
            eax = *(ebp + -364);
            *(Ac + 8) = eax;
        }
    }
    (restore)Ac;
    (restore)A8;
}

/*    Procedure: 0x00429B91 - 0x00429C26
 *    Argument size: 24
 *    Local size: 20
 *    Save regs size: 12
 */

L00429B91(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L004299E4(A8, Ac, A18);
    Vfffffffc = L0042B314(A18);
    L004298A8(A8, Ac, & Vffffffec, & Vfffffff8, A1c);
    *(A8 + 0x108) = Vffffffec;
    *(A8 + 0x10a) = Vfffffff0;
    *(A8 + 0x10c) = Vfffffff4;
    *(A8 + 0x10e) = Vfffffff8;
    return L00429C28(A8, Ac, A10, A14, A18, Vfffffffc, Vfffffff8, & Vffffffec, A1c);
}

/*    Procedure: 0x00429C27 - 0x00429C27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00429C27()
{



}

/*    Procedure: 0x00429C28 - 0x00429F81
 *    Argument size: 36
 *    Local size: 56
 *    Save regs size: 12
 *    Called by:
 *        L00429B91()
 *        L0042ADEB()
 */

L00429C28(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A20;
    Vfffffffc = eax;
    if(M00648aec != 0) {
        edx = A1c < 2 ? 2 : A1c;
        (save)edx;
        edx = eax;
        (restore)ecx;
        edx = edx - ecx;
        edx = edx - (M00648aec >> 2) + M00648aec;
        if(edx > 8) {
            goto L00429e0e;
        }
        *(A8 + 0x14d) = 0;
        *(Ac + 0x8b) = 0;
        if(edx >= 6 || (dx = *(A8 + 0x102) | *(A8 + 0x104) | *(A8 + 0x106))) {
            goto L00429e0e;
        }
        L0042AAA8(A8, A28);
        if(!( *(Ac + 0x14c) & 0x20)) {
            *(A8 + 0x56) = *(Ac + 0x56);
            *(A8 + 0x57) = *(Ac + 0x57);
        } else {
            if(!( *(Ac + 0x14c) & 0x10)) {
                *(A8 + 0x56) = *(Ac + 0x86);
                *(A8 + 0x57) = 0;
            }
        }
        L004299E4(A8, Ac, & Vffffffe0);
        *(A8 + 0x8c) = *(A8 + 0x8c) + Vffffffe0;
        *(A8 + 0x90) = *(A8 + 0x90) + Vffffffe4;
        *(A8 + 0x94) = *(A8 + 0x94) + Vffffffe8;
        *L005030d8( & Vffffffc8, A8);
        L00429954(A8, Ac, & Vffffffc8);
        L0044EB4E(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), Vffffffc8, Vffffffcc);
        L0044EB4E(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), Vffffffd0, Vffffffd4);
        L0044EB4E(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), Vffffffd8, Vffffffdc);
        *(A8 + 0x25) = 0;
        *(Ac + 0x8a) = 0;
        *(Ac + 0x8b) = 0;
        *A18 = 0;
        *(A18 + 4) = 0;
        *(A18 + 8) = 0;
        *(A8 + 0xf2) = 0;
        *(A8 + 0xf6) = 0;
        *(A8 + 0xfa) = 0;
        *(A8 + 0xec) = 0;
        *(A8 + 0xee) = 0;
        *(A8 + 0xf0) = 0;
        *(A8 + 0xb6) = 0;
        *(A8 + 0xb8) = 0;
        *(A8 + 0xba) = 0;
        eax = A14;
        *eax = 0;
    } else {
L00429e0e:
        Vfffffff8 = eax + A10 - 8;
        if(Vfffffff8 >= 0) {
            if(!(Vfffffff8 & 1)) {
                Vfffffff8 = (Vfffffff8 >> 1) + 1;
                *A24 = *A24 >> 1;
                *(A24 + 4) = *(A24 + 4) >> 1;
                *(A24 + 8) = *(A24 + 8) >> 1;
            } else {
                Vfffffff8 = Vfffffff8 >> 1;
            }
            ecx = *L00501670( *L00501674(A24) << 0x10);
            if(ecx != 0) {
                eax = *A24 << 0xf;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
                *A24 = eax;
                eax = *(A24 + 4) << 0xf;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
                *(A24 + 4) = eax;
                eax = *(A24 + 8) << 0xf;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                *(A24 + 8) = eax;
            }
        }
        (save)Vfffffff8 - 2;
        (restore)edx;
        eax = A1c - edx;
        if(eax >= 0) {
            ecx = eax;
            *A18 = *A18 + ( *A24 >> cl);
            ecx = eax;
            *(A18 + 4) = *(A18 + 4) + ( *(A24 + 4) >> cl);
            ecx = eax;
            *(A18 + 8) = *(A18 + 8) + ( *(A24 + 8) >> cl);
        } else {
            ecx = ~eax;
            *A18 = ( *A18 >> cl) + *A24;
            ecx = ~eax;
            *(A18 + 4) = ( *(A18 + 4) >> cl) + *(A24 + 4);
            ecx = ~eax;
            *(A18 + 8) = ( *(A18 + 8) >> cl) + *(A24 + 8);
            A1c = A1c - eax;
        }
        if(A1c > 0) {
            if(A1c > 0xc) {
                A1c = 0xc;
            }
            ecx = A1c;
            *(A8 + 0xf2) = *A18 << cl;
            ecx = A1c;
            *(A8 + 0xf6) = *(A18 + 4) << cl;
            *(A8 + 0xfa) = *(A18 + 8) << A1c;
        } else {
            *(A8 + 0xf2) = *A18;
            *(A8 + 0xf6) = *(A18 + 4);
            *(A8 + 0xfa) = *(A18 + 8);
        }
        L0045A968(A18, A18, A8);
        eax = A1c + 2;
        if(eax < 0) {
            edx = ~eax;
            ecx = edx;
            *A18 = *A18 >> cl;
            ecx = ~eax;
            ecx = edx;
            *(A18 + 4) = *(A18 + 4) >> cl;
            eax = ~eax;
            *(A18 + 8) = *(A18 + 8) >> edx;
        } else {
            if(eax > 0) {
                if(eax > 2) {
                    eax = 2;
                }
                ecx = eax;
                *A18 = *A18 << cl;
                ecx = eax;
                *(A18 + 4) = *(A18 + 4) << cl;
                *(A18 + 8) = *(A18 + 8) << eax;
            }
        }
        eax = A14;
        *eax = Vfffffffc;
    }
}

/*    Procedure: 0x00429F82 - 0x00429FA6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00429F82(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xb6) = 0;
    *(A8 + 0xb8) = 0;
    *(A8 + 0xba) = 0;
}

/*    Procedure: 0x00429FA7 - 0x00429FA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00429FA7()
{



}

/*    Procedure: 0x00429FA8 - 0x0042A05C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042FD2C()
 *        L0042FF20()
 */

L00429FA8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ecx = Ac;
    ebx = -32767;
    if(*ecx >= 0) {
        ebx = 32767;
    }
    *A10 = ebx;
    ebx = -32767;
    if(*(ecx + 4) >= 0) {
        ebx = 32767;
    }
    *(A10 + 4) = ebx;
    *(A10 + 8) = *(ecx + 8) << 3;
    ecx = *(A8 + 0xbc);
    ebx = *(A8 + 0xbe);
    if(ecx < *A10) {
        *A10 = ecx;
    }
    if(ebx > *A10) {
        *A10 = ebx;
    }
    ecx = *(A8 + 0xc0);
    ebx = *(A8 + 0xc2);
    if(ecx < *(A10 + 4)) {
        *(A10 + 4) = ecx;
    }
    if(ebx > *(A10 + 4)) {
        *(A10 + 4) = ebx;
    }
    ecx = *(A8 + 0xc4);
    ebx = *(A8 + 0xc6);
    if(ecx < *(A10 + 8)) {
        *(A10 + 8) = ecx;
    }
    if(ebx > *(A10 + 8)) {
        *(A10 + 8) = ebx;
    }
    *(A8 + 0xb6) = *A10;
    *(A8 + 0xb8) = *(A10 + 4);
    *(A8 + 0xba) = *(A10 + 8);
    return *(A8 + 0xba);
}

/*    Procedure: 0x0042A05D - 0x0042A122
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0042A05D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    edx = A10;
    ecx = Ac;
    *edx = *ecx;
    *(edx + 4) = *(ecx + 4);
    *(edx + 8) = *(ecx + 8);
    edx = *(A8 + 0xbc);
    ecx = *(A8 + 0xbe);
    if(edx < *Ac) {
        *A10 = edx;
    }
    if(ecx > *Ac) {
        *A10 = ecx;
    }
    edx = *(A8 + 0xc0);
    ecx = *(A8 + 0xc2);
    if(edx < *(Ac + 4)) {
        *(A10 + 4) = edx;
    }
    if(ecx > *(Ac + 4)) {
        *(A10 + 4) = ecx;
    }
    edx = *(A8 + 0xc4);
    ecx = *(A8 + 0xc6);
    if(edx < *(Ac + 8)) {
        *(A10 + 8) = edx;
    }
    if(ecx > *(Ac + 8)) {
        *(A10 + 8) = ecx;
    }
    *(A8 + 0xb6) = *A10;
    *(A8 + 0xb8) = *(A10 + 4);
    *(A8 + 0xba) = *(A10 + 8);
}

/*    Procedure: 0x0042A123 - 0x0042A123
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042A123()
{



}

/*    Procedure: 0x0042A124 - 0x0042A252
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0042F125()
 */

L0042A124(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    *(ebp - 4) = 2147483647;
    A10 = *(A8 + 0xbc);
    edi = *(A8 + 0xbe);
    edx = *Ac;
    if(A10 < edx) {
        *(ebp - 4) = L004537CD(A10, edx);
    }
    A10 = *Ac;
    if(edi > A10) {
        *(ebp - 4) = L004537CD( ~edi, ~A10);
    }
    A10 = *(A8 + 0xc0);
    edi = *(A8 + 0xc2);
    edx = *(Ac + 4);
    if(A10 < edx) {
        *(ebp - 4) = L004537CD(A10, edx);
    }
    A10 = *(Ac + 4);
    if(edi > A10) {
        *(ebp - 4) = L004537CD( ~edi, ~A10);
    }
    A10 = *(A8 + 0xc4);
    edi = *(A8 + 0xc6);
    edx = *(Ac + 8);
    if(A10 < edx) {
        *(ebp - 4) = L004537CD(A10, edx);
    }
    A10 = *(Ac + 8);
    if(edi > A10) {
        *(ebp - 4) = L004537CD( ~edi, ~A10);
    }
    A10 = L004537B0( *(ebp - 4), *Ac);
    *A10 = A10;
    A10 = L004537B0( *(ebp - 4), *(Ac + 4));
    *(A10 + 4) = A10;
    A10 = L004537B0( *(ebp - 4), *(Ac + 8));
    *(A10 + 8) = A10;
    *(A8 + 0xb6) = *A10;
    *(A8 + 0xb8) = *(A10 + 4);
    *(A8 + 0xba) = *(A10 + 8);
    return *(A8 + 0xba);
}

/*    Procedure: 0x0042A253 - 0x0042A573
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 */

L0042A253(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;



    edi = & Vfffffff4;
    edx = Ac >> 3;
    esi = esi | -1;
    if(edx > 32767) {
        esi = 0x10;
        do {
            edx = edx >> 1;
            esi = esi - 1;
        } while(edx > 32767);
    }
    *edi = 0;
    *(edi + 4) = 0;
    *(edi + 8) = 0;
    ecx = *(A8 + 0xb6);
    if(ecx != 0) {
        ebx = *A8 >> 0x10;
        ebx = edx * edx >> 0xf;
        *edi = ecx * ecx;
        ebx = *(A8 + 4) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 4) = ecx * ecx;
        ebx = *(A8 + 8) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 8) = ecx * ecx;
    }
    ecx = *(A8 + 0xb8);
    if(ecx != 0) {
        ebx = *(A8 + 0xc) >> 0x10;
        ebx = edx * edx >> 0xf;
        *edi = *edi + ecx * ecx;
        ebx = *(A8 + 0x10) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 4) = *(edi + 4) + ecx * ecx;
        ebx = *(A8 + 0x14) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 8) = *(edi + 8) + ecx * ecx;
    }
    ecx = *(A8 + 0xba);
    if(ecx != 0) {
        ebx = *(A8 + 0x18) >> 0x10;
        ebx = edx * edx >> 0xf;
        *edi = *edi + ecx * ecx;
        ebx = *(A8 + 0x1c) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 4) = *(edi + 4) + ecx * ecx;
        ebx = *(A8 + 0x20) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 8) = *(edi + 8) + ecx * ecx;
    }
    *edi = *edi << 1;
    *(edi + 4) = *(edi + 4) << 1;
    *(edi + 8) = *(edi + 8) << 1;
    if(esi < 0) {
        if(edx < 16404) {
            ecx = ( *(A8 + 0xec) & 65535) + *edi;
            dx = ecx & 65535;
            *(A8 + 0xec) = dx;
            *(A8 + 0x8c) = *(A8 + 0x8c) + (ecx >> 0x10);
            ecx = ( *(A8 + 0xee) & 65535) + *(edi + 4);
            dx = ecx & 65535;
            *(A8 + 0xee) = dx;
            *(A8 + 0x90) = *(A8 + 0x90) + (ecx >> 0x10);
            ecx = ( *(A8 + 0xf0) & 65535) + *(edi + 8);
            *(A8 + 0xf0) = ecx & 65535;
            *(A8 + 0x94) = *(A8 + 0x94) + (ecx >> 0x10);
        } else {
            ecx = ( *(A8 + 0xec) & 65535) + *edi;
            dx = ecx & 65535;
            *(A8 + 0xec) = dx;
            edx = *(A8 + 0xf2);
            ecx = ecx >> 0x10;
            if(edx >= 0) {
                if(edx < ecx) {
                    ecx = edx;
                }
                if(ecx < 0) {
                    ecx = 0;
                }
            }
            if(edx < 0) {
                if(edx > ecx) {
                    ecx = edx;
                }
                if(ecx > 0) {
                    ecx = 0;
                }
            }
            *(A8 + 0x8c) = *(A8 + 0x8c) + ecx;
            ecx = ( *(A8 + 0xee) & 65535) + *(edi + 4);
            dx = ecx & 65535;
            *(A8 + 0xee) = dx;
            edx = *(A8 + 0xf6);
            ecx = ecx >> 0x10;
            if(edx >= 0) {
                if(edx < ecx) {
                    ecx = edx;
                }
                if(ecx < 0) {
                    ecx = 0;
                }
            }
            if(edx < 0) {
                if(edx > ecx) {
                    ecx = edx;
                }
                if(ecx > 0) {
                    ecx = 0;
                }
            }
            *(A8 + 0x90) = *(A8 + 0x90) + ecx;
            ecx = ( *(A8 + 0xf0) & 65535) + *(edi + 8);
            *(A8 + 0xf0) = ecx & 65535;
            edx = *(A8 + 0xfa);
            ecx = ecx >> 0x10;
            if(edx >= 0) {
                if(edx < ecx) {
                    ecx = edx;
                }
                if(ecx < 0) {
                    ecx = 0;
                }
            }
            if(edx < 0) {
                if(edx > ecx) {
                    ecx = edx;
                }
                if(ecx > 0) {
                    ecx = 0;
                }
            }
            *(A8 + 0x94) = *(A8 + 0x94) + ecx;
        }
    } else {
        ecx = esi;
        *edi = *edi >> cl;
        ecx = esi;
        *(edi + 4) = *(edi + 4) >> cl;
        *(edi + 8) = *(edi + 8) >> esi;
        edx = *(A8 + 0xf2);
        if(edx >= 0) {
            if(edx < *edi) {
                *edi = edx;
            }
            if(*edi < 0) {
                *edi = 0;
            }
        }
        if(edx < 0) {
            if(edx > *edi) {
                *edi = edx;
            }
            if(*edi > 0) {
                *edi = 0;
            }
        }
        edx = *(A8 + 0xf6);
        if(edx >= 0) {
            if(edx < *(edi + 4)) {
                *(edi + 4) = edx;
            }
            if(*(edi + 4) < 0) {
                *(edi + 4) = 0;
            }
        }
        if(edx < 0) {
            if(edx > *(edi + 4)) {
                *(edi + 4) = edx;
            }
            if(*(edi + 4) > 0) {
                *(edi + 4) = 0;
            }
        }
        edx = *(A8 + 0xfa);
        if(edx >= 0) {
            if(edx < *(edi + 8)) {
                *(edi + 8) = edx;
            }
            if(*(edi + 8) < 0) {
                *(edi + 8) = 0;
            }
        }
        if(edx < 0) {
            if(edx > *(edi + 8)) {
                *(edi + 8) = edx;
            }
            if(*(edi + 8) > 0) {
                *(edi + 8) = 0;
            }
        }
        *(A8 + 0x8c) = *(A8 + 0x8c) + *edi;
        *(A8 + 0x90) = *(A8 + 0x90) + *(edi + 4);
        *(A8 + 0x94) = *(A8 + 0x94) + *(edi + 8);
    }
}

/*    Procedure: 0x0042A574 - 0x0042A717
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 */

L0042A574(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;



    edi = & Vfffffff4;
    edx = Ac >> 3;
    esi = esi | -1;
    if(edx > 32767) {
        esi = 0xf;
        do {
            edx = edx >> 1;
            esi = esi - 1;
        } while(edx > 32767);
    }
    *edi = 0;
    *(edi + 4) = 0;
    *(edi + 8) = 0;
    ecx = *(A8 + 0xb6);
    if(ecx != 0) {
        ebx = *A8 >> 0x10;
        ebx = edx * edx >> 0xf;
        *edi = ecx * ecx;
        ebx = *(A8 + 4) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 4) = ecx * ecx;
        ebx = *(A8 + 8) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 8) = ecx * ecx;
    }
    ecx = *(A8 + 0xb8);
    if(ecx != 0) {
        ebx = *(A8 + 0xc) >> 0x10;
        ebx = edx * edx >> 0xf;
        *edi = *edi + ecx * ecx;
        ebx = *(A8 + 0x10) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 4) = *(edi + 4) + ecx * ecx;
        ebx = *(A8 + 0x14) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 8) = *(edi + 8) + ecx * ecx;
    }
    ecx = *(A8 + 0xba);
    if(ecx != 0) {
        ebx = *(A8 + 0x18) >> 0x10;
        ebx = edx * edx >> 0xf;
        *edi = *edi + ecx * ecx;
        ebx = *(A8 + 0x1c) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 4) = *(edi + 4) + ecx * ecx;
        ebx = *(A8 + 0x20) >> 0x10;
        ebx = edx * edx >> 0xf;
        *(edi + 8) = *(edi + 8) + ecx * ecx;
    }
    *edi = *edi << 1;
    *(edi + 4) = *(edi + 4) << 1;
    *(edi + 8) = *(edi + 8) << 1;
    if(esi < 0) {
        edx = ( *(A8 + 0xec) & 65535) + *edi;
        cx = edx & 65535;
        *(A8 + 0xec) = cx;
        *(A8 + 0x8c) = *(A8 + 0x8c) + (edx >> 0x10);
        edx = ( *(A8 + 0xee) & 65535) + *(edi + 4);
        cx = edx & 65535;
        *(A8 + 0xee) = cx;
        *(A8 + 0x90) = *(A8 + 0x90) + (edx >> 0x10);
        edx = ( *(A8 + 0xf0) & 65535) + *(edi + 8);
        *(A8 + 0xf0) = edx & 65535;
        *(A8 + 0x94) = *(A8 + 0x94) + (edx >> 0x10);
    } else {
        ecx = esi;
        *edi = *edi >> cl;
        ecx = esi;
        *(edi + 4) = *(edi + 4) >> cl;
        *(edi + 8) = *(edi + 8) >> esi;
        *(A8 + 0x8c) = *(A8 + 0x8c) + *edi;
        *(A8 + 0x90) = *(A8 + 0x90) + *(edi + 4);
        *(A8 + 0x94) = *(A8 + 0x94) + *(edi + 8);
    }
}

/*    Procedure: 0x0042A718 - 0x0042A964
 *    Argument size: 12
 *    Local size: 56
 *    Save regs size: 12
 */

L0042A718(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    ebx = A10;
    esi = A8;
    if(*(esi + 0x56) != 0) {
        eax = *L00501b94(eax & 0xff, Ac);
        edi = eax;
        if(*(edi + 0xa4) != 0) {
            (save)esi;
            (save)edi;
            esi = esi + 0x3e;
            edi = & Vffffffd4;
            ecx = 6;
            asm("rep movsd");
            (restore)edi;
            (restore)esi;
            Vffffffec = L00459E08( & Vffffffd4, 0xd);
            Vffffffc8 = Vffffffd4;
            Vffffffcc = Vffffffdc;
            Vffffffd0 = Vffffffe4;
            M006355c8 = Vffffffc8;
            M006355cc = Vffffffcc;
            M006355d0 = Vffffffd0;
            L0045122F( & Vffffffc8);
            Vfffffffc = ax;
            Vfffffffe = Vffffffec;
            eax = *L00501664(Vfffffffc);
            Vfffffffc = eax;
            if(Vfffffffc != 0) {
                Vfffffff0 = L00452919(Vfffffffc, Vfffffffc);
                eax = Vfffffffc;
                edx = Vfffffff0;
                asm("imul edx");
                Vfffffff8 = eax >> 0xf;
                Vfffffffa = Vfffffff2;
                Vfffffff8 = *L005016a0( *(edi + 0xa4), *L00501664(Vfffffff8));
                if(ebx < 0) {
                    do {
                        Vfffffffa = Vfffffffa + 1;
                        ebx = ebx >> 1;
                    } while(ebx < -32767);
                } else {
                    do {
                        Vfffffffa = Vfffffffa + 1;
                        ebx = ebx >> 1;
                    } while(ebx > 32767);
                }
                eax = Vfffffff8;
                asm("imul ebx");
                eax = ~(eax >> 0xf);
                edx = eax;
                Vffffffc8 = Vffffffc8 * Vffffffc8;
                edx = eax;
                Vffffffcc = Vffffffcc * Vffffffcc;
                eax = Vffffffd0 * Vffffffd0;
                Vffffffd0 = eax;
                ax = Vfffffffa;
                if(ax > 0) {
                    goto L0042a915;
                }
                if(ax > -32) {
                    if(ax != 0) {
                        edx = ~ax;
                        ecx = edx;
                        Vffffffc8 = Vffffffc8 >> cl;
                        eax = ~Vfffffffa;
                        ecx = edx;
                        Vffffffcc = Vffffffcc >> cl;
                        eax = ~Vfffffffa;
                        Vffffffd0 = Vffffffd0 >> edx;
                    }
                    eax = ( *(esi + 0xec) & 65535) + Vffffffc8;
                    dx = eax & 65535;
                    *(esi + 0xec) = dx;
                    *(esi + 0x8c) = *(esi + 0x8c) + (eax >> 0x10);
                    eax = ( *(esi + 0xee) & 65535) + Vffffffcc;
                    dx = eax & 65535;
                    *(esi + 0xee) = dx;
                    *(esi + 0x90) = *(esi + 0x90) + (eax >> 0x10);
                    eax = ( *(esi + 0xf0) & 65535) + Vffffffd0;
                    *(esi + 0xf0) = eax & 65535;
                    eax = eax >> 0x10;
                    *(esi + 0x94) = *(esi + 0x94) + eax;
                    goto L0042a95e;
L0042a915:
                    Vfffffffa = Vfffffffa - 0x10;
                    dx = Vfffffffa;
                    if(dx < 0) {
                        eax = ~dx;
                        ecx = eax;
                        Vffffffc8 = Vffffffc8 >> cl;
                        edx = ~Vfffffffa;
                        ecx = eax;
                        Vffffffcc = Vffffffcc >> cl;
                        edx = ~Vfffffffa;
                        Vffffffd0 = Vffffffd0 >> eax;
                    }
                    *(esi + 0x8c) = *(esi + 0x8c) + Vffffffc8;
                    *(esi + 0x90) = *(esi + 0x90) + Vffffffcc;
                    eax = Vffffffd0;
                    *(esi + 0x94) = *(esi + 0x94) + eax;
                }
            }
        }
    }
L0042a95e:
}

/*    Procedure: 0x0042A965 - 0x0042A967
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042A965()
{



}

/*    Procedure: 0x0042A968 - 0x0042A9FD
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L0042AAA8()
 */

L0042A968(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0x56) = *(Ac + 0x56);
    L0044EB4E(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), *(Ac + 0x3e), *(Ac + 0x42));
    L0044EB4E(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), *(Ac + 0x46), *(Ac + 0x4a));
    L0044EB4E(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), *(Ac + 0x4e), *(Ac + 0x52));
    L00429A5C(Ac, & Vfffffff4);
    *(A8 + 0x8c) = *(A8 + 0x8c) + Vfffffff4;
    *(A8 + 0x90) = *(A8 + 0x90) + Vfffffff8;
    *(A8 + 0x94) = *(A8 + 0x94) + Vfffffffc;
    return L00419470(0xb, 0);
}

/*    Procedure: 0x0042A9FE - 0x0042A9FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042A9FE()
{



}

/*    Procedure: 0x0042AA00 - 0x0042AAA7
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L0042AAA8()
 */

L0042AA00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0x56) = dl;
    esi = *L00501b94(dl, Ac);
    L0044EB80(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), *(esi + 0x3e), *(esi + 0x42));
    L0044EB80(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), *(esi + 0x46), *(esi + 0x4a));
    L0044EB80(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), *(esi + 0x4e), *(esi + 0x52));
    L00429A5C(esi, & Vfffffff4);
    *(A8 + 0x8c) = *(A8 + 0x8c) - Vfffffff4;
    *(A8 + 0x90) = *(A8 + 0x90) - Vfffffff8;
    *(A8 + 0x94) = *(A8 + 0x94) - Vfffffffc;
    return L00419470(0xb, 0);
}

/*    Procedure: 0x0042AAA8 - 0x0042AC81
 *    Argument size: 8
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L00429C28()
 */

L0042AAA8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(*(A8 + 0x57) == 0) {
        Vfffffffc = *(A8 + 0x56) & 0xff;
        if(Vfffffffc == 0) {
            Vfffffff4 = 0x32;
            Vfffffff8 = 0;
        } else {
            ebx = *L00501b94(Vfffffffc, Ac);
            L00429824(A8, ebx, & Vffffffdc, & Vfffffff4);
            Vfffffff4 = Vfffffff4 - *(ebx + 0xda);
            Vfffffff4 = Vfffffff4 << 2;
            Vfffffff4 = Vfffffff4 + 0x20;
            Vfffffff8 = *(ebx + 0x56) & 0xff;
            if(Vfffffff8 != 0) {
                esi = *L00501b94(Vfffffff8, Ac);
                L00429824(A8, esi, & Vffffffdc, & Vffffffec);
                Vffffffec = Vffffffec - *(esi + 0xda);
                Vffffffec = Vffffffec + 0x28;
                if(Vffffffec <= Vfffffff4) {
                    eax = L0042A968(A8, ebx);
                    goto L0042ac7b;
                }
            }
        }
        esi = 0x72;
        Vffffffe8 = Ac + 0x72;
L0042ab7a:
        do {
            if(!( *Vffffffe8 & 0x10)) {
                Vffffffe8 = Vffffffe8 - 1;
                esi = esi - 1;
                if(esi > 0) {
                    goto L0042ab7a;
                }
            }
            if(esi <= 0) {
                goto L0042ab90;
            }
            ebx = *L00501b94(esi, Ac);
            if(*(ebx + 0x56) != *(A8 + 0x56)) {
                if(( *(ebx + 0x56) & 0xff) != Vfffffff8) {
                    goto L0042ac54;
                }
                L00429824(A8, ebx, & Vffffffdc, & Vfffffff0);
                Vfffffff0 = Vfffffff0 - *(ebx + 0xda);
                Vfffffff0 = Vfffffff0 << 2;
                Vfffffff0 = Vfffffff0 + 0x20;
                if(Vfffffff0 >= Vfffffff4) {
                    goto L0042ac54;
                } else {
                    goto L0042ac4a;
                }
            }
            L00429824(A8, ebx, & Vffffffdc, & Vfffffff0);
            Vfffffff0 = Vfffffff0 - *(ebx + 0xda);
            Vfffffff0 = Vfffffff0 << 4;
            if(Vfffffff0 < Vfffffff4) {
                Vfffffffc = esi;
                Vfffffff4 = Vfffffff0;
            }
L0042ac54:
            esi = esi - 1;
            Vffffffe8 = Vffffffe8 - 1;
        } while(esi > 0);
        goto L0042ac62;
L0042ab90:
        eax = *(A8 + 0x56) & 0xff;
        if(eax != Vfffffffc) {
            eax = L0042AA00(A8, Ac, Vfffffffc);
            goto L0042ac7b;
L0042ac4a:
            eax = L0042A968(A8, *L00501b94( *(A8 + 0x56) & 0xff, Ac));
            goto L0042ac7b;
L0042ac62:
            eax = *(A8 + 0x56) & 0xff;
            if(eax != Vfffffffc) {
                eax = L0042AA00(A8, Ac, Vfffffffc);
            }
        }
    }
L0042ac7b:
}

/*    Procedure: 0x0042AC82 - 0x0042AD7D
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 */

L0042AC82(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    eax = esi;
    ecx = 0x64;
    asm("cdq");
    edx = ecx / ecx % ecx / ecx;
    esi = esi + eax;
    if(esi < 0) {
        esi = ~esi;
        Vfffffff4 = ~( *L005016fc(esi, *(A8 + 0x18) >> 0x10));
        Vfffffff8 = ~( *L005016fc(esi, *(A8 + 0x1c) >> 0x10));
        Vfffffffc = ~( *L005016fc(esi, *(A8 + 0x20) >> 0x10));
    } else {
        Vfffffff4 = *L005016fc(esi, *(A8 + 0x18) >> 0x10);
        Vfffffff8 = *L005016fc(esi, *(A8 + 0x1c) >> 0x10);
        Vfffffffc = *L005016fc(esi, *(A8 + 0x20) >> 0x10);
    }
    Vfffffff4 = Vfffffff4 - *(A8 + 0x8c);
    Vfffffff8 = Vfffffff8 - *(A8 + 0x90);
    Vfffffffc = Vfffffffc - *(A8 + 0x94);
    *(A8 + 0xf2) = Vfffffff4;
    *(A8 + 0xf6) = Vfffffff8;
    *(A8 + 0xfa) = Vfffffffc;
    *A10 = *A10 << 2;
    *(A10 + 4) = *(A10 + 4) << 2;
    *(A10 + 8) = *(A10 + 8) << 2;
    return L0045A968(A10, & Vfffffff4, A8);
}

/*    Procedure: 0x0042AD7E - 0x0042ADA9
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 */

L0042AD7E(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L004516B0(A10, A8);
    *A14 = eax;
    return L0045A968(A10, A10, Ac);
}

/*    Procedure: 0x0042ADAA - 0x0042ADEA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042ADAA(A8)
/* unknown */ void  A8;
{



    edx = *A8 >> 0x10;
    ecx = *(A8 + 4) >> 0x10;
    ecx = *(A8 + 8) >> 0x10;
    *(A8 + 0x112) = ~(M006355c8 * M006355c8 + M006355cc * M006355cc + M006355d0 * M006355d0 >> 0x12);
}

/*    Procedure: 0x0042ADEB - 0x0042B1C1
 *    Argument size: 24
 *    Local size: 80
 *    Save regs size: 8
 */

L0042ADEB(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffea;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L004299E4(A8, Ac, A18);
    Vffffffdc = L0042B314(A18);
    L004298A8(A8, Ac, & Vffffffc8, & Vfffffffc, A1c);
    L004536B1( & Vffffffbc, & Vffffffc8);
    if(*(Ac + 0x13c) == 0) {
        eax = Ac;
        if(*(eax + 0x138) < 100000000) {
            goto L0042aec2;
        }
    }
    eax = Ac;
    Vffffffd4 = *(eax + 0x138);
    Vffffffd8 = *(eax + 0x13c);
    L0044EC90( & Vffffffd4, ~Vfffffffc);
    Vffffffc8 = Vffffffc8 - L004537B0(Vffffffbc << 0x10, Vffffffd4);
    Vffffffcc = Vffffffcc - L004537B0(Vffffffc0 << 0x10, Vffffffd4);
    eax = L004537B0(Vffffffc4 << 0x10, Vffffffd4);
    Vffffffd0 = Vffffffd0 - eax;
L0042aec2:
    *(A8 + 0x108) = Vffffffc8;
    *(A8 + 0x10a) = Vffffffcc;
    *(A8 + 0x10c) = Vffffffd0;
    *(A8 + 0x10e) = Vfffffffc;
    eax = M0064a114 + 1;
    if(*(A8 + 0x150) >= al) {
        *(A8 + 0x150) = *(A8 + 0x150) - al;
        eax = L00429C28(A8, Ac, A10, A14, A18, Vffffffdc, Vfffffffc, & Vffffffc8, A1c);
    } else {
        *(A8 + 0x150) = eax << 4;
        edx = *(A8 + 0x8c);
        if(edx < 0) {
            edx = ~edx;
        }
        eax = *(A8 + 0x90);
        if(eax < 0) {
            eax = ~eax;
        }
        if(edx <= eax) {
            edx = eax;
        }
        eax = *(A8 + 0x94);
        if(eax < 0) {
            eax = ~eax;
        }
        if(edx <= eax) {
            edx = eax;
        }
        edx = edx >> 1;
        eax = M0064a114 + 0xb;
        if(eax < 0xf) {
            eax = 0xf;
        }
        Vfffffff4 = edx;
        Vfffffff8 = 0;
        L0044EC90( & Vfffffff4, eax);
        esi = *L00501674( & Vffffffc8);
        Vffffffec = esi;
        Vffffffec = esi - (esi >> 3);
        Vfffffff0 = 0;
        L0044EC90( & Vffffffec, Vfffffffc);
        if(Vfffffff8 > Vfffffff0 || Vfffffff8 == Vfffffff0 && Vfffffff4 > Vffffffec) {
            Vfffffff4 = Vffffffec;
            Vfffffff8 = Vfffffff0;
        }
        eax = Vfffffff8 != 0 ? 22528 : 0x1800;
        Vffffffb0 = 0;
        Vffffffb4 = 0;
        Vffffffb8 = 0;
        *L004e0a6c(A8, A1c, & Vffffffb0, & Vffffffbc, *(A8 + 0x86) & 0xff, Vfffffff4, Vfffffff8, eax);
        if(!(M006355d4 & 0x80)) {
            Vffffffc8 = *(A8 + 0x108);
            Vffffffcc = *(A8 + 0x10a);
            Vffffffd0 = *(A8 + 0x10c);
            Vfffffffc = *(A8 + 0x10e);
            eax = L00429C28(A8, Ac, A10, A14, A18, Vffffffdc, Vfffffffc, & Vffffffc8, A1c);
        } else {
            Vffffffc8 = *(A8 + 0x108);
            Vffffffcc = *(A8 + 0x10a);
            Vffffffd0 = *(A8 + 0x10c);
            *L00501674( & Vffffffc8);
            Vffffffe8 = ax;
            Vffffffea = *(A8 + 0x10e) + 0xf;
            *L005016bc( & Vffffffe0, Vffffffe8);
            L0044EB80( & Vffffffe0, M006355d6, M006355da, Vffffffe0, Vffffffe4);
            if(Vffffffe4 >= 0) {
                Vffffffc8 = *(A8 + 0x108);
                Vffffffcc = *(A8 + 0x10a);
                Vffffffd0 = *(A8 + 0x10c);
                Vfffffffc = *(A8 + 0x10e);
            } else {
                edx = Vffffffbc >> 2;
                ax = (M006355fc >> 0x11) + dx;
                *(A8 + 0x108) = ax;
                Vffffffc8 = ax;
                edx = Vffffffc0 >> 2;
                ax = (M00635600 >> 0x11) + dx;
                *(A8 + 0x10a) = ax;
                Vffffffcc = ax;
                ax = (M00635604 >> 0x11) + (Vffffffc4 >> 2);
                *(A8 + 0x10c) = ax;
                Vffffffd0 = *(A8 + 0x10c);
                Vfffffffc = *(A8 + 0x10e);
                *(A8 + 0x150) = 0;
            }
            eax = L00429C28(A8, Ac, A10, A14, A18, Vffffffdc, Vfffffffc, & Vffffffc8, A1c);
        }
    }
}

/*    Procedure: 0x0042B1C2 - 0x0042B1C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B1C2()
{



}

/*    Procedure: 0x0042B1C4 - 0x0042B310
 *    Argument size: 20
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L0042929B()
 */

L0042B1C4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A10;
    Vfffffff4 = M004dde70;
    Vfffffff8 = M004dde74;
    Vfffffffc = M004dde78;
    if(A18 <= 5) {
        esi = A18 + A18 + 1;
        ecx = esi;
        *Ac = *Ac - ( *Ac >> cl);
        ecx = esi;
        *(Ac + 4) = *(Ac + 4) - ( *(Ac + 4) >> cl);
        ecx = esi;
        *(Ac + 8) = *(Ac + 8) - ( *(Ac + 8) >> cl);
        ecx = esi;
        *eax = *eax - ( *eax >> cl);
        ecx = esi;
        *(eax + 4) = *(eax + 4) - ( *(eax + 4) >> cl);
        ecx = esi;
        *(eax + 8) = *(eax + 8) - ( *(eax + 8) >> cl);
    }
    if(A14 == 0x70) {
        ecx = A18;
        Vffffffe8 = ( *Ac >> cl) + *eax;
        ecx = A18;
        Vffffffec = ( *(Ac + 4) >> cl) + *(eax + 4);
        ecx = A18;
        Vfffffff0 = ( *(Ac + 8) >> cl) + *(eax + 8);
    } else {
        ecx = A18;
        esi = *Ac >> cl;
        Vffffffe8 = *eax - esi;
        ecx = A18;
        esi = *(Ac + 4) >> cl;
        Vffffffec = *(eax + 4) - esi;
        ecx = A18;
        esi = *(Ac + 8) >> cl;
        Vfffffff0 = *(eax + 8) - esi;
    }
    ecx = A18;
    Vffffffdc = *eax >> cl;
    ecx = A18;
    Vffffffe0 = *(eax + 4) >> cl;
    ecx = A18;
    Vffffffe4 = *(eax + 8) >> cl;
    *eax = Vffffffe8;
    *(eax + 4) = Vffffffec;
    *(eax + 8) = Vfffffff0;
    if(A14 == 0x70) {
        *Ac = *Ac - Vffffffdc;
        *(Ac + 4) = *(Ac + 4) - Vffffffe0;
        *(Ac + 8) = *(Ac + 8) - Vffffffe4;
    } else {
        *Ac = *Ac + Vffffffdc;
        *(Ac + 4) = *(Ac + 4) + Vffffffe0;
        *(Ac + 8) = *(Ac + 8) + Vffffffe4;
    }
    al = *(ebp + A18 - 0xe);
    *(A8 + 0x24) = *(A8 + 0x24) - al;
    eax = A8;
    if(*(eax + 0x24) < 0) {
        *"Z7E"(A8);
        eax = A8;
        *(eax + 0x24) = 0x3c;
    }
}

/*    Procedure: 0x0042B311 - 0x0042B313
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B311()
{



}

/*    Procedure: 0x0042B314 - 0x0042B38A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00429B91()
 *        L0042ADEB()
 */

L0042B314(A8)
/* unknown */ void  A8;
{



    eax = *A8 < 0 ? ~( *A8) : *A8;
    edx = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
    eax = eax | edx;
    edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
    eax = L00459CEC(eax | edx) - 0xe;
    if(eax < 0) {
        edx = ~eax;
        ecx = edx;
        *A8 = *A8 << cl;
        ecx = ~eax;
        ecx = edx;
        *(A8 + 4) = *(A8 + 4) << cl;
        ecx = ~eax;
        *(A8 + 8) = *(A8 + 8) << edx;
    } else {
        if(eax > 0) {
            ecx = eax;
            *A8 = *A8 >> cl;
            ecx = eax;
            *(A8 + 4) = *(A8 + 4) >> cl;
            *(A8 + 8) = *(A8 + 8) >> eax;
        }
    }
}

/*    Procedure: 0x0042B38B - 0x0042B38B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B38B()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0042B38C - 0x0042B3C2
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042B448()
 */

L0042B38C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A8 & 0x1ff;
    if(eax == 0x1ff) {
        return L0042B3C4(A10, Ac);
    }
    return *L005000c8(A10, eax, Ac, 0x4dde7c);
}

/*    Procedure: 0x0042B3C3 - 0x0042B3C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B3C3()
{



}

/*    Procedure: 0x0042B3C4 - 0x0042B444
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0042B38C()
 */

L0042B3C4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = & A8;
    *(ebp - 4) = 0;
    esi = 0;
    do {
        *( *ebx) = 0x1f;
        *ebx = *ebx + 1;
        *( *ebx) = 7;
        *ebx = *ebx + 1;
        eax = esi + esi * 8 + 1;
        *( *ebx) = al;
        *ebx = *ebx + 1;
        if(L0042B448(Ac, 0x50, ebx, ebp - 4) != 0 && *(ebp - 4) < 0x21) {
            *( *ebx - 1) = 0x1e;
            *( *ebx) = 0x5a;
            *ebx = *ebx + 1;
            L0042B448(Ac, 0x118, ebx, ebp - 4);
            *( *ebx - 1) = 0xd;
            esi = esi + 1;
        }
    } while(*(ebp - 4) < 0x21);
    *( *ebx - 1) = 0;
    return *ebx;
}

/*    Procedure: 0x0042B445 - 0x0042B447
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B445()
{



}

/*    Procedure: 0x0042B448 - 0x0042B4C8
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0042B3C4()
 */

L0042B448(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    goto L0042b465;
L0042b461:
    eax = 0;
    goto L0042b4c3;
L0042b465:
    do {
        if(!( *( *A14 + 6574000) & 0x80)) {
            goto L0042b477;
        }
        *A14 = *A14 + 1;
    } while(*A14 < 0x21);
    goto L0042b461;
L0042b477:
    *(ebp - 4) = *A14 + 36352;
    *A10 = L0042B38C( *(ebp - 4), A8, *A10);
    *( *A10 - 1) = 0x1e;
    edx = *A10;
    *A10 = *A10 + 1;
    *edx = Ac >> 1;
    eax = *(A8 + 0xc);
    *A8 = *(eax + *A14 * 8 + 4);
    *A10 = *L005000c0( *A10, 12292, A8);
    *A14 = *A14 + 1;
    eax = 1;
L0042b4c3:
}

/*    Procedure: 0x0042B4C9 - 0x0042B508
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B4C9(A8)
/* unknown */ void  A8;
{



    if(!(eax = (A8 & 0xff) - 1)) {
        M00648ada = 0;
        M00648ad6 = 0;
        M00648ad2 = 0;
        M00648ace = 0;
        L0042B50C();
        eax = L0042B6E8(M00644cae);
    }
}

/*    Procedure: 0x0042B509 - 0x0042B50B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B509()
{



}

/*    Procedure: 0x0042B50C - 0x0042B52C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042B4C9()
 *        L0042C72C()
 */

L0042B50C()
{



    M00644fe6 = 0;
    return L0041936C(M0064a3b0, 0x42b530, 0);
}

/*    Procedure: 0x0042B52D - 0x0042B56F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B52D(A8)
/* unknown */ void  A8;
{



    if(!( *(A8 + 0x14c) & 0x10)) {
        edx = M00644fe6;
        ecx = edx;
        edx = (ecx + (ecx + edx * 2) * 8 << 4) + ecx;
        *(edx * 2 + 6574366) = *(A8 + 0x86);
        if(M00644fe6 < 0x12) {
            M00644fe6 = M00644fe6 + 1;
        }
    }
}

/*    Procedure: 0x0042B570 - 0x0042B61D
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042B6E8()
 *        L0042BCF4()
 */

L0042B570(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    eax = A8;
    ebx = *(Ac * 4 + 0x4ddf64);
    ebx = *(eax + 4) * *(eax + 4) >> 0xf;
    ecx = *(A14 * 4 + 0x4ddf44);
    ebx = ebx * ebx >> 0xf;
    if(!(dl & 8)) {
        ebx = ~ebx;
    }
    ebx = ebx + *eax;
    if(!(dl & 0x80)) {
        ebx = ebx + ebx;
    }
    eax = *(A10 * 4 + 0x4ddf8c);
    asm("imul ebx");
    ebx = eax >> 0xf;
    ebx = ebx > 32767 ? 32767 : ebx + ebx;
    eax = ( *L00501b8c() & 0x3ff) + 16384 - 0x200;
    asm("imul ebx");
    ebx = eax;
    ebx = ebx <= 536870911 ? ebx << 2 : ebx <= 1073741823 ? ebx + ebx : 2147483647;
    return ebx >> 0x10;
}

/*    Procedure: 0x0042B61E - 0x0042B61F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B61E()
{



}

/*    Procedure: 0x0042B620 - 0x0042B6C3
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042B6E8()
 *        L0042BCF4()
 */

L0042B620(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    eax = A8;
    ebx = *(A14 * 4 + 0x4ddf44);
    ebx = *(eax + 0xc) * *(eax + 0xc) >> 0xf;
    if(!(dl & 8)) {
        ebx = ~ebx;
    }
    ebx = ebx + *(eax + 8);
    eax = *(Ac * 4 + 0x4ddfac);
    ebx = ebx * ebx >> 0xf;
    if(!(dl & 0x80)) {
        ebx = ebx >> 3;
    }
    eax = *(A10 * 4 + 0x4ddfd4);
    asm("imul ebx");
    ebx = eax >> 0xf;
    asm("imul ebx");
    eax = eax >> 0xf;
    if(!(eax = ( *L00501b8c() & 16383) + 16384)) {
        eax = ( *L00501b8c() & 16383) + 16384;
        asm("imul ebx");
        eax = eax >> 0xf;
    } else {
        eax = ( *L00501b8c() & 16383) + 16384;
        asm("imul ebx");
        eax = ~(eax >> 0xf);
    }
    ebx = ebx + eax;
    eax = ebx < 0 ? 0 : ebx;
}

/*    Procedure: 0x0042B6C4 - 0x0042B6E5
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042B6E8()
 *        L0042BCF4()
 */

L0042B6C4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return *( *( *L004eeed4(0x20) * 4 + 0x4de204))(A8, Ac);
}

/*    Procedure: 0x0042B6E6 - 0x0042B6E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042B6E6()
{



}

/*    Procedure: 0x0042B6E8 - 0x0042B9D3
 *    Argument size: 4
 *    Local size: 88
 *    Save regs size: 12
 *    Called by:
 *        L0042B4C9()
 *        L0042C72C()
 */

L0042B6E8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffa8;
    /* unknown */ void  Vffffffac;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0043759C(A8, & Vffffffe0, & Vffffffdc, & Vffffffc0, & Vffffffbc, & Vffffffb8, & Vffffffb4, & Vffffffd8, & Vffffffd4);
    M00644fde = Vffffffc0;
    M00644fda = Vffffffbc;
    M00648ade = Vffffffb8;
    ax = Vffffffb4;
    M00644fdc = ax;
    M00644fe0 = Vffffffd4 >> 6;
    L00437628(A8, & Vffffffe4, & Vffffffb0, & Vffffffac, & Vffffffd4);
    M00644fd6 = Vffffffb0;
    M00644fd8 = Vffffffac;
    ebx = 0;
    edx = 6574000;
    eax = Vffffffe4;
    do {
        *edx = *eax;
        ebx = ebx + 1;
        edx = edx + 1;
        eax = eax + 1;
    } while(ebx < 0x26);
    Vfffffffc = M00644fe6;
    esi = 6574062;
    do {
        Vffffffec = *L00501b94( *(esi + 0x130) & 0xff, M0064a3b0);
        ebx = 0;
        Vfffffff8 = esi;
        Vfffffff0 = 0x4ddff4;
        Vffffffa8 = 6574000;
        do {
            edi = *Vffffffa8;
            Vfffffff4 = edi & 7;
            eax = L0042B570(Vfffffff0, M00644fd6 & 65535, M00644fd8, Vfffffff4, edi);
            *(Vfffffff8 + 4) = eax;
            eax = L0042B620(Vfffffff0, M00644fd6 & 65535, M00644fd8, Vfffffff4, edi);
            *Vfffffff8 = eax;
            L00414070(0x18, *(Vffffffec + 0xa0), ebx + 0x3e8);
            Vffffffa8 = Vffffffa8 + 1;
            ebx = ebx + 1;
            Vfffffff8 = Vfffffff8 + 8;
            Vfffffff0 = Vfffffff0 + 0x10;
        } while(ebx < 0x21);
        *(esi + 0x2e2) = 0;
        *(esi + 0x131) = 0;
        for(ebx = 0; ebx <= (M00644fd6 & 65535) << 2; ebx = ebx + 1) {
            L0042B6C4(esi, ( *(esi + 0x2e2) << 3) + ( *(esi + 0x2e2) << 3) * 2 + esi + 0x132);
        }
        eax = *(Vffffffec + 0xa0);
        edx = eax << 0x10;
        M00644fea = edx | eax >> 0x10;
        if(!( *(Vffffffec + 0x14c) & 0x20)) {
            *(esi + 0x131) = *(esi + 0x131) | 0x10;
        }
        Vffffffe8 = esi + 0x2e6;
        *(esi + 0x31e) = 0;
        ebx = M00644fe6 - 1;
        if(ebx < 0) {
            ebx = ebx + 3;
        }
        ebx = ebx >> 2;
        do {
            L0042BFC0(0xd, esi, & Vffffffe8);
            ebx = ebx - 1;
        } while(ebx >= 0);
        ebx = (M00644fda & 65535) + (M00644fda & 65535) * 2;
        do {
            L0042BFC0(0, esi, & Vffffffe8);
            ebx = ebx - 1;
        } while(ebx >= 0);
        ebx = (M00644fdc & 65535) + (M00644fdc & 65535) * 2;
        do {
            L0042BFC0(1, esi, & Vffffffe8);
            ebx = ebx - 1;
        } while(ebx >= 0);
        L004124F8(0x10, *(esi + 0x130) & 0xff);
        L004124F8(0x10, 0);
        Vfffffffc = Vfffffffc - 1;
        esi = esi + 0x322;
    } while(Vfffffffc > 0);
    M0064885e = 0;
    L004376B0(A8, & Vffffffd0, & Vffffffcc, & Vffffffc8, & Vffffffc4, 6588506, 6588502);
    eax = (Vffffffc8 << 3) + 8;
    M00648852 = eax;
    for(ebx = 0; ebx < M00648852; ebx = ebx + 1) {
        eax = L0042B9D4();
    }
}

/*    Procedure: 0x0042B9D4 - 0x0042BA0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042B6E8()
 *        L0042BCF4()
 */

L0042B9D4()
{



    eax = *L00501b8c() & 0xf;
    edx = M00648856 < M0064885a ? 0 : M00648856 - M0064885a;
    return *( *(eax * 4 + 0x4de854))(edx);
}

/*    Procedure: 0x0042BA0B - 0x0042BA0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BA0B()
{



}

/*    Procedure: 0x0042BA0C - 0x0042BA55
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042BAB1()
 *        L0042BB1E()
 *        L0042BB8A()
 *        L0042BC40()
 */

L0042BA0C(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    edx = 0;
    do {
        eax = (edx << 3) + (edx << 3) * 2 + 6588510;
        if(*eax == 0) {
            goto L0042ba27;
        }
        edx = edx + 1;
    } while(edx < 0x19);
    goto L0042ba55;
L0042ba27:
    *eax = A8;
    *(eax + 4) = Ac;
    *(eax + 8) = A10;
    *(eax + 0x10) = A14;
    *(eax + 0xc) = A18;
    *(eax + 0x14) = A1c;
    edx = 0;
    *(eax + 0x18) = 0;
    return;
L0042ba55:
}

/*    Procedure: 0x0042BA56 - 0x0042BA57
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BA56()
{



}

/*    Procedure: 0x0042BA58 - 0x0042BAB0
 *    Argument size: 4
 *    Local size: 16
 *    Save regs size: 4
 *    Called by:
 *        L0042BAB1()
 *        L0042BB1E()
 *        L0042BB8A()
 */

L0042BA58(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *A8 = L00436BE4( *((M00644fe0 & 65535) * 4 + 0x4de9b4), *L004eeed4(3));
    if(*A8 != 0) {
        L00437628( *A8, & Vfffffffc, & Vfffffff0, & Vfffffff8, & Vfffffff4);
        eax = Vfffffff0;
    } else {
        eax = 0;
    }
}

/*    Procedure: 0x0042BAB1 - 0x0042BB1D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0042BAB1(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    if(A8 > 0x100) {
        eax = L0042BA58(ebp - 4);
        if(eax >= 3) {
            ebx = *L00501b8c() & 7;
            esi = M00644bcc;
            eax = *(ebx * 4 + 0x4de9cc);
            eax = L0042BA0C(38999, *(ebp - 4), ( *L00501b8c() & 0x3f) + M00644ba8 + 0xe, eax, ebx + 39356, esi);
        }
    }
}

/*    Procedure: 0x0042BB1E - 0x0042BB89
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0042BB1E(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    if(A8 > 0x271) {
        eax = L0042BA58(ebp - 4);
        if(eax >= 3) {
            ebx = *L00501b8c() & 7;
            esi = M00644bcc;
            eax = *(ebx * 4 + 0x4de9ec);
            eax = L0042BA0C(38997, *(ebp - 4), ( *L00501b8c() & 0x3f) + M00644ba8 + 0xe, eax, ebx + 39270, esi);
        }
    }
}

/*    Procedure: 0x0042BB8A - 0x0042BBF3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0042BB8A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    if(A8 > 0x510 && !(eax = L0042BA58(ebp - 4) - 1)) {
        ebx = *L00501b8c() & 7;
        esi = M00644bcc;
        eax = *(ebx * 4 + 0x4dea0c);
        eax = L0042BA0C(38998, *(ebp - 4), ( *L00501b8c() & 0x3f) + M00644ba8 + 0xe, eax, ebx + 39270, esi);
    }
}

/*    Procedure: 0x0042BBF4 - 0x0042BC07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BBF4()
{



    return L0042BC40(8, 39278);
}

/*    Procedure: 0x0042BC08 - 0x0042BC21
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BC08(A8)
/* unknown */ void  A8;
{



    if(A8 > 0x10) {
        eax = L0042BC40(4, 39286);
    }
}

/*    Procedure: 0x0042BC22 - 0x0042BC3D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BC22(A8)
/* unknown */ void  A8;
{



    if(A8 > 0x51) {
        eax = L0042BC40(4, 39290);
    }
}

/*    Procedure: 0x0042BC3E - 0x0042BC3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BC3E()
{



}

/*    Procedure: 0x0042BC40 - 0x0042BCF1
 *    Argument size: 8
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L0042BBF4()
 *        L0042BC08()
 *        L0042BC22()
 */

L0042BC40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = Ac;
    Vfffffff4 = *L004eeed4(A8);
    Vfffffffc = M00644cae;
    esi = *L004eeed4(3);
    eax = L00436BE4(Vfffffffc, esi);
    Vfffffff8 = eax;
    if(eax != 0) {
        eax = L00437628(Vfffffff8, & Vfffffff0, & Vffffffec, & Vffffffe8, & Vffffffe4);
        if(Vffffffec >= 3) {
            *L00501b8c();
            edi = M00644bcc;
            ebx = ebx + Vfffffff4;
            eax = L0042BA0C(38996, Vfffffff8, *L004eeed4(0xe) + 0xa + M00644ba8, ebx + esi * 2 + ebx + esi * 2 + (ebx + esi * 2 + ebx + esi * 2) * 4 + (ebx + esi * 2 + ebx + esi * 2 + (ebx + esi * 2 + ebx + esi * 2) * 4) * 4 + -1963750, ebx, edi);
        }
    }
}

/*    Procedure: 0x0042BCF2 - 0x0042BCF3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BCF2()
{



}

/*    Procedure: 0x0042BCF4 - 0x0042BFBD
 *    Argument size: 0
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L0042C72C()
 */

L0042BCF4()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = M00644ba8 + 4;
    eax = 6588510;
    for(edx = 6588510; *eax != 0; eax = eax + 0x18) {
        if(ebx <= *(eax + 8)) {
            esi = eax;
            edi = edx;
            ecx = 6;
            asm("rep movsd");
            edx = edx + 0x18;
        }
    }
    *edx = 0;
    ebx = 0;
    do {
        if(*L004eeed4(0x19) <= M00648852) {
            L0042B9D4();
        }
        ebx = ebx + 1;
    } while(ebx < 3);
    Vfffffff4 = M00644fd6 & 65535;
    Vfffffff0 = M00644fd8;
    for(Vfffffffc = 0; 1; Vfffffffc = Vfffffffc + 1) {
        eax = Vfffffffc;
        if(eax >= M00644fe6) {
            break;
        }
        edi = Vfffffffc;
        eax = edi;
        edi = (eax + (eax + edi * 2) * 8 << 4) + eax + (eax + (eax + edi * 2) * 8 << 4) + eax + 6574062;
        Vffffffe4 = *L00501b94( *(edi + 0x130) & 0xff, M0064a3b0);
        ebx = 0;
        Vffffffe0 = 6574000;
        do {
            Vffffffe8 = *Vffffffe0;
            Vffffffec = Vffffffe8 & 7;
            esi = edi + ebx * 8;
            eax = L0042B570((ebx << 4) + 0x4ddff4, Vfffffff4, Vfffffff0, Vffffffec, Vffffffe8);
            eax = eax + *(esi + 4) + *(esi + 4) * 2;
            if(eax < 0) {
                eax = eax + 3;
            }
            *(esi + 4) = eax >> 2;
            eax = L0042B620((ebx << 4) + 0x4ddff4, Vfffffff4, Vfffffff0, Vffffffec, Vffffffe8);
            eax = eax + *esi + *esi * 2;
            if(eax < 0) {
                eax = eax + 3;
            }
            *esi = eax >> 2;
            L00414070(0x18, *(Vffffffe4 + 0xa0), ebx + 0x3e8);
            ebx = ebx + 1;
            Vffffffe0 = Vffffffe0 + 1;
        } while(ebx < 0x21);
        if(*L004eeed4(7) < (M00644fd6 & 65535)) {
            eax = ( *L004eeed4( *(edi + 0x2e2)) << 3) + ( *L004eeed4( *(edi + 0x2e2)) << 3) * 2 + edi + 0x132;
            if(edx = *eax - 38951) {
                *(edi + 0x131) = *(edi + 0x131) & 0xfb;
            } else {
                if(edx = edx - 1) {
                    *(edi + 0x131) = *(edi + 0x131) & 0xf7;
                } else {
                    if(!(edx = edx - 1)) {
                        dl = 0xfd;
                        if(*(eax + 4) >= 0) {
                            edx = 0xfe;
                        }
                        *(edi + 0x131) = *(edi + 0x131) & dl;
                    }
                }
            }
            *eax = 0;
            ebx = *(edi + 0x2e2);
            *(edi + 0x2e2) = *(edi + 0x2e2) - 1;
            L0042B6C4(edi, eax);
            *(edi + 0x2e2) = ebx;
        }
        Vfffffff8 = edi + 0x2e6;
        edx = *L004eeed4(0xe);
        eax = *(edi + 0x31e) - edx;
        if(eax > 0) {
            ecx = (edx << 2) + Vfffffff8;
            L0047114C(ecx, ecx + 4, eax << 2);
            *(edi + 0x31e) = *(edi + 0x31e) - 1;
        }
        Vfffffff8 = Vfffffff8 + ( *(edi + 0x31e) << 2);
        if(*L004eeed4(9) < (M00644fda & 65535)) {
            L0042BFC0(0, edi, & Vfffffff8);
        }
        if(*L004eeed4(9) < (M00644fdc & 65535)) {
            L0042BFC0(1, edi, & Vfffffff8);
        }
        if(*L004eeed4(0x1b) < M00644fe6) {
            L0042BFC0(0xd, edi, & Vfffffff8);
        }
        L004124F8(0x10, *(edi + 0x130) & 0xff);
        L004124F8(0x10, 0);
    }
}

/*    Procedure: 0x0042BFBE - 0x0042BFBF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042BFBE()
{



}

/*    Procedure: 0x0042BFC0 - 0x0042C006
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042B6E8()
 *        L0042BCF4()
 */

L0042BFC0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *L00501b8c();
    if(!(M00644bcc & 8) && *(Ac + 0x31e) < 0xd) {
        eax = L0042C008(A8, *A10 + 2);
        *( *A10) = ax;
        *A10 = *A10 + 4;
        *(Ac + 0x31e) = *(Ac + 0x31e) + 1;
    }
}

/*    Procedure: 0x0042C007 - 0x0042C007
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C007()
{



}

/*    Procedure: 0x0042C008 - 0x0042C081
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042BFC0()
 *        L0042CBCC()
 */

L0042C008(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = A8;
    if(A8 == 1 || A8 == 0) {
        ebx = ebx + (M00644fe0 & 65535) + (M00644fe0 & 65535);
    }
    eax = *(ebx * 8 + 0x4de7bc);
    if(A8 == 1 && M00644fd6 < 4) {
        ecx = M00644fd6 & 65535;
        eax = eax * eax >> 2;
    }
    if(A8 != 0x10) {
        eax = *L004eeed4(eax);
        *Ac = M00644bcc;
    } else {
        eax = *Ac & 65535;
        asm("imul dword [ebx*8+0x4de7bc]");
        eax = eax >> 0x10;
    }
    return *( *(ebx * 8 + 0x4de7c0) + eax * 4);
}

/*    Procedure: 0x0042C082 - 0x0042C13A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L0042C082(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 2;
    ebx = M00648ada;
    M00648ada = 0;
    if(ebx == 0) {
        ebx = M00648ad6;
        M00648ad6 = 0;
        if(ebx == 0) {
            ebx = M00648ad2;
            M00648ad2 = 0;
            if(ebx == 0) {
                ebx = M00648ace;
                M00648ace = 0;
                if(ebx == 0) {
                    eax = 0;
                    goto L0042c136;
                }
                esi = 1;
            }
        }
    }
    *(ebp - 4) = L00436BE4(M00644cae, 1);
    if(*(ebp - 4) == 0) {
        eax = 0;
    } else {
        eax = ebx < 0 ? 38942 : 38941;
        L0042C6D0(A8, Ac, eax, 1, *(ebp - 4), esi, ((ebx & 3) << 3) + ((ebx & 3) << 3) * 4 + 0x50, ebx);
        eax = 1;
    }
L0042c136:
}

/*    Procedure: 0x0042C13B - 0x0042C1BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C13B()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    *L00501b8c();
    ebx = M00644bcc;
    *(ebp - 4) = 0;
    esi = 1;
    *(ebp - 8) = L00436BE4(M00644cae, 1);
    if(*(ebp - 8) == 0) {
        eax = 0;
    } else {
        eax = ebx < 0 ? 38942 : 38941;
        L0042C6D0( *(ebp + 8), *(ebp + 0xc), eax, esi, *(ebp - 8), *(ebp - 4), ((ebx & 3) << 3) + ((ebx & 3) << 3) * 4 + 0x50, ebx);
        eax = 1;
    }
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0042C1BC - 0x0042C30E
 *    Argument size: 8
 *    Local size: 28
 *    Save regs size: 8
 */

L0042C1BC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0;
    do {
        Vffffffe8 = *L004eeed4(3);
        Vffffffe4 = L00436BE4(M00644cae, Vffffffe8);
        eax = Vffffffe4;
        if(eax != 0 && eax != M00644cae) {
            L00437628(Vffffffe4, & Vfffffffc, & Vfffffff0, & Vfffffff8, & Vfffffff4);
            if(Vfffffff0 >= 3) {
                goto L0042c224;
            }
        }
        esi = esi + 1;
    } while(esi < 4);
    goto L0042c307;
L0042c224:
    *L00501b8c();
    ecx = M00644bcc;
    eax = M00644bc8;
    edx = eax & 7;
    Vffffffec = *(edx * 8 + 0x4de284);
    esi = Vffffffe8 + 3;
    esi = *(edx * 8 + 0x4de288) * *(edx * 8 + 0x4de288);
    if(edx == 7) {
        edx = edx | 8192;
    }
    ebx = eax;
    eax = eax * eax >> 0x10;
    ebx = eax;
    eax = eax * eax >> 0x13 & 7680;
    edx = edx + eax;
    eax = eax >> 9 & 0xf;
    esi = esi + *(eax * 4 + 0x4de2c4);
    if(eax >= 0xf && !(dh & 0x20)) {
        M00648ace = ecx;
    }
    eax = ecx & 7;
    eax = *((eax + M00644fd8) * 4 + 0x4de304);
    esi = esi * esi;
    if(!(ch & 0x10)) {
        L0042C6D0(A8, Ac, 38939, Vffffffec, Vffffffe4, edx, esi, ecx);
    } else {
        L0042C6D0(A8, Ac, 38938, Vffffffec, Vffffffe4, edx, esi, ecx);
    }
    eax = 1;
    goto L0042c309;
L0042c307:
    eax = 0;
L0042c309:
}

/*    Procedure: 0x0042C30F - 0x0042C397
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L0042C30F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(!( *(A8 + 0x131) & 1)) {
        return 0;
    }
    *(A8 + 0x131) = *(A8 + 0x131) | 1;
    eax = 0x20;
    edx = 6574032;
    do {
        if(*edx & 0x80) {
            break;
        }
        eax = eax - 1;
        edx = edx - 1;
    } while(eax >= 0);
    if(eax >= 0) {
        edx = *( *L00501b94( *(A8 + 0x130) & 0xff, M0064a3b0) + 0xa0);
        ecx = edx >> 0xf;
        eax = ecx | edx << 0x11;
        L0042C6D0(A8, Ac, 38953, 0, 0, 0, eax, eax);
        return 1;
    }
    return 0;
}

/*    Procedure: 0x0042C398 - 0x0042C3FA
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L0042C398(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(!( *(A8 + 0x131) & 2)) {
        eax = 0;
    } else {
        *L00501b8c();
        edx = 0x20;
        eax = 6574032;
        do {
            if(!( *eax & 0x80)) {
                goto L0042c3c5;
            }
            edx = edx - 1;
            eax = eax - 1;
        } while(edx >= 0);
        goto L0042c3f5;
L0042c3c5:
        *(A8 + 0x131) = *(A8 + 0x131) | 2;
        eax = M00644bc8;
        L0042C6D0(A8, Ac, 38953, -1, 0, 0, eax, eax);
        eax = 1;
        goto L0042c3f7;
L0042c3f5:
        eax = 0;
    }
L0042c3f7:
}

/*    Procedure: 0x0042C3FB - 0x0042C46A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L0042C3FB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = *L004eeed4(0xc);
    edx = 0x20;
    eax = A8 + 0x100;
    do {
        if(*eax == 0 && !(ebx = ebx - 1)) {
            esi = *(eax + 4);
            ecx = esi;
            esi = esi + esi;
            if((ecx ^ esi) >= 0) {
                goto L0042c42e;
            }
        }
        edx = edx - 1;
        eax = eax - 8;
    } while(edx >= 0);
    goto L0042c465;
L0042c42e:
    eax = edx + 36352;
    L0042C6D0(A8, Ac, 38954, eax, esi, 0, 0, M00644bc8);
    eax = 1;
    goto L0042c467;
L0042c465:
    eax = 0;
L0042c467:
}

/*    Procedure: 0x0042C46B - 0x0042C4EC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C46B(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(!(dx = M00644fe0 - 1)) {
        if((dx = dx - 1) || *(A8 + 0x131) & 4) {
            goto L0042c4e9;
        }
        *(A8 + 0x131) = *(A8 + 0x131) | 4;
        L0042C6D0(A8, Ac, 38951, 0, 0, 0, 0, 0);
        return 1;
    }
    if(!( *(A8 + 0x131) & 8)) {
        *(A8 + 0x131) = *(A8 + 0x131) | 8;
        L0042C6D0(A8, Ac, 38952, 0, 0, 0, 0, 0);
        return 1;
    }
L0042c4e9:
    return 0;
}

/*    Procedure: 0x0042C4ED - 0x0042C5E2
 *    Argument size: 8
 *    Local size: 20
 *    Save regs size: 12
 */

L0042C4ED(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0;
    do {
        ebx = *L004eeed4(3);
        Vfffffffc = L00436BE4(M00644cae, ebx);
        if(Vfffffffc != 0) {
            L00437628(Vfffffffc, & Vfffffff8, & Vfffffff4, & Vffffffec, & Vfffffff0);
            if(Vfffffff4 >= 3) {
                goto L0042c548;
            }
        }
        esi = esi + 1;
    } while(esi < 4);
    goto L0042c5da;
L0042c548:
    *L00501b8c();
    edi = M00644bc8;
    esi = M00644bcc & 0xf;
    *L00501b8c();
    eax = (ebx << 3) + (ebx << 3) * 4 + ((ebx << 3) + (ebx << 3) * 4) * 4 + ((ebx << 3) + (ebx << 3) * 4 + ((ebx << 3) + (ebx << 3) * 4) * 4) * 4 + *(esi * 8 + 0x4dea2c);
    ecx = *(esi * 8 + 0x4dea30) + 39348;
    L0042C6D0(A8, Ac, (M00644bc8 >> 0x10 & 3) + 38943, M00644ba8 - 1187063 + (M00644bcc & 0x3f) + 7, Vfffffffc, ecx, eax, edi);
    eax = 1;
    goto L0042c5dc;
L0042c5da:
    eax = 0;
L0042c5dc:
}

/*    Procedure: 0x0042C5E3 - 0x0042C616
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C5E3(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *L00501b8c();
    L0042C6D0(A8, Ac, 38940, 0, 0, 0, M00644bc8, 0);
    return 1;
}

/*    Procedure: 0x0042C617 - 0x0042C640
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C617(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L0042C6D0(A8, Ac, 38955, 0, 0, 0, 0, 0);
    return 1;
}

/*    Procedure: 0x0042C641 - 0x0042C680
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C641(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *L00501b8c();
    edx = M00644bcc;
    L0042C6D0(A8, Ac, (edx >> 0x10 & 3) + 38947, 0, 0, 0, 0, edx);
    return 1;
}

/*    Procedure: 0x0042C681 - 0x0042C6CC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C681(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *L00501b8c();
    edx = M00644bc8;
    eax = (edx & 7) + 39383;
    L0042C6D0(A8, Ac, (eax >> 0x10 & 1) + 38956, eax, 0, 0, M00644bcc, edx);
    return 1;
}

/*    Procedure: 0x0042C6CD - 0x0042C6CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C6CD()
{



}

/*    Procedure: 0x0042C6D0 - 0x0042C70C
 *    Argument size: 32
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042C082()
 *        L0042C13B()
 *        L0042C1BC()
 *        L0042C30F()
 *        L0042C398()
 *        L0042C3FB()
 *        L0042C46B()
 *        L0042C4ED()
 *        L0042C5E3()
 *        L0042C617()
 *        L0042C641()
 *        L0042C681()
 */

L0042C6D0(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{



    if(*(A8 + 0x2e2) < 0x12) {
        *(A8 + 0x2e2) = *(A8 + 0x2e2) + 1;
        *Ac = A10;
        *(Ac + 4) = A14;
        *(Ac + 8) = A18;
        *(Ac + 0xc) = A1c;
        *(Ac + 0x10) = A20;
        *(Ac + 0x14) = A24;
    }
}

/*    Procedure: 0x0042C70D - 0x0042C72B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C70D(A8)
/* unknown */ void  A8;
{



    eax = A8;
    edx = *(eax + 8);
    *(edx + 0xa8) = *eax;
    eax = *(eax + 4);
    *(edx + 0xac) = eax;
    return *(edx + 0xac);
}

/*    Procedure: 0x0042C72C - 0x0042C787
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C72C(A8)
/* unknown */ void  A8;
{



    if(!(eax = *A8 - 2)) {
        if(eax = eax - 0xd) {
            goto L0042c778;
        }
        return;
    }
    L0042B50C();
    M00648ada = M00648ad6;
    M00648ad6 = M00648ad2;
    M00648ad2 = M00648ace;
    M00648ace = 0;
    return L0042B6E8(M00644cae);
L0042c778:
    if(M00644c8c != 4) {
        eax = L0042BCF4();
    }
}

/*    Procedure: 0x0042C788 - 0x0042C7C0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00411810()
 *        L004228EF()
 *        L00423B80()
 *        L0042489C()
 *        L00426720()
 */

L0042C788(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = 6574062;
    for(edx = M00644fe6; A8 != ( *(eax + 0x130) & 0xff) && edx >= 0; eax = eax + 0x322) {
        edx = edx - 1;
    }
    edx = edx < 0 ? 0 : eax;
    return edx;
}

/*    Procedure: 0x0042C7C1 - 0x0042C7C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C7C1()
{



}

/*    Procedure: 0x0042C7C4 - 0x0042C96A
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 8
 *    Called by:
 *        L0042CA40()
 *        L0042CF1A()
 *        L0042D862()
 *        L0043FC74()
 */

L0042C7C4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = 0;
    if(Ac == M00644c64) {
        L004124F8(0x17, *(A8 + 0x86) & 0xff);
        eax = L00412518(0x17);
        if(eax == 0) {
            eax = eax | -1;
            goto L0042c965;
        }
        L004124F8(0x17, 0);
    }
    edx = *(A8 + 0xce);
    eax = A8 + edx + 0xd0;
    if(edx >= 0) {
        do {
            cl = *eax;
            if(Ac == cl) {
                break;
            }
            if(cl == 0) {
                goto L0042c836;
            }
            edx = edx - 1;
            eax = eax - 1;
        } while(edx >= 0);
        goto L0042c843;
L0042c836:
        *eax = bl;
        Vfffffffc = Vfffffffc - 1;
    }
L0042c843:
    if(edx < 0) {
        eax = eax | -1;
    } else {
        if(Ac == M00644c64) {
            M00644c98 = edx;
        }
        *A18 = edx;
        if(!( *(A8 + 0x14c) & 0x40)) {
            Vfffffff0 = 0;
            Vfffffff4 = 0;
            Vfffffff8 = -1;
        } else {
            if(!(eax = *(A8 + 0x82) - 0x51 - 2)) {
                if(eax = eax - 2) {
                    goto L0042c8ab;
                }
                if(eax = eax - 1) {
                    goto L0042c8b9;
                }
                if(eax = eax - 3) {
                    goto L0042c8b2;
                }
            } else {
                eax = 0x4de390;
                goto L0042c8c5;
L0042c8ab:
                eax = 0x4de378;
                goto L0042c8c5;
L0042c8b2:
                eax = 0x4de360;
                goto L0042c8c5;
L0042c8b9:
                eax = 0x4de348;
                goto L0042c8c5;
            }
            eax = 0x4de3c0;
L0042c8c5:
            *A14 = *A18;
            edx = *A18 + *A18 * 2;
            Vfffffff0 = *(eax + edx * 4);
            Vfffffff4 = *(eax + edx * 4 + 4);
            Vfffffff8 = *(eax + edx * 4 + 8);
            L0045A7A8( & Vfffffff0, & Vfffffff0, A8);
            Vfffffff0 = Vfffffff0 << 0xa;
            Vfffffff4 = Vfffffff4 << 0xa;
            Vfffffff8 = Vfffffff8 << 0xa;
        }
        *A10 = Vfffffff0;
        *(A10 + 8) = Vfffffff4;
        eax = A10;
        *(eax + 0x10) = Vfffffff8;
        eax = ~(Vfffffff0 :: 0 < 0 & 1);
        *(A10 + 4) = eax;
        eax = ~(Vfffffff4 :: 0 < 0 & 1);
        *(A10 + 0xc) = eax;
        *(A10 + 0x14) = ~(Vfffffff8 :: 0 < 0 & 1);
        *A14 = Vfffffffc;
        eax = 0;
    }
L0042c965:
}

/*    Procedure: 0x0042C96B - 0x0042C96B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C96B()
{



}

/*    Procedure: 0x0042C96C - 0x0042C9B0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00422484()
 *        L0042F125()
 *        L00430C0F()
 *        L004373AB()
 *        L00441A54()
 */

L0042C96C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    edx = *(Ac + 0xce);
    eax = Ac + edx + 0xd0;
    if(edx >= 0) {
        do {
            if(cl == *eax) {
                goto L0042c98c;
            }
            edx = edx - 1;
            eax = eax - 1;
        } while(edx >= 0);
        goto L0042c997;
L0042c98c:
        *eax = 0;
    }
L0042c997:
    *(Ac + 0xc9) = 1;
    *(Ac + 0xca) = 0;
    *(Ac + 0xd8) = 0;
}

/*    Procedure: 0x0042C9B1 - 0x0042C9B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C9B1()
{



}

/*    Procedure: 0x0042C9B4 - 0x0042C9DC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042EBA8()
 *        L0042F743()
 *        L00440F61()
 *        L0044155E()
 */

L0042C9B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 != *(Ac + 0xca)) {
        return 0;
    }
    *(Ac + 0xc9) = 3;
    *(Ac + 0xd8) = 28800;
    return 1;
}

/*    Procedure: 0x0042C9DD - 0x0042C9DF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C9DD()
{



}

/*    Procedure: 0x0042C9E0 - 0x0042C9FE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042F8F5()
 *        L00441700()
 *        L00442609()
 */

L0042C9E0(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xc9) = 0;
    *(A8 + 0xca) = 0;
    *(A8 + 0xd8) = 0;
}

/*    Procedure: 0x0042C9FF - 0x0042C9FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042C9FF()
{



}

/*    Procedure: 0x0042CA00 - 0x0042CA3D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00422988()
 *        L0042CA40()
 *        L0042EFD2()
 */

L0042CA00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    dl = *(Ac + 0xc9);
    if(dl != 0 && dl != 1 && cl != *(Ac + 0xca)) {
        return 0;
    }
    *(Ac + 0xc9) = 0xff;
    *(Ac + 0xca) = cl;
    *(Ac + 0xd8) = 28800;
    return 1;
}

/*    Procedure: 0x0042CA3E - 0x0042CA3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CA3E()
{



}

/*    Procedure: 0x0042CA40 - 0x0042CB3E
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004224D8()
 *        L0042F78E()
 */

L0042CA40(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    if(*(A8 + 0x86) == M00644c64) {
        if(*((M00644fe0 & 65535) * 4 + 6593692) < 10000) {
            goto L0042ca8e;
        }
        eax = L0042CB40(Ac, ebx, 39097, *A14);
        al = 1;
    } else {
L0042ca8e:
        L0042CA00(ebx, Ac);
        bl = *(A8 + 0x86);
        if(al == 0) {
            eax = L0042CB40(Ac, ebx, 39095, *A14);
            al = 1;
        } else {
            L0042C7C4(Ac, bl, A10, ebp - 4, A14);
            bl = *(A8 + 0x86);
            if(al != 0) {
                *(Ac + 0xc9) = 0;
                *(Ac + 0xca) = 0;
                *(Ac + 0xd8) = 0;
                eax = L0042CB40(Ac, ebx, 39096, *A14);
                al = 1;
            } else {
                if(*(ebp - 4) == 0) {
                    L0042CB40(Ac, ebx, 39100, *A14);
                } else {
                    L0042CB40(Ac, ebx, 39098, *A14);
                }
                eax = 0;
            }
        }
    }
}

/*    Procedure: 0x0042CB3F - 0x0042CB3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CB3F()
{



}

/*    Procedure: 0x0042CB40 - 0x0042CBB2
 *    Argument size: 16
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L0042CA40()
 */

L0042CB40(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    eax = Ac;
    if(eax == M00644c64) {
        if(A10 == 39098 && M00648b05 != 0 && M00649ed8 != 0xf) {
            L004700B4(0xf);
        }
        eax = *(A8 + 0xa0);
        Vffffffec = A8;
        Vffffffd0 = A10;
        Vffffffe8 = 8;
        Vffffffd8 = A14 + 1;
        edx = eax >> 0x10;
        Vffffffdc = edx | eax << 0x10;
        eax = L00421DEC( & Vffffffd0);
    }
}

/*    Procedure: 0x0042CBB3 - 0x0042CBB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CBB3()
{



}

/*    Procedure: 0x0042CBB4 - 0x0042CBCA
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004411B5()
 */

L0042CBB4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = 0;
    if(*(Ac + 0xca) == A8) {
        eax = -1;
    }
}

/*    Procedure: 0x0042CBCB - 0x0042CBCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CBCB()
{



}

/*    Procedure: 0x0042CBCC - 0x0042CBE0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00424C2D()
 *        L00425D8A()
 *        L0042DC8F()
 *        L004304F5()
 */

L0042CBCC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0042C008(A8, Ac);
}

/*    Procedure: 0x0042CBE1 - 0x0042CBE3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CBE1()
{



}

/*    Procedure: 0x0042CBE4 - 0x0042CD21
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L0041C617()
 *        L0041E2FC()
 */

L0042CBE4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    dl = *(eax + 0x14c);
    if(!(dl & 0x40)) {
        edx = 0x4de8c4;
        cx = *(eax + 0xce);
        if(cx != 3) {
            edx = 0x4de894;
            if(cx != 1) {
                edx = 0x4de8f4;
                if(cx == 0) {
                    edx = 0x4de924;
                }
            }
        }
    } else {
        if(!(dl & 0x20)) {
            edx = 0x4de984;
        } else {
            eax = Ac + Ac * 2;
            Vfffffff4 = *(eax * 4 + 0x4de954);
            Vfffffff8 = *(eax * 4 + 0x4de958);
            Vfffffffc = *(eax * 4 + 0x4de95c);
            Vfffffffc = Vfffffffc >> 2;
            *A10 = Vfffffff4;
            *(A10 + 8) = Vfffffff8;
            eax = Vfffffffc;
            *(A10 + 0x10) = eax;
            eax = ~(Vfffffff4 :: 0 < 0 & 1);
            *(A10 + 4) = eax;
            eax = ~(Vfffffff8 :: 0 < 0 & 1);
            *(A10 + 0xc) = eax;
            eax = ~(Vfffffffc :: 0 < 0 & 1);
            *(A10 + 0x14) = eax;
            goto L0042cd1c;
        }
    }
    ecx = Ac + Ac * 2;
    Vfffffff4 = *(edx + ecx * 4);
    Vfffffff8 = *(edx + ecx * 4 + 4);
    Vfffffffc = *(edx + ecx * 4 + 8);
    L0045A7A8( & Vfffffff4, & Vfffffff4, eax);
    Vfffffff4 = Vfffffff4 << 0xa;
    Vfffffff8 = Vfffffff8 << 0xa;
    Vfffffffc = Vfffffffc << 0xa;
    *A10 = Vfffffff4;
    *(A10 + 8) = Vfffffff8;
    eax = Vfffffffc;
    *(A10 + 0x10) = eax;
    eax = ~(Vfffffff4 :: 0 < 0 & 1);
    *(A10 + 4) = eax;
    eax = ~(Vfffffff8 :: 0 < 0 & 1);
    *(A10 + 0xc) = eax;
    eax = ~(Vfffffffc :: 0 < 0 & 1);
    *(A10 + 0x14) = eax;
L0042cd1c:
}

/*    Procedure: 0x0042CD22 - 0x0042CD28
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CD22()
{



}

/*    Procedure: 0x0042CD29 - 0x0042CD2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042CD29()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0042CD2C - 0x0042CD3D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041C617()
 */

L0042CD2C(A8)
/* unknown */ void  A8;
{



    return L0042CE59(0xe, A8);
}

/*    Procedure: 0x0042CD3E - 0x0042CD4F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E2FC()
 */

L0042CD3E(A8)
/* unknown */ void  A8;
{



    return L0042CE59(4, A8);
}

/*    Procedure: 0x0042CD50 - 0x0042CD61
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E2FC()
 */

L0042CD50(A8)
/* unknown */ void  A8;
{



    return L0042CE59(2, A8);
}

/*    Procedure: 0x0042CD62 - 0x0042CD7F
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L0041F988()
 */

L0042CD62(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L0042CF1A(A8, Ac, A10, A14, A18);
}

/*    Procedure: 0x0042CD80 - 0x0042CD94
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L0041EE28()
 */

L0042CD80(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0042CDD4(0xc, Ac, A8);
}

/*    Procedure: 0x0042CD95 - 0x0042CDA9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L0041EE28()
 */

L0042CD95(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0042CDD4(4, Ac, A8);
}

/*    Procedure: 0x0042CDAA - 0x0042CDBE
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041EE28()
 */

L0042CDAA(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0042CDD4(0xe, Ac, A8);
}

/*    Procedure: 0x0042CDBF - 0x0042CDD3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L0041EE28()
 */

L0042CDBF(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L0042CDD4(2, Ac, A8);
}

/*    Procedure: 0x0042CDD4 - 0x0042CE58
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042CD80()
 *        L0042CD95()
 *        L0042CDAA()
 *        L0042CDBF()
 */

L0042CDD4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = L004304F5(A8);
    if(ebx == 0) {
        eax = 0;
    } else {
        *(ebp - 4) = 20480;
        *(ebp - 2) = 0x31;
        L0042E0D5(ebx, *(ebp - 4));
        *(ebx + 0xff) = 9;
        *(ebx + 0xfe) = A10;
        *(ebx + 0x11a) = Ac;
        eax = *L00501b8c() >> 3;
        *(ebx + 0x102) = ax;
        *(ebx + 0x106) = ax;
        *(ebx + 0x104) = *(ebx + 0x106) >> 3;
        L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
        eax = ebx;
    }
}

/*    Procedure: 0x0042CE59 - 0x0042CEA3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042CD2C()
 *        L0042CD3E()
 *        L0042CD50()
 */

L0042CE59(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    ebx = L004304F5(A8);
    if(ebx == 0) {
        eax = 0;
    } else {
        edi = ebx + 0x3e;
        ecx = 6;
        asm("rep movsd");
        *(ebx + 0xfe) = M00644c64;
        *(ebx + 0x25) = 0;
        *(ebx + 0x58) = 0;
        *(ebx + 0x106) = 65526;
        eax = ebx;
    }
}

/*    Procedure: 0x0042CEA4 - 0x0042CF19
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042CF1A()
 *        L0042D862()
 *        L0042F816()
 */

L0042CEA4(A8)
/* unknown */ void  A8;
{



    L0044EB67(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), L004537B0( *(A8 + 0xc), *(A8 + 0x140)));
    L0044EB67(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), L004537B0( *(A8 + 0x10), *(A8 + 0x140)));
    return L0044EB67(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), L004537B0( *(A8 + 0x14), *(A8 + 0x140)));
}

/*    Procedure: 0x0042CF1A - 0x0042D0A4
 *    Argument size: 20
 *    Local size: 56
 *    Save regs size: 12
 *    Called by:
 *        L0042CD62()
 */

L0042CF1A(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    edi = L004304DF(0x4def08, 0x10, A8);
    if(edi == 0) {
        eax = 0;
    } else {
        *(edi + 0xa0) = esi;
        L00430CB0(0x12, & Vffffffc8, esi, edi + 0x124);
        esi = *L00501b94(A10, M0064a3b0);
        if(!( *(esi + 0x14c) & 0x20)) {
            (save)esi;
            (save)edi;
            esi = esi + 0x3e;
            edi = edi + 0x3e;
            ecx = 6;
            asm("rep movsd");
            (restore)edi;
            (restore)esi;
            (save)esi;
            (save)edi;
            ecx = 9;
            asm("rep movsd");
            (restore)edi;
            (restore)esi;
            *(edi + 0x56) = *(esi + 0x56);
            *(edi + 0x57) = 1;
        } else {
            *(edi + 0x56) = *(esi + 0x86);
            *(edi + 0x57) = 1;
        }
        bl = *(edi + 0x86);
        *(edi + 0x11a) = -1;
        *(edi + 0x100) = 0;
        *(edi + 0xfe) = *(esi + 0x86);
        if(L0042C7C4(esi, bl, & Vffffffdc, & Vfffffffc, & Vfffffff8) != 0) {
            Vfffffff4 = 20480;
            Vfffffff6 = 0x31;
            L0042E0D5(edi, Vfffffff4);
            *(edi + 0x56) = 0;
            *(edi + 0x57) = 0;
            *(edi + 0x100) = *(esi + 0x86);
            *(edi + 0xff) = 8;
        } else {
            L0045A044(edi + 0x3e, & Vffffffdc);
            *(edi + 0xff) = 0x24;
            *(edi + 0xa8) = A14;
            *(edi + 0xac) = A18;
            L0042CEA4(edi);
            if(!( *(esi + 0x14c) & 0x40)) {
                eax = *(edi + 0x86) & 0xff;
                *(M00501ba8 + eax) = 0x4e;
            } else {
                eax = *(edi + 0x86) & 0xff;
                *(M00501ba8 + eax) = 2;
            }
        }
        L00414070(0x17, 0, *(edi + 0x86) & 0xff);
        eax = edi;
    }
}

/*    Procedure: 0x0042D0A5 - 0x0042D0DA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042D0A5(A8)
/* unknown */ void  A8;
{



    if(!(eax = *A8 - 1)) {
        if(eax = eax - 1) {
            goto L0042d0cd;
        }
        if(eax = eax - 0xe) {
            goto L0042d0d4;
        }
        if(eax = eax - 3) {
            goto L0042d0c6;
        }
        return;
    }
    return L0042D0DB();
L0042d0c6:
    return L0042D25F();
L0042d0cd:
    return L0042D299();
L0042d0d4:
    return L0042D513();
}

/*    Procedure: 0x0042D0DB - 0x0042D122
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042D0A5()
 */

L0042D0DB()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6595504;
    *(ebp - 4) = 6589275;
    ebx = 1;
    do {
        if(*( *esi + ebx) != 0) {
            L0042D123(ebx * 0x152 + *esi + 0x74, ebp - 4);
        }
        ebx = ebx + 1;
    } while(ebx < 0x72);
    eax = *(ebp - 4);
    *eax = 0;
}

/*    Procedure: 0x0042D123 - 0x0042D194
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D0DB()
 */

L0042D123(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    if(*(eax + 0x87) == 0xb && *(eax + 0x82) >= 0xf && *(eax + 0x82) <= 0x3f) {
        goto L0042d153;
    }
    if(*(eax + 0x82) == 0x9a) {
L0042d153:
        if(*(eax + 0x118) == 0xc) {
            return L0042D1EF(eax, Ac);
        }
        if(*(eax + 0x82) == 0x9a) {
            return L0042D206(eax, Ac);
        }
        if(*(eax + 0x118) == 0xfb) {
            eax = L0042D195(eax, Ac);
        }
    }
}

/*    Procedure: 0x0042D195 - 0x0042D1EE
 *    Argument size: 8
 *    Local size: 16
 *    Save regs size: 4
 *    Called by:
 *        L0042D123()
 */

L0042D195(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    eax = *L004dde44(A8, M00644c6c, & Vfffffff0, & Vfffffffc);
    if(!( *(A8 + 0xcb) & 1)) {
        eax = *L004dde44(A8, M00644c6c, & Vfffffff0, & Vfffffffc);
        if(Vfffffffc < 0x10) {
            eax = L0042D1EF(A8, Ac);
        }
    }
}

/*    Procedure: 0x0042D1EF - 0x0042D205
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D123()
 *        L0042D195()
 */

L0042D1EF(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    A8 = Ac;
    edx = *A8;
    *A8 = *A8 + 1;
    *edx = *(A8 + 0x86);
    return *edx;
}

/*    Procedure: 0x0042D206 - 0x0042D25E
 *    Argument size: 8
 *    Local size: 16
 *    Save regs size: 4
 *    Called by:
 *        L0042D123()
 */

L0042D206(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    if(*(A8 + 0x9e) < 0) {
        Ac = *(A8 + 0xf2);
        if(Ac == M00644d58) {
            *L004dde44(A8, M00644c6c, & Vfffffff0, & Vfffffffc);
            *(A8 + 0x9e) = Vfffffffc;
            edx = *Ac;
            *Ac = *Ac + 1;
            *edx = *(A8 + 0x86);
        }
    }
}

/*    Procedure: 0x0042D25F - 0x0042D298
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042D0A5()
 */

L0042D25F()
{
    /* unknown */ void  ebx;



    for(ebx = 0; 1; *(M00501ba8 + eax) = 0xa) {
        eax = ebx;
        ebx = ebx + 1;
        eax = *(eax + 6589275);
        if(eax == 0) {
            break;
        }
        eax = *( *L00501b94(eax, M0064a3b0) + 0x86) & 0xff;
    }
}

/*    Procedure: 0x0042D299 - 0x0042D32A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042D0A5()
 */

L0042D299()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 6572964;
    for(esi = 0; 1; L0043DA00(ebx)) {
        eax = esi;
        esi = esi + 1;
        eax = *(edi + eax + 16311);
        if(eax == 0) {
            break;
        }
        ebx = *L00501b94(eax, M0064a3b0);
        *(ebx + 0xf2) = *(edi + 0x1b0);
        *(ebx + 0x56) = 0;
        *(ebx + 0x57) = 0;
        *(ebx + 0x25) = 0;
        eax = *(ebx + 0x118) != 0xc ? *(ebx + 0x82) != 0x9a ? L0042D376(ebx) : L0042D40C(ebx) : L0042D32B(ebx);
        if(eax == 0) {
            continue;
        }
    }
    *(edi + 16310) = *(edi + 16310) & 0xfe;
    return L0042D548();
}

/*    Procedure: 0x0042D32B - 0x0042D375
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042D299()
 */

L0042D32B(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x82) == 0x9a) {
        *(A8 + 0xff) = *(A8 + 0xf8);
        *(A8 + 0x82) = *(A8 + 0xe6) & 65535;
        L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
    return L0042D376(A8);
}

/*    Procedure: 0x0042D376 - 0x0042D40B
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 4
 *    Called by:
 *        L0042D299()
 *        L0042D32B()
 */

L0042D376(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(L0043B9D4(A8, 6594260, & Vfffffff8, & Vfffffff4, & Vfffffff0, & Vfffffffc, & Vffffffec) < 0) {
        eax = 1;
    } else {
        *(A8 + 0xf6) = Vffffffec;
        *(A8 + 0xfa) = Vfffffffc;
        L0042D4AA(A8);
        *(A8 + 0xf8) = *(A8 + 0xff) & 0xff;
        *(A8 + 0xff) = 0x11;
        eax = *(A8 + 0x86) & 0xff;
        *(M00501ba8 + eax) = 2;
        L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
        eax = 0;
    }
}

/*    Procedure: 0x0042D40C - 0x0042D4A9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042D299()
 */

L0042D40C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    if(*(A8 + 0x9e) >= 0xf) {
        L0042D4F2(A8);
    } else {
        L0042D4AA(A8);
    }
    *L004dde5c(A8, M0064a3b0);
    *L004dde5c(A8, M0064a3b0);
    *(A8 + 0xff) = 0x12;
    *(A8 + 0xf8) = 8;
    *(A8 + 0x9e) = 0;
    if(L0042DFFE(ebp - 4) != 0) {
        *(A8 + 0x100) = *( *(ebp - 4) + 0x130);
    } else {
        *(A8 + 0xf8) = 0x10;
    }
    L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    return 0;
}

/*    Procedure: 0x0042D4AA - 0x0042D4F1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042D376()
 *        L0042D40C()
 */

L0042D4AA(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = 20480;
    *(ebp - 2) = 0x15;
    L0042E0D5(A8, *(ebp - 4));
    L0045A044(A8 + 0x3e, M00644c6c + 0x3e);
    eax = M00644c6c;
    *(A8 + 0x56) = *(eax + 0x56);
    *(A8 + 0x57) = 0;
    return *(A8 + 0x56);
}

/*    Procedure: 0x0042D4F2 - 0x0042D512
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042D40C()
 */

L0042D4F2(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = 20480;
    *(ebp - 2) = 0x33;
    return L0042E0D5(A8, *(ebp - 4));
}

/*    Procedure: 0x0042D513 - 0x0042D52C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D0A5()
 */

L0042D513()
{



    if(M00644c8c != 4) {
        M00648b5a = M00648b5a | 1;
        eax = L0042D548();
    }
}

/*    Procedure: 0x0042D52D - 0x0042D546
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042D52D(A8)
/* unknown */ void  A8;
{



    if((A8 & 0xff) == 3) {
        M00648b5a = M00648b5a & 0xfe;
        eax = L0042D548();
    }
}

/*    Procedure: 0x0042D547 - 0x0042D547
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042D547()
{



}

/*    Procedure: 0x0042D548 - 0x0042D66D
 *    Argument size: 0
 *    Local size: 32
 *    Save regs size: 8
 *    Called by:
 *        L0042D299()
 *        L0042D513()
 *        L0042D52D()
 */

L0042D548()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0043759C(M00644cae, & Vfffffffc, & Vfffffff8, & Vfffffff0, & Vffffffec, & Vffffffe8, & Vffffffe4, & Vffffffe0, & Vfffffff4);
    M00501ba8 = M0064a3b0;
    ebx = *L004eeed4(Vffffffe4);
    do {
        L0042D66E();
        ebx = ebx - 1;
    } while(ebx > 0);
    ebx = *L004eeed4(L00412518(0x16));
    do {
        L0042D768();
        ebx = ebx - 1;
    } while(ebx > 0);
    if(!(M00648b5a & 1)) {
        esi = 0;
        if(M00644fe6 != 0) {
            ebx = *L004eeed4(M00644fe6 << 2);
            if(ebx > 0x19) {
                ebx = 0x19;
            }
            if(ebx == 0) {
                esi = 1;
            }
            do {
                L0042D862();
                ebx = ebx - 1;
            } while(ebx > 0);
        }
        if(esi == 0) {
            ebx = *L004eeed4(Vffffffe4);
            do {
                L0042DF8F();
                ebx = ebx - 1;
            } while(ebx > 0);
        }
    }
    ebx = Vffffffec;
    if(!(M00648b5a & 1)) {
        ebx = ebx << 2;
    }
    ebx = *L004eeed4(ebx);
    do {
        L0042DF3B();
        ebx = ebx - 1;
    } while(ebx > 0);
    eax = *L004eeed4(Vffffffec);
    ebx = eax;
    do {
        eax = L0042D9D2();
        ebx = ebx - 1;
    } while(ebx > 0);
}

/*    Procedure: 0x0042D66E - 0x0042D767
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D548()
 */

L0042D66E()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    eax = L004304F5(1);
    ebx = eax;
    if(ebx != 0) {
        *(ebp - 4) = 20480;
        *(ebp - 2) = 0x33;
        L0042E0D5(ebx, *(ebp - 4));
        *(ebx + 0xff) = 0x11;
        *(ebx + 0xf8) = 8;
        if(L0042DFFE(ebp - 8) == 0) {
            eax = L0043DA00(ebx);
        } else {
            *(ebx + 0x100) = *( *(ebp - 8) + 0x130);
            *L00501b8c();
            *(ebx + 0xa8) = M00644bc8 << 2;
            *(ebx + 0xac) = M00644bc8 >> 0x1e;
            if(!(M00644ba7 & 0x80) && !( *(ebx + 0xab) & 0x80)) {
                *(ebx + 0xac) = *(ebx + 0xac) + 1;
            }
            *(ebx + 0xa8) = *(ebx + 0xa8) + M00644ba4;
            *(ebx + 0xac) = *(ebx + 0xac) + M00644ba8;
            if(L00430856(ebx) == 0) {
                eax = L0043DA00(ebx);
            } else {
                eax = *(ebx + 0x86) & 0xff;
                *(M00501ba8 + eax) = 2;
                eax = L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
            }
        }
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0042D768 - 0x0042D861
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D548()
 */

L0042D768()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    eax = L004304F5(0x11);
    ebx = eax;
    if(ebx != 0) {
        *(ebp - 4) = 20480;
        *(ebp - 2) = 0x33;
        L0042E0D5(ebx, *(ebp - 4));
        *(ebx + 0xff) = 0x11;
        *(ebx + 0xf8) = 8;
        if(L0042DFFE(ebp - 8) == 0) {
            eax = L0043DA00(ebx);
        } else {
            *(ebx + 0x100) = *( *(ebp - 8) + 0x130);
            *L00501b8c();
            *(ebx + 0xa8) = M00644bc8 << 2;
            *(ebx + 0xac) = M00644bc8 >> 0x1e;
            if(!(M00644ba7 & 0x80) && !( *(ebx + 0xab) & 0x80)) {
                *(ebx + 0xac) = *(ebx + 0xac) + 1;
            }
            *(ebx + 0xa8) = *(ebx + 0xa8) + M00644ba4;
            *(ebx + 0xac) = *(ebx + 0xac) + M00644ba8;
            if(L00430856(ebx) == 0) {
                eax = L0043DA00(ebx);
            } else {
                eax = *(ebx + 0x86) & 0xff;
                *(M00501ba8 + eax) = 2;
                eax = L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
            }
        }
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0042D862 - 0x0042D9D1
 *    Argument size: 0
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L0042D548()
 */

L0042D862()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = L004304F5(1);
    edi = eax;
    if(edi != 0) {
        esi = L0042DFFE( & Vfffffff4);
        if(esi == 0) {
            eax = L0043DA00(edi);
        } else {
            if(!( *(esi + 0x14c) & 0x20)) {
                (save)esi;
                (save)edi;
                esi = esi + 0x3e;
                edi = edi + 0x3e;
                ecx = 6;
                asm("rep movsd");
                (restore)edi;
                (restore)esi;
                (save)esi;
                (save)edi;
                ecx = 9;
                asm("rep movsd");
                (restore)edi;
                (restore)esi;
                *(edi + 0x56) = *(esi + 0x56);
                *(edi + 0x57) = 1;
            } else {
                *(edi + 0x56) = *(esi + 0x86);
                *(edi + 0x57) = 1;
            }
            bl = *(edi + 0x86);
            if(L0042C7C4(esi, bl, & Vffffffdc, & Vfffffffc, & Vfffffff8) != 0) {
                eax = L0043DA00(edi);
            } else {
                L0045A044(edi + 0x3e, & Vffffffdc);
                *(edi + 0xff) = 0x24;
                *(edi + 0x100) = 0;
                *(edi + 0xfe) = *(esi + 0x86);
                *L00501b8c();
                *(edi + 0xa8) = M00644bc8 << 4;
                *(edi + 0xac) = M00644bc8 >> 0x1c;
                if(!(M00644ba7 & 0x80) && !( *(edi + 0xab) & 0x80)) {
                    *(edi + 0xac) = *(edi + 0xac) + 1;
                }
                *(edi + 0xa8) = *(edi + 0xa8) + M00644ba4;
                *(edi + 0xac) = *(edi + 0xac) + M00644ba8;
                L0042CEA4(edi);
                if(!( *(esi + 0x14c) & 0x40)) {
                    eax = *(edi + 0x86) & 0xff;
                    *(M00501ba8 + eax) = 0x4e;
                } else {
                    eax = *(edi + 0x86) & 0xff;
                    *(M00501ba8 + eax) = 2;
                }
                eax = L00414070(0x17, 0, *(edi + 0x86) & 0xff);
            }
        }
    }
}

/*    Procedure: 0x0042D9D2 - 0x0042D9D2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D548()
 */

L0042D9D2()
{



}

/*    Procedure: 0x0042D9D3 - 0x0042D9D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042DF3B()
 */

L0042D9D3()
{



}

/*    Procedure: 0x0042D9D8 - 0x0042DA36
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042DF3B()
 */

L0042D9D8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    eax = L004304F5(0xa);
    ebx = eax;
    if(ebx != 0) {
        *(ebx + 0xfe) = A8;
        *(ebp - 4) = 20480;
        *(ebp - 2) = 0x33;
        L0042E0D5(ebx, *(ebp - 4));
        *(ebx + 0xff) = 5;
        L0042DF11(ebx, 4);
        eax = L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
    }
}

/*    Procedure: 0x0042DA37 - 0x0042DC8E
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L0042DF3B()
 */

L0042DA37(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    esi = 0x4df280;
    edi = & Vffffffe4;
    ecx = 6;
    asm("rep movsd");
    eax = L004304F5(0xb);
    edi = eax;
    if(edi != 0) {
        *(edi + 0xfe) = bl;
        Vfffffffc = 20480;
        Vfffffffe = 0x33;
        L0042E0D5(edi, Vfffffffc);
        *(edi + 0xff) = 5;
        L0042DF11(edi, 2);
        L00414070(0x17, 0, *(edi + 0x86) & 0xff);
        esi = edi;
        eax = L004304DF(esi, 0xb, *(esi + 0x82));
        edi = eax;
        if(edi != 0) {
            *(edi + 0xff) = 0xb;
            *(edi + 0xfe) = *(esi + 0x86);
            *(edi + 0x100) = bl;
            *(edi + 0x101) = *(edi + 0x101) + 1;
            *(edi + 0x102) = 0x1f4;
            *(edi + 0x106) = 65036;
            *(edi + 0x104) = 0;
            L0045A044(edi + 0x3e, & Vffffffe4);
            L0042DF11(edi, 0);
            L00414070(0x17, 0, *(edi + 0x86) & 0xff);
            if(!( *L00501b8c() & 0x40)) {
                eax = L004304DF(esi, 0xb, *(esi + 0x82));
                edi = eax;
                if(edi != 0) {
                    *(edi + 0xff) = 0xb;
                    *(edi + 0xfe) = *(esi + 0x86);
                    *(edi + 0x100) = bl;
                    *(edi + 0x101) = *(edi + 0x101) + 1;
                    *(edi + 0x102) = 65036;
                    *(edi + 0x106) = 65036;
                    *(edi + 0x104) = 0;
                    L0045A098(edi + 0x3e, & Vffffffe4);
                    L0045A098(edi + 0x3e, & Vffffffe4);
                    L0042DF11(edi, 0);
                    L00414070(0x17, 0, *(edi + 0x86) & 0xff);
                    if(!( *L00501b8c() & 0x40)) {
                        eax = L004304DF(esi, 0xb, *(esi + 0x82));
                        edi = eax;
                        if(edi != 0) {
                            *(edi + 0xff) = 0xb;
                            *(edi + 0xfe) = *(esi + 0x86);
                            *(edi + 0x100) = bl;
                            *(edi + 0x101) = *(edi + 0x101) + 1;
                            *(edi + 0x102) = 0;
                            *(edi + 0x106) = 64536;
                            *(edi + 0x104) = 0;
                            L0045A098(edi + 0x3e, & Vffffffe4);
                            L0045A098(edi + 0x3e, & Vffffffe4);
                            L0045A098(edi + 0x3e, & Vffffffe4);
                            L0042DF11(edi, 0);
                            eax = L00414070(0x17, 0, *(edi + 0x86) & 0xff);
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x0042DC8F - 0x0042DF10
 *    Argument size: 4
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L0042DF3B()
 */

L0042DC8F(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffe;



    esi = 0x4df298;
    edi = & Vffffffe0;
    ecx = 6;
    asm("rep movsd");
    eax = L004304F5(0xa);
    ebx = eax;
    if(ebx != 0) {
        *(ebx + 0xfe) = A8;
        Vfffffff8 = 20480;
        Vfffffffa = 0x33;
        L0042E0D5(ebx, Vfffffff8);
        *(ebx + 0xff) = 5;
        L0042DF11(ebx, 4);
        L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
        esi = ebx;
        eax = L0043051D(esi, 0xb, L0042CBCC(0xb, & Vfffffffe));
        ebx = eax;
        if(ebx != 0) {
            *(ebx + 0xff) = 0xb;
            *(ebx + 0xfe) = *(esi + 0x86);
            *(ebx + 0x100) = A8;
            *(ebx + 0x101) = *(ebx + 0x101) + 1;
            *(ebx + 0x102) = 0x1f4;
            *(ebx + 0x106) = 65036;
            *(ebx + 0x104) = 0;
            L0045A044(ebx + 0x3e, & Vffffffe0);
            L0042DF11(ebx, 0);
            L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
            if(!( *L00501b8c() & 0x40)) {
                eax = L0043051D(esi, 0xb, L0042CBCC(0xb, & Vfffffffe));
                ebx = eax;
                if(ebx != 0) {
                    *(ebx + 0xff) = 0xb;
                    *(ebx + 0xfe) = *(esi + 0x86);
                    *(ebx + 0x100) = A8;
                    *(ebx + 0x101) = *(ebx + 0x101) + 1;
                    *(ebx + 0x102) = 65036;
                    *(ebx + 0x106) = 65036;
                    *(ebx + 0x104) = 0;
                    L0045A098(ebx + 0x3e, & Vffffffe0);
                    L0045A098(ebx + 0x3e, & Vffffffe0);
                    L0042DF11(ebx, 0);
                    L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
                    if(!( *L00501b8c() & 0x40)) {
                        eax = L0043051D(esi, 0xb, L0042CBCC(0xb, & Vfffffffe));
                        ebx = eax;
                        if(ebx != 0) {
                            *(ebx + 0xff) = 0xb;
                            *(ebx + 0xfe) = *(esi + 0x86);
                            *(ebx + 0x100) = A8;
                            *(ebx + 0x101) = *(ebx + 0x101) + 1;
                            *(ebx + 0x102) = 0;
                            *(ebx + 0x106) = 64536;
                            *(ebx + 0x104) = 0;
                            L0045A098(ebx + 0x3e, & Vffffffe0);
                            L0045A098(ebx + 0x3e, & Vffffffe0);
                            L0045A098(ebx + 0x3e, & Vffffffe0);
                            L0042DF11(ebx, 0);
                            eax = L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x0042DF11 - 0x0042DF3A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042D9D8()
 *        L0042DA37()
 *        L0042DC8F()
 */

L0042DF11(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = *((( *L00501b8c() & 0xf) + Ac) * 4 + 0x4df208);
    *(A8 + 0x11a) = eax;
    *(A8 + 0x118) = 0xfb;
    return *(A8 + 0x11a);
}

/*    Procedure: 0x0042DF3B - 0x0042DF8D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D548()
 */

L0042DF3B()
{



    if(!(eax = *L004eeed4(4) - 1)) {
        == ? L0042df64 : ;
        if(eax = eax - 1) {
            goto L0042df72;
        }
        if(eax = eax - 1) {
            goto L0042df80;
        }
        return;
    }
    return L0042D9D8(M00644c64);
    return L0042DA37(M00644c64);
L0042df72:
    return L0042DC8F(M00644c64);
L0042df80:
    return L0042D9D3(M00644c64);
}

/*    Procedure: 0x0042DF8E - 0x0042DF8E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042DF8E()
{



}

/*    Procedure: 0x0042DF8F - 0x0042DFFD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D548()
 */

L0042DF8F()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    if(L0042E04A(ebp - 8) != 0) {
        eax = L004304F5(0xf);
        ebx = eax;
        if(ebx != 0) {
            *(ebx + 0x101) = 0xff;
            *(ebp - 4) = 20480;
            *(ebp - 2) = 0x18;
            L0042E0D5(ebx, *(ebp - 4));
            *(ebx + 0xff) = 0xd;
            *(ebx + 0x56) = *( *(ebp - 8) + 0x130);
            eax = L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
        }
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0042DFFE - 0x0042E049
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042D40C()
 *        L0042D66E()
 *        L0042D768()
 *        L0042D862()
 *        L00430230()
 */

L0042DFFE(A8)
/* unknown */ void  A8;
{



    if(M00644fe6 == 0) {
        return 0;
    }
    *A8 = *L004eeed4(M00644fe6) * 0x322 + 6574062;
    return *L00501b94( *( *A8 + 0x130) & 0xff, M0064a3b0);
}

/*    Procedure: 0x0042E04A - 0x0042E0D4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042DF8F()
 */

L0042E04A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    if(*L00648AE2 == 0 || *L00644FE6 == 0) {
        return 0;
    }
    edx = *L004eeed4( *(ebx + 16190));
    for(eax = 0; eax < *(ebx + 0x442); eax = eax + 1) {
        if(!( *(ebx + eax * 0x191 * 2 + 0x57b) & 0x10)) {
            ecx = edx;
            edx = edx - 1;
            if(ecx <= 0) {
                break;
            }
        }
    }
    if(edx >= 0) {
        return 0;
    }
    if(!( *(ebx + eax * 0x191 * 2 + 0x57b) & 0x10)) {
        eax = eax * 0x322;
        eax = eax + ebx + 0x44a;
        *A8 = eax;
        return 1;
    }
    return 0;
}

/*    Procedure: 0x0042E0D5 - 0x0042E119
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00412C5C()
 *        L0042CDD4()
 *        L0042CF1A()
 *        L0042D4AA()
 *        L0042D4F2()
 *        L0042D66E()
 *        L0042D768()
 *        L0042D9D8()
 *        L0042DA37()
 *        L0042DC8F()
 *        L0042DF8F()
 */

L0042E0D5(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *L00501b8c();
    *(A8 + 0xb4) = 0;
    *(A8 + 0xb6) = 0;
    *(A8 + 0xb8) = 0;
    return *L005016e0(A8, Ac, M00644bc8, M00644bcc);
}

/*    Procedure: 0x0042E11A - 0x0042E14F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043051D()
 */

L0042E11A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *L00501b8c();
    *(A8 + 0xa0) = M00644bc8;
    return L00430CB0(Ac, A10, M00644bc8, A8 + 0x124);
}

/*    Procedure: 0x0042E150 - 0x0042E1A3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042E1A4()
 */

L0042E150(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    edx = Ac;
    eax = A8;
    ecx = A10 - *(eax + 0xac);
    if(edx < *(eax + 0xa8)) {
        ecx = ecx - 1;
    }
    esi = edx - *(eax + 0xa8);
    *(eax + 0xa8) = edx;
    *(eax + 0xac) = A10;
    edx = *((( *(eax + 0xff) & 0xff) << 4) + 0x4decbc);
    if(edx != 0) {
        eax = *edx(eax, esi, ecx);
    }
}

/*    Procedure: 0x0042E1A4 - 0x0042E1BB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042E1A4(A8)
/* unknown */ void  A8;
{



    return L0042E150( *(A8 + 8), *A8, *(A8 + 4));
}

/*    Procedure: 0x0042E1BC - 0x0042E1E4
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042E1E5()
 */

L0042E1BC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    M00648b56 = Ac;
    eax = *((( *(A8 + 0xff) & 0xff) << 4) + 0x4decb8);
    if(eax != 0) {
        eax = *eax(A8);
    }
}

/*    Procedure: 0x0042E1E5 - 0x0042E1F9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0042E1E5(A8)
/* unknown */ void  A8;
{



    return L0042E1BC( *A8, *(A8 + 4));
}

/*    Procedure: 0x0042E1FA - 0x0042E26F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0042E1FA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ax = *(A8 + 0xa4) & 65535;
    edx = M00655674 << 0xe >> 0x10;
    eax = ax & 65535;
    *(A8 + 0xa4) = *(A8 + 0xa4) - edx;
    if((edx :: eax > 0 & 1) != 0) {
        return L0043DA00(A8);
    }
    ax = *(A8 + 0xa4) & 65535;
    if(ax < 51200 && ax >= 48128) {
        L0043D8E4(A8, A8 + 0x3e, 2);
    }
    return *L005016ec(A8, A10, Ac);
}

/*    Procedure: 0x0042E270 - 0x0042E2CA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0042E270(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = M00655674 << 0xf;
    di = *(A8 + 0xa4) & 65535;
    *L005016ec(A8, A10, Ac);
    esi = esi >> 0x10;
    eax = di & 65535;
    eax = esi :: eax > 0 & 1;
    *(A8 + 0xa4) = *(A8 + 0xa4) - esi;
    if(eax != 0 || *(A8 + 0x88) > 0xd) {
        eax = L0043DA00(A8);
    }
}

/*    Procedure: 0x0042E2CB - 0x0042E2CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042E2CB()
{



}

/*    Procedure: 0x0042E2D0 - 0x0042E325
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0042E2D0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    edx = *(A8 + 0xa0) & 0xff;
    ebx = *(A8 + 0xa0) >> 0x10;
    cl = (ebx & 7) + 6;
    cl = (edx & 7) + 6;
    return L0045AFF0(A8, (M00644ba4 << cl >> 0x10) + ebx, (M00644ba4 << cl >> 0x10) + edx);
}

/*    Procedure: 0x0042E326 - 0x0042E34D
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0042E326(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0043D8E4(A8, A8 + 0x3e, 4);
    return L0042E34E(A8, Ac, A10);
}

/*    Procedure: 0x0042E34E - 0x0042E38E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042E326()
 */

L0042E34E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *L005016ec(A8, A10, Ac);
    *L004dde58(A8, M0064a3b0, M00655674);
    return L0042E38F(A8, Ac, A10);
}

/*    Procedure: 0x0042E38F - 0x0042E5CD
 *    Argument size: 4
 *    Local size: 96
 *    Save regs size: 12
 *    Called by:
 *        L0042E34E()
 */

L0042E38F(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffa4;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;
    /* unknown */ void  Vffffffff;



    esi = 6572964;
    if(*L00644C8C != 0x2c) {
        if(!( *( *L00644C6C + 0xc9) & 4)) {
            eax = *L00644C6C;
            if(*(eax + 0x56) != *(A8 + 0x56)) {
                goto L0042e5c7;
            }
            eax = *L00644C6C;
            if(*(eax + 0x57) != *(A8 + 0x57)) {
                goto L0042e5c7;
            }
            (save)6572964;
            esi = A8 + 0x3e;
            edi = & Vffffffdc;
            ecx = 6;
            asm("rep movsd");
            (restore)esi;
            L0045A098( & Vffffffdc, *(esi + 0xc8) + 0x3e);
            eax = L00459E08( & Vffffffdc, 0xd);
            if(eax >= 2) {
                goto L0042e5c7;
            }
            Vffffffd0 = Vffffffdc;
            Vffffffd4 = Vffffffe4;
            Vffffffd8 = Vffffffec;
            L004536D2( & Vffffffd0, & Vffffffd0);
            edi = L004537B0( *( *(esi + 0xc8) + 0x18), Vffffffd0);
            edi = edi + L004537B0( *( *(esi + 0xc8) + 0x1c), Vffffffd4);
            eax = edi + L004537B0( *( *(esi + 0xc8) + 0x20), Vffffffd8);
            if(eax < 1073741823) {
                goto L0042e5c7;
            }
        } else {
            eax = *"htB"(A8, M0064a3b0, & Vfffffffe, & Vffffffff, & Vfffffff4, & Vfffffff8, & Vfffffffd);
            if(Vfffffffe & 0x10) {
                goto L0042e5c7;
            }
            if(Vffffffff != *(esi + 0xc0)) {
                eax = L0043DA00(A8);
                goto L0042e5c7;
            }
        }
        eax = *(esi + 0x120);
        if(eax >= *(esi + 0x118)) {
            goto L0042e5c7;
        }
        if(*(A8 + 0x82) == 0x99 || *(A8 + 0x82) == 0x6a) {
            Vffffffa0 = 39173;
            Vffffffb8 = -1;
            Vffffffbc = A8;
            Vffffffa4 = ( *(A8 + 0x9e) & 65535) + 36352;
            L00421DEC( & Vffffffa0);
            L004701BE(0x11);
            *(esi + 0x120) = *(esi + 0x120) + 1;
            *(esi + ( *(A8 + 0x9e) & 65535) * 2 + 0x134) = *(esi + ( *(A8 + 0x9e) & 65535) * 2 + 0x134) + 1;
            L00419470(0x16, *(A8 + 0x9e) & 65535);
            eax = L0043DA00(A8);
            goto L0042e5c7;
        }
        eax = *( *( *L00501b9c( *( *(esi + 0xc8) + 0x82)) + 0x38) + 0x12);
        goto L0042e5c4;
L0042e58e:
        *( *(esi + 0xc8) + eax + 0xd6) = *(A8 + 0x82) == 0xc ? 0x88 : 0xc0;
        *(esi + 0x118) = *(esi + 0x118) - 1;
        eax = L0043DA00(A8);
        goto L0042e5c7;
L0042e5c4:
        do {
            if(!(eax = eax - 1)) {
                goto L0042e5c7;
            }
        } while(*( *(esi + 0xc8) + eax + 0xd6) != 0);
        goto L0042e58e;
    }
L0042e5c7:
}

/*    Procedure: 0x0042E5CE - 0x0042E5D2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042E5CE()
{



}

/*    Procedure: 0x0042E5D3 - 0x0042E601
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0042E5D3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *L004dde58(A8, M0064a3b0, M00655674);
    return L0042E654(A8, Ac, A10);
}

/*    Procedure: 0x0042E602 - 0x0042E653
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0042E602(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 0x8b) = 0;
    *L004dde58(A8, M0064a3b0, M00655674);
    *L004dde2c(A8, Ac);
    *L004dde30(A8, Ac, 1, Ac);
    return L0042E654(A8, Ac, A10);
}

/*    Procedure: 0x0042E654 - 0x0042E745
 *    Argument size: 12
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L0042E5D3()
 *        L0042E602()
 */

L0042E654(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;
    /* unknown */ void  Vffffffff;



    *L005016ec(A8, A10, Ac);
    if(*(A8 + 0x9e) != 0 && *(A8 + 0x82) > 5) {
        esi = A8 + 0x3e;
        edi = & Vffffffdc;
        ecx = 6;
        asm("rep movsd");
        Vffffffdc = Vffffffdc - *(A8 + 0x8c);
        Vffffffe4 = Vffffffe4 - *(A8 + 0x90);
        Vffffffec = Vffffffec - *(A8 + 0x94);
        L0043D8E4(A8, & Vffffffdc, 0);
    }
    eax = *"htB"(A8, M0064a3b0, & Vfffffffe, & Vffffffff, & Vfffffff4, & Vfffffff8, & Vfffffffd);
    if(!(Vfffffffe & 0x80)) {
        eax = L0042E820(A8, Vfffffff4);
        goto L0042e73f;
    }
    if(M00644c18 & 4) {
        goto L0042e73f;
    }
    eax = *(A8 + 0x82);
    if(eax <= 0xd) {
        switch(*(eax + 0x42e713)) {
            case 0:
                goto L0042e738;
            case 1:
L0042e73f:
                return;
            case 2:
                goto L0042e72f;
        }
        *eax = *eax + al;
        *eax = *eax + al;
        *eax = *eax + eax;
        *edx = *edx + al;
        *edx = *edx + eax;
        al = al + *ecx;
        *ecx = *ecx + eax;
        goto L0042e73f;
L0042e72f:
        if(M00644c18 & 8) {
            goto L0042e73f;
        }
    }
L0042e738:
    eax = L0042E746(A8);
    goto L0042e73f;
}

/*    Procedure: 0x0042E746 - 0x0042E7CA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042E654()
 *        L0042E7CB()
 *        L0042E868()
 *        L00430103()
 */

L0042E746(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    eax = *L004eeedc(M0064a3b0, A8, 9, 0x9b, ebp - 4);
    ebx = eax;
    if(ebx != 0) {
        *(ebx + 0x87) = 0xb;
        *(ebx + 0xff) = 0x1c;
        *(ebx + 0xa4) = -1;
        *(ebx + 0x9e) = 65535;
        eax = *L00501b8c();
        L0045AFF0(ebx, eax & 65535, eax >> 0x10);
        L004703C0(6, *(A8 + 0x88));
        eax = *L004eeed8(A8);
    }
}

/*    Procedure: 0x0042E7CB - 0x0042E81F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042E820()
 */

L0042E7CB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    esi = *( *(A8 + 0x82) * 4 + 0x4df248);
    if(L0043E288(Ac, esi, *(A8 + 0x100) & 0xff) != 0) {
        eax = L0042E746(A8);
    } else {
        L004703C0(6, *(A8 + 0x88));
        eax = *L004eeed8(A8);
    }
}

/*    Procedure: 0x0042E820 - 0x0042E867
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042E654()
 *        L00430103()
 */

L0042E820(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(( *(Ac + 0x86) != *(A8 + 0x100) || *(A8 + 0x9e) > 2) && ( *(A8 + 0x82) != 0xd || L0042E868(A8, Ac) <= 0)) {
        eax = L0042E7CB(A8, Ac);
    }
}

/*    Procedure: 0x0042E868 - 0x0042E963
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042E820()
 */

L0042E868(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = M00649a94;
L0042e876:
    do {
        if(!(edx = edx - 1)) {
            goto L0042e879;
        }
        ebx = edx * 0x34 + 6593176;
        eax = *(ebx + 4) & 0xf;
        if(eax != 5 && eax != 6) {
            goto L0042e876;
        }
        eax = *(ebx + 6);
        if(eax != M00644cae || *(ebx + 0x1a) == 0) {
            goto L0042e876;
        }
        eax = *(ebx + 0x1a);
    } while(eax != ( *(A8 + 0xfe) & 0xff));
    goto L0042e8ba;
L0042e879:
    eax = 0;
    goto L0042e960;
L0042e8ba:
    eax = *(ebx + 0x1a);
    if(eax != ( *(Ac + 0x86) & 0xff)) {
        al = *( *L00501b94( *(ebx + 0x1a), M0064a3b0) + 0x56);
        if(al == *(Ac + 0x86)) {
            goto L0042e8f2;
        }
        eax = 0;
    } else {
L0042e8f2:
        L0042E746(A8);
        *(Ac + 0x7e) = 0xa;
        *(ebx + 5) = 0xff;
        eax = *L00501b94( *(ebx + 0x1a), M0064a3b0);
        *(eax + 0x82) = 0xa2;
        *(eax + 0x7e) = 6;
        eax = *(eax + 0x86) & 0xff;
        *(M00501ba8 + eax) = 8;
        eax = Ac;
        if(*(eax + 0x88) <= 0x10) {
            eax = L0043E288(M00644c6c, 0xc8, 0);
        }
        al = 1;
    }
L0042e960:
}

/*    Procedure: 0x0042E964 - 0x0042EA08
 *    Argument size: 12
 *    Local size: 24
 *    Save regs size: 8
 */

L0042E964(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    esi = eax;
    if(*(esi + 0x14c) == 0x40) {
        *L004dde40(A8, esi, -1);
        *L004dde48(A8, esi, & Vffffffe8);
        *(A8 + 0x8c) = Vffffffe8 >> 7 | (Vffffffec & 0x7f) << 0x19;
        *(A8 + 0x90) = Vfffffff0 >> 7 | (Vfffffff4 & 0x7f) << 0x19;
        *(A8 + 0x94) = Vfffffff8 >> 7 | (Vfffffff4 & 0x7f) << 0x19;
        eax = *L005016ec(A8, A10, Ac);
    }
}

/*    Procedure: 0x0042EA09 - 0x0042EA2C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0042EA09(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0042EA2D(A8, Ac, A10);
    return L0043D05C(A8, 0);
}

/*    Procedure: 0x0042EA2D - 0x0042EAE5
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0042EA09()
 */

L0042EA2D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff9;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0x8b) = 0;
    *L004dde58(A8, M0064a3b0, M00655674);
    *L004dde30(A8, Ac, 1, Ac);
    *L004dde2c(A8, Ac);
    L0042EAE6(A8 + 0x8c, 6573100, Ac, 0xd);
    *L005016ec(A8, A10, Ac);
    L0042EDDA(A8, Ac, A10);
    if(*(A8 + 0x14e) != 0) {
        L0043D8E4(A8, A8 + 0x3e, 0);
    }
    return *"htB"(A8, M0064a3b0, & Vfffffffa, & Vfffffffb, & Vfffffffc, & Vfffffff4, & Vfffffff9);
}

/*    Procedure: 0x0042EAE6 - 0x0042EBA7
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042EA2D()
 *        L004411B5()
 */

L0042EAE6(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(A10 < 49710 && A10 > 0) {
        eax = !(eax = *A8 - *Ac) ? *A8 - *Ac : ~( *A8 - *Ac);
        if(eax > 0x64) {
            *A8 = *A8 - L004537B0( *A8 - *Ac, A10 << A14);
        }
        eax = !(eax = *(A8 + 4) - *(Ac + 4)) ? *(A8 + 4) - *(Ac + 4) : ~( *(A8 + 4) - *(Ac + 4));
        if(eax > 0x64) {
            *(A8 + 4) = *(A8 + 4) - L004537B0( *(A8 + 4) - *(Ac + 4), A10 << A14);
        }
        eax = !(eax = *(A8 + 8) - *(Ac + 8)) ? *(A8 + 8) - *(Ac + 8) : ~( *(A8 + 8) - *(Ac + 8));
        if(eax > 0x64) {
            eax = L004537B0( *(A8 + 8) - *(Ac + 8), A10 << A14);
            *(A8 + 8) = *(A8 + 8) - eax;
        }
    }
}

/*    Procedure: 0x0042EBA8 - 0x0042ECAD
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 */

L0042EBA8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff9;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0x8b) = 0;
    *L004dde58(A8, M0064a3b0, M00655674);
    *L004dde2c(A8, Ac);
    *L004dde30(A8, Ac, 1, Ac);
    *L005016ec(A8, A10, Ac);
    eax = L0042EDDA(A8, Ac, A10);
    if(*(A8 + 0x14e) != 0) {
        eax = L0043D8E4(A8, A8 + 0x3e, 0);
    }
    if(*(A8 + 0xff) != 7) {
        eax = *"htB"(A8, M0064a3b0, & Vfffffffa, & Vfffffffb, & Vfffffffc, & Vfffffff4, & Vfffffff9);
    }
    if(Vfffffffa != 0 && *(A8 + 0xff) == 0x23 && !(Vfffffffa & 0x40) && !(Vfffffffa & 0x20)) {
        L0042C9B4( *(A8 + 0x86), Vfffffffc);
        if(al != 0) {
            *(A8 + 0xff) = 0x20;
            eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
        } else {
            eax = L0042F78E(A8, Vfffffffc);
        }
    }
}

/*    Procedure: 0x0042ECAE - 0x0042ED78
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L0042ED79()
 *        L0042FA73()
 */

L0042ECAE(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    *(A8 + 0x8b) = 0;
    *(A8 + 0x56) = *(eax + 0x56);
    *(A8 + 0x57) = *(eax + 0x57);
    esi = eax;
    edi = A8;
    ecx = 9;
    asm("rep movsd");
    *(A8 + 0x8c) = *(eax + 0x8c);
    *(A8 + 0x90) = *(eax + 0x90);
    *(A8 + 0x94) = *(eax + 0x94);
    L00429954(A8, eax, & Vffffffe8);
    L0044EB4E(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), Vffffffe8, Vffffffec);
    L0044EB4E(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), Vfffffff0, Vfffffff4);
    *(A8 + 0x25) = 0;
    *(A8 + 0x58) = 0;
    return L0044EB4E(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), Vfffffff8, Vfffffffc);
}

/*    Procedure: 0x0042ED79 - 0x0042EDD9
 *    Argument size: 12
 *    Local size: 36
 *    Save regs size: 4
 */

L0042ED79(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff9;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    L0042ECAE(A8);
    L0042EDDA(A8, Ac, A10);
    if(*(A8 + 0x14e) != 0) {
        L0043D8E4(A8, A8 + 0x3e, 0);
    }
    return *"htB"(A8, M0064a3b0, & Vfffffffa, & Vfffffffb, & Vfffffffc, & Vfffffff4, & Vfffffff9);
}

/*    Procedure: 0x0042EDDA - 0x0042EEAB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042EA2D()
 *        L0042EBA8()
 *        L0042ED79()
 */

L0042EDDA(A8)
/* unknown */ void  A8;
{



    ecx = M00655674 >> 0x10;
    edx = M00655674 & 65535;
    if(*(A8 + 0xe8) != 0) {
        if(ecx > 0) {
            if(edx >= ( *(A8 + 0xe8) & 65535)) {
                goto L0042ee17;
            }
            *(A8 + 0xe8) = *(A8 + 0xe8) - dx;
        } else {
L0042ee17:
            *(A8 + 0xe8) = 0;
        }
    }
    if(*(A8 + 0xff) < 0x1e) {
        if(*(A8 + 0x9e) == 0) {
            goto L0042eeaa;
        }
        edx = *(A8 + 0x9e) & 65535;
        if(edx < M00655674 >> 1) {
            *(A8 + 0x9e) = 0;
            return;
        }
        edx = M00655674 >> 1;
        *(A8 + 0x9e) = *(A8 + 0x9e) - dx;
        return;
    }
    if(*(A8 + 0xff) > 0xc && *(A8 + 0x9e) != 65535) {
        edx = *(A8 + 0x9e) & 65535;
        ecx = 65535 - edx;
        if(ecx < M00655674 >> 1) {
            *(A8 + 0x9e) = 65535;
            return;
        }
        *(A8 + 0x9e) = *(A8 + 0x9e) + (M00655674 >> 1);
    }
L0042eeaa:
}

/*    Procedure: 0x0042EEAC - 0x0042EF04
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00430968()
 */

L0042EEAC(A8, A14)
/* unknown */ void  A8;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    ecx = 6572964;
    if(*(A8 + 0x118) == 0x10) {
        eax = A14;
        if(eax == *L00644C64) {
            eax = *L00649A94 - 1;
            if(eax >= 0) {
                do {
                    if(*(ecx + eax * 0xd * 4 + 20222) == *(A8 + 0xa0)) {
                        goto L0042eeea;
                    }
                    eax = eax - 1;
                } while(eax >= 0);
                goto L0042ef02;
L0042eeea:
                eax = eax * 0xd;
                *(ecx + eax * 4 + 20217) = *(A8 + 0x11a);
                return;
            }
        }
    }
L0042ef02:
}

/*    Procedure: 0x0042EF05 - 0x0042EF49
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042F125()
 *        L0042F50C()
 *        L0042F5B4()
 *        L0042F816()
 *        L0042F9B9()
 *        L0042FA73()
 *        L0042FCAD()
 *        L0042FD14()
 *        L0042FF08()
 *        L0043008F()
 *        L00430103()
 *        L004301A1()
 *        L0043037D()
 *        L00430410()
 */

L0042EF05(A8)
/* unknown */ void  A8;
{



    eax = L0043D6F8(A8, M00648b56);
    *(A8 + 0x14d) = *(A8 + 0x14d) - M00648b56;
    if(*(A8 + 0x14d) < 0) {
        eax = *L004dde5c(A8, M0064a3b0);
        *(A8 + 0x14d) = 0x13;
    }
}

/*    Procedure: 0x0042EF4A - 0x0042EFD1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0042EF4A()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp - 4) = *(ebx + 0xa8);
    *(ebp - 8) = *(ebx + 0xac);
    if(L0042F2BE(ebp - 8, ebp - 4, 6572968, 6572964) != 0) {
        *(ebx + 0xa8) = M00644ba4;
        *(ebx + 0xac) = M00644ba8;
        if(*(ebx + 0x118) == 0x10) {
            *(ebx + 0x100) = 0;
        }
        *(ebx + 0xff) = 0x1f;
        L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
        eax = L0042EFD2(ebx);
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0042EFD2 - 0x0042F03D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042EF4A()
 */

L0042EFD2(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    if(L0042CA00( *(A8 + 0x86), eax) != 0) {
        eax = *(A8 + 0x86) & 0xff;
        *(M00501ba8 + eax) = 0x4f;
        *(A8 + 0x57) = 1;
        *(A8 + 0xff) = 0x21;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x0042F03E - 0x0042F124
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 8
 */

L0042F03E(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    esi = eax;
    if(*(esi + 0xc9) == 0xfe || *(esi + 0xc9) == 0) {
        *(A8 + 0xff) = 7;
        if(!( *(esi + 0x14c) & 0x20)) {
            Vfffffffc = *L00501b8c() & 0xfff;
            Vfffffff4 = 0x1388;
            Vfffffff8 = 15000;
            L0045A7A8( & Vfffffff4, & Vfffffff4, esi);
            *(A8 + 0x102) = Vfffffff4;
            *(A8 + 0x104) = Vfffffff8;
            *(A8 + 0x106) = Vfffffffc;
        } else {
            *L00501b8c();
            *(A8 + 0x106) = (ax & 0x1ff) + 0x1388;
            *(A8 + 0x102) = 0;
            *(A8 + 0x104) = 0;
        }
        *(A8 + 0x8c) = 0;
        *(A8 + 0x90) = 0;
        *(A8 + 0x94) = 0;
        eax = L0042F125(A8);
    }
}

/*    Procedure: 0x0042F125 - 0x0042F1DB
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 8
 *    Called by:
 *        L0042F03E()
 */

L0042F125(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    esi = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    eax = *(A8 + 0x101);
    eax = *L004dde6c(A8, esi, eax, & Vfffffffc, & Vfffffff0, M0064a3b0);
    if(Vfffffffc > 6) {
        L0042A124(A8, & Vfffffff0, & Vffffffe4);
        eax = *L004dde34(A8);
    } else {
        L0042C96C( *(A8 + 0x86), esi);
        eax = *(A8 + 0x100) == 0 ? L004301D0(A8) : *(A8 + 0x100) != *(A8 + 0xfe) ? L0042F42D(A8) : L0042F78E(A8, esi);
    }
}

/*    Procedure: 0x0042F1DC - 0x0042F238
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042F1DC(A8)
/* unknown */ void  A8;
{



    eax = M00644ba8;
    if(eax >= *(A8 + 0xac)) {
        if(M00644ba8 != *(A8 + 0xac)) {
            goto L0042f20a;
        }
        eax = M00644ba4;
        if(eax >= *(A8 + 0xa8)) {
L0042f20a:
            *(A8 + 0xff) = 0x12;
            *(A8 + 0x9e) = 0;
            L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
            eax = L0042F239(A8);
        }
    }
}

/*    Procedure: 0x0042F239 - 0x0042F2BD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042F1DC()
 *        L004301D0()
 */

L0042F239(A8)
/* unknown */ void  A8;
{



    *(A8 + 0xb6) = 0;
    *(A8 + 0xb8) = 0;
    *(A8 + 0xba) = 0;
    *(A8 + 0xe6) = *(A8 + 0x82);
    *(A8 + 0x82) = 0x9a;
    edx = *(A8 + 0x86) & 0xff;
    *(M00501ba8 + edx) = 0xa;
    *(A8 + 0x7e) = 8;
    edx = *(A8 + 0xfa);
    ecx = edx << 0x10;
    edx = edx >> 0x10;
    if(!(ecx & -2147483648) && !( *(A8 + 0xab) & 0x80)) {
        *(A8 + 0xac) = *(A8 + 0xac) + 1;
    }
    *(A8 + 0xa8) = *(A8 + 0xa8) + ecx;
    *(A8 + 0xac) = *(A8 + 0xac) + edx;
}

/*    Procedure: 0x0042F2BE - 0x0042F30A
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042EF4A()
 *        L0042F30B()
 *        L00430280()
 *        L004302E5()
 */

L0042F2BE(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;



    eax = A8;
    edx = *Ac;
    edx :: *A14;
    asm("setc dl");
    edx = edx & 1;
    *Ac = *Ac - *A14;
    if(*eax == 0 && edx != 0) {
        goto L0042f2f1;
    }
    if(*eax - edx < *A10) {
L0042f2f1:
        *eax = *eax - *A10 - edx;
        al = 1;
    } else {
        *eax = *eax - *A10 - edx;
        eax = 0;
    }
}

/*    Procedure: 0x0042F30B - 0x0042F42C
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 8
 */

L0042F30B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = M00644ba4;
    Vfffffff8 = M00644ba8;
    L0042F2BE( & Vfffffff8, & Vfffffffc, A8 + 0xac, A8 + 0xa8);
    if(al != 0) {
        eax = Vfffffffc >> 3 | Vfffffff8 << 0x1d;
        *(A8 + 0xa4) = eax;
    } else {
        esi = *L004eeedc(M0064a3b0, A8, 0xa, 0, & Vfffffff4);
        if(esi != 0) {
            *(esi + 0xff) = 0x1e;
            *(esi + 0x118) = 0xfe;
            *(esi + 0xa8) = 16752270;
            *(esi + 0xac) = 0;
            *(esi + 0x9e) = 1;
        }
        eax = *(A8 + 0x86) & 0xff;
        *(M00501ba8 + eax) = 0x4f;
        *(A8 + 0xf2) = 0;
        *(A8 + 0x7e) = 0;
        *(A8 + 0x82) = *(A8 + 0xe6) & 65535;
        *(A8 + 0xff) = *(A8 + 0xf8);
        *(A8 + 0x8c) = 0;
        *(A8 + 0x90) = 0;
        *(A8 + 0x94) = 29111;
        *(A8 + 0xf2) = 0;
        *(A8 + 0xf6) = 0;
        *(A8 + 0xfa) = 0;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x0042F42D - 0x0042F50B
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L0042F125()
 *        L0042F50C()
 */

L0042F42D(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0xfe) = *(A8 + 0x100);
    esi = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    *(A8 + 0xff) = 0;
    L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    if(!( *(esi + 0x14c) & 0x10)) {
        if(!( *(esi + 0x14c) & 0x20)) {
            Vfffffff4 = 0;
            Vfffffff8 = 0x1770;
            Vfffffffc = 0;
            L0045A7A8( & Vfffffff4, & Vfffffff4, esi);
        } else {
            Vfffffff4 = 0;
            Vfffffff8 = 0;
            Vfffffffc = 0xfa0;
        }
        *(A8 + 0x102) = Vfffffff4;
        *(A8 + 0x104) = Vfffffff8;
        *(A8 + 0x106) = Vfffffffc;
    } else {
        *(A8 + 0x102) = 0;
        *(A8 + 0x104) = 0;
        *(A8 + 0x106) = 0;
    }
    return L0042F50C(A8);
}

/*    Procedure: 0x0042F50C - 0x0042F5B3
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 8
 *    Called by:
 *        L0042F42D()
 */

L0042F50C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    esi = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    eax = *(A8 + 0x101);
    *L004dde6c(A8, esi, eax, & Vfffffffc, & Vfffffff0, M0064a3b0);
    if(Vfffffffc > 6) {
        *L004dde50(A8, & Vfffffff0, & Vffffffe4);
        eax = *L004dde38(A8);
    } else {
        eax = *(A8 + 0x100) == 0 ? L004301D0(A8) : *(A8 + 0x100) != *(A8 + 0xfe) ? L0042F42D(A8) : L0042F78E(A8, esi);
    }
}

/*    Procedure: 0x0042F5B4 - 0x0042F742
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 12
 */

L0042F5B4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    edi = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    eax = *L00501b9c( *(edi + 0x82));
    esi = *(eax + 0x14) + *(eax + 0x18) - 0xc;
    if(esi > 0) {
        esi = 0;
    }
    if(esi < -15) {
        esi = -15;
    }
    (save)L004765BC( *(A8 + 0x102));
    eax = L004765BC( *(A8 + 0x104));
    (restore)edx;
    (save)edx + eax;
    eax = L004765BC( *(A8 + 0x106));
    (restore)edx;
    edx = edx + eax;
    ecx = ~esi;
    if(edx < 8192 >> cl) {
        *L005016d8( & Vfffffff0, *L004eeed4(65535), *L004eeed4(65535));
        ecx = ~esi;
        eax = Vfffffff0 >> cl;
        *(A8 + 0x102) = ax;
        ecx = ~esi;
        eax = Vfffffff4 >> cl;
        *(A8 + 0x104) = ax;
        ecx = ~esi;
        *(A8 + 0x106) = Vfffffff8 >> cl;
    }
    eax = *(A8 + 0x101);
    *L004dde6c(A8, edi, eax - 2, & Vfffffffc, & Vfffffff0, M0064a3b0);
    if(Vfffffffc > 6) {
        *L004dde50(A8, & Vfffffff0, & Vffffffe4);
        eax = *L004dde38(A8);
    } else {
        *L005016d8( & Vfffffff0, *L004eeed4(65535), *L004eeed4(65535));
        ecx = ~esi;
        eax = Vfffffff0 >> cl;
        *(A8 + 0x102) = ax;
        ecx = ~esi;
        eax = Vfffffff4 >> cl;
        *(A8 + 0x104) = ax;
        ecx = ~esi;
        *(A8 + 0x106) = Vfffffff8 >> cl;
    }
}

/*    Procedure: 0x0042F743 - 0x0042F78D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042F816()
 */

L0042F743(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L0042C9B4( *(A8 + 0x86), Ac);
    if(al != 0) {
        *(A8 + 0xff) = 0x20;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    } else {
        eax = L0042F78E(A8, Ac);
    }
}

/*    Procedure: 0x0042F78E - 0x0042F815
 *    Argument size: 8
 *    Local size: 28
 *    Save regs size: 8
 *    Called by:
 *        L0042EBA8()
 *        L0042F125()
 *        L0042F50C()
 *        L0042F743()
 */

L0042F78E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;



    if(!( *(Ac + 0x14c) & 0x10) && L0042CA40(A8, Ac, & Vffffffe4, & Vfffffffc) == 0) {
        eax = Vffffffe4 >> 0xa;
        *(A8 + 0x102) = ax;
        eax = Vffffffec >> 0xa;
        *(A8 + 0x104) = ax;
        *(A8 + 0x106) = Vfffffff4 >> 0xa;
        L004703C0(0xc, *(A8 + 0x88));
        *(A8 + 0xff) = 0x23;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x0042F816 - 0x0042F8F4
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 12
 */

L0042F816(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    esi = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    *L004dde4c(A8, esi, -2, & Vfffffffc, & Vfffffff0, M0064a3b0);
    if(Vfffffffc <= 0) {
        if(M005015f0 == 0x3e2) {
            goto L0042f8cf;
        }
        L0042F743(A8, esi);
        if(!( *(esi + 0x14c) & 0x20)) {
            (save)esi;
            edi = A8;
            ecx = 9;
            asm("rep movsd");
            (restore)esi;
        } else {
            *A8 = 2130706432;
            *(A8 + 4) = 0;
            *(A8 + 8) = 0;
            *(A8 + 0xc) = 0;
            *(A8 + 0x10) = 2130706432;
            *(A8 + 0x14) = 0;
            *(A8 + 0x18) = 0;
            *(A8 + 0x1c) = 0;
            *(A8 + 0x20) = 2130706432;
        }
        eax = L0042CEA4(A8);
    } else {
L0042f8cf:
        *L004dde40(A8, esi, -1);
        eax = *L004dde50(A8, & Vfffffff0, & Vffffffe4);
    }
}

/*    Procedure: 0x0042F8F5 - 0x0042F9B8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0042F8F5(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    esi = eax;
    if(*(esi + 0xc9) != 3) {
        L0042C9E0(esi);
        eax = !( *(esi + 0x14c) & 0x40) ? 0x4e : 2;
        edx = *(A8 + 0x86) & 0xff;
        *(M00501ba8 + edx) = al;
        *(A8 + 0xff) = 0x24;
        *(A8 + 0x100) = 0;
        *L00501b8c();
        *(A8 + 0xa8) = M00644ba4 + M00644bc8;
        *(A8 + 0xac) = M00644ba8 + 2;
        if(!(M00644ba7 & 8) && !(M00644bcb & 8)) {
            *(A8 + 0xac) = *(A8 + 0xac) + 1;
        }
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x0042F9B9 - 0x0042FA01
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042F9B9(A8)
/* unknown */ void  A8;
{



    L0042EF05(A8);
    if(*(M00649c80 + 0xc9) != 0xfe) {
        eax = M00649c80;
        if(*(eax + 0xc9) != 0) {
            goto L0042f9ff;
        }
    }
    *(A8 + 0xff) = 1;
    eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
L0042f9ff:
}

/*    Procedure: 0x0042FA02 - 0x0042FA72
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042FD2C()
 *        L0042FF20()
 */

L0042FA02(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = M00644bc8 & 65535;
    *L00501b8c();
    *(A8 + 0x102) = L00470ADC(esi) >> 5;
    eax = L00470ADC(esi + 16384) >> 5;
    *(A8 + 0x104) = ax;
    *(A8 + 0x106) = M00644bcc >> 0x16;
    *(A8 + 0xff) = 4;
    return L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
}

/*    Procedure: 0x0042FA73 - 0x0042FCAC
 *    Argument size: 4
 *    Local size: 76
 *    Save regs size: 12
 */

L0042FA73(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    if(*(eax + 0xff) == 0x24) {
        *(A8 + 0xb6) = 0;
        *(A8 + 0xb8) = 0;
        *(A8 + 0xba) = 0;
    } else {
        *L004dde4c(A8, eax, 1, & Vfffffffc, & Vfffffff0, M0064a3b0);
        if(Vfffffffc >= 0xa) {
            *L004dde50(A8, & Vfffffff0, & Vffffffe4);
            eax = *L004dde38(A8);
        } else {
            *(A8 + 0xff) = 1;
            ebx = 0x72;
            do {
                if(!( *(M0064a3b0 + ebx) & 0x40)) {
                    edi = *L00501b94(ebx, M0064a3b0);
                    if(*(edi + 0xff) == 0xb && *(edi + 0xfe) == *(A8 + 0x86)) {
                        L0042ECAE(edi);
                        *(edi + 0xff) = 1;
                        *(edi + 0xfe) = *(edi + 0x100);
                        *(edi + 0x102) = 0;
                        *(edi + 0x104) = 0;
                        *(edi + 0x106) = 0;
                    }
                }
                ebx = ebx - 1;
            } while(ebx > 0);
            if(( *(A8 + 0xfe) & 0xff) == M00644c64 && M00644c8c != 4) {
                *L004d3050();
                if(al != 0) {
                    Vffffffb4 = 39107;
                    Vffffffcc = -1;
                    L00421DEC( & Vffffffb4);
                    if(*( *L00501b94( *(M00644c6c + 0x56) & 0xff, M0064a3b0) + 0x14c) & 0x10 || M00644c80 < 40000) {
                        M00644c2c = 0;
                        M00644c30 = 0;
                        M00644c34 = 0;
                        M00644c38 = 0;
                    } else {
                        eax = M00644c6c;
                        M00644c2c = *(eax + 0x8c);
                        M00644c30 = *(eax + 0x90);
                        M00644c34 = *(eax + 0x94);
                        M00644c38 = M00644c7c;
                    }
                    L004701BE(0x1e);
                    if(!(al = M00648b07 & M00648b01)) {
                        L004700B4(0xe);
                    } else {
                        L0047017D();
                    }
                }
            }
            *(A8 + 0x102) = 0;
            *(A8 + 0x104) = 0;
            *(A8 + 0x106) = 0;
            L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
            eax = L0042FD2C(A8);
        }
    }
}

/*    Procedure: 0x0042FCAD - 0x0042FD13
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042FCAD(A8)
/* unknown */ void  A8;
{



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    if(*(eax + 0xff) == 1) {
        *(A8 + 0xff) = 1;
        *(A8 + 0xfe) = *(A8 + 0x100);
        *(A8 + 0x102) = 0;
        *(A8 + 0x104) = 0;
        *(A8 + 0x106) = 0;
        L0042EF05(A8);
        eax = L0042FD2C(A8);
    }
}

/*    Procedure: 0x0042FD14 - 0x0042FD2B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042FD14(A8)
/* unknown */ void  A8;
{



    L0042EF05(A8);
    return L0042FD2C(A8);
}

/*    Procedure: 0x0042FD2C - 0x0042FE4C
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 4
 *    Called by:
 *        L0042FA73()
 *        L0042FCAD()
 *        L0042FD14()
 */

L0042FD2C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    *L004dde6c(A8, eax, 1, & Vfffffffc, & Vfffffff0, M0064a3b0);
    if(Vfffffffc > 0xa) {
        eax = L0042FA02(A8);
    } else {
        M00648b5a = M00648b5a | 2;
        L0041D444(0x37, 1);
        if(Vfffffffc < 5) {
            *(A8 + 0xff) = 3;
            L0042FF20(A8);
            eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
        } else {
            if(!(eax = Vfffffffc - 5)) {
                if(!(eax = eax - 1 - 3)) {
                    *(A8 + 0xff) = 1;
                    *L004dde38(A8);
                    *L004dde50(A8, & Vfffffff0, & Vffffffe4);
                } else {
                    *L004dde38(A8);
                    L00429FA8(A8, & Vfffffff0, & Vffffffe4);
                    L0042FE4D(A8);
                }
            } else {
                *L004dde38(A8);
                L00429FA8(A8, & Vfffffff0, & Vffffffe4);
                L0042FE4D(A8);
            }
            eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
        }
    }
}

/*    Procedure: 0x0042FE4D - 0x0042FF07
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L0042FD2C()
 *        L0042FF20()
 */

L0042FE4D(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(*(A8 + 0xff) == 1 || *(A8 + 0xff) == 2) {
        Vffffffe8 = *(A8 + 0x108);
        Vffffffec = *(A8 + 0x10a);
        Vfffffff0 = *(A8 + 0x10c);
        L004536B1( & Vfffffff4, & Vffffffe8);
        eax = *(A8 + 0x18) >> 0x10;
        asm("imul dword [ebp-0xc]");
        edx = *(A8 + 0x1c) >> 0x10;
        eax = eax + Vfffffff8 * Vfffffff8;
        edx = *(A8 + 0x20) >> 0x10;
        *(A8 + 0xff) = eax + Vfffffffc * Vfffffffc <= 536870912 ? 1 : 2;
    }
    eax = *L00501b8c();
    esi = eax;
    if(esi < 8192) {
        esi = (esi & 7) + 1;
        eax = L0043DA28(A8, esi, *(A8 + 0xfe) & 0xff);
        if(eax == 0) {
            eax = L0043D654(A8);
        }
    }
}

/*    Procedure: 0x0042FF08 - 0x0042FF1F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0042FF08(A8)
/* unknown */ void  A8;
{



    L0042EF05(A8);
    return L0042FF20(A8);
}

/*    Procedure: 0x0042FF20 - 0x0043008E
 *    Argument size: 4
 *    Local size: 40
 *    Save regs size: 8
 *    Called by:
 *        L0042FD2C()
 *        L0042FF08()
 */

L0042FF20(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    *L004dde44(A8, eax, & Vfffffff0, & Vfffffffc);
    *(A8 + 0x108) = Vfffffff0;
    *(A8 + 0x10a) = Vfffffff4;
    *(A8 + 0x10c) = Vfffffff8;
    *(A8 + 0x10e) = Vfffffffc;
    *L004dde3c(A8);
    Vffffffd8 = *(A8 + 0x8c) - M00644c2c;
    Vffffffdc = *(A8 + 0x90) - M00644c30;
    Vffffffe0 = *(A8 + 0x94) - M00644c34;
    esi = ~(L004537B0( *(A8 + 0xc), Vffffffd8));
    esi = esi + L004537B0( *(A8 + 0x10), Vffffffdc);
    Vfffffff0 = esi + L004537B0( *(A8 + 0x14), Vffffffe0) << 2;
    esi = ~(L004537B0( *A8, Vffffffd8));
    esi = esi + L004537B0( *(A8 + 4), Vffffffdc);
    Vfffffff4 = esi + L004537B0( *(A8 + 8), Vffffffe0) << 2;
    Vfffffff8 = 32767;
    L00429FA8(A8, & Vfffffff0, & Vffffffe4);
    if(Vfffffffc > 0xa) {
        eax = L0042FA02(A8);
    } else {
        M00648b5a = M00648b5a | 2;
        L0041D444(0x37, 1);
        if(Vfffffffc > 6) {
            *(A8 + 0xff) = 1;
            L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
        }
        eax = L0042FE4D(A8);
    }
}

/*    Procedure: 0x0043008F - 0x00430102
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 8
 */

L0043008F(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    Vfffffff8 = 0;
    Vfffffff4 = 0;
    Vfffffffc = 32767;
    *L004dde50(A8, & Vfffffff4, & Vffffffe8);
    *L004dde3c(A8);
    esi = *L00501b8c();
    if(esi > 40960) {
        L0043D588(A8);
    }
    *(A8 + 0xb2) = *(A8 + 0xb2) + (esi & 0xff);
    *(A8 + 0xb0) = *(A8 + 0xb0) + (esi >> 8 & 0xff);
}

/*    Procedure: 0x00430103 - 0x004301A0
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 8
 */

L00430103(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0x9e) = *(A8 + 0x9e) + 1;
    if(*(A8 + 0x9e) > 0x3c) {
        eax = L0042E746(A8);
    } else {
        L0042EF05(A8);
        esi = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
        *L004dde4c(A8, esi, 3, & Vfffffffc, & Vfffffff0, M0064a3b0);
        if(Vfffffffc > 4) {
            Vfffffff8 = Vfffffff8 + 0x1108;
            *L004dde50(A8, & Vfffffff0, & Vffffffe4);
            eax = *L004dde34(A8);
        } else {
            eax = L0042E820(A8, esi);
        }
    }
}

/*    Procedure: 0x004301A1 - 0x004301AE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004301A1(A8)
/* unknown */ void  A8;
{



    return L0042EF05(A8);
}

/*    Procedure: 0x004301AF - 0x004301CF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004301AF(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0x3e);
    *(A8 + 0x3e) = *(A8 + 0x3e) + 20000000;
    if(edx > *(A8 + 0x3e)) {
        *(A8 + 0x42) = *(A8 + 0x42) + 1;
    }
    return L004301D0(A8);
}

/*    Procedure: 0x004301D0 - 0x0043022F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042F125()
 *        L0042F50C()
 *        L004301AF()
 */

L004301D0(A8)
/* unknown */ void  A8;
{



    if(L00430856(A8) == 0 && L00430856(A8) == 0) {
        return L00430230(A8);
    }
    *(A8 + 0xff) = 0x1d;
    *(A8 + 0x9e) = 65535;
    *(A8 + 0xa4) = -1;
    L0042F239(A8);
    return L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
}

/*    Procedure: 0x00430230 - 0x0043027F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004301D0()
 *        L00430ADB()
 */

L00430230(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;



    esi = L0042DFFE(ebp - 4);
    if(esi == 0) {
        eax = *L004eeed8(A8);
    } else {
        *(A8 + 0x100) = *(esi + 0x86);
        *(A8 + 0xff) = 8;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x00430280 - 0x004302E4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00430280()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp - 4) = M00644ba4;
    *(ebp - 8) = M00644ba8;
    L0042F2BE(ebp - 8, ebp - 4, ebx + 0xac, ebx + 0xa8);
    if(al != 0) {
        eax = *(ebp - 4);
        if(eax < 0) {
            eax = eax + 0xff;
        }
        eax = (eax >> 8) + 1;
        edx = eax;
        eax = ~eax;
        *(ebx + 0xa4) = eax;
    } else {
        eax = *L004eeed8(ebx);
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004302E5 - 0x00430345
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004302E5()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp - 4) = M00644ba4;
    *(ebp - 8) = M00644ba8;
    L0042F2BE(ebp - 8, ebp - 4, ebx + 0xac, ebx + 0xa8);
    if(al != 0) {
        eax = *(ebp - 4) >> 3;
        eax = !(eax & *(ebp - 8) << 0x1d);
        *(ebx + 0xa4) = eax;
    } else {
        eax = *L004eeed8(ebx);
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00430346 - 0x00430364
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00430346(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax + 0x88) >= 0x10) {
        M00649cbc = M00649cbc - 1;
        eax = *L004eeed8(eax);
    }
}

/*    Procedure: 0x00430365 - 0x0043037C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00430365(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax + 0x88) >= 0xf) {
        eax = L0043DA00(eax);
    }
}

/*    Procedure: 0x0043037D - 0x0043039E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0043037D(A8)
/* unknown */ void  A8;
{



    eax = L0042EF05(A8);
    if(*(A8 + 0x88) >= 0xd) {
        eax = *L004eeed8(A8);
    }
}

/*    Procedure: 0x0043039F - 0x004303D1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0043039F(A8)
/* unknown */ void  A8;
{



    eax = A8;
    *(eax + 0x14e) = *(eax + 0x14e) - 1;
    if(*(eax + 0x14e) < 0) {
        *(eax + 0xff) = 0x16;
        eax = L00414070(0x17, 0, *(eax + 0x86) & 0xff);
    }
}

/*    Procedure: 0x004303D2 - 0x0043040F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004303D2(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax + 0x8b) == 0 && *(eax + 0x88) <= 0x14) {
        *(eax + 0xb0) = *(eax + 0xb0) + (M00648b56 << 8);
        if(*(eax + 0xb0) < M005015f0) {
            goto L0043040e;
        }
    }
    eax = L0043DA00(eax);
L0043040e:
}

/*    Procedure: 0x00430410 - 0x004304DE
 *    Argument size: 4
 *    Local size: 76
 *    Save regs size: 4
 */

L00430410(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    L0042EF05(A8);
    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    edx = *(A8 + 0x101);
    *L004dde4c(A8, eax, edx, & Vfffffffc, & Vfffffff0, M0064a3b0);
    if(Vfffffffc >= 0xa) {
        *L004dde50(A8, & Vfffffff0, & Vffffffe4);
        eax = *L004dde38(A8);
    } else {
        if(( *(A8 + 0xfe) & 0xff) == M00644c64) {
            Vffffffb4 = 39120;
            Vffffffcc = 0xd;
            Vffffffc0 = *(A8 + 0xa0);
            Vffffffd8 = *(A8 + 0x11a);
            Vffffffd0 = A8;
            L00421DEC( & Vffffffb4);
            L0047017D();
        }
        *(A8 + 0xff) = 1;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x004304DF - 0x004304F4
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042CF1A()
 *        L0042DA37()
 */

L004304DF(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L0043051D(A8, Ac, A10);
}

/*    Procedure: 0x004304F5 - 0x0043051C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 *        L0042CDD4()
 *        L0042CE59()
 *        L0042D66E()
 *        L0042D768()
 *        L0042D862()
 *        L0042D9D8()
 *        L0042DA37()
 *        L0042DC8F()
 *        L0042DF8F()
 */

L004304F5(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    return L0043051D(0x4def08, A8, L0042CBCC(A8, ebp - 2));
}

/*    Procedure: 0x0043051D - 0x00430805
 *    Argument size: 12
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L0042DC8F()
 *        L004304DF()
 *        L004304F5()
 */

L0043051D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = Ac;
    esi = *L004eecb4(M0064a3b0, A8, 0x4f, A10, & Vfffffffc);
    if(Vfffffffc == 0) {
        eax = 0;
    } else {
        *(esi + 0x87) = 0xb;
        *(esi + 0x118) = bl;
        L0042E11A(esi, *(ebx + 0x4df1f4), & Vffffffd8);
        Vffffffec = *( *L00501b9c( *(esi + 0x82)) + 0x38);
        *L00501b8c();
        Vfffffff6 = ax & 65535;
        if(*(esi + 0x118) == 0xe) {
            *(esi + 0xa0) = 0;
            Vfffffff6 = (M00644fde & 65535) << 8;
        }
        if(*(esi + 0x118) == 0x10) {
            Vfffffff6 = 65535;
        }
        Vfffffff8 = *(esi + 0x116) & 65535;
        edi = 0;
        edx = *L00501b8c();
        eax = *(Vffffffec + 0x14);
        if(*(esi + 0x118) == 0xc) {
            edx = 65535;
        }
        if(edx > 61440 && *(esi + 0x118) != 1) {
            Vfffffff8 = Vfffffff8 - 1;
            edi = edi | 0x100;
        }
        if(eax >= 0) {
            if(edx > 49152) {
                eax = eax >> 8;
            }
            *(esi + 0xd0) = eax & 0xf;
            Vfffffff8 = Vfffffff8 - *( *(esi + 0xd0) * 4 + 0x4df06c);
        }
        eax = *(esi + 0xd0);
        *(esi + 0x11e) = *(eax * 4 + 0x4df1b8) << 0x18;
        ebx = *(eax * 4 + 0x4df0a4);
        if(ebx >= Vfffffff8) {
            ebx = Vfffffff8;
        }
        Vfffffff8 = Vfffffff8 - ebx;
        *(esi + 0x119) = bl;
        L00430806(esi, & Vfffffff8);
        *(esi + 0xd2) = al;
        ebx = Vfffffff8;
        if(ebx > 0x12c) {
            ebx = 0x12c;
        }
        if(*(esi + 0x118) == 1) {
            eax = ebx;
            edx = 0;
            edx = 4 / 4 % 4 / 4;
            ebx = eax;
        }
        eax = ebx;
        edx = 0;
        edx = 4 / 4 % 4 / 4;
        ebx = eax;
        eax = Vfffffff6 & 65535;
        asm("imul ebx");
        edx = 0;
        edx = 65535 / 65535 % 65535 / 65535;
        ebx = *L004eeed4( *L004eeed4(eax)) + *L004eeed4( *L004eeed4(eax));
        Vfffffff8 = Vfffffff8 - ebx;
        *(esi + 0xe2) = ebx << 4;
        if(Vfffffff8 >= 2) {
            ebx = *L004eeed4(Vfffffff6 & 65535);
            if(ebx >= 49152) {
                edi = edi | 0x80;
                Vfffffff8 = Vfffffff8 - 2;
            } else {
                if(ebx >= 16384) {
                    edi = edi | 8;
                    Vfffffff8 = Vfffffff8 - 2;
                }
            }
        }
        if(Vfffffff8 > 0) {
            Vfffffff0 = *(Vffffffec + 0x12);
            Vfffffff0 = *L004eeed4(Vfffffff0 + 1);
            if(Vfffffff0 >= 1) {
                for(ebx = *(((Vfffffff6 & 65535) >> 0xc) + 0x4df05a) & 0xff; 1; Vfffffff0 = Vfffffff0 - 1) {
                    if(Vfffffff8 <= 0 || Vfffffff0 == 0) {
                        goto L00430764;
                    }
                    *(esi + Vfffffff0 + 0xd6) = bl;
                    Vfffffff8 = Vfffffff8 - 1;
                }
            }
        }
L00430764:
        if(Vfffffff8 > 0) {
            if(*L004eeed4(Vfffffff6 & 65535) >= 0x800) {
                Vfffffff8 = Vfffffff8 - 1;
                edi = edi | 4;
            }
            if(*L004eeed4(Vfffffff6 & 65535) >= 64512 && Vfffffff8 >= 4 && *(esi + 0x118) != 0xe) {
                Vfffffff8 = Vfffffff8 - 4;
                edi = edi | 0x400;
            }
        }
        edi = edi | 16384;
        ebx = *( *(esi + 0x118) * 4 + 0x4df0e0);
        ebx = Vfffffff8 * Vfffffff8;
        if(ebx > 0xaf) {
            ebx = 0xaf;
        }
        Vfffffff8 = Vfffffff8 - ebx;
        *(esi + 0x119) = *(esi + 0x119) + bl;
        *(esi + 0x116) = Vfffffff8;
        eax = edi >> 0x10;
        *(esi + 0xc8) = eax | edi << 0x10;
        eax = esi;
    }
}

/*    Procedure: 0x00430806 - 0x00430855
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043051D()
 */

L00430806(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    esi = 0x4df170;
    edx = *L004eeed4(0x33) + *( *(A8 + 0x118) * 4 + 0x4df128);
    edx = *Ac * *Ac >> 8;
    eax = 1;
    do {
        if(edx < *(esi + eax * 8 + 4)) {
            break;
        }
        eax = eax + 1;
    } while(eax < 9);
    eax = eax - 1;
    *Ac = *Ac - *(esi + eax * 8 + 4);
    return *(esi + eax * 8);
}

/*    Procedure: 0x00430856 - 0x004308AB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042D66E()
 *        L0042D768()
 *        L004301D0()
 */

L00430856(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = L004308AC(A8, 1);
    if(ebx == 0) {
        ebx = L004308AC(A8, 1);
        if(ebx == 0) {
            ebx = L004308AC(A8, 0);
            if(ebx == 0) {
                ebx = L004308AC(A8, 0);
                if(ebx == 0) {
                    goto L004308a6;
                }
            }
        }
    }
    eax = ebx;
    goto L004308a8;
L004308a6:
    eax = 0;
L004308a8:
}

/*    Procedure: 0x004308AC - 0x00430967
 *    Argument size: 8
 *    Local size: 68
 *    Save regs size: 4
 *    Called by:
 *        L00430856()
 */

L004308AC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vffffffd4 = L00436BE4(M00644cae, Ac);
    if(Vffffffd4 == 0) {
        eax = 0;
    } else {
        *(A8 + 0xf2) = Vffffffd4;
        L00437628(Vffffffd4, & Vffffffe8, & Vfffffff4, & Vfffffff0, & Vffffffec);
        if(Vfffffff4 <= 3) {
            eax = 0;
        } else {
            Vfffffffc = L00436E8D(Vffffffd4, & Vffffffbc, & Vffffffd0, & Vffffffcc, & Vffffffc8);
            if(L0043B9D4(A8, & Vfffffffc, & Vffffffe0, & Vffffffdc, & Vffffffd8, & Vffffffe4, & Vfffffff8) < 0) {
                eax = 0;
            } else {
                *(A8 + 0xf6) = Vfffffff8;
                *(A8 + 0xfa) = Vffffffe4;
                eax = Vffffffd4;
            }
        }
    }
}

/*    Procedure: 0x00430968 - 0x004309C0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004309F1()
 */

L00430968(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    L0042EEAC(A8, M00644ba4, M00644ba8, A10);
    edi = 0x72;
    do {
        eax = M0064a3b0;
        if(*(eax + edi) != 0) {
            eax = L00430A22(edi * 0x152 + M0064a3b0 + 0x74, A8, Ac);
        }
        edi = edi - 1;
    } while(edi > 0);
}

/*    Procedure: 0x004309C1 - 0x004309F0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004309F1()
 */

L004309C1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    if(*(eax + 0x87) == 0xb) {
        edx = *((( *(eax + 0xff) & 0xff) << 4) + 0x4decc4);
        if(edx != 0) {
            eax = *edx(eax, Ac);
        }
    }
}

/*    Procedure: 0x004309F1 - 0x00430A21
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004309F1(A8)
/* unknown */ void  A8;
{



    if(*A8 != 0) {
        return L004309C1( *(A8 + 4), *(A8 + 8));
    }
    dl = *(A8 + 9);
    return L00430968( *(A8 + 4), *(A8 + 8), edx);
}

/*    Procedure: 0x00430A22 - 0x00430A54
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00430968()
 */

L00430A22(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A8;
    if(*(eax + 0x87) == 0xb) {
        edx = *((( *(eax + 0xff) & 0xff) << 4) + 0x4decc0);
        if(edx != 0) {
            eax = *edx(eax, Ac, A10);
        }
    }
}

/*    Procedure: 0x00430A55 - 0x00430AB1
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00430A55(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    if(A10 == ( *(eax + 0xfe) & 0xff)) {
        *(eax + 0xfe) = *(Ac + 0x100);
        if(*(Ac + 0x100) == 0) {
            eax = L00430ADB(eax, Ac, ecx);
        } else {
            *(eax + 0xff) = 5;
            eax = L00414070(0x17, 0, *(eax + 0x86) & 0xff);
        }
    }
}

/*    Procedure: 0x00430AB2 - 0x00430ADA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00430AB2(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = A8;
    if(A10 == ( *(eax + 0xfe) & 0xff)) {
        eax = L00430ADB(eax, Ac, edx);
    }
}

/*    Procedure: 0x00430ADB - 0x00430B00
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00430A55()
 *        L00430AB2()
 */

L00430ADB(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x118) == 0xe) {
        M006321ea = 0;
        M006321e9 = M006321e9 & 0xfe;
    }
    return L00430230(A8);
}

/*    Procedure: 0x00430B01 - 0x00430B3B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00430B01(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    edx = A10;
    ecx = dl;
    if(ecx == ( *(A8 + 0xfe) & 0xff)) {
        *(A8 + 0x9e) = 0x3c;
    }
    edx = dl;
    if(edx == ( *(A8 + 0x100) & 0xff)) {
        *(A8 + 0x100) = 0;
    }
}

/*    Procedure: 0x00430B3C - 0x00430B7D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00430B3C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    if(eax == M00644c64) {
        *(A8 + 0xb2) = *L00501b8c() >> 6;
        *(A8 + 0xff) = 3;
        eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
}

/*    Procedure: 0x00430B7E - 0x00430BD9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00430B7E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*(A8 + 0x118) == 0x10) {
        *(A8 + 0x11a) = 1;
    }
    *(A8 + 0xff) = 0x1f;
    *(A8 + 0xa8) = M00644ba4;
    *(A8 + 0xac) = M00644ba8;
    eax = L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    return L00430C87(A8, Ac);
}

/*    Procedure: 0x00430BDA - 0x00430C0E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00430BDA(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0x86) & 0xff;
    *(M00501ba8 + edx) = 0x4f;
    *(A8 + 0xff) = 0x21;
    return L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
}

/*    Procedure: 0x00430C0F - 0x00430C40
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00430C0F(A8)
/* unknown */ void  A8;
{



    eax = *L00501b94( *(A8 + 0xfe) & 0xff, M0064a3b0);
    return L0042C96C( *(A8 + 0x86), eax);
}

/*    Procedure: 0x00430C41 - 0x00430C86
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00430C41(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(bl == M00644c64) {
        *(A8 + 0xfe) = bl;
        *(A8 + 0xff) = 1;
        L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    }
    return L00430C87(A8, Ac);
}

/*    Procedure: 0x00430C87 - 0x00430CAC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00430B7E()
 *        L00430C41()
 */

L00430C87(Ac)
/* unknown */ void  Ac;
{



    eax = Ac;
    if(eax == M00644c64 && !(M00644c6a & 3)) {
        eax = L0041C44F(0xa, 0);
    }
}

/*    Procedure: 0x00430CAD - 0x00430CAF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00430CAD()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00430CB0 - 0x004311B8
 *    Argument size: 16
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L00415010()
 *        L0041F15A()
 *        L0041FDF0()
 *        L0041FED9()
 *        L004200B8()
 *        L00420B84()
 *        L00423D14()
 *        L00423EE4()
 *        L004250C2()
 *        L0042CF1A()
 *        L0042E11A()
 *        L00431438()
 *        L0043B570()
 *        L0043FF64()
 */

L00430CB0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffffc;



    eax = 2;
L00430cb9:
    esp = esp + -4092;
    (save)eax;
    if(eax = eax - 1) {
        goto L00430cb9;
    }
    eax = Vfffffffc;
    esp = esp - 0x48;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = A14;
    ebx = A8;
    if(ebx < 0x16) {
        if(ebx < 6) {
            Vfffffffc = (A10 << 0x10 | A10 >> 0x10) + A10;
            A10 = A10 >> 0x19 | A10 << 7;
        } else {
            Vfffffffc = A10 << 0x10 | A10 >> 0x10;
            A10 = A10 + Vfffffffc;
            Vfffffffc = Vfffffffc >> 0x19 | Vfffffffc << 7;
            A10 = A10 + Vfffffffc;
            Vfffffffc = Vfffffffc >> 0x1c | Vfffffffc << 4;
            A10 = A10 + Vfffffffc;
        }
    }
    eax = ebx;
    if(eax > 0x19) {
        goto L0043119b;
    }
    switch(eax) {
        case 0:
L0043119b:
            (save)esi;
            edi = esi;
            esi = "????";
            eax = edi;
            *edi = *esi;
            edi = edi + 4;
            esi = esi + 4;
            *edi = *esi;
            edi = edi + 1;
            esi = esi + 1;
            (restore)esi;
            eax = L00471288(esi) + esi + 1;
            goto L004311b2;
        case 1:
L00430dc2:
            edi = *L004eeed0(0x69, & A10, & Vfffffffc);
            eax = L004311BC(esi, edi, Ac, & A10, & Vfffffffc);
            *(eax - 1) = 0x20;
            eax = L004311D8(eax, edi, Ac, & A10, & Vfffffffc);
            goto L004311b2;
        case 2:
            edi = *L004eeed0(0x3c, & A10, & Vfffffffc) + 0xe0;
            eax = L004311BC(esi, edi, Ac, & A10, & Vfffffffc);
            *(eax - 1) = 0x20;
            eax = L004311D8(eax, edi, Ac, & A10, & Vfffffffc);
            goto L004311b2;
        case 3:
            goto L00430e9c;
        case 4:
            *L004eeed0(ebx, & A10, & Vfffffffc);
            eax = L00431414( *L004eeed0(0x8a, & A10, & Vfffffffc) + 0x59, Ac, esi);
            goto L004311b2;
        case 5:
            goto L00430e9c;
        case 6:
L00430f12:
            L004311D8(ebp - 0x2c, edi, Ac, & A10, & Vfffffffc);
            eax = ebp - 0x2c;
            *(Ac + 0xc) = eax;
            edi = *L004eeed0( *(ebx * 4 + 0x4dfaf0), & A10, & Vfffffffc) + *(ebx * 4 + 0x4dfac0);
            eax = L00431414(edi, Ac, esi);
            goto L004311b2;
        case 7:
            goto L00430f12;
        case 8:
            goto L00430f12;
        case 9:
            goto L00430f12;
        case 0xa:
            goto L00430f12;
        case 0xb:
            goto L00430f12;
        case 0xc:
            goto L00430f12;
        case 0xd:
            goto L00430f12;
        case 0xe:
            goto L00430f12;
        case 0xf:
            goto L0043119b;
        case 0x10:
            L00431258(ebp - 0x6c, edi, Ac, & A10, & Vfffffffc);
            eax = ebp - 0x6c;
            *(Ac + 0xc) = eax;
            eax = L00431414( *L004eeed0(M004dfb30, & A10, & Vfffffffc) + M004dfb00, Ac, esi);
            goto L004311b2;
        case 0x11:
            L00431258(ebp - 0x4c, edi, Ac, & A10, & Vfffffffc);
            eax = ebp - 0x4c;
            *(Ac + 0xc) = eax;
            eax = L00431414( *L004eeed0(M004dfb34, & A10, & Vfffffffc) + M004dfb04, Ac, esi);
            goto L004311b2;
        case 0x12:
            eax = L00431290(esi, & A10, & Vfffffffc);
            goto L004311b2;
        case 0x13:
            eax = L004312FC(esi, & A10, & Vfffffffc);
            goto L004311b2;
        case 0x14:
            eax = L00431364(esi, & A10, & Vfffffffc);
            goto L004311b2;
        case 0x15:
            goto L0043119b;
        case 0x16:
            (save)esi;
            edi = 6573408;
            eax = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            eax = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
            (restore)esi;
            eax = L00471288(esi) + esi + 1;
            goto L004311b2;
        case 0x17:
            (save)Ac;
            (save) *( *( *L00501b9c(A10) + 0x38) + 0xe);
            (save)esi;
            eax = *L005000c0();
            esp = esp + 0xc;
            goto L004311b2;
        case 0x18:
            goto L004310ac;
        case 0x19:
            goto L00431128;
    }
    goto L00430dc2;
L00430e9c:
    edi = !(A10 & 1) ? *L004eeed0(0x3c, & A10, & Vfffffffc) + 0xe0 : *L004eeed0(0x69, & A10, & Vfffffffc);
    eax = L004311BC(esi, edi, Ac, & A10, & Vfffffffc);
    if(ebx == 3) {
        *(eax - 1) = 0x20;
        eax = L004311D8(eax, edi, Ac, & A10, & Vfffffffc);
        goto L004311b2;
L004310ac:
        *(ebp - 8) = *(Ac + 4);
        (save) *(ebp - 8);
        (save)ebp + -4188;
        if(L00424D2C() != 0) {
            eax = esi + 1;
        } else {
            ebx = L00424DC4(ebp + -4188, A10);
            if(ebx == 0) {
                eax = esi + 1;
            } else {
                (save)esi;
                edi = ebx + 0x26;
                eax = 0;
                ecx = ecx | -1;
                asm("repne scasb");
                ecx = !ecx;
                edi = edi - ecx;
                asm("xchg esi,edi");
                eax = edi;
                edx = ecx;
                ecx = ecx >> 2;
                asm("rep movsd");
                ecx = edx & 3;
                asm("rep movsb");
                (restore)esi;
                eax = L00471288(esi) + esi + 1;
                goto L004311b2;
L00431128:
                *(ebp - 0xc) = *(Ac + 4);
                (save) *(ebp - 0xc);
                (save)ebp + -8268;
                if(L00424D2C() != 0) {
                    eax = esi + 1;
                } else {
                    ebx = L00424E00(ebp + -8268, A10);
                    if(ebx == 0) {
                        eax = esi + 1;
                    } else {
                        (save)esi;
                        edi = ebx + 0x26;
                        eax = 0;
                        ecx = ecx | -1;
                        asm("repne scasb");
                        ecx = !ecx;
                        edi = edi - ecx;
                        asm("xchg esi,edi");
                        eax = edi;
                        edx = ecx;
                        ecx = ecx >> 2;
                        asm("rep movsd");
                        ecx = edx & 3;
                        asm("rep movsb");
                        (restore)esi;
                        eax = L00471288(esi) + esi + 1;
                    }
                }
            }
        }
    }
L004311b2:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004311B9 - 0x004311BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004311B9()
{



}

/*    Procedure: 0x004311BC - 0x004311D4
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00430CB0()
 */

L004311BC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00431414(Ac, A10, A8);
}

/*    Procedure: 0x004311D5 - 0x004311D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004311D5()
{



}

/*    Procedure: 0x004311D8 - 0x00431257
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00430CB0()
 */

L004311D8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    ebx = A8;
    if(( *A14 & 0xff) >= 0x19) {
        ebx = L00431414( *L004eeed0(0x8a, A14, A18) + 0x59, A10, ebx);
    } else {
        ebx = L00431414( *L004eeed0(0xa, A14, A18) + 0x4f, A10, ebx);
        *(ebx - 1) = 0x73;
        if(!( *(A14 + 1) & 8)) {
            *ebx = 0x6f;
            ebx = ebx + 1;
            *ebx = 0x6e;
            ebx = ebx + 1;
        }
        *ebx = 0;
        ebx = ebx + 1;
    }
    return ebx;
}

/*    Procedure: 0x00431258 - 0x0043128E
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00430CB0()
 */

L00431258(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L00431414( *L004eeed0(0x58, A14, A18) + 0x18a, A10, A8);
}

/*    Procedure: 0x0043128F - 0x0043128F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043128F()
{



}

/*    Procedure: 0x00431290 - 0x004312F9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00430CB0()
 */

L00431290(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L004313C4( & A8, Ac, A10);
    L004313C4( & A8, Ac, A10);
    *A8 = 0x2d;
    A8 = A8 + 1;
    L004313EC( & A8, Ac, A10);
    L004313EC( & A8, Ac, A10);
    L004313EC( & A8, Ac, A10);
    *A8 = 0;
    A8 = A8 + 1;
    return A8;
}

/*    Procedure: 0x004312FA - 0x004312FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004312FA()
{



}

/*    Procedure: 0x004312FC - 0x00431360
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00430CB0()
 */

L004312FC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *A8 = 0x20;
    A8 = A8 + 1;
    *A8 = 0x2b;
    A8 = A8 + 1;
    L004313EC( & A8, Ac, A10);
    L004313EC( & A8, Ac, A10);
    L004313EC( & A8, Ac, A10);
    L004313C4( & A8, Ac, A10);
    *A8 = 0;
    A8 = A8 + 1;
    return A8;
}

/*    Procedure: 0x00431361 - 0x00431363
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431361()
{



}

/*    Procedure: 0x00431364 - 0x004313C3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00430CB0()
 */

L00431364(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L004313C4( & A8, Ac, A10);
    L004313C4( & A8, Ac, A10);
    *A8 = 0x2a;
    A8 = A8 + 1;
    *A8 = 0x20;
    A8 = A8 + 1;
    *A8 = 0x20;
    A8 = A8 + 1;
    L004313EC( & A8, Ac, A10);
    *A8 = 0;
    A8 = A8 + 1;
    return A8;
}

/*    Procedure: 0x004313C4 - 0x004313E8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00431290()
 *        L004312FC()
 *        L00431364()
 */

L004313C4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *( *A8) = *L004eeed0(0x1a, Ac, A10) + 0x41;
    *A8 = *A8 + 1;
    return *( *A8);
}

/*    Procedure: 0x004313E9 - 0x004313EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004313E9()
{



}

/*    Procedure: 0x004313EC - 0x00431410
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00431290()
 *        L004312FC()
 *        L00431364()
 */

L004313EC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *( *A8) = *L004eeed0(0xa, Ac, A10) + 0x30;
    *A8 = *A8 + 1;
    return *( *A8);
}

/*    Procedure: 0x00431411 - 0x00431413
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431411()
{



}

/*    Procedure: 0x00431414 - 0x00431437
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00430CB0()
 *        L004311BC()
 *        L004311D8()
 *        L00431258()
 */

L00431414(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x4df2b0);
}

/*    Procedure: 0x00431438 - 0x00431484
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00431438(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = A8 & 0x1ff;
    if(!(ecx = (eax >> 6) - 1)) {
        if(ecx = ecx - 1) {
            goto L0043145e;
        }
        if(ecx = ecx - 1) {
            goto L00431463;
        }
        if(ecx = ecx - 1) {
            goto L00431468;
        }
    } else {
        ecx = *Ac;
        goto L00431470;
L0043145e:
        ecx = *(Ac + 4);
        goto L00431470;
L00431463:
        ecx = *(Ac + 8);
        goto L00431470;
L00431468:
        ecx = *(Ac + 0x10);
        goto L00431470;
    }
    ecx = *(Ac + 0xc);
L00431470:
    return L00430CB0(eax & 0x3f, Ac, ecx, A10);
}

/*    Procedure: 0x00431485 - 0x004314B2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431485()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    eax = L00431D4C( *(ebp + 8), *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18), *(ebp + 0x1c), *(ebp + 0x20), *(ebp + 0x24));
    (restore)ebp;
}

/*    Procedure: 0x004314B3 - 0x004314B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004314B3()
{



}

/*    Procedure: 0x004314B4 - 0x004314FF
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004325FC()
 */

L004314B4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    eax = A8 + 0x32;
    if(!( *(eax + 8) & 1)) {
        *A18 = 0x1e;
    } else {
        do {
            A10 = eax;
            eax = *(eax + 4);
        } while(*(eax + 8) & 1);
        *A18 = *(A10 + 9);
    }
    *A10 = *(eax + 0xa);
    *(A10 + 4) = *(eax + 0xe);
    *(A10 + 8) = *(eax + 0x12);
    *A14 = *(eax + 9);
    eax = *eax;
    *Ac = eax;
    return *Ac;
}

/*    Procedure: 0x00431500 - 0x0043151D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00431704()
 *        L00431844()
 */

L00431500(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    edx = Ac + 0x32;
    for(eax = *(edx + 4); A8 >= *eax; eax = *(eax + 4)) {
        edx = eax;
    }
    return edx;
}

/*    Procedure: 0x0043151E - 0x0043151F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043151E()
{



}

/*    Procedure: 0x00431520 - 0x0043153E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00431704()
 *        L00431844()
 *        L004318C8()
 */

L00431520(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 8) = dl;
    if(*(A8 + 8) != 0x10) {
        *(A8 + 9) = A10;
        return;
    }
    *(A8 + 9) = 0x1f;
}

/*    Procedure: 0x0043153F - 0x0043153F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043153F()
{



}

/*    Procedure: 0x00431540 - 0x00431561
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00431704()
 *        L00431844()
 *        L004318C8()
 */

L00431540(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A8;
    ecx = *(eax + 0x2e);
    *(eax + 0x2e) = *(eax + 0x2e) + 0x16;
    eax = ecx;
    *(eax + 4) = *(Ac + 4);
    *eax = A10;
    *(Ac + 4) = eax;
}

/*    Procedure: 0x00431562 - 0x00431563
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431562()
{



}

/*    Procedure: 0x00431564 - 0x0043159C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004325FC()
 *        L00432BB0()
 */

L00431564(A8)
/* unknown */ void  A8;
{



    eax = A8 + 0x32;
    *eax = 0;
    *(eax + 4) = eax + 0x16;
    *(eax + 8) = 2;
    *(eax + 9) = 0x1f;
    eax = eax + 0x16;
    *eax = 2147483633;
    *(eax + 4) = 0;
    *(eax + 8) = 0x15;
    *(eax + 9) = 0x1d;
    eax = A8 + 0x5e;
    *(A8 + 0x2e) = eax;
    return *(A8 + 0x2e);
}

/*    Procedure: 0x0043159D - 0x0043159F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043159D()
{



}

/*    Procedure: 0x004315A0 - 0x00431666
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L00432BB0()
 */

L004315A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    goto L00431656;
L004315c4:
    Vfffffff4 = *(esi + 0xa);
    Vfffffff8 = *(esi + 0xe);
    Vfffffffc = *(esi + 0x12);
    if(bl != 0) {
        L00431668(A10, & Vfffffff4);
    }
    eax = *esi;
    edx = *( *(esi + 4));
    if(edx != eax) {
        eax = L00431844(A8, eax, edx, & Vfffffff4, *(esi + 9));
        goto L00431661;
L00431656:
        while(1) {
            al = *(esi + 8);
            if(al == 0x15) {
                break;
            }
            if(al = al - 7) {
                goto L004315c4;
            }
            if(al = al - 1) {
                eax = *(esi + 4);
                Vfffffff4 = *(eax + 0xa);
                Vfffffff8 = *(eax + 0xe);
                Vfffffffc = *(eax + 0x12);
                if(bl != 0) {
                    L00431668(A10, & Vfffffff4);
                }
                eax = *esi;
                edx = *( *(esi + 4));
                if(edx != eax) {
                    eax = L00431704(A8, eax, edx, & Vfffffff4, *(esi + 9));
                }
            } else {
                if(al = al - 5) {
                    goto L004315c4;
                }
            }
            esi = *(esi + 4);
        }
    }
L00431661:
}

/*    Procedure: 0x00431667 - 0x00431667
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431667()
{



}

/*    Procedure: 0x00431668 - 0x00431700
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004315A0()
 */

L00431668(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = A8 & 7;
    if(ecx <= 5) {
        switch(ecx) {
            case 0:
                goto L004316e5;
            case 1:
                ecx = *Ac;
                *Ac = *(Ac + 4);
                *(Ac + 4) = *(Ac + 8);
                *(Ac + 8) = ecx;
                goto L004316e5;
            case 2:
                ecx = *Ac;
                *Ac = *(Ac + 8);
                *(Ac + 8) = *(Ac + 4);
                *(Ac + 4) = ecx;
                goto L004316e5;
            case 3:
                ecx = *Ac;
                *Ac = *(Ac + 8);
                *(Ac + 8) = ecx;
                goto L004316e5;
            case 4:
                ecx = *Ac;
                *Ac = *(Ac + 4);
                *(Ac + 4) = ecx;
                goto L004316e5;
            case 5:
                ecx = *(Ac + 4);
                *(Ac + 4) = *(Ac + 8);
                *(Ac + 8) = ecx;
                goto L004316e5;
        }
    }
L004316e5:
    ecx = A8;
    if(!(cl & 0x20)) {
        *Ac = ~( *Ac);
    }
    if(!(cl & 0x10)) {
        *(Ac + 4) = ~( *(Ac + 4));
    }
    if(!(cl & 8)) {
        *(Ac + 8) = ~( *(Ac + 8));
    }
}

/*    Procedure: 0x00431701 - 0x00431703
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431701()
{



}

/*    Procedure: 0x00431704 - 0x00431843
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004315A0()
 *        L00432FDC()
 */

L00431704(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = Ac;
    ebx = L00431500(esi, A8);
    edi = *(ebx + 4);
    if(!( *(ebx + 8) & 2)) {
        if(esi > *ebx) {
            *(ebp - 4) = ebx;
            eax = L00431540(A8, ebx, esi);
            ebx = eax;
            esi = eax;
        } else {
            esi = ebx;
            *(ebp - 4) = esi;
        }
    } else {
        esi = 0;
    }
    while(1) {
        eax = *edi;
        if(eax >= A10) {
            break;
        }
        if(*(ebx + 8) & 2) {
            if(esi != 0) {
                L00431520(esi, 8, A18);
                eax = A14;
                *(ebx + 0xa) = *eax;
                *(ebx + 0xe) = *(eax + 4);
                *(ebx + 0x12) = *(eax + 8);
                esi = 0;
            }
        } else {
            if(esi == 0) {
                esi = ebx;
                *(ebp - 4) = esi;
            } else {
                *(esi + 4) = *(ebx + 4);
            }
        }
        ebx = edi;
        edi = *(edi + 4);
    }
    if(ebx == esi) {
        eax = *edi;
        if(eax > A10) {
            ebx = L00431540(A8, ebx, A10);
            *(ebx + 8) = *( *(ebp - 4) + 8);
            eax = *(ebp - 4);
            *(ebx + 9) = *(eax + 9);
        }
    } else {
        if(!( *(ebx + 8) & 2)) {
            if(esi != 0) {
                if(*edi > A10) {
                    eax = A10;
                    *ebx = eax;
                } else {
                    eax = *(ebx + 4);
                    *(esi + 4) = eax;
                }
            } else {
                esi = ebx;
                eax = *edi;
                if(eax > A10) {
                    eax = L00431540(A8, ebx, A10);
                    ebx = eax;
                    *(ebx + 8) = *(esi + 8);
                    *(ebx + 9) = *(esi + 9);
                }
            }
        }
    }
    if(esi != 0) {
        L00431520(esi, 8, A18);
        eax = *(esi + 4);
        edx = A14;
        *(eax + 0xa) = *edx;
        *(eax + 0xe) = *(edx + 4);
        *(eax + 0x12) = *(edx + 8);
    }
}

/*    Procedure: 0x00431844 - 0x004318C7
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004315A0()
 *        L00432FDC()
 */

L00431844(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    ebx = L00431500(Ac, A8);
    if(!( *(ebx + 8) & 2)) {
        if(Ac != *ebx) {
            ebx = L00431540(A8, ebx, Ac);
        }
        eax = A14;
        *(ebx + 0xa) = *eax;
        *(ebx + 0xe) = *(eax + 4);
        *(ebx + 0x12) = *(eax + 8);
        eax = L00431520(ebx, 0xd, A18);
        *(ebx + 4) = A8 + 0x48;
    } else {
        do {
            ebx = *(ebx + 4);
            eax = A10;
            if(eax <= *ebx) {
                goto L004318c3;
            }
        } while(*(ebx + 8) & 2);
        eax = L00431520(ebx, 0xd, A18);
        *(ebx + 4) = A8 + 0x48;
    }
L004318c3:
}

/*    Procedure: 0x004318C8 - 0x00431A34
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00432FDC()
 */

L004318C8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = Ac;
    ebx = A8 + 0x32;
    for(esi = *(ebx + 4); edi >= *esi; esi = *(ebx + 4)) {
        if(!( *(ebx + 8) & 2)) {
            eax = L00431520(ebx, 0x10, A18);
        }
        ebx = esi;
    }
    if(!( *(ebx + 8) & 2)) {
        if(edi > *ebx) {
            *(ebp - 4) = ebx;
            eax = L00431540(A8, ebx, edi);
            ebx = eax;
            edi = eax;
        } else {
            edi = ebx;
            *(ebp - 4) = edi;
        }
    } else {
        edi = 0;
    }
    while(1) {
        eax = *esi;
        if(eax > A10) {
            break;
        }
        if(*(ebx + 8) & 2) {
            if(edi != 0) {
                L00431520(edi, 7, A18);
                eax = A14;
                *(edi + 0xa) = *eax;
                *(edi + 0xe) = *(eax + 4);
                *(edi + 0x12) = *(eax + 8);
                edi = 0;
            }
        } else {
            if(edi == 0) {
                edi = ebx;
                *(ebp - 4) = edi;
            } else {
                *(edi + 4) = esi;
            }
        }
        ebx = esi;
        esi = *(ebx + 4);
    }
    if(ebx == edi) {
        ebx = L00431540(A8, ebx, A10);
        *(ebx + 8) = *( *(ebp - 4) + 8);
        eax = *(ebp - 4);
        *(ebx + 9) = *(eax + 9);
    } else {
        if(!( *(ebx + 8) & 2)) {
            if(edi != 0) {
                eax = *esi;
                if(eax > A10) {
                    eax = A10;
                    *ebx = eax;
                } else {
                    *(edi + 4) = esi;
                    ebx = esi;
                }
            } else {
                eax = *ebx;
                if(eax < A10) {
                    edi = ebx;
                    eax = L00431540(A8, ebx, A10);
                    ebx = eax;
                    *(ebx + 8) = *(edi + 8);
                    *(ebx + 9) = *(edi + 9);
                }
            }
        }
    }
    if(edi != 0) {
        L00431520(edi, 7, A18);
        eax = A14;
        *(edi + 0xa) = *eax;
        *(edi + 0xe) = *(eax + 4);
        *(edi + 0x12) = *(eax + 8);
    }
    while(1) {
        eax = A8 + 0x48;
        if(ebx == eax) {
            break;
        }
        if(!( *(ebx + 8) & 2)) {
            L00431520(ebx, 0x10, A18);
        }
        ebx = *(ebx + 4);
    }
}

/*    Procedure: 0x00431A35 - 0x00431A37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431A35()
{



}

/*    Procedure: 0x00431A38 - 0x00431A78
 *    Argument size: 8
 *    Local size: 24
 *    Save regs size: 4
 *    Called by:
 *        L00431D4C()
 */

L00431A38(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffe8;



    eax = A8;
    if(*(eax + 0x57) != 0) {
        L00431B8C(eax, & Vffffffe8);
        eax = L0045A098(Ac, & Vffffffe8);
    } else {
        eax = L0045A098(Ac, eax + 0x3e);
    }
}

/*    Procedure: 0x00431A79 - 0x00431A7B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431A79()
{



}

/*    Procedure: 0x00431A7C - 0x00431AFB
 *    Argument size: 0
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00431D4C()
 */

L00431A7C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0045A7A8(6510168, 6510204, M006356a8);
    (save)6510180;
    edi = 6510180;
    esi = 6510216;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    ebx = L00459E08(esi, 0x1c);
    Vfffffff4 = *esi;
    Vfffffff8 = *(esi + 8);
    Vfffffffc = *(esi + 0x10);
    L0045A7A8( & Vfffffff4, & Vfffffff4, M006356a8);
    return *L00501700(esi, & Vfffffff4, ebx);
}

/*    Procedure: 0x00431AFC - 0x00431B89
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00431D4C()
 */

L00431AFC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0045A968(6510204, 6510168, M006356a8);
    esi = 6510180;
    edi = A8;
    ecx = 6;
    asm("rep movsd");
    esi = L00459E08(A8, 0x1c);
    Vfffffff4 = *A8;
    Vfffffff8 = *(A8 + 8);
    Vfffffffc = *(A8 + 0x10);
    L0045A968( & Vfffffff4, & Vfffffff4, M006356a8);
    eax = *L00501700(6510216, & Vfffffff4, esi);
    esi = 6510216;
    edi = A8;
    ecx = 6;
    asm("rep movsd");
}

/*    Procedure: 0x00431B8A - 0x00431B8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431B8A()
{



}

/*    Procedure: 0x00431B8C - 0x00431BED
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00431A38()
 */

L00431B8C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A8;
    (save)esi;
    esi = esi + 0x3e;
    edi = Ac;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    edi = L00459E08(Ac, 0x1c);
    Vfffffff4 = *Ac;
    Vfffffff8 = *(Ac + 8);
    Vfffffffc = *(Ac + 0x10);
    L0045A7A8( & Vfffffff4, & Vfffffff4, esi);
    return *L00501700(Ac, & Vfffffff4, edi);
}

/*    Procedure: 0x00431BEE - 0x00431D48
 *    Argument size: 16
 *    Local size: 40
 *    Save regs size: 12
 */

L00431BEE(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    M006355d4 = 0;
    M006356a0 = 0;
    M006356a1 = 0;
    M006356a2 = 0;
    Vfffffff8 = M0063562c;
    Vfffffffc = M00635630;
    L0044EB80( & Vfffffff8, Vfffffff8, Vfffffffc, M006355d6, M006355da);
    if(Vfffffffc < 0) {
        eax = M006355d4;
    } else {
        L0044EC90( & Vfffffff8, ~Ac);
        Vfffffff0 = Vfffffff8;
        Vfffffff4 = Vfffffffc;
        edi = M006355fc;
        esi = edi >> 0x10;
        esi = M00635634 * M00635634;
        eax = M00635600 >> 0x10;
        asm("imul dword [0x635638]");
        esi = esi + eax;
        eax = M00635604 >> 0x10;
        asm("imul dword [0x63563c]");
        esi = esi + eax + esi + eax;
        eax = L004537B0(esi, edi) >> 0xf;
        Vffffffd8 = M00635634 - eax;
        eax = L004537B0(esi, M00635600) >> 0xf;
        Vffffffdc = M00635638 - eax;
        eax = L004537B0(esi, M00635604) >> 0xf;
        Vffffffe0 = M0063563c - eax;
        Vffffffe4 = M006355e4 - *(A8 + 0x3e);
        Vffffffe8 = M006355ec - *(A8 + 0x46);
        eax = M006355f4 - *(A8 + 0x4e);
        Vffffffec = eax;
        eax = L00431D4C(A8, A10, & Vffffffe4, & Vffffffd8, Vffffffec | -1, Vfffffff0, Vfffffff4, A14);
    }
}

/*    Procedure: 0x00431D49 - 0x00431D4B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00431D49()
{



}

/*    Procedure: 0x00431D4C - 0x00432584
 *    Argument size: 32
 *    Local size: 64
 *    Save regs size: 12
 *    Called by:
 *        L00431485()
 *        L00431BEE()
 */

L00431D4C(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffee;
    /* unknown */ void  Vffffffef;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    M006355d4 = 0;
    M006356a0 = 0;
    M006356a1 = 0;
    M006356a2 = 0;
    M006356b1 = A24 >> 8;
    eax = A14;
    M00635634 = *eax;
    M00635638 = *(eax + 4);
    M0063563c = *(eax + 8);
    M006356d8 = A18;
    M0063562c = A1c;
    M00635630 = A20;
    M006355d6 = A1c;
    M006355da = A20;
    esi = *L00501b94( *(A8 + 0x56) & 0xff, Ac);
    M006356a8 = esi;
    M006355e0 = esi;
    Vffffffef = *(M006355e0 + 0x56);
    eax = *ebx;
    M00635640 = eax;
    M00635644 = M00635640 >> 0x1f;
    eax = *(ebx + 4);
    M00635648 = eax;
    M0063564c = M00635648 >> 0x1f;
    eax = *(ebx + 8);
    M00635650 = eax;
    M00635654 = M00635650 >> 0x1f;
    L0045A044(6510144, A8 + 0x3e);
    if(*(A8 + 0x57) != 0) {
        M0063567c = M00635634;
        M00635680 = M00635638;
        M00635684 = M0063563c;
        esi = 6510144;
        edi = 6510216;
        ecx = 6;
        asm("rep movsd");
        M006356b0 = 1;
        L00431A7C();
    } else {
        M00635658 = M00635634;
        M0063565c = M00635638;
        M00635660 = M0063563c;
        esi = 6510144;
        edi = 6510180;
        ecx = 6;
        asm("rep movsd");
        M006356b0 = 0;
    }
    al = *(A8 + 0x56);
    Vffffffee = al;
    bl = 0x72;
    Vffffffe4 = Ac + 0x72;
    do {
        if(!( *Vffffffe4 & 4) && bl != A18) {
            edi = *L00501b94(bl, Ac);
            if(*(edi + 0x8b) == 0) {
                if(Vffffffee == ( *(edi + 0x56) & 0xff)) {
                    goto L00431f15;
                }
                if(bl == Vffffffee) {
                    goto L00431f94;
                }
                if(Vffffffef == ( *(edi + 0x56) & 0xff)) {
                    goto L00431ff3;
                }
                if(*(A8 + 0x86) == *(edi + 0x56)) {
                    goto L0043208d;
                }
                if(bl == Vffffffef) {
                    goto L004320c3;
                }
                Vfffffffc = *L00501b94( *(edi + 0x56) & 0xff, Ac);
                if(Vffffffee == ( *(Vfffffffc + 0x56) & 0xff)) {
                    goto L00432121;
                }
                al = *(A8 + 0x86);
                if(al == *(Vfffffffc + 0x56)) {
                    esi = 6510168;
                    L0045A0EC( & Vffffffc0, Vfffffffc + 0x3e);
                    L00431A38(edi, & Vffffffc0);
                    M006356a3 = 0;
                    goto L0043219a;
L00432121:
                    (save)6510168;
                    (save)edi;
                    esi = 6510180;
                    edi = & Vffffffc0;
                    ecx = 6;
                    asm("rep movsd");
                    (restore)edi;
                    (restore)esi;
                    L0045A098( & Vffffffc0, Vfffffffc + 0x3e);
                    L00431A38(edi, & Vffffffc0);
                    M006356a3 = 0;
                    goto L0043219a;
L004320c3:
                    (save)6510168;
                    (save)edi;
                    esi = 6510180;
                    edi = & Vffffffc0;
                    ecx = 6;
                    asm("rep movsd");
                    (restore)edi;
                    (restore)esi;
                    L0045A044( & Vffffffc0, M006356a8 + 0x3e);
                    M006356a3 = 0;
                    goto L0043219a;
L0043208d:
                    (save)6510168;
                    (save)edi;
                    esi = 0x4e0a70;
                    edi = & Vffffffc0;
                    ecx = 6;
                    asm("rep movsd");
                    (restore)edi;
                    (restore)esi;
                    L00431A38(edi, & Vffffffc0);
                    M006356a3 = 0;
                    goto L0043219a;
L00431ff3:
                    esi = 6510168;
                    eax = M006356a8;
                    L0044EB4E( & Vffffffc0, M00635664, M00635668, *(eax + 0x3e), *(eax + 0x42));
                    eax = M006356a8;
                    L0044EB4E( & Vffffffc8, M0063566c, M00635670, *(eax + 0x46), *(eax + 0x4a));
                    eax = M006356a8;
                    L0044EB4E( & Vffffffd0, M00635674, M00635678, *(eax + 0x4e), *(eax + 0x52));
                    L00431A38(edi, & Vffffffc0);
                    M006356a3 = 0;
                    goto L0043219a;
L00431f94:
                    if(*(A8 + 0x57) == 0) {
                        (save)6510168;
                        (save)edi;
                        esi = 6510180;
                        edi = & Vffffffc0;
                        ecx = 6;
                        asm("rep movsd");
                        (restore)edi;
                        (restore)esi;
                        M006356a3 = 0;
                    } else {
                        (save)6510204;
                        (save)edi;
                        esi = 6510216;
                        edi = & Vffffffc0;
                        ecx = 6;
                        asm("rep movsd");
                        (restore)edi;
                        (restore)esi;
                        M006356a3 = 1;
                        goto L0043219a;
L00431f15:
                        if(*(edi + 0x57) == 0) {
                            (save)6510168;
                            (save)edi;
                            esi = 6510180;
                            edi = & Vffffffc0;
                            ecx = 6;
                            asm("rep movsd");
                            (restore)edi;
                            (restore)esi;
                            M006356a3 = 0;
                        } else {
                            esi = 6510204;
                            if(M006356b0 == 0) {
                                M006356b0 = 1;
                                L00431AFC( & Vffffffc0);
                            } else {
                                (save)6510204;
                                (save)edi;
                                esi = 6510216;
                                edi = & Vffffffc0;
                                ecx = 6;
                                asm("rep movsd");
                                (restore)edi;
                                (restore)esi;
                            }
                            M006356a3 = 1;
                        }
                        L0045A098( & Vffffffc0, edi + 0x3e);
                    }
L0043219a:
                    L004325FC( & Vffffffc0, edi, esi);
                }
            }
        }
        ebx = ebx - 1;
        Vffffffe4 = Vffffffe4 - 1;
    } while(bl > 0);
    if(!(M006355d4 & 0x80)) {
        if(!(M006356b1 & 8) && M006356a6 != 0x1e) {
            if(M006356a0 != 0) {
                goto L004322d6;
            }
            edx = M006355e0;
            al = *(edx + 0x57);
            if(al != 0 && M006356a4 != 0) {
                goto L00432294;
            }
            if(al == 0) {
                L0045A7A8(6510112, 6510284, edx);
            } else {
                L0045A7A8(6510112, 6510284, M006355e0 + 0x5a);
            }
            if(!(M006356b1 & 0x10)) {
                if(*(A8 + 0x57) != 0) {
                    L0045A968(6510076, 6510112, M006356a8);
                } else {
                    M006355fc = M00635620;
                    M00635600 = M00635624;
                    M00635604 = M00635628;
                    goto L00432376;
L00432294:
                    L0045A7A8(6510076, 6510284, M006355e0);
                    if(!(M006356b1 & 0x20)) {
                        L0045A7A8(6510112, 6510076, M006356a8);
                        goto L00432376;
L004322d6:
                        if(M006356a4 == 0) {
                            goto L00432314;
                        }
                        L00432588(6510076, 6510132);
                        if(!(M006356b1 & 0x20)) {
                            L0045A7A8(6510112, 6510076, M006356a8);
                            goto L00432376;
L00432314:
                            L00432588(6510112, 6510168);
                            if(!(M006356b1 & 0x10)) {
                                if(*(A8 + 0x57) != 0) {
                                    L0045A968(6510076, 6510112, M006356a8);
                                } else {
                                    M006355fc = M00635620;
                                    M00635600 = M00635624;
                                    M00635604 = M00635628;
                                }
                            }
                        }
                    }
                }
            }
        }
L00432376:
        if(!(M006356b1 & 2)) {
            eax = M00635634;
            M006355e4 = eax;
            M006355e8 = M006355e4 >> 0x1f;
            eax = M00635638;
            M006355ec = eax;
            M006355f0 = M006355ec >> 0x1f;
            eax = M0063563c;
            M006355f4 = eax;
            M006355f8 = M006355f4 >> 0x1f;
            L0044EBB6(6510052, M006355d6, M006355da, M006355e4, M006355e8);
            L0044EC90(6510052, -15);
            L0044EBB6(6510060, M006355d6, M006355da, M006355ec, M006355f0);
            L0044EC90(6510060, -15);
            L0044EBB6(6510068, M006355d6, M006355da, M006355f4, M006355f8);
            L0044EC90(6510068, -15);
            L0045A044(6510052, 6510144);
        }
        if(!(M006356b1 & 4)) {
            M00635608 = M00635658;
            M0063560c = M00635658 >> 0x1f;
            M00635610 = M0063565c;
            M00635614 = M0063565c >> 0x1f;
            M00635618 = M00635660;
            M0063561c = M00635660 >> 0x1f;
            L0044EBB6(6510088, M006355d6, M006355da, M00635608, M0063560c);
            L0044EC90(6510088, -15);
            L0044EBB6(6510096, M006355d6, M006355da, M00635610, M00635614);
            L0044EC90(6510096, -15);
            L0044EBB6(6510104, M006355d6, M006355da, M00635618, M0063561c);
            L0044EC90(6510104, -15);
            L0045A044(6510088, 6510180);
        }
        M006356a2 = *(M006355e0 + 0x86);
        eax = M006355d4;
    }
}

/*    Procedure: 0x00432585 - 0x00432587
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00432585()
{



}

/*    Procedure: 0x00432588 - 0x004325F8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00431D4C()
 */

L00432588(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *A8 = L004537B0( *Ac << 0x10, M006356c8) + M006356b2;
    *(A8 + 4) = L004537B0( *(Ac + 4) << 0x10, M006356c8) + M006356b6;
    *(A8 + 8) = L004537B0( *(Ac + 8) << 0x10, M006356c8) + M006356ba;
    return L004536D2(A8, A8);
}

/*    Procedure: 0x004325F9 - 0x004325FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004325F9()
{



}

/*    Procedure: 0x004325FC - 0x00432BAF
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00431D4C()
 */

L004325FC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -2344;
    (save)ebx;
    (save)esi;
    (save)Ac;
    ebx = A8;
    if(*(Ac + 0x14c) >= 0 || !(M006356b1 & 0x40)) {
        eax = L00433BA4(ebx, Ac, A10);
    } else {
        L0044EB4E(ebp - 8, *(Ac + 0x138), *(Ac + 0x13c), M006355d6, M006355da);
        eax = *(ebx + 0x14);
        if(eax < 0) {
            *(ebp - 0x1c) = !( *(ebx + 0x10));
            *(ebp - 0x18) = !eax;
        } else {
            *(ebp - 0x1c) = *(ebx + 0x10);
            *(ebp - 0x18) = *(ebx + 0x14);
        }
        eax = *(ebp - 0x18);
        if(eax <= *(ebp - 4)) {
            if(*(ebp - 0x18) != *(ebp - 4)) {
                goto L00432699;
            }
            eax = *(ebp - 0x1c);
            if(eax < *(ebp - 8)) {
L00432699:
                eax = *(ebx + 0xc);
                if(eax < 0) {
                    *(ebp - 0x24) = !( *(ebx + 8));
                    *(ebp - 0x20) = !eax;
                } else {
                    *(ebp - 0x24) = *(ebx + 8);
                    *(ebp - 0x20) = *(ebx + 0xc);
                }
                eax = *(ebp - 0x20);
                if(eax <= *(ebp - 4)) {
                    if(*(ebp - 0x20) != *(ebp - 4)) {
                        goto L004326db;
                    }
                    eax = *(ebp - 0x24);
                    if(eax < *(ebp - 8)) {
L004326db:
                        eax = *(ebx + 4);
                        if(eax < 0) {
                            *(ebp - 0x2c) = !( *ebx);
                            *(ebp - 0x28) = !eax;
                        } else {
                            *(ebp - 0x2c) = *ebx;
                            *(ebp - 0x28) = *(ebx + 4);
                        }
                        eax = *(ebp - 0x28);
                        if(eax <= *(ebp - 4)) {
                            if(*(ebp - 0x28) != *(ebp - 4)) {
                                goto L0043271b;
                            }
                            eax = *(ebp - 0x2c);
                            if(eax < *(ebp - 8)) {
L0043271b:
                                *(ebp - 0x10) = *(Ac + 0x138);
                                *(ebp - 0xc) = *(Ac + 0x13c);
                                esi = *(ebp - 0x28) | *(ebp - 0x20) | *(ebp - 0x18) | M006355da | *(ebp - 0xc);
                                if(esi != 0) {
                                    esi = L00459CEC(esi) + 3;
                                } else {
                                    esi = L00459CEC( *(ebp - 0x2c) | *(ebp - 0x24) | *(ebp - 0x1c) | M006355d6 | *(ebp - 0x10)) - 0x1d;
                                    if(esi < 0) {
                                        esi = 0;
                                    }
                                }
                                L0044EC90(ebx, ~esi);
                                L0044EC90(ebx + 8, ~esi);
                                L0044EC90(ebx + 0x10, ~esi);
                                L0044EC90(ebp - 0x2c, ~esi);
                                L0044EC90(ebp - 0x24, ~esi);
                                L0044EC90(ebp - 0x1c, ~esi);
                                L0044EC90(ebp - 0x10, ~esi);
                                *(ebp - 8) = M006355d6;
                                *(ebp - 4) = M006355da;
                                L0044EC90(ebp - 8, ~esi);
                                *(ebp - 0x38) = *ebx;
                                *(ebp - 0x34) = *(ebx + 8);
                                *(ebp - 0x30) = *(ebx + 0x10);
                                ebx = *(ebp - 0x10);
                                M006356ac = *(ebp - 8);
                                (save)L004537B0( *(A10 + 4) << 0x10, *(ebp - 0x30));
                                eax = L004537B0( *(A10 + 8) << 0x10, *(ebp - 0x34));
                                (restore)edx;
                                eax = L004765BC(edx - eax);
                                if(ebx >= eax) {
                                    (save)L004537B0( *(A10 + 8) << 0x10, *(ebp - 0x38));
                                    eax = L004537B0( *A10 << 0x10, *(ebp - 0x30));
                                    (restore)edx;
                                    eax = L004765BC(edx - eax);
                                    if(ebx >= eax) {
                                        (save)L004537B0( *A10 << 0x10, *(ebp - 0x34));
                                        eax = L004537B0( *(A10 + 4) << 0x10, *(ebp - 0x38));
                                        (restore)edx;
                                        eax = L004765BC(edx - eax);
                                        if(ebx >= eax) {
                                            if(M006356b1 & 1) {
                                                goto L004329bc;
                                            }
                                            ebx = L004537B0( *(ebp - 0x38), *A10 << 0x10);
                                            ebx = ebx + L004537B0( *(ebp - 0x34), *(A10 + 4) << 0x10);
                                            eax = L004537B0( *(ebp - 0x30), *(A10 + 8) << 0x10);
                                            ebx = ebx + eax;
                                            if(ebx >= 0 && ebx <= M006356ac) {
                                                M006355d6 = ebx;
                                                M006355da = 0;
                                                L0044EC90(6510038, esi);
                                                *(ebp - 0x11) = 0x1d;
                                                *(ebp - 0x12) = 0x1d;
                                                M006356a4 = M006356a3;
                                                M006356a5 = *(ebp - 0x11);
                                                M006356a6 = *(ebp - 0x12);
                                                M006356cc = *(ebp - 0x50);
                                                M006356d0 = *(ebp - 0x4c);
                                                eax = *(ebp - 0x48);
                                                M006356d4 = eax;
                                                M006355e0 = Ac;
                                                M006356a0 = 0;
                                                M006355d4 = M006355d4 | 0x80;
                                                goto L00432ba9;
L004329bc:
                                                ebx = *L00501b9c( *(Ac + 0x82));
                                                *(ebp + -2308) = *(ebx + 0xc);
                                                *(ebp + -2304) = *(ebx + 4);
                                                *(ebp + -2300) = *(ebx + 0x14) + *(ebx + 0x18);
                                                L00431564(ebp + -2332);
                                                eax = esi;
                                                *(ebp + -2296) = eax;
                                                if(*(ebp + -2300) + 7 - eax > 0x1d) {
                                                    esi = *(ebp + -2300) + 7 - *(ebp + -2296) - 0x1d;
                                                    ecx = esi;
                                                    *(ebp - 0x38) = *(ebp - 0x38) >> cl;
                                                    ecx = esi;
                                                    *(ebp - 0x34) = *(ebp - 0x34) >> cl;
                                                    *(ebp - 0x30) = *(ebp - 0x30) >> esi;
                                                    *(ebp + -2296) = *(ebp + -2296) + esi;
                                                }
                                                if(M006356a3 != 0) {
                                                    if(Ac != M006356a8) {
                                                        goto L00432a81;
                                                    }
                                                    eax = A10;
                                                    *(ebp + -2320) = *eax;
                                                    *(ebp + -2316) = *(eax + 4);
                                                    *(ebp + -2312) = *(eax + 8);
                                                    *(ebp + -2332) = *(ebp - 0x38);
                                                    *(ebp + -2328) = *(ebp - 0x34);
                                                    *(ebp + -2324) = *(ebp - 0x30);
                                                } else {
L00432a81:
                                                    if(M006356a3 == 0) {
                                                        if(*(Ac + 0x57) == 0) {
                                                            goto L00432a9d;
                                                        }
                                                        *L005030e0(Ac);
                                                        esi = Ac + 0x5a;
                                                    } else {
L00432a9d:
                                                        esi = Ac;
                                                    }
                                                    L0045A968(ebp + -2332, ebp - 0x38, esi);
                                                    L0045A968(ebp + -2320, A10, esi);
                                                    *(ebp - 0x50) = *(ebp + -2320);
                                                    *(ebp - 0x4c) = *(ebp + -2316);
                                                    *(ebp - 0x48) = *(ebp + -2312);
                                                }
                                                L00432FDC(ebp + -2332, *(ebx + 0x34), Ac);
                                                L004314B4(ebp + -2332, ebp - 8, ebp - 0x50, ebp - 0x11, ebp - 0x12);
                                                *(ebp - 4) = 0;
                                                L0044EC90(ebp - 8, *(ebp + -2296));
                                                eax = *(ebp - 4);
                                                if(eax <= M006355da) {
                                                    if(*(ebp - 4) != M006355da) {
                                                        goto L00432b4e;
                                                    }
                                                    eax = *(ebp - 8);
                                                    if(eax < M006355d6) {
L00432b4e:
                                                        M006356a4 = M006356a3;
                                                        M006355d6 = *(ebp - 8);
                                                        M006355da = *(ebp - 4);
                                                        M006356a5 = *(ebp - 0x11);
                                                        M006356a6 = *(ebp - 0x12);
                                                        M006356cc = *(ebp - 0x50);
                                                        M006356d0 = *(ebp - 0x4c);
                                                        eax = *(ebp - 0x48);
                                                        M006356d4 = eax;
                                                        M006355e0 = Ac;
                                                        M006356a0 = 0;
                                                        M006355d4 = M006355d4 | 0x80;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L00432ba9:
    (restore)Ac;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00432BB0 - 0x00432FD9
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00432FDC()
 */

L00432BB0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    esp = esp + -2288;
    (save)A8;
    (save)esi;
    (save)A10;
    esi = A14;
    eax = *L00501b9c(Ac);
    *(ebp + -2240) = *(eax + 0xc);
    *(ebp + -2236) = *(eax + 4);
    *(ebp + -2232) = *(eax + 0x14) + *(eax + 0x18);
    *(ebp - 4) = *(eax + 0x34);
    L00431564(ebp + -2264);
    *(ebp + -2228) = *(A8 + 0x24);
    *(ebp + -2222) = esi;
    eax = (A10 >> 1) + (A10 >> 1) * 2;
    edx = *(A8 + 0x1c);
    *(ebp - 0xc) = *(edx + eax * 2);
    *(ebp - 8) = *(edx + eax * 2 + 4);
    *(ebp + -2276) = *(ebp - 0xa);
    *(ebp + -2272) = *(ebp - 9);
    *(ebp + -2268) = *(ebp - 8);
    if(!(A10 & 1)) {
        *(ebp + -2276) = ~( *(ebp + -2276));
    }
    eax = *(A8 + 0x20) - *(A8 + 0x24);
    if(eax < 0) {
        eax = ~eax;
        ecx = eax;
        *(ebp + -2276) = *(ebp + -2276) >> cl;
        ecx = eax;
        *(ebp + -2272) = *(ebp + -2272) >> cl;
        *(ebp + -2268) = *(ebp + -2268) >> eax;
    } else {
        ecx = eax;
        *(ebp + -2276) = *(ebp + -2276) << cl;
        ecx = eax;
        *(ebp + -2272) = *(ebp + -2272) << cl;
        *(ebp + -2268) = *(ebp + -2268) << eax;
    }
    *(ebp + -2276) = *A8 - *(ebp + -2276);
    *(ebp + -2272) = *(A8 + 4) - *(ebp + -2272);
    *(ebp + -2268) = *(A8 + 8) - *(ebp + -2268);
    *(ebp + -2288) = *(A8 + 0xc);
    *(ebp + -2284) = *(A8 + 0x10);
    *(ebp + -2280) = *(A8 + 0x14);
    if(esi == 0) {
        *(ebp + -2264) = *(ebp + -2276);
        *(ebp + -2260) = *(ebp + -2272);
        *(ebp + -2256) = *(ebp + -2268);
        *(ebp + -2252) = *(ebp + -2288);
        *(ebp + -2248) = *(ebp + -2284);
        *(ebp + -2244) = *(ebp + -2280);
    } else {
        if(!(esi & 0x20)) {
            *(ebp + -2276) = ~( *(ebp + -2276));
            *(ebp + -2288) = ~( *(ebp + -2288));
        }
        if(!(esi & 0x10)) {
            *(ebp + -2272) = ~( *(ebp + -2272));
            *(ebp + -2284) = ~( *(ebp + -2284));
        }
        if(!(esi & 8)) {
            *(ebp + -2268) = ~( *(ebp + -2268));
            *(ebp + -2280) = ~( *(ebp + -2280));
        }
        esi = esi & 7;
        if(esi <= 5) {
            switch(esi) {
                case 0:
L00432d92:
                    *(ebp + -2264) = *(ebp + -2276);
                    *(ebp + -2260) = *(ebp + -2272);
                    *(ebp + -2256) = *(ebp + -2268);
                    *(ebp + -2252) = *(ebp + -2288);
                    *(ebp + -2248) = *(ebp + -2284);
                    *(ebp + -2244) = *(ebp + -2280);
                    goto L00432fa5;
                case 1:
                    *(ebp + -2260) = *(ebp + -2276);
                    *(ebp + -2256) = *(ebp + -2272);
                    *(ebp + -2264) = *(ebp + -2268);
                    *(ebp + -2248) = *(ebp + -2288);
                    *(ebp + -2244) = *(ebp + -2284);
                    *(ebp + -2252) = *(ebp + -2280);
                    goto L00432fa5;
                case 2:
                    *(ebp + -2256) = *(ebp + -2276);
                    *(ebp + -2264) = *(ebp + -2272);
                    *(ebp + -2260) = *(ebp + -2268);
                    *(ebp + -2244) = *(ebp + -2288);
                    *(ebp + -2252) = *(ebp + -2284);
                    *(ebp + -2248) = *(ebp + -2280);
                    goto L00432fa5;
                case 3:
                    *(ebp + -2256) = *(ebp + -2276);
                    *(ebp + -2260) = *(ebp + -2272);
                    *(ebp + -2264) = *(ebp + -2268);
                    *(ebp + -2244) = *(ebp + -2288);
                    *(ebp + -2248) = *(ebp + -2284);
                    *(ebp + -2252) = *(ebp + -2280);
                    goto L00432fa5;
                case 4:
                    *(ebp + -2260) = *(ebp + -2276);
                    *(ebp + -2264) = *(ebp + -2272);
                    *(ebp + -2256) = *(ebp + -2268);
                    *(ebp + -2248) = *(ebp + -2288);
                    *(ebp + -2252) = *(ebp + -2284);
                    *(ebp + -2244) = *(ebp + -2280);
                    goto L00432fa5;
                case 5:
                    *(ebp + -2264) = *(ebp + -2276);
                    *(ebp + -2256) = *(ebp + -2272);
                    *(ebp + -2260) = *(ebp + -2268);
                    *(ebp + -2252) = *(ebp + -2288);
                    *(ebp + -2244) = *(ebp + -2284);
                    *(ebp + -2248) = *(ebp + -2280);
                    goto L00432fa5;
            }
            goto L00432d92;
        }
        *(ebp + -2264) = *(ebp + -2276);
        *(ebp + -2260) = *(ebp + -2272);
        *(ebp + -2256) = *(ebp + -2268);
        *(ebp + -2252) = *(ebp + -2288);
        *(ebp + -2248) = *(ebp + -2284);
        *(ebp + -2244) = *(ebp + -2280);
    }
L00432fa5:
    eax = L00432FDC(ebp + -2264, *(ebp - 4), A18);
    eax = L004315A0(A8, ebp + -2214, *(ebp + -2222));
    (restore)A10;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x00432FDA - 0x00432FDB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00432FDA()
{



}

/*    Procedure: 0x00432FDC - 0x0043325D
 *    Argument size: 12
 *    Local size: 44
 *    Save regs size: 12
 *    Called by:
 *        L004325FC()
 *        L00432BB0()
 */

L00432FDC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;



    esi = Ac;
    while(1) {
        bl = *esi;
        esi = esi + 1;
        if(bl == 0) {
            break;
        }
        esi = esi + 1;
        *(A8 + 0x29) = bl;
        if(!(bl & 0x20)) {
            al = *esi;
            esi = esi + 1;
            eax = eax & 0xff;
            Vffffffec = *(A10 + eax * 2 + 0x9c) & 65535;
            al = *esi;
            esi = esi + 1;
            ecx = al & 0x1f;
            edx = Vffffffec >> cl;
            eax = al >> 7;
            edx = edx ^ eax;
            if(!(dl & 1)) {
                goto L00433034;
            }
        }
        if(eax = (A10 & 0xc0) - 1) {
            if(*esi != 0xff) {
                eax = L00433260(A8, & Vfffffff0, & Vfffffff4, esi, & Vffffffd4);
                esi = eax;
                if(Vfffffff0 < 0) {
                    break;
                }
                if(Vfffffff4 < 0) {
                    Vfffffff4 = 0;
                }
                eax = Vfffffff4;
                if(eax == Vfffffff0) {
                    continue;
                }
                eax = L004318C8(A8, Vfffffff4, Vfffffff0, & Vffffffd4, bl);
                continue;
            }
            eax = L00433318(A8, & Vfffffff0, & Vfffffff4, esi + 1, & Vffffffd4, A10);
            esi = eax;
            if(Vfffffff0 < 0) {
                break;
            }
            if(Vfffffff4 < 0) {
                Vfffffff4 = 0;
            }
            eax = Vfffffff4;
            if(eax == Vfffffff0) {
                continue;
            }
            eax = L00431844(A8, Vfffffff4, Vfffffff0, & Vffffffd4, bl);
            continue;
        }
        if(eax = eax - 0x3f) {
            eax = L00433934(A8, & Vfffffff0, & Vfffffff4, esi, & Vffffffd4);
            esi = eax;
            if(Vfffffff0 < 0) {
                continue;
            }
            Vfffffff4 = Vfffffff4 - 2;
            if(Vfffffff4 < 0) {
                Vfffffff4 = 0;
            }
            eax = Vfffffff4;
            if(eax == Vfffffff0) {
                continue;
            }
            eax = L00431704(A8, Vfffffff4, Vfffffff0, & Vffffffd4, bl);
            continue;
        }
        if(eax = eax - 0x40) {
            eax = ( *esi & 0xff) << 8;
            esi = esi + 1;
            eax = eax | *esi & 0xff;
            esi = esi + 1;
            dl = *esi;
            esi = esi + 1;
            cl = *esi;
            esi = esi + 1;
            eax = L00432BB0(A8, eax, cl, dl, A10);
            continue;
        }
        if(eax = eax - 0x40) {
            eax = L00433260(A8, & Vfffffff0, & Vfffffff4, esi, & Vffffffd4);
            esi = eax;
            if(Vfffffff0 < 0) {
                continue;
            }
            if(Vfffffff4 < 0) {
                Vfffffff4 = 0;
            }
            eax = Vfffffff4;
            if(eax == Vfffffff0) {
                continue;
            }
            eax = L00431844(A8, Vfffffff4, Vfffffff0, & Vffffffd4, bl);
            continue;
        }
        continue;
L00433034:
        if(A10 = (A10 & 0xc0) - 1) {
            al = *esi;
            esi = esi + 1;
            if(al != 0xff) {
                if(al == 0) {
                    continue;
                }
                do {
                    al = *esi;
                    esi = esi + 1;
                } while(al != 0);
                continue;
            }
            eax = L0046250C(esi + 6);
            esi = eax;
            continue;
        }
        if(A10 = A10 - 0x3f) {
            do {
                al = *esi;
                esi = esi + 1;
            } while(al != 0);
            continue;
        }
        if(A10 = A10 - 0x40) {
            esi = esi + 4;
            continue;
        }
        if(A10 = A10 - 0x40) {
            do {
                al = *esi;
                esi = esi + 1;
            } while(al != 0);
            continue;
        }
    }
}

/*    Procedure: 0x0043325E - 0x0043325F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043325E()
{



}

/*    Procedure: 0x00433260 - 0x00433316
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 8
 *    Called by:
 *        L00432FDC()
 */

L00433260(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A14;
    *Ac = 2147483632;
    *A10 = -2147483632;
    while(1) {
        al = *ebx;
        ebx = ebx + 1;
        if(al == 0) {
            break;
        }
        eax = L004339EC(A8, al, & Vfffffff0, & Vfffffffc);
        if(eax <= 0) {
            if(eax >= 0) {
                if(Vfffffffc >= 0) {
                    continue;
                } else {
                    goto L00433302;
                }
            }
            if(*Ac < Vfffffffc) {
                goto L00433302;
            }
            if(*A10 >= Vfffffffc) {
                continue;
            }
            *A10 = Vfffffffc;
            eax = A18;
            *eax = Vfffffff0;
            *(eax + 4) = Vfffffff4;
            *(eax + 8) = Vfffffff8;
            continue;
        }
        if(*A10 > Vfffffffc) {
            goto L00433302;
        }
        if(*Ac <= Vfffffffc) {
            continue;
        }
        *Ac = Vfffffffc;
        if(Vfffffffc <= 0) {
            goto L00433302;
        }
    }
    eax = ebx;
    goto L00433311;
L00433302:
    *Ac = -2147483632;
    do {
        al = *ebx;
        ebx = ebx + 1;
    } while(al != 0);
    eax = ebx;
L00433311:
}

/*    Procedure: 0x00433317 - 0x00433317
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00433317()
{



}

/*    Procedure: 0x00433318 - 0x00433932
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00432FDC()
 */

L00433318(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    esp = esp + -156;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = A8;
    edx = *(A14 + 1) & 0xff;
    *(ebp - 4) = *(A14 + 2) & 0xff;
    *(ebp - 8) = *(A14 + 3) & 0xff;
    *(ebp - 0xc) = ( *(A14 + 5) & 0xff) << 8 | *(A14 + 4) & 0xff;
    ecx = (( *A14 & 0xff) >> 1) + (( *A14 & 0xff) >> 1) * 2;
    ebx = *(esi + 0x1c);
    *(ebp - 0x14) = *(ebx + ecx * 2);
    *(ebp - 0x10) = *(ebx + ecx * 2 + 4);
    *(ebp - 0x30) = !( *A14 & 0xff & 1) ? ~( *(ebp - 0x12)) : *(ebp - 0x12);
    *(ebp - 0x2c) = *(ebp - 0x11);
    *(ebp - 0x28) = *(ebp - 0x10);
    A14 = (edx >> 1) + (edx >> 1) * 2;
    ecx = *(esi + 0x1c);
    *(ebp - 0x14) = *(ecx + A14 * 2);
    *(ebp - 0x10) = *(ecx + A14 * 2 + 4);
    *(ebp - 0x78) = !(dl & 1) ? ~( *(ebp - 0x12)) : *(ebp - 0x12);
    *(ebp - 0x74) = *(ebp - 0x11);
    *(ebp - 0x70) = *(ebp - 0x10);
    A14 = ( *(ebp - 4) >> 1) + ( *(ebp - 4) >> 1) * 2;
    edx = *(esi + 0x1c);
    *(ebp - 0x14) = *(edx + A14 * 2);
    *(ebp - 0x10) = *(edx + A14 * 2 + 4);
    *(ebp - 0x6c) = !( *(ebp - 4) & 1) ? ~( *(ebp - 0x12)) : *(ebp - 0x12);
    *(ebp - 0x68) = *(ebp - 0x11);
    *(ebp - 0x64) = *(ebp - 0x10);
    A14 = ( *(ebp - 8) >> 1) + ( *(ebp - 8) >> 1) * 2;
    edx = *(esi + 0x1c);
    *(ebp - 0x14) = *(edx + A14 * 2);
    *(ebp - 0x10) = *(edx + A14 * 2 + 4);
    *(ebp - 0x60) = !( *(ebp - 8) & 1) ? ~( *(ebp - 0x12)) : *(ebp - 0x12);
    *(ebp - 0x5c) = *(ebp - 0x11);
    *(ebp - 0x58) = *(ebp - 0x10);
    A14 = *(esi + 0x20) - *(esi + 0x24);
    if(A14 < 0) {
        A14 = ~A14;
        ecx = A14;
        *(ebp - 0x30) = *(ebp - 0x30) >> cl;
        ecx = A14;
        *(ebp - 0x2c) = *(ebp - 0x2c) >> cl;
        ecx = A14;
        *(ebp - 0x28) = *(ebp - 0x28) >> cl;
        ecx = A14;
        *(ebp - 0x78) = *(ebp - 0x78) >> cl;
        ecx = A14;
        *(ebp - 0x74) = *(ebp - 0x74) >> cl;
        ecx = A14;
        *(ebp - 0x70) = *(ebp - 0x70) >> cl;
        ecx = A14;
        *(ebp - 0x6c) = *(ebp - 0x6c) >> cl;
        ecx = A14;
        *(ebp - 0x68) = *(ebp - 0x68) >> cl;
        ecx = A14;
        *(ebp - 0x64) = *(ebp - 0x64) >> cl;
        ecx = A14;
        *(ebp - 0x60) = *(ebp - 0x60) >> cl;
        ecx = A14;
        *(ebp - 0x5c) = *(ebp - 0x5c) >> cl;
        *(ebp - 0x58) = *(ebp - 0x58) >> A14;
    } else {
        ecx = A14;
        *(ebp - 0x30) = *(ebp - 0x30) << cl;
        ecx = A14;
        *(ebp - 0x2c) = *(ebp - 0x2c) << cl;
        ecx = A14;
        *(ebp - 0x28) = *(ebp - 0x28) << cl;
        ecx = A14;
        *(ebp - 0x78) = *(ebp - 0x78) << cl;
        ecx = A14;
        *(ebp - 0x74) = *(ebp - 0x74) << cl;
        ecx = A14;
        *(ebp - 0x70) = *(ebp - 0x70) << cl;
        ecx = A14;
        *(ebp - 0x6c) = *(ebp - 0x6c) << cl;
        ecx = A14;
        *(ebp - 0x68) = *(ebp - 0x68) << cl;
        ecx = A14;
        *(ebp - 0x64) = *(ebp - 0x64) << cl;
        ecx = A14;
        *(ebp - 0x60) = *(ebp - 0x60) << cl;
        ecx = A14;
        *(ebp - 0x5c) = *(ebp - 0x5c) << cl;
        *(ebp - 0x58) = *(ebp - 0x58) << A14;
    }
    A14 = ~( *(ebp - 0x30));
    *(ebp - 0x78) = *(ebp - 0x78) + A14;
    edx = ~( *(ebp - 0x2c));
    *(ebp - 0x74) = *(ebp - 0x74) + edx;
    ecx = ~( *(ebp - 0x28));
    *(ebp - 0x70) = *(ebp - 0x70) + ecx;
    ebx = ~( *(ebp - 0x30));
    *(ebp - 0x6c) = *(ebp - 0x6c) + A14;
    ebx = ~( *(ebp - 0x2c));
    *(ebp - 0x68) = *(ebp - 0x68) + edx;
    ebx = ~( *(ebp - 0x28));
    *(ebp - 0x64) = *(ebp - 0x64) + ecx;
    ebx = ~( *(ebp - 0x30));
    *(ebp - 0x60) = *(ebp - 0x60) + A14;
    A14 = ~( *(ebp - 0x2c));
    *(ebp - 0x5c) = *(ebp - 0x5c) + edx;
    A14 = ~( *(ebp - 0x28));
    *(ebp - 0x58) = *(ebp - 0x58) + ecx;
    *(ebp - 0x30) = *(ebp - 0x30) - *esi;
    *(ebp - 0x2c) = *(ebp - 0x2c) - *(esi + 4);
    *(ebp - 0x28) = *(ebp - 0x28) - *(esi + 8);
    if(!(M006356b1 & 8)) {
        A14 = A18;
        *A14 = *(ebp - 0x30);
        *(A14 + 4) = *(ebp - 0x2c);
        *(A14 + 8) = *(ebp - 0x28);
    }
    edi = L0045122F(ebp - 0x30);
    A14 = A1c;
    *(ebp - 0x20) = *(A14 + 0x138);
    *(ebp - 0x1c) = *(A14 + 0x13c);
    L0044EC90(ebp - 0x20, ~( *(esi + 0x24)));
    if(edi - *(ebp - 0x20) >= M006356ac) {
        *Ac = -2147483632;
        *A10 = -2147483632;
        A14 = L0046250C(A14 + 6);
    } else {
        ebx = L004537B0( *(ebp - 0x30), *(esi + 0xc) << 0x10);
        ebx = ebx + L004537B0( *(ebp - 0x2c), *(esi + 0x10) << 0x10);
        ebx = ebx + L004537B0( *(ebp - 0x28), *(esi + 0x14) << 0x10);
        if(ebx < ~(edi >> 1)) {
            *Ac = -2147483632;
            *A10 = -2147483632;
            A14 = L0046250C(A14 + 6);
        } else {
            *(ebp + -132) = *(esi + 0xc);
            *(ebp - 0x80) = *(esi + 0x10);
            *(ebp - 0x7c) = *(esi + 0x14);
            A14 = *(ebp + -132);
            if(A14 != 0) {
                *(ebp + -144) = A14;
                *(ebp + -140) = *(ebp - 0x80);
                *(ebp + -136) = 0;
                edi = *L00501674(ebp + -144);
                ebx = *(ebp + -144);
                if(ebx < 0) {
                    esi = L004537CD( ~ebx, edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                    esi = ~esi;
                } else {
                    esi = L004537CD( *(ebp + -144), edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                }
                ebx = *(ebp + -140);
                if(ebx < 0) {
                    ebx = L004537CD( ~ebx, edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                    ebx = ~ebx;
                } else {
                    ebx = L004537CD( *(ebp + -140), edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                }
                *(ebp - 0x54) = ebx;
                *(ebp - 0x50) = esi;
                *(ebp - 0x4c) = 0;
                *(ebp - 0x48) = ~esi;
                *(ebp - 0x44) = ebx;
                *(ebp - 0x40) = 0;
                *(ebp - 0x3c) = 0;
                *(ebp - 0x38) = 0;
                *(ebp - 0x34) = 2147483647;
                *(ebp - 0x80) = edi;
            } else {
                *(ebp - 0x54) = 2147483647;
                *(ebp - 0x50) = 0;
                *(ebp - 0x4c) = 0;
                *(ebp - 0x48) = 0;
                *(ebp - 0x44) = 2147483647;
                *(ebp - 0x40) = 0;
                *(ebp - 0x3c) = 0;
                *(ebp - 0x38) = 0;
                *(ebp - 0x34) = 2147483647;
            }
            A14 = *(ebp - 0x80);
            if(A14 != 0) {
                *(ebp + -156) = 0;
                *(ebp + -152) = A14;
                *(ebp + -148) = *(ebp - 0x7c);
                edi = *L00501674(ebp + -156);
                ebx = *(ebp + -152);
                if(ebx < 0) {
                    esi = L004537CD( ~ebx, edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                    esi = ~esi;
                } else {
                    esi = L004537CD( *(ebp + -152), edi);
                    if(esi < 0) {
                        esi = 2147483647;
                    }
                }
                ebx = *(ebp + -148);
                if(ebx < 0) {
                    ebx = L004537CD( ~ebx, edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                    ebx = ~ebx;
                } else {
                    ebx = L004537CD( *(ebp + -148), edi);
                    if(ebx < 0) {
                        ebx = 2147483647;
                    }
                }
                *(ebp - 0x4c) = L004537B0( *(ebp - 0x50), esi);
                *(ebp - 0x50) = L004537B0( *(ebp - 0x50), ebx);
                *(ebp - 0x40) = L004537B0( *(ebp - 0x44), esi);
                *(ebp - 0x44) = L004537B0( *(ebp - 0x44), ebx);
                *(ebp - 0x38) = ~esi;
                *(ebp - 0x34) = ebx;
            }
            L0045A7A8(ebp - 0x30, ebp - 0x30, ebp - 0x54);
            L0045A7A8(ebp - 0x78, ebp - 0x78, ebp - 0x54);
            L0045A7A8(ebp - 0x6c, ebp - 0x6c, ebp - 0x54);
            L0045A7A8(ebp - 0x60, ebp - 0x60, ebp - 0x54);
            A14 = L0046D648(ebp - 0x18, M006356ac, A1c, 0, A14 + 6, ebp - 0x30, ebp - 0x78, *(ebp - 0xc), 0, 0, 0, 2);
            if(*(ebp - 0x18) < M006356ac) {
                if(!(M006356b1 & 8)) {
                    L004536B1(A18, A18);
                    *A18 = ~( *A18);
                    *(A18 + 4) = ~( *(A18 + 4));
                    *(A18 + 8) = ~( *(A18 + 8));
                }
                *A10 = *(ebp - 0x18);
                *Ac = 2147483632;
            } else {
                *A10 = -2147483632;
                *Ac = -2147483632;
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00433933 - 0x00433933
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00433933()
{



}

/*    Procedure: 0x00433934 - 0x004339EA
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 8
 *    Called by:
 *        L00432FDC()
 */

L00433934(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A14;
    *Ac = 2147483632;
    *A10 = -2147483632;
    while(1) {
        al = *ebx;
        ebx = ebx + 1;
        if(al == 0) {
            break;
        }
        eax = L004339EC(A8, al, & Vfffffff0, & Vfffffffc);
        if(eax >= 0) {
            if(eax <= 0) {
                if(Vfffffffc <= 0) {
                    continue;
                } else {
                    goto L004339d6;
                }
            }
            if(*Ac < Vfffffffc) {
                goto L004339d6;
            }
            if(*A10 >= Vfffffffc) {
                continue;
            }
            *A10 = Vfffffffc;
            continue;
        }
        if(*A10 > Vfffffffc) {
            goto L004339d6;
        }
        if(*Ac <= Vfffffffc) {
            continue;
        }
        *Ac = Vfffffffc;
        eax = A18;
        *eax = Vfffffff0;
        *(eax + 4) = Vfffffff4;
        *(eax + 8) = Vfffffff8;
        if(Vfffffffc < 0) {
            goto L004339d6;
        }
    }
    eax = ebx;
    goto L004339e5;
L004339d6:
    *Ac = -2147483632;
    do {
        al = *ebx;
        ebx = ebx + 1;
    } while(al != 0);
    eax = ebx;
L004339e5:
}

/*    Procedure: 0x004339EB - 0x004339EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004339EB()
{



}

/*    Procedure: 0x004339EC - 0x00433BA0
 *    Argument size: 16
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L00433260()
 *        L00433934()
 */

L004339EC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff3;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    esi = A8;
    edx = (Ac >> 1) + (Ac >> 1) * 2;
    ecx = *(esi + 0x18);
    Vfffffff8 = *(ecx + edx * 2 - 6);
    Vfffffffc = *(ecx + edx * 2 - 2);
    edx = ((Vfffffff8 & 0xff) >> 1) + ((Vfffffff8 & 0xff) >> 1) * 2;
    ecx = *(esi + 0x1c);
    Vfffffff0 = *(ecx + edx * 2);
    Vfffffff4 = *(ecx + edx * 2 + 4);
    if(!(Ac & 1)) {
        *ebx = ~Vfffffffa << 0x18;
        *(ebx + 4) = Vfffffffb << 0x18;
        *(ebx + 8) = Vfffffffc << 0x18;
        Vffffffe4 = Vfffffff2;
        Vffffffe8 = Vfffffff3;
        Vffffffec = Vfffffff4;
        if(!(Vfffffff8 & 1)) {
            Vffffffe4 = ~Vffffffe4;
        }
    } else {
        *ebx = Vfffffffa << 0x18;
        *(ebx + 4) = Vfffffffb << 0x18;
        *(ebx + 8) = Vfffffffc << 0x18;
        Vffffffe4 = Vfffffff2;
        Vffffffe8 = Vfffffff3;
        Vffffffec = Vfffffff4;
        if(!(Vfffffff8 & 1)) {
            Vffffffe4 = ~Vffffffe4;
        }
    }
    eax = *(esi + 0x20) - *(esi + 0x24);
    if(eax < 0) {
        eax = ~eax;
        ecx = eax;
        Vffffffe4 = Vffffffe4 >> cl;
        ecx = eax;
        Vffffffe8 = Vffffffe8 >> cl;
        Vffffffec = Vffffffec >> eax;
    } else {
        ecx = eax;
        Vffffffe4 = Vffffffe4 << cl;
        ecx = eax;
        Vffffffe8 = Vffffffe8 << cl;
        Vffffffec = Vffffffec << eax;
    }
    Vffffffe4 = Vffffffe4 - *esi;
    Vffffffe8 = Vffffffe8 - *(esi + 4);
    Vffffffec = Vffffffec - *(esi + 8);
    edi = L004537B0( *(esi + 0xc), *ebx);
    edi = edi + L004537B0( *(esi + 0x10), *(ebx + 4));
    esi = edi + L004537B0( *(esi + 0x14), *(ebx + 8));
    edi = L004537B0(Vffffffe4, *ebx);
    edi = edi + L004537B0(Vffffffe8, *(ebx + 4));
    edi = edi + L004537B0(Vffffffec, *(ebx + 8));
    *A14 = edi;
    if(esi != 0) {
        ebx = edi ^ esi;
        eax = L004537CD(L004765BC(edi), L004765BC(esi) << 0x10);
        *A14 = eax;
        if(ebx < 0) {
            *A14 = ~( *A14);
        }
    }
    return esi;
}

/*    Procedure: 0x00433BA1 - 0x00433BA3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00433BA1()
{



}

/*    Procedure: 0x00433BA4 - 0x00433EEA
 *    Argument size: 12
 *    Local size: 68
 *    Save regs size: 12
 *    Called by:
 *        L004325FC()
 */

L00433BA4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    esi = & Vffffffd4;
    (save)esi;
    edi = esi;
    esi = A8;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    eax = Ac;
    Vfffffff0 = *(eax + 0x138);
    Vfffffff4 = *(eax + 0x13c);
    if(Vfffffff4 != 0 || Vfffffff0 >= 0x3e8) {
        L0044EB4E( & Vfffffff8, Vfffffff0, Vfffffff4, M006355d6, M006355da);
        if(*(esi + 0x14) < 0) {
            *(esi + 0x10) = !( *(esi + 0x10));
            *(esi + 0x14) = !( *(esi + 0x14));
        }
        eax = *(esi + 0x14);
        if(eax <= Vfffffffc) {
            if(*(esi + 0x14) != Vfffffffc) {
                goto L00433c35;
            }
            eax = *(esi + 0x10);
            if(eax < Vfffffff8) {
L00433c35:
                if(*(esi + 0xc) < 0) {
                    *(esi + 8) = !( *(esi + 8));
                    *(esi + 0xc) = !( *(esi + 0xc));
                }
                eax = *(esi + 0xc);
                if(eax <= Vfffffffc) {
                    if(*(esi + 0xc) != Vfffffffc) {
                        goto L00433c61;
                    }
                    eax = *(esi + 8);
                    if(eax < Vfffffff8) {
L00433c61:
                        if(*(esi + 4) < 0) {
                            *esi = !( *esi);
                            *(esi + 4) = !( *(esi + 4));
                        }
                        eax = *(esi + 4);
                        if(eax <= Vfffffffc) {
                            if(*(esi + 4) != Vfffffffc) {
                                goto L00433c8b;
                            }
                            eax = *esi;
                            if(eax < Vfffffff8) {
L00433c8b:
                                edi = *(esi + 4) | *(esi + 0xc) | *(esi + 0x14) | Vfffffff4;
                                edi = edi != 0 ? L00459CEC(edi) + 3 : L00459CEC( *esi | *(esi + 8) | *(esi + 0x10) | Vfffffff0) - 0x1d;
                                (save)esi;
                                (save)edi;
                                edi = esi;
                                esi = A8;
                                ecx = 6;
                                asm("rep movsd");
                                (restore)edi;
                                (restore)esi;
                                L0044EC90(esi, ~edi);
                                L0044EC90(esi + 8, ~edi);
                                L0044EC90(esi + 0x10, ~edi);
                                L0044EC90( & Vfffffff0, ~edi);
                                (save)L004537B0( *(ebx + 4) << 0x10, *(esi + 0x10));
                                eax = L004537B0( *(ebx + 8) << 0x10, *(esi + 8));
                                (restore)edx;
                                Vffffffc8 = edx - eax;
                                (save)L004537B0( *(ebx + 8) << 0x10, *esi);
                                eax = L004537B0( *ebx << 0x10, *(esi + 0x10));
                                (restore)edx;
                                Vffffffcc = edx - eax;
                                (save)L004537B0( *ebx << 0x10, *(esi + 8));
                                eax = L004537B0( *(ebx + 4) << 0x10, *esi);
                                (restore)edx;
                                Vffffffd0 = edx - eax;
                                Vffffffec = L0045122F( & Vffffffc8);
                                eax = Vffffffec;
                                if(eax < Vfffffff0) {
                                    (save)L004537B0( *ebx << 0x10, *esi);
                                    eax = L004537B0( *(ebx + 4) << 0x10, *(esi + 8));
                                    (restore)edx;
                                    (save)edx + eax;
                                    eax = L004537B0( *(ebx + 8) << 0x10, *(esi + 0x10));
                                    (restore)edx;
                                    ebx = edx + eax;
                                    if(ebx < 0) {
                                        goto L00433e29;
                                    }
                                    Vffffffbc = *esi;
                                    Vffffffc0 = *(esi + 8);
                                    Vffffffc4 = *(esi + 0x10);
                                    eax = L0045122F( & Vffffffbc);
                                    if(eax < Vfffffff0) {
                                        M006356c8 = 0;
                                        Vfffffffc = 0;
                                        Vfffffff8 = 0;
                                        goto L00433e8d;
L00433e29:
                                        ebx = ~ebx;
                                        (save) *L005016d0(Vfffffff0);
                                        (restore)edx;
                                        ebx = ebx - *L005016d4(edx - *L005016d0(Vffffffec) >> 1);
                                        Vfffffff8 = ebx;
                                        M006356c8 = Vfffffff8;
                                        Vfffffffc = 0;
                                        L0044EC90( & Vfffffff8, edi);
                                        eax = Vfffffffc;
                                        if(eax <= M006355da) {
                                            if(Vfffffffc != M006355da) {
                                                goto L00433e8d;
                                            }
                                            eax = Vfffffff8;
                                            if(eax <= M006355d6) {
L00433e8d:
                                                M006356a4 = M006356a3;
                                                M006355d6 = Vfffffff8;
                                                M006355da = Vfffffffc;
                                                M006356a5 = 0x1c;
                                                M006356a6 = 0x1f;
                                                M006356b2 = *esi;
                                                M006356b6 = *(esi + 8);
                                                M006356ba = *(esi + 0x10);
                                                eax = Ac;
                                                M006355e0 = eax;
                                                M006356a0 = 0xff;
                                                M006355d4 = M006355d4 | 0x80;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x00433EEB - 0x00433EEB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00433EEB()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00433EEC - 0x00433F10
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004341CA()
 */

L00433EEC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = Ac;
    bx = A8 << cl;
    ecx = 0x10 - Ac;
    return bx | (ax & 65535) >> cl;
}

/*    Procedure: 0x00433F11 - 0x00433FBA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00433F11()
{



    esp = esp + -276;
    *(ebp - 0x14) = (M00644dde >> 0x10) - 0x1718;
    *(ebp - 0x10) = (M00644de2 >> 0x10) - 0x1524;
    eax = *L005000d8(33966, ebp - 0x14, 0xf, 6, 0x93, 0);
    if(M00644e38 != 0) {
        if(M00644e38 > 0) {
            eax = 33967;
        } else {
            eax = 33969;
            if(M00644e38 != -9999) {
                eax = 33968;
            }
        }
        edx = M00644e38 > 0 ? M00644e38 : ~M00644e38;
        *(ebp - 0x14) = edx;
        eax = *L005000d8(eax, ebp - 0x14, 0xc, 6, 0x89, 0);
    }
}

/*    Procedure: 0x00433FBB - 0x004341C9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00433FBB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edx = A8;
    ebx = 6510300;
    esi = 6572964;
    edi = 0x4e592c;
    eax = (edx & 65280) >> 8;
    if(!(edx = (edx & 0xff) - 1)) {
        M004e125c = 0;
        edx = *(0x4e592c + (eax + eax * 4) * 4);
        *L00644DF4 = edx;
        *L00644DDE = edx;
        *L00644E00 = *L00644DDE;
        edx = *(0x4e592c + (eax + eax * 4) * 4 + 4);
        *L00644DF8 = edx;
        *L00644DE2 = edx;
        *L00644E04 = *L00644DE2;
        edx = *(0x4e592c + (eax + eax * 4) * 4 + 8);
        *L00644DFC = edx;
        *L00644E08 = *L00644DFC;
        *L00644DE6 = 200000;
        L00434425( *(0x4e592c + (eax + eax * 4) * 4 + 0xc), *(0x4e592c + (eax + eax * 4) * 4 + 0x10) & 0xff, *(0x4e592c + (eax + eax * 4) * 4 + 0x10) >> 8);
        *(esi + 0x24e) = 0x69;
        *(esi + 0x29a) = 1;
        *(esi + 0x299) = 0;
        *ebx = 0xa8;
        *(ebx + 4) = 0x155;
        *(ebx + 8) = 0;
        *(ebx + 0xc) = 0;
        *(ebx + 0x10) = 0;
        *(ebx + 0x14) = 0x156;
        *(ebx + 0x18) = 0x157;
        *(ebx + 0x1c) = 0xad;
        *(ebx + 0x20) = 0;
        *(ebx + 0x24) = 0;
        *(ebx + 0x28) = 0;
        *(ebx + 0x2c) = 0;
        *(ebx + 0x30) = 0;
        *(ebx + 0x34) = 0;
        *(ebx + 0x38) = 0;
        *(ebx + 0x3c) = 0;
        *(ebx + 0x40) = 0x158;
        *(ebx + 0x44) = 0xad;
        *(ebx + 0x48) = 0;
        *(ebx + 0x4c) = 0;
        *(ebx + 0x50) = 0;
        *(ebx + 0x54) = 0;
        *(ebx + 0x58) = 0;
        *(ebx + 0x5c) = 0;
        *(ebx + 0x60) = 0x159;
        *(ebx + 0x64) = 0;
        *(ebx + 0x68) = 0;
        *(ebx + 0x6c) = 0;
        *(ebx + 0x70) = 0;
        *(ebx + 0x74) = 0;
        *(ebx + 0x78) = 0;
        *(ebx + 0x7c) = 0;
        *(ebx + 0x80) = 0;
        *(ebx + 0x84) = 0xad;
        *(ebx + 0x88) = 0;
        *(ebx + 0x8c) = 0;
        *(ebx + 0x90) = 0;
        *(ebx + 0x94) = 0xad;
        *(ebx + 0x98) = 0xad;
        *(ebx + 0x9c) = 0;
        *(ebx + 0xa0) = 0;
        *(ebx + 0xa4) = 0;
        *(ebx + 0xa8) = 0;
        *(ebx + 0xac) = 0;
        *(ebx + 0xb0) = 0;
        eax = 0;
        *(ebx + 0xb4) = 0;
        *(ebx + 0xb8) = 0xad;
        *(ebx + 0xbc) = 0xad;
        *(ebx + 0xc0) = 0xae;
    }
}

/*    Procedure: 0x004341CA - 0x004343B6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004343B7()
 *        L00434425()
 *        L00435957()
 *        L00436AF7()
 *        L00436EA9()
 */

L004341CA()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    edx = *(ebp + 0xc);
    eax = *(ebp + 8);
    ecx = 0x4e5d74;
    eax = eax & 0x1ff;
    if(eax == 0x1fe) {
        eax = ( *(ebp + 0x14) >> 0xd & 8191) - 0x1524;
        L00474830(esi, "(%i,%i)", ( *(ebp + 0x14) & 8191) - 0x1718, eax);
        eax = L00471288(esi) + esi;
    } else {
        if(eax < 0x1fe) {
            if(eax <= 0) {
                goto L0043424b;
            }
            eax = *L005000c8(esi, eax - 1, edx, 0x4e0e30);
        } else {
L0043424b:
            eax = *(ebp + 0x14) & 8191;
            *(ebp - 4) = ax;
            eax = *(ebp + 0x14) >> 0xd & 8191;
            *(ebp - 2) = ax;
            eax = 0;
            do {
                ebx = *(eax * 4 + 0x4e1290);
                if(ebx == *(ebp - 4)) {
                    goto L0043428d;
                }
                eax = eax + 1;
            } while(eax < 0x31);
            goto L004342a1;
L0043428d:
            eax = *L005000c8(esi, ( *(ebp + 0x17) >> 2 & 0x3f) + *(eax * 4 + 0x4e1354), edx, 0x4e0e30);
            goto L004343b0;
L004342a1:
            eax = 0;
            do {
                if(*(ecx + (eax + eax * 2) * 8) == *(ebp + 0x14)) {
                    goto L004342b1;
                }
                eax = eax + 1;
            } while(eax < 1);
            goto L004342d4;
L004342b1:
            eax = (eax << 3) + (eax << 3) * 2;
            L00471258(esi, eax + ecx + 4);
            eax = esi;
            goto L004343b0;
L004342d4:
            ebx = *(ebp + 0x14) & 8191;
            edi = *(ebp + 0x14) >> 0xd & 8191;
            bx = bx + ( *(ebp + 0x17) >> 2 & 0x3f);
            di = di + bx;
            bx = L00433EEC(ebx, 3) + di;
            eax = L00433EEC(L00433EEC(edi, 5) + bx, 4);
            edi = eax;
            edi = L00433EEC(ebx, *(ebp + 0x17) >> 2 & 0x3f & 0xf) + di & 65535;
            ebx = L00433EEC(ebx, 0xb);
            *(ebp - 8) = ax & 65535;
            ebx = L00433EEC(ebx, 0xb);
            L00474830(esi, "%s%s%s", ((edi & 0x7c) >> 2 << 2) + 0x4e1424, (( *(ebp - 8) & 0x7c) >> 2 << 2) + 0x4e1424, ((ax & 65535 & 0x7c) >> 2 << 2) + 0x4e1424);
            *esi = *esi + 0xe0;
            eax = L00471288(esi) + esi;
        }
    }
L004343b0:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004343B7 - 0x00434424
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L004343B7(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;



    eax = A8 & 0x1ff;
    if(eax >= 0x1f0) {
        if(!(ecx = (eax >> 1 & 7) - 3)) {
            if(!(ecx = ecx - 1)) {
                if(!(ecx = ecx - 1)) {
                    if(ecx = ecx - 1) {
                        goto L00434401;
                    }
                    *(ebp - 4) = *Ac;
                } else {
                    *(ebp - 4) = *(Ac + 4);
                }
            } else {
                *(ebp - 4) = *(Ac + 0xc);
            }
        } else {
            *(ebp - 4) = *(Ac + 0x10);
            goto L00434407;
L00434401:
            *(ebp - 4) = *(Ac + 8);
        }
L00434407:
        eax = eax | 0xe;
    } else {
        *(ebp - 4) = *(Ac + 8);
    }
    return L004341CA(eax, Ac, A10, *(ebp - 4));
}

/*    Procedure: 0x00434425 - 0x00434693
 *    Argument size: 12
 *    Local size: 64
 *    Save regs size: 12
 *    Called by:
 *        L00433FBB()
 *        L0043484B()
 *        L00434A50()
 */

L00434425(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 6572964;
    esi = 0x4e5d8c;
    edi = & Vffffffc0;
    ecx = 5;
    asm("rep movsd");
    esi = 6497152;
    *(ebx + 0x269) = A10;
    *(ebx + 0x26a) = Ac;
    ax = *(ebx + 0x25c) >> 0x10 & 8191 & 8191;
    *(ebx + 0x27c) = ax | *(ebx + 0x27c) & 57344;
    eax = ( *(ebx + 0x260) >> 0x10 & 8191 & 8191) << 0xd;
    *(ebx + 0x27c) = eax | *(ebx + 0x27c) & -67100673;
    *(ebx + 0x27f) = (A8 & 0x3f) << 2 | *(ebx + 0x27f) & 3;
    L004341CA(0, & Vffffffc0, 6497135, *(ebx + 0x27c));
    if(!( *(ebx + 0x269) & 7)) {
        eax = & Vffffffc0;
        esi = L004341CA(( *(ebx + 0x269) & 7) + 33944, eax, 6497152, *(ebx + 0x27c)) - 1;
    }
    eax = & Vffffffc0;
    L004341CA(( *(ebx + 0x26a) & 0x1f) + 33928, eax, esi, *(ebx + 0x27c));
    *(ebx + 0x26c) = L00434694( *(ebx + 0x25c), *(ebx + 0x260), *(ebx + 0x264), *(ebx + 0x250), *(ebx + 0x254), *(ebx + 0x258));
    eax = *(ebx + 0x260) >> 0x10;
    *(ebx + 0x274) = eax + ( *(ebx + 0x260) << 0x10) + *(ebx + 0x25c) - *(ebx + 0x264);
    eax = L0043759C( *(ebx + 0x27c), ebx + 0x280, ebx + 0x284, ebx + 0x28c, & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0, & Vffffffec);
    if(!( *(ebx + 0x26a) & 0x80)) {
        eax = 0;
        *(ebx + 0x274) = 0;
    }
    eax = *(( *(ebx + 0x26a) & 0xf) * 4 + 0x4e14a8);
    edx = *(ebx + 0x26a) & 0xf;
    eax = eax - *(edx * 4 + 0x4e14a4) >> 0x10;
    edx = ( *(ebx + 0x269) & 0xf8) << 8;
    asm("imul edx");
    *(ebx + 0x278) = eax + *(( *(ebx + 0x26a) & 0xf) * 4 + 0x4e14a4);
    if(*(ebx + 0x26c) == 0) {
        *(ebx + 0xc6) = *(ebx + 0xc6) & 65279;
        eax = 0;
        *(ebx + 0x294) = 0;
    } else {
        Vffffffdc = *(ebx + 0x26c);
        eax = L0043B970( *(ebx + 0xc8), & Vffffffdc, & Vffffffe0, & Vffffffe8, & Vffffffe4, & Vffffffd4, & Vffffffd8);
        if(Vffffffe8 < 0) {
            goto L00434683;
        }
        eax = Vffffffe8;
        *(ebx + 0x294) = eax;
        if(Vffffffe4 <= 0) {
            *(ebx + 0x294) = ~( *(ebx + 0x294));
            goto L0043468d;
L00434683:
            *(ebx + 0x294) = -9999;
        }
    }
L0043468d:
}

/*    Procedure: 0x00434694 - 0x0043475B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00434425()
 *        L004368DD()
 */

L00434694()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    *(ebp - 4) = 0xe;
    eax = *(ebp + 0x14) - *(ebp + 8) >> 8;
    asm("cdq");
    ebx = (eax ^ edx) - edx;
    eax = *(ebp + 0x18) - *(ebp + 0xc) >> 8;
    asm("cdq");
    esi = (eax ^ edx) - edx;
    eax = *(ebp + 0x1c) - *(ebp + 0x10) >> 8;
    asm("cdq");
    edi = (eax ^ edx) - edx;
L004346d4:
    do {
        if(ebx > 32767) {
            ebx = ebx >> 1;
            esi = esi >> 1;
            edi = edi >> 1;
            *(ebp - 4) = *(ebp - 4) - 1;
        }
        if(esi > 32767) {
            ebx = ebx >> 1;
            esi = esi >> 1;
            edi = edi >> 1;
            *(ebp - 4) = *(ebp - 4) - 1;
        }
        if(edi > 32767) {
            ebx = ebx >> 1;
            esi = esi >> 1;
            edi = edi >> 1;
            *(ebp - 4) = *(ebp - 4) - 1;
        }
        if(ebx > 32767 || esi > 32767) {
            goto L004346d4;
        }
    } while(edi > 32767);
    eax = ebx;
    asm("imul ebx");
    edx = esi;
    eax = eax + esi * esi;
    edx = edi;
    *(ebp - 8) = eax + edi * edi;
    esp = esp - 8;
    *esp = *(ebp - 8);
    L004764FC();
    esp = esp + 8;
    eax = L00476414() * 51380 >> *(ebp - 4);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0043475C - 0x004347EA
 *    Argument size: 0
 *    Local size: 112
 *    Save regs size: 4
 *    Called by:
 *        L00434A50()
 *        L0043F26E()
 */

L0043475C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = 0x10;
    Vfffffffe = 0xbc;
    L0041D49C(0xc);
    eax = L0041D444(0xc, 1);
    if(M00632182 == 0) {
        *L004eecd0(2);
        M00644bb0 = 0xfe;
        M00644e0c = 0;
        M00644dda = -1;
        M00632182 = 0xff;
        M00632183 = 0xff;
        *L005003c4(0, 0);
        ebx = 0x1c;
        do {
            L0041D49C(ebx);
            ebx = ebx + 1;
        } while(ebx <= 0x24);
        eax = L0041D444(0x24, 1);
    }
}

/*    Procedure: 0x004347EB - 0x00434820
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043716C()
 */

L004347EB(A8)
/* unknown */ void  A8;
{



    if(A8 < 0) {
        eax = 1;
    } else {
        if(M00632182 == 0) {
            eax = 0;
        } else {
            M00644e0c = 0;
            M00644dda = -1;
            eax = 1;
        }
    }
}

/*    Procedure: 0x00434821 - 0x0043482D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043716C()
 */

L00434821()
{



    return L0041D4FC(2);
}

/*    Procedure: 0x0043482E - 0x00434843
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00434A50()
 */

L0043482E()
{
    /* unknown */ void  ecx;



    M00644e3d = 0;
    return L0041D4FC(2);
}

/*    Procedure: 0x00434844 - 0x0043484A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00437090()
 */

L00434844()
{
    /* unknown */ void  ecx;



}

/*    Procedure: 0x0043484B - 0x00434A4F
 *    Argument size: 4
 *    Local size: 56
 *    Save regs size: 8
 */

L0043484B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vffffffef;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    ebx = 6572964;
    edx = *eax;
    esi = *(eax + 4);
    eax = *(eax + 4);
    Vfffffffc = eax;
    if(edx == 1) {
        L004368DD(Vfffffffc, & Vffffffd4, & Vfffffff8, & Vfffffff4, & Vfffffff0);
        eax = Vffffffd4;
        *(ebx + 0x25c) = eax;
        *(ebx + 0x250) = *(ebx + 0x25c);
        eax = Vffffffd8;
        *(ebx + 0x260) = eax;
        *(ebx + 0x254) = *(ebx + 0x260);
        eax = Vffffffdc;
        *(ebx + 0x264) = eax;
        *(ebx + 0x258) = *(ebx + 0x264);
        *(ebx + 0x236) = -1;
        *(ebx + 0x294) = 0;
        *(ebx + 0x26c) = 0;
        eax = L00434425(Vfffffff8, Vfffffff4, Vfffffff0);
    } else {
        if(edx == 0x14) {
            Vffffffec = *(ebx + 0x10a);
            Vffffffef = Vffffffef & 3;
            if(*esi < 4) {
                eax = *L00501b8c() + *(ebx + 0x250) & 65535;
                *(ebx + 0x250) = eax | *(ebx + 0x250) & -65536;
                eax = *L00501b8c() + *(ebx + 0x254) & 65535;
                *(ebx + 0x254) = eax | *(ebx + 0x254) & -65536;
                *(ebx + 0x258) = *L00501b8c() + *(ebx + 0x258);
                *(ebx + 0x26c) = L004368DD(Vffffffec, & Vffffffd4, & Vfffffff8, & Vfffffff4, & Vfffffff0);
                do {
                    eax = L004368DD(Vffffffec, & Vffffffc8, & Vffffffe8, & Vffffffe4, & Vffffffe0);
                    if(eax >= 0 && eax < 0x50) {
                        goto L004349a6;
                    }
                    Vffffffef = Vffffffef & 3 | Vffffffef + 4 & 0xfc;
                } while(eax >= 0);
                goto L004349ec;
L004349a6:
                *(ebx + 0x25c) = Vffffffc8;
                *(ebx + 0x260) = Vffffffcc;
                *(ebx + 0x264) = Vffffffd0;
                eax = L00434425(Vffffffe8, Vffffffe4, Vffffffe0);
                *esi = *esi + 0xfe;
                goto L00434a4a;
L004349ec:
            } else {
                *(ebx + 0x250) = ( *L00501b8c() >> 8) + *(ebx + 0x250);
                *(ebx + 0x254) = ( *L00501b8c() >> 8) + *(ebx + 0x254);
                *(ebx + 0x258) = *(ebx + 0x258) + ( *L00501b8c() & 65535);
                eax = L004368DD(Vffffffec, & Vffffffd4, & Vfffffff8, & Vfffffff4, & Vfffffff0);
                *(ebx + 0x26c) = eax;
            }
        }
    }
L00434a4a:
}

/*    Procedure: 0x00434A50 - 0x004355EA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043F26E()
 */

L00434A50()
{



    esp = esp + -816;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = 6572964;
    esi = ebp + -432;
    edi = 0x5014cc;
    eax = 0;
    edx = 57344;
    if(*L005014F6 != 0 && *L00501502 != 0) {
        edx = 0x800;
    }
    ecx = *(edi + 0x2a) == 0 || *(edi + 0x36) == 0 ? 8000 : 0xfa0;
    *(ebp - 0xc) = ecx;
    if(M00632182 >= 0) {
        eax = L00435957();
    } else {
        if(*(edi + 0x38) != 0) {
            if(*(edi + 0x4b) == 0 || *(edi + 0xcb) == 0) {
                *(ebx + 0x23a) = *(ebx + 0x23a) - edx;
                eax = eax | -1;
            }
            if(*(edi + 0x4d) == 0 || *(edi + 0xcd) == 0) {
                *(ebx + 0x23a) = *(ebx + 0x23a) + edx;
                eax = eax | -1;
            }
            if(*(edi + 0x48) == 0 || *(edi + 0xc8) == 0) {
                *(ebx + 0x23e) = *(ebx + 0x23e) + edx;
                eax = eax | -1;
            }
            if(*(edi + 0x50) == 0 || *(edi + 0xd0) == 0) {
                *(ebx + 0x23e) = *(ebx + 0x23e) - edx;
                eax = eax | -1;
            }
            *(ebx + 0x236) = *(ebx + 0x236) | eax;
        }
        *(ebx + 0x24e) = *(ebx + 0x24e) & 65533;
        *(ebx + 0x29e) = 0;
        edi = *L00500398() & 0xff;
        if(edi != 0) {
            if(*(ebx + 0x299) != 0) {
                goto L00434db1;
            }
            eax = edi;
            if(eax <= 0xf8) {
                == ? L00434bdc : ;
                if(eax <= 0xf5) {
                    == ? L00434bcf : ;
                    if(eax = eax - 0x63) {
                        goto L00434c0a;
                    }
                    if((eax = eax - 0xb) || (eax = eax - 4)) {
                        goto L00434d50;
                    }
                    goto L00434da2;
                }
                if(eax = eax - 0xf6) {
                    goto L00434d0d;
                }
                if(eax = eax - 1) {
                    goto L00434cd2;
                }
                goto L00434da2;
            }
            eax = eax + -249;
            if(eax > 6) {
                goto L00434da2;
            }
            switch(eax) {
                case 0:
                    goto L00434c99;
                case 1:
                    goto L00434c60;
                case 2:
                    *(ebx + 0x242) = *(ebx + 0x242) - *(ebp - 0xc);
                    goto L00434eea;
                case 3:
                    *(ebx + 0x242) = *(ebx + 0x242) + *(ebp - 0xc);
                    goto L00434eea;
                case 4:
L00434da2:
                    *L0050039c(edi);
                    goto L00434eea;
                case 5:
                    goto L00434da2;
                case 6:
                    *(ebx + 0x24e) = *(ebx + 0x24e) | 2;
                    goto L00434eea;
            }
            L0043475C(0);
            goto L00434eea;
            L004361D9();
            L0041D444(0x21, 1);
            L0041D444(0x1f, 0);
            eax = L0041D444(0x20, 0);
            goto L004355e4;
L00434c0a:
            eax = *(ebx + 0x250);
            *(ebx + 0x25c) = eax;
            *(ebx + 0x23a) = *(ebx + 0x25c);
            eax = *(ebx + 0x254);
            *(ebx + 0x260) = eax;
            *(ebx + 0x23e) = *(ebx + 0x260);
            *(ebx + 0x264) = *(ebx + 0x258);
            *L005003c4(0, 0);
            *(ebx + 0x242) = 200000;
            *(ebx + 0x236) = -1;
            goto L00434eea;
L00434c60:
            if(*(ebx + 0x268) != 0) {
                L00435860();
                L0041D444(0x22, 1);
                L0041D444(0x1f, 1);
                eax = *L0050039c(edi);
                goto L004355e4;
L00434c99:
                if(*(ebx + 0x268) != 0) {
                    L00435860();
                    L0041D444(0x22, 1);
                    L0041D444(0x20, 1);
                    eax = *L0050039c(edi);
                    goto L004355e4;
L00434cd2:
                    if(*(ebx + 0x268) != 0) {
                        L00435860();
                        L0041D444(0x22, 1);
                        L0041D444(0x1f, 0);
                        eax = L0041D444(0x20, 0);
                        goto L004355e4;
L00434d0d:
                        L0043ED54(0);
                        ebx = 0x1c;
L00434d1a:
                        L0041D49C(ebx);
                        ebx = ebx + 1;
                        if(ebx <= 0x24) {
                            goto L00434d1a;
                        }
                        L0041D444(0x23, 1);
                        L0041D444(0x1f, 0);
                        eax = L0041D444(0x20, 0);
                        goto L004355e4;
L00434d50:
                        if(*(ebx + 0x28c) != 0) {
                            L0043EF64();
                            ebx = 0x1c;
L00434d67:
                            eax = L0041D49C(ebx);
                            ebx = ebx + 1;
                            if(ebx <= 0x24) {
                                goto L00434d67;
                            }
                            goto L004355e4;
L00434db1:
                            eax = edi + -245;
                            if(eax <= 7) {
                                switch(eax) {
                                    case 0:
                                        L0043475C(0);
                                        goto L00434ee3;
                                    case 1:
                                        *(ebx + 0x299) = 0;
                                        L0043ED54(0);
                                        edi = 0x1c;
                                        goto L00434e9a;
                                    case 2:
                                        goto L00434e0f;
                                    case 3:
                                        *(ebx + 0x299) = 0;
                                        L004361D9();
                                        L0041D444(0x1f, 0);
                                        L0041D444(0x20, 0);
                                        eax = L0041D444(0x21, 1);
                                        goto L004355e4;
                                    case 4:
L00434ecd:
                                        *(ebx + 0x299) = 0;
                                        eax = *L0050039c(edi);
                                        goto L004355e4;
                                    case 5:
                                        goto L00434ecd;
                                    case 6:
L00434de8:
                                        *(ebx + 0x24e) = *(ebx + 0x24e) ^ 0x20;
                                        goto L00434ee3;
                                    case 7:
                                        *(ebx + 0x24e) = *(ebx + 0x24e) ^ 1;
                                        goto L00434ee3;
                                }
                                goto L00434de8;
L00434e0f:
                                if(*(ebx + 0x268) != 0) {
                                    *(ebx + 0x299) = 0;
                                    L00435860();
                                    L0041D444(0x22, 1);
                                    L0041D444(0x1f, 0);
                                    eax = L0041D444(0x20, 0);
                                    goto L004355e4;
L00434e9a:
                                    L0041D49C(edi);
                                    edi = edi + 1;
                                    if(edi <= 0x24) {
                                        goto L00434e9a;
                                    }
                                    L0041D444(0x1f, 0);
                                    L0041D444(0x20, 0);
                                    L0041D444(0x23, 1);
                                }
                            }
L00434ee3:
                            *(ebx + 0x299) = 0;
                        }
                    }
                }
            }
        }
L00434eea:
        L0043E55C(0);
        *(ebp - 4) = *L005003c8();
        if(M00655998 == 0) {
            L0045AFF0(esi, *(ebp - 4) << 7, *(ebp - 2) << 7);
        } else {
            L0045AFF0(esi, 0, 0);
        }
        eax = *esi;
        *esi = *(esi + 0x14);
        *(esi + 0x14) = *(esi + 0x18);
        *(esi + 0x18) = *(esi + 0x10);
        *(esi + 0x10) = eax;
        eax = *(esi + 4);
        *(esi + 4) = *(esi + 8);
        *(esi + 8) = *(esi + 0x20);
        *(esi + 0x20) = *(esi + 0x1c);
        *(esi + 0x1c) = eax;
        *(ebp - 0x38) = 0;
        *(ebp - 0x34) = ~(( *(ebx + 0x23e) & 65535) + 32768 >> 1) << 0xf;
        *(ebp - 0x30) = ~( *(ebx + 0x23a) + 32768 >> 1) << 0xf;
        L0045A7A8(ebp - 0x44, ebp - 0x38, esi);
        *(ebp - 0x38) = 0;
        *(ebp - 0x34) = 0;
        *(ebp - 0x30) = 536870912;
        L0045A7A8(ebp - 0x50, ebp - 0x38, esi);
        *(ebp - 0x38) = 0;
        *(ebp - 0x34) = 536870912;
        *(ebp - 0x30) = 0;
        L0045A7A8(ebp - 0x5c, ebp - 0x38, esi);
        *(esi + 0x9e) = *(ebx + 0x24e);
        M00632183 = 0xff;
        if(!( *(ebx + 0x24e) & 1)) {
            *(esi + 0x26) = *(ebp - 0x44) >> 0xe;
            *(esi + 0x2e) = *(ebp - 0x40) >> 0xe;
            *(esi + 0x36) = ( *(ebp - 0x3c) >> 0xe) + *(ebx + 0x242);
            *(esi + 0x82) = 0xa6;
            *L005030ec(esi);
        }
        *(ebp - 8) = L004355EB(ebp + -816, esi, *(ebx + 0x23a), *(ebx + 0x23e), 1);
        if(*(ebx + 0x236) != 0) {
            *(ebx + 0x236) = 0;
            *(ebp - 0x10) = ( *(ebx + 0x23a) & 65535 & 65024) + 32768 >> 9;
            *(ebp - 0x14) = ( *(ebx + 0x23e) & 65024) + 32768 >> 9;
            *(ebp - 0x18) = 0x20;
            ecx = 0;
            if(0 < *(ebp - 8)) {
L004350a9:
                eax = *(ebp + (ecx + ecx * 2) * 2 + -812) - *(ebp - 0x10);
                asm("cdq");
                edi = (eax ^ edx) - edx;
                eax = *(ebp + (ecx + ecx * 2) * 2 + -813) - *(ebp - 0x14);
                asm("cdq");
                edi = edi + (eax ^ edx) - edx;
                *(ebp - 0x1c) = edi;
                if(*(ebp - 0x1c) < *(ebp - 0x18)) {
                    *(ebp - 0x20) = ecx;
                    *(ebp - 0x18) = *(ebp - 0x1c);
                }
                ecx = ecx + 1;
                if(ecx < *(ebp - 8)) {
                    goto L004350a9;
                }
            }
            if(*(ebp - 0x18) == 0x20) {
                goto L00435193;
            }
            eax = *(ebp - 0x20) + *(ebp - 0x20) + ( *(ebp - 0x20) + *(ebp - 0x20)) * 2;
            L00436B72( *(ebx + 0x23a), *(ebx + 0x23e), eax + ebp + -816, ebp - 0x38);
            if(*(ebx + 0x268) == 0 || *(ebp - 0x38) != *(ebx + 0x25c) || *(ebp - 0x34) != *(ebx + 0x260)) {
                goto L00435147;
            }
            if(*(ebp - 0x30) != *(ebx + 0x264)) {
L00435147:
                *(ebx + 0x268) = 0xff;
                *(ebx + 0x25c) = *(ebp - 0x38);
                *(ebx + 0x260) = *(ebp - 0x34);
                *(ebx + 0x264) = *(ebp - 0x30);
                L00434425( *(ebp - 0x20), *(esi + *(ebp - 0x20) * 2 + 0xa6) & 0xff, *(esi + *(ebp - 0x20) * 2 + 0xa7) & 0xff);
                L00437090();
                goto L004351a8;
L00435193:
                if(*(ebx + 0x268) != 0) {
                    L0043482E();
                    *(ebx + 0x268) = 0;
                }
            }
        }
L004351a8:
        eax = *(ebp - 0x44) >> 0xe;
        *(esi + 0x26) = eax + ( *(ebp - 0x50) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        *(esi + 0x2e) = eax + ( *(ebp - 0x4c) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        *(esi + 0x36) = eax + ( *(ebp - 0x48) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a) + 65536, *(ebx + 0x23e), 1);
        eax = *(ebp - 0x44) >> 0xe;
        eax = eax + ( *(ebp - 0x50) >> 0xd);
        *(esi + 0x26) = eax + ( *(ebp - 0x5c) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        eax = eax + ( *(ebp - 0x4c) >> 0xd);
        *(esi + 0x2e) = eax + ( *(ebp - 0x58) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        eax = eax + ( *(ebp - 0x48) >> 0xd);
        *(esi + 0x36) = eax + ( *(ebp - 0x54) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a) + 65536, *(ebx + 0x23e) + 65536, 1);
        eax = *(ebp - 0x44) >> 0xe;
        *(esi + 0x26) = eax + ( *(ebp - 0x5c) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        *(esi + 0x2e) = eax + ( *(ebp - 0x58) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        *(esi + 0x36) = eax + ( *(ebp - 0x54) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a), *(ebx + 0x23e) + 65536, 1);
        eax = *(ebp - 0x44) >> 0xe;
        eax = eax - ( *(ebp - 0x50) >> 0xd);
        *(esi + 0x26) = eax + ( *(ebp - 0x5c) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        eax = eax - ( *(ebp - 0x4c) >> 0xd);
        *(esi + 0x2e) = eax + ( *(ebp - 0x58) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        eax = eax - ( *(ebp - 0x48) >> 0xd);
        *(esi + 0x36) = eax + ( *(ebp - 0x54) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a) + -65536, *(ebx + 0x23e) + 65536, 1);
        eax = *(ebp - 0x44) >> 0xe;
        *(esi + 0x26) = eax - ( *(ebp - 0x50) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        *(esi + 0x2e) = eax - ( *(ebp - 0x4c) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        *(esi + 0x36) = eax - ( *(ebp - 0x48) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a) + -65536, *(ebx + 0x23e), 1);
        eax = *(ebp - 0x44) >> 0xe;
        eax = eax - ( *(ebp - 0x50) >> 0xd);
        *(esi + 0x26) = eax - ( *(ebp - 0x5c) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        eax = eax - ( *(ebp - 0x4c) >> 0xd);
        *(esi + 0x2e) = eax - ( *(ebp - 0x58) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        eax = eax - ( *(ebp - 0x48) >> 0xd);
        *(esi + 0x36) = eax - ( *(ebp - 0x54) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a) + -65536, *(ebx + 0x23e) + -65536, 1);
        eax = *(ebp - 0x44) >> 0xe;
        *(esi + 0x26) = eax - ( *(ebp - 0x5c) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        *(esi + 0x2e) = eax - ( *(ebp - 0x58) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        *(esi + 0x36) = eax - ( *(ebp - 0x54) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a), *(ebx + 0x23e) + -65536, 1);
        eax = *(ebp - 0x44) >> 0xe;
        eax = eax + ( *(ebp - 0x50) >> 0xd);
        *(esi + 0x26) = eax - ( *(ebp - 0x5c) >> 0xd);
        eax = *(ebp - 0x40) >> 0xe;
        eax = eax + ( *(ebp - 0x4c) >> 0xd);
        *(esi + 0x2e) = eax - ( *(ebp - 0x58) >> 0xd);
        eax = *(ebp - 0x3c) >> 0xe;
        eax = eax + ( *(ebp - 0x48) >> 0xd);
        *(esi + 0x36) = eax - ( *(ebp - 0x54) >> 0xd) + *(ebx + 0x242);
        L004355EB(ebp + -816, esi, *(ebx + 0x23a) + 65536, *(ebx + 0x23e) + -65536, 1);
        *(ebp - 0x38) = *(ebx + 0x250);
        *(ebp - 0x34) = *(ebx + 0x254);
        *(ebp - 0x30) = *(ebx + 0x258);
        if(*(ebx + 0x180) >= 0xc80) {
            eax = 65535;
        } else {
            eax = *(ebx + 0x180);
            edx = eax;
            eax = (eax << 0x10) - edx;
            ecx = 0xc80;
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
        }
        eax = L00436FCA(esi, ebp - 0x38, 0xaa, eax);
        if(*(ebx + 0x268) != 0) {
            *(ebp - 0x38) = *(ebx + 0x25c);
            *(ebp - 0x34) = *(ebx + 0x260);
            *(ebp - 0x30) = *(ebx + 0x264);
            eax = L00436FCA(esi, ebp - 0x38, 0xa9, 0);
        }
        if(*(ebx + 0x29e) != 0) {
            if(!(eax = L004368DD( *(ebx + 0x29e), ebp - 0x38, ebp - 0x24, ebp - 0x28, ebp - 0x2c) + 1)) {
                *(ebx + 0x23a) = *(ebp - 0x38);
                *(ebx + 0x23e) = *(ebp - 0x34);
                *(ebx + 0x236) = -1;
            }
            eax = 0;
            *(ebx + 0x29e) = 0;
        }
    }
L004355e4:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004355EB - 0x0043585F
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00434A50()
 *        L004368DD()
 */

L004355EB(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff7;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    eax = ebx >> 0x10;
    Vfffffff8 = ax;
    ax = ax & 8191;
    ax = ax | Vfffffff4 & 57344;
    Vfffffff4 = ax;
    eax = A14 >> 0x10;
    Vfffffffa = ax;
    Vfffffff4 = (Vfffffffa & 8191) << 0xd | Vfffffff4 & -67100673;
    Vfffffff7 = Vfffffff7 & 3;
    *(Ac + 0xa0) = Vfffffff4;
    esi = 0;
    do {
        if(*(esi * 4 + 0x4e1290) == Vfffffff8) {
            goto L0043565a;
        }
        esi = esi + 1;
    } while(esi < 0x31);
    goto L00435665;
L0043565a:
    Vfffffff8 = 0;
L00435665:
    if(Vfffffff8 != 0) {
        Vfffffffc = L004369B9(ebx >> 0x10, A14 >> 0x10, 0) >> 0xa;
        eax = Vfffffffc >= 0x3f ? 0x3e : Vfffffffc;
        Vfffffffc = eax;
        *(Ac + 0xa4) = Vfffffffc;
        if(Vfffffffc == 0) {
            eax = Vfffffffc;
        } else {
            *(Ac + 0x82) = 0xab;
            M00644dea = Vfffffff8 >> 0x10 | Vfffffff8 << 0x10;
            M00644dee = Vfffffff8;
            L00436F93();
            L00436F93();
            L00436F93();
            ebx = 0;
            if(0 < Vfffffffc) {
                do {
                    L00436F93();
                    eax = ebx + ebx * 2;
                    *(A8 + eax * 2) = 9;
                    eax = ebx + ebx * 2;
                    ecx = (M00644dea & 16711680) >> 0x10;
                    *(A8 + eax * 2 + 2) = cl;
                    eax = ebx + ebx * 2;
                    ecx = (M00644dea & 65280) >> 9;
                    *(A8 + eax * 2 + 3) = cl;
                    eax = ebx + ebx * 2;
                    ecx = (M00644dea & 0x1fe) >> 1;
                    *(A8 + eax * 2 + 4) = cl >> 1;
                    *(Ac + ebx * 2 + 0xa7) = *((M00644dee & 0x1f) + 0x4e579c);
                    *(Ac + ebx * 2 + 0xa6) = *((M00644dee >> 0x10 & 0x1f) + 0x4e57bc);
                    ebx = ebx + 1;
                } while(ebx < Vfffffffc);
            }
            if(A18 != 0) {
                *L005030f0(Ac, A8);
            }
            eax = Vfffffffc;
        }
    } else {
        *(Ac + 0x82) = 0xab;
        eax = *(esi * 4 + 0x4e1358) - *(esi * 4 + 0x4e1354);
        Vfffffffc = eax;
        if(Vfffffffc != 0) {
            Vfffffff0 = *(esi * 4 + 0x4e1354);
            ebx = 0;
            if(0 < Vfffffffc) {
                do {
                    eax = ebx + ebx * 2;
                    ecx = Vfffffff0 + ebx + (Vfffffff0 + ebx) * 2;
                    edx = A8 + eax * 2;
                    *edx = *(ecx * 2 + 0x4e0a88);
                    *(edx + 4) = *(ecx * 2 + 0x4e0a8c);
                    *(Ac + ebx * 2 + 0xa6) = *((Vfffffff0 + ebx) * 2 + 0x4e0d46);
                    ebx = ebx + 1;
                } while(ebx < Vfffffffc);
            }
            *(Ac + 0xa4) = Vfffffffc;
            if(A18 != 0) {
                *L005030f0(Ac, A8);
            }
        }
        if(A18 != 0) {
            eax = *(esi * 4 + 6510300);
            *(Ac + 0x82) = eax;
            if(*(Ac + 0x82) != 0) {
                *L005030ec(Ac);
            }
        }
        eax = Vfffffffc;
    }
}

/*    Procedure: 0x00435860 - 0x00435956
 *    Argument size: -60
 *    Local size: 60
 *    Save regs size: 0
 *    Called by:
 *        L00434A50()
 *        L00435957()
 *        L0043623A()
 */

L00435860()
{
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    L004551F0(0, 0x4e5da0);
    M00632182 = 1;
    M00632183 = 0;
    if(M00644e30 != 0) {
        Vffffffd8 = M00644e18;
        eax = M00644e1c;
        Vffffffdc = eax;
        Vffffffe0 = M00644e0d & 7;
        Vffffffe4 = M00644e20;
        Vffffffe8 = M00644e30;
        L00471258( & Vffffffec, 6497135);
        L0043980C(6510496, & Vffffffd8);
        L0043672C();
        Vffffffc4 = M00644c4c & 0xff;
        L00436AF7(33952, & Vffffffc4, M00644e20, 0xa, 0x5f, 0x12);
        *L005000d8(M00644e28, & Vffffffc4, 0x11, 0xa, 0x69, 0x12c);
    } else {
        L0043E55C(0);
        *L005000d8(33971, & Vffffffc4, 0x12, 0xa, 0x5f, 0x12c);
    }
    return L00458384();
}

/*    Procedure: 0x00435957 - 0x004361D8
 *    Argument size: 0
 *    Local size: 108
 *    Save regs size: 12
 *    Called by:
 *        L00434A50()
 */

L00435957()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffff94;
    /* unknown */ void  Vffffff98;
    /* unknown */ void  Vffffff9c;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffa4;
    /* unknown */ void  Vffffffa8;
    /* unknown */ void  Vffffffac;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffbe;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc2;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0x4e5da4;
    edi = & Vffffffa8;
    ecx = 5;
    asm("rep movsd");
    eax = *L00500398() & 0xff;
    if(M00632182 != 2) {
        edx = eax;
        if(edx <= 0xf7) {
            == ? L00435cdc : ;
            if((edx = edx - 0x6e) || (edx = edx - 4)) {
                goto L00435cad;
            }
            if(edx = edx - 0x83) {
                goto L004359d8;
            }
            if(edx = edx - 1) {
                goto L00435d59;
            }
            goto L00435da9;
        }
        if(edx = edx - 0xf8) {
            goto L00435d1e;
        }
        if(!(edx = edx - 1)) {
            if(edx = edx - 1) {
                goto L00435b91;
            }
            goto L00435da9;
L004359d8:
            M00632182 = 0xff;
            L00455238();
            M00644bb0 = 0xfe;
            *L005003b0();
            eax = L0041D444(0x24, 1);
        } else {
            esi = 0x4e5db8;
            edi = & Vffffff94;
            ecx = 5;
            asm("rep movsd");
            eax = L0041D444(0x20, 1);
            if(M00644e30 != 0) {
                L0043672C();
                L00436AF7(33972, & Vffffffa8, M00644e20, 2, 0x3b, 0xf);
                L00437628(M00644e20, & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0);
                ebx = 0;
                do {
                    if(*(Vfffffffc + ebx) & 0x80) {
                        eax = Vfffffffc;
                        if(( *(eax + ebx) & 7) >= 5) {
                            goto L00435ab5;
                        }
                        eax = Vfffffffc;
                        if(( *(eax + ebx) & 7) >= 3) {
                            if(*(Vfffffffc + ebx) & 8) {
                                eax = Vffffff98;
                                Vffffff98 = Vffffff98 + 1;
                                *L005000d8(ebx + 36352, & Vffffffa8, 0x12, 0x41, eax + eax * 8 + 0x45, 0);
                            } else {
                                eax = Vffffffa0;
                                Vffffffa0 = Vffffffa0 + 1;
                                *L005000d8(ebx + 36352, & Vffffffa8, 0x12, 0xc1, eax + eax * 8 + 0x45, 0);
                                goto L00435b7d;
L00435ab5:
                                if(*(Vfffffffc + ebx) & 8) {
                                    eax = Vffffff94;
                                    Vffffff94 = Vffffff94 + 1;
                                    *L005000d8(ebx + 36352, & Vffffffa8, 0x12, 2, eax + eax * 8 + 0x45, 0);
                                } else {
                                    eax = Vffffff9c;
                                    Vffffff9c = Vffffff9c + 1;
                                    *L005000d8(ebx + 36352, & Vffffffa8, 0x12, 0x80, eax + eax * 8 + 0x45, 0);
                                }
                            }
                        }
                    } else {
                        eax = Vffffffa4;
                        Vffffffa4 = Vffffffa4 + 1;
                        *L005000d8(ebx + 36352, & Vffffffa8, 0x12, 0x100, eax + eax * 8 + 0x45, 0);
                    }
L00435b7d:
                    ebx = ebx + 1;
                } while(ebx < 0x21);
                eax = L00458384();
                goto L004361d2;
L00435b91:
                eax = L0041D444(0x1f, 1);
                if(M00644e30 != 0) {
                    L0043672C();
                    L00437628(M00644e20, & Vffffffe4, & Vffffffec, & Vffffffe8, & Vffffffc4);
                    L0043759C(M00644e20, & Vffffffe0, & Vffffffdc, & Vffffffd8, & Vffffffd4, & Vffffffd0, & Vffffffcc, & Vffffffc8, & Vffffffc4);
                    Vffffffa8 = (Vffffffc4 & 0x3f) + 33995;
                    Vffffffac = (Vffffffc4 & 0x3f) + 33979;
                    Vffffffb0 = (Vffffffc4 >> 6) + 33975;
                    Vffffffb4 = Vffffffec + 34011;
                    eax = L00436AF7(33973, & Vffffffa8, M00644e20, 0x28, 0x63, 0x12);
                    Vffffffa8 = (M00644e20 & 8191) - 0x1718;
                    eax = (M00644e20 >> 0xd & 8191) - 0x1524;
                    Vffffffac = eax;
                    Vffffffb0 = M00644e23 >> 2 & 0x3f;
                    L00436AF7(33974, & Vffffffa8, M00644e20, 0x28, 0x8b, 0x12);
                    eax = L00458384();
                    goto L004361d2;
L00435cad:
                    if(M00644e30 != 0) {
                        *L005003b0();
                        L0043EF64();
                        ebx = 0x1c;
                        do {
                            eax = L0041D49C(ebx);
                            ebx = ebx + 1;
                        } while(ebx <= 0x24);
                        goto L004361d2;
                        if(M00644e0c != 0) {
                            M00644e3d = 0;
                            L00435860();
                            L0041D444(0x22, 1);
                            L0041D444(0x1f, 0);
                            eax = L0041D444(0x20, 0);
                            goto L004361d2;
L00435d1e:
                            M00644e3d = 0;
                            *L005003b0();
                            L004361D9();
                            L0041D444(0x21, 1);
                            L0041D444(0x1f, 0);
                            eax = L0041D444(0x20, 0);
                            goto L004361d2;
L00435d59:
                            M00644e3d = 0;
                            *L005003b0();
                            L0043ED54(0);
                            ebx = 0x1c;
                            do {
                                L0041D49C(ebx);
                                ebx = ebx + 1;
                            } while(ebx <= 0x24);
                            L0041D444(0x23, 1);
                            L0041D444(0x1f, 0);
                            eax = L0041D444(0x20, 0);
                            goto L004361d2;
L00435da9:
                            if(eax < 0x80) {
                                eax = *L0050039c(eax);
                            } else {
                                if(eax <= 0xbc) {
                                    ebx = eax - 0x80;
                                    L0043672C();
                                    if(*(((ebx << 4) + ebx) * 4 + 6510506) != 0 && *(((ebx << 4) + ebx) * 4 + 6510506) < 0x20) {
                                        Vffffffc0 = *(((ebx << 4) + ebx) * 4 + 6510496);
                                        Vffffffc2 = Vffffffc2 - 0x3f;
                                        Vffffffa8 = ( *(((ebx << 4) + ebx) * 4 + 6510532) & 65535) + -273;
                                        Vffffffac = *L005016f8( *L005016b8(Vffffffc0), 43866) >> 2;
                                        L00436AF7(33953, & Vffffffa8, M00644e20, 0xa, 0x69, 0x12);
                                        M00654e28 = 0;
                                        if(*(((ebx << 4) + ebx) * 4 + 6510574) == 0x23) {
                                            for(esi = ebx + 1; 1; L004711C8(6639144, ",")) {
                                                if(*(((esi << 4) + esi) * 4 + 6510506) != 0x23 || *(((esi << 4) + esi) * 4 + 6510496) == 0) {
                                                    break;
                                                }
                                                L004711C8(6639144, esi * 0x44 + 6510534);
                                                esi = esi + 1;
                                                if(*(((esi << 4) + esi) * 4 + 6510506) != 0x23) {
                                                    continue;
                                                }
                                            }
                                        } else {
                                            L004341CA(33959, & Vffffffa8, 6639144, M00644e20);
                                        }
                                        L004557C8(6639144, 0x52, 0x7d, 0x12);
                                    }
                                    if(*(((ebx << 4) + ebx) * 4 + 6510516) != 0) {
                                        if(*(((ebx << 4) + ebx) * 4 + 6510518) > 0x1b) {
                                            esi = 33958;
                                            Vffffffbe = 65515;
                                            Vffffffbc = 21791;
                                        } else {
                                            if(*(((ebx << 4) + ebx) * 4 + 6510518) > 0x13) {
                                                esi = 33957;
                                                Vffffffbe = 65520;
                                                Vffffffbc = 24855;
                                            } else {
                                                esi = 33956;
                                                Vffffffbe = 65525;
                                                Vffffffbc = 18641;
                                            }
                                        }
                                        Vffffffac = *L005016b8(L00452919( *(((ebx << 4) + ebx) * 4 + 6510516), Vffffffbc));
                                        L00436AF7(esi, & Vffffffa8, M00644e20, 0x52, 0x87, 0x12);
                                        Vffffffbc = 30106;
                                        Vffffffbe = 65499;
                                        Vffffffa8 = *L005016b8(L00452919(Vffffffbc, *(((ebx << 4) + ebx) * 4 + 6510510)));
                                        Vffffffac = *(((ebx << 4) + ebx) * 4 + 6510528) & 65535;
                                        Vffffffb0 = ( *(((ebx << 4) + ebx) * 4 + 6510530) & 65535) * 0xe10 >> 0x10;
                                        Vffffffb4 = *(((ebx << 4) + ebx) * 4 + 6510500);
                                        eax = *(((ebx << 4) + ebx) * 4 + 6510504) & 65535;
                                        edx = eax;
                                        if(*(((eax << 4) + edx) * 4 + 6510438) == 0) {
                                            eax = *(((ebx << 4) + ebx) * 4 + 6510504) & 65535;
                                            if(eax <= ebx - 2) {
                                                goto L0043608d;
                                            }
                                            Vffffffa8 = Vffffffa8 << 1;
                                            L00436AF7(33955, & Vffffffa8, M00644e20, 0xa, 0x87, 0x12);
                                        } else {
L0043608d:
                                            L00436AF7(33954, & Vffffffa8, M00644e20, 0xa, 0x87, 0x12);
                                        }
                                    }
                                    M00654e28 = 0;
                                    L004711C8(6639144, ebx * 0x44 + 6510534);
                                    L004711C8(6639144, ": ");
                                    (save)M00644e20;
                                    (save)L00471288(6639144) + 6639144;
                                    (save) & Vffffffa8;
                                    (save)( *(((ebx << 4) + ebx) * 4 + 6510506) & 65535) + 33910;
                                    L004341CA();
                                    esp = esp + 0x10;
                                    if(*(((ebx << 4) + ebx) * 4 + 6510506) == 0 || *(((ebx << 4) + ebx) * 4 + 6510506) >= 0x20) {
                                        L004557C8(6639144, 0xa, 0x7d, 0x12);
                                    } else {
                                        L004557C8(6639144, 0xa, 0x5f, 0x12);
                                    }
                                    eax = L00458384();
                                } else {
                                    if(eax == 0xff) {
                                        L0043672C();
                                        Vffffffa8 = M00644c4c & 0xff;
                                        L00436AF7(33952, & Vffffffa8, M00644e20, 0xa, 0x5f, 0x12);
                                        *L005000d8(M00644e28, & Vffffffa8, 0x11, 0xa, 0x69, 0x12c);
                                        eax = L00458384();
                                    } else {
                                        eax = *L0050039c(eax);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
        eax = L0043623A(eax);
    }
L004361d2:
}

/*    Procedure: 0x004361D9 - 0x00436239
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00434A50()
 *        L00435957()
 *        L0043623A()
 */

L004361D9()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    L004551F0(0, 0x4e5dcc);
    M00632182 = 2;
    *(ebx + 0x298) = 2;
    *(ebx + 0x246) = 305419896;
    *(ebx + 0x24a) = -2023406815;
    L00436696( *(ebx + 0x29a), *(ebx + 0x23a), *(ebx + 0x23e));
    L004364BD();
    return L00458384();
}

/*    Procedure: 0x0043623A - 0x004364BC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00435957()
 */

L0043623A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = A8;
    eax = ebx;
    if(eax <= 0xf8) {
        == ? L0043633c : ;
        if(eax = eax - 1) {
            goto L00436293;
        }
        if(eax = eax - 0xf4) {
            goto L00436464;
        }
        if(eax = eax - 1) {
            goto L0043636f;
        }
        if(eax = eax - 1) {
            goto L004362fd;
        }
    } else {
        if(!(eax = eax + -249 - 2)) {
            == ? L004363b7 : ;
            if(!(eax = eax - 1)) {
                goto L004364b2;
L00436293:
                if(M00644e3c == 0) {
                    goto L004364ba;
                }
                M00644e3c = M00644e3c - 1;
                if(M00644e3c != 0) {
                    L00436601(M00644e3e, M00644dde, M00644de2);
                    L004364BD();
                    return L00458384();
                }
                L0043657A(M00644e3e, M00644dde, M00644de2);
                L004364BD();
                return L00458384();
L004362fd:
                if(M00644e0c != 0) {
                    M00644e3d = 0;
                    L00435860();
                    return L0041D444(0x22, 1);
                }
                L0041D444(0x1f, 0);
                return L0041D444(0x20, 0);
                M00644e3d = 0;
                L004361D9();
                L0041D444(0x21, 1);
                L0041D444(0x1f, 0);
                return L0041D444(0x20, 0);
L0043636f:
                M00644e3d = 0;
                L0043ED54(0);
                ebx = 0x1c;
                do {
                    L0041D49C(ebx);
                    ebx = ebx + 1;
                } while(ebx <= 0x24);
                L0041D444(0x23, 1);
                L0041D444(0x1f, 0);
                return L0041D444(0x20, 0);
                if(M00644e3e <= 1) {
                    goto L004364ba;
                }
                M00644e3e = M00644e3e - 1;
                M00644e3c = 2;
                M00644dea = 305419896;
                M00644dee = -2023406815;
                L00436696(M00644e3e, M00644dde, M00644de2);
                L004364BD();
                return L00458384();
            }
            if(M00644e3e >= 0xff) {
                goto L004364ba;
            }
            M00644e3e = M00644e3e + 1;
            M00644e3c = 2;
            M00644dea = 305419896;
            M00644dee = -2023406815;
            L00436696(M00644e3e, M00644dde, M00644de2);
            L004364BD();
            return L00458384();
L00436464:
            M00632182 = 0xff;
            L00455238();
            M00644bb0 = 0xfe;
            M00644e3d = 0;
            return L0041D444(0x24, 1);
        }
        M00632182 = 0xff;
        L00455238();
        M00644bb0 = 0xfe;
        M00644e3d = 0;
        return *L0050039c(ebx);
    }
L004364b2:
    eax = *L0050039c(ebx);
L004364ba:
}

/*    Procedure: 0x004364BD - 0x00436579
 *    Argument size: 0
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L004361D9()
 *        L0043623A()
 */

L004364BD()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;



    esi = 0x4e5dd0;
    edi = & Vffffffec;
    ecx = 5;
    asm("rep movsd");
    for(ebx = 0; 1; ebx = ebx + 1) {
        eax = *((ebx << 4) + 0x4e57dc);
        if(eax < M00644e3e) {
            break;
        }
        eax = *((ebx << 4) + 0x4e57e0);
        eax = eax - (M00644dde >> 0x10);
        asm("cdq");
        M00644e3e = M00644e3e / M00644e3e;
        edx = M00644e3e % M00644e3e;
        ecx = eax + 0xa2;
        eax = ~( *((ebx << 4) + 0x4e57e4));
        eax = eax + (M00644de2 >> 0x10);
        asm("cdq");
        M00644e3e = M00644e3e / M00644e3e;
        edx = M00644e3e % M00644e3e;
        eax = eax + 0x4c;
        if(eax <= 0x95 && eax > 0 && ecx <= 0x136 && ecx > 0) {
            L00436AF7( *((ebx << 4) + 0x4e57e8), & Vffffffec, M00644e20, ecx, eax, 0x10);
        }
    }
}

/*    Procedure: 0x0043657A - 0x00436600
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043623A()
 */

L0043657A()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0x10);
    esi = *(ebp + 8);
    edx = *(ebp + 0xc) >> 0x10;
    edx = edx - (esi >> 1);
    *(ebp + 0xc) = edx + (esi << 5) + (esi << 5) * 4;
    eax = eax >> 0x10;
    eax = eax + (esi >> 1);
    eax = eax - esi * 0x4f;
    *(ebp - 4) = eax;
    *(ebp - 8) = 0x9d;
    do {
        edi = *(ebp + 0xc);
        ebx = 0x13f;
        do {
            eax = L004580B8(ebx, *(ebp - 8), *((L004369B9(edi, *(ebp - 4), esi) >> 0xa) * 4 + 0x4e59b8));
            edi = edi - esi;
            ebx = ebx - 1;
        } while(ebx >= 0);
        *(ebp - 4) = *(ebp - 4) + esi;
        *(ebp - 8) = *(ebp - 8) - 1;
    } while(*(ebp - 8) >= 0);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00436601 - 0x00436695
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043623A()
 */

L00436601()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0x10);
    edi = *(ebp + 8) + *(ebp + 8);
    edx = *(ebp + 0xc) >> 0x10;
    edx = edx - (edi >> 1);
    *(ebp + 0xc) = edx + (edi << 4) + (edi << 4) * 4;
    eax = eax >> 0x10;
    eax = eax + (edi >> 1);
    *(ebp - 4) = eax - edi * 0x27;
    esi = 0x9c;
    do {
        eax = *(ebp + 0xc);
        *(ebp - 8) = eax;
        ebx = 0x13e;
        do {
            ax = *(ebp - 4);
            eax = L00458010(ebx, esi, ebx + 1, esi + 1, *((L004369B9( *(ebp - 8), eax, edi) >> 0xa) * 4 + 0x4e59b8));
            *(ebp - 8) = *(ebp - 8) - edi;
            ebx = ebx - 2;
        } while(ebx >= 0);
        *(ebp - 4) = *(ebp - 4) + edi;
        esi = esi - 2;
    } while(esi >= 0);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00436696 - 0x0043672B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004361D9()
 *        L0043623A()
 */

L00436696()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0x10);
    edi = *(ebp + 8) << 2;
    edx = *(ebp + 0xc) >> 0x10;
    edx = edx - (edi >> 1);
    *(ebp + 0xc) = edx + (edi << 3) + (edi << 3) * 4;
    eax = eax >> 0x10;
    eax = eax + (edi >> 1);
    *(ebp - 4) = eax - edi * 0x13;
    esi = 0x9a;
    do {
        eax = *(ebp + 0xc);
        *(ebp - 8) = eax;
        ebx = 0x13c;
        do {
            ax = *(ebp - 4);
            eax = L00458010(ebx, esi, ebx + 3, esi + 3, *((L004369B9( *(ebp - 8), eax, edi) >> 0xa) * 4 + 0x4e59b8));
            *(ebp - 8) = *(ebp - 8) - edi;
            ebx = ebx - 4;
        } while(ebx >= 0);
        *(ebp - 4) = *(ebp - 4) + edi;
        esi = esi - 4;
    } while(esi >= 0);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0043672C - 0x00436767
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00435860()
 *        L00435957()
 */

L0043672C()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    *(ebp - 4) = 0;
    *L005003b0();
    L0043E55C(0);
    return L00436768(ebp - 4, 1, 0, 0x18, 4, 1);
}

/*    Procedure: 0x00436768 - 0x004368DC
 *    Argument size: 24
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L0043672C()
 *        L00436768()
 */

L00436768(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = *A8;
    eax = *A8;
    edx = eax;
    (save)A14;
    (save)A18;
    esi = (( *(((eax << 4) + edx) * 4 + 6510506) & 65535) + ( *(((eax << 4) + edx) * 4 + 6510506) & 65535) * 4) * 4 + 0x4e5ab8;
    edi = & Vffffffe8;
    ecx = 5;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    if(A1c != 0) {
        eax = A10;
        asm("imul dword [ebp-0x18]");
        esi = esi + eax;
        eax = Ac;
        asm("imul dword [ebp-0x14]");
        edi = edi + eax;
    }
    L00457E1C(0x502e84, Vfffffff8, esi - Vfffffff0, edi - Vfffffff4);
    if(edi < 0x9e && esi < 0x140) {
        *L005003bc(esi, edi, Vffffffe8 + 1, *A8 + 0x80);
    }
    do {
        *A8 = *A8 + 1;
        eax = *A8;
        edx = eax;
        if(*(((eax << 4) + edx) * 4 + 6510506) != 0x23) {
            break;
        }
        eax = *A8;
        edx = eax;
    } while(*(((eax << 4) + edx) * 4 + 6510496) != 0);
    eax = *A8;
    edx = eax;
    if(*(((eax << 4) + edx) * 4 + 6510438) == 0) {
        L00436768(A8, 1, 0, esi, edi - 0x1d, 0);
        L00436768(A8, 1, 0, esi, edi + 0x1c, 0);
    }
    eax = Vffffffe8 + 3;
    asm("imul dword [ebp+0xc]");
    esi = esi + eax;
    eax = Vffffffec + 3;
    asm("imul dword [ebp+0x10]");
    for(edi = edi + eax; 1; edi = edi + eax * eax) {
        eax = *A8;
        edx = eax;
        if(*(((eax << 4) + edx) * 4 + 6510496) <= 0) {
            break;
        }
        eax = *A8;
        edx = eax;
        eax = *(((eax << 4) + edx) * 4 + 6510504) & 65535;
        if(eax != Vfffffffc + 1) {
            break;
        }
        eax = L00436768(A8, A10, Ac, esi, edi, 1);
        edx = Ac;
        esi = esi + eax * eax;
        edx = A10;
    }
    return Vffffffe8 + Vffffffe8 + 3;
}

/*    Procedure: 0x004368DD - 0x004369B8
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043484B()
 *        L00434A50()
 *        L00436E8D()
 *        L00436EA9()
 */

L004368DD(A8, Ab, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ab;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    esp = esp + -724;
    (save)Ac;
    (save)esi;
    (save)edi;
    esi = (A8 & 8191) << 0x10;
    edi = (A8 >> 0xd & 8191) << 0x10;
    eax = L004355EB(ebp + -724, ebp + -340, esi, edi, 0);
    if((Ab >> 2 & 0x3f) >= eax) {
        eax = eax | -1;
    } else {
        eax = L00436B72(esi, edi, (Ab >> 2 & 0x3f) + (Ab >> 2 & 0x3f) + ((Ab >> 2 & 0x3f) + (Ab >> 2 & 0x3f)) * 2 + ebp + -724, Ac);
        eax = Ab >> 2 & 0x3f;
        *A10 = eax;
        eax = *(ebp + (Ab >> 2 & 0x3f) * 2 + -174) & 0xff;
        *A14 = eax;
        eax = *(ebp + (Ab >> 2 & 0x3f) * 2 + -173) & 0xff;
        *A18 = eax;
        eax = L00434694( *Ac, *(Ac + 4), *(Ac + 8), M00644df4, M00644df8, M00644dfc);
    }
    (restore)edi;
    (restore)esi;
    (restore)Ac;
}

/*    Procedure: 0x004369B9 - 0x00436AF6
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L004355EB()
 *        L0043657A()
 *        L00436601()
 *        L00436696()
 *        L00436BE4()
 *        L00436D20()
 */

L004369B9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ecx = Ac;
    edx = A8;
    if(dx >= 8192 || cx >= 8192) {
        eax = 0;
    } else {
        if(A10 == 0) {
            Vfffffff0 = dx;
            Vfffffff2 = cx;
            eax = 0;
            do {
                if(*(eax * 4 + 0x4e1290) == Vfffffff0) {
                    goto L00436a0a;
                }
                eax = eax + 1;
            } while(eax < 0x31);
            goto L00436a17;
L00436a0a:
            eax = *(eax * 4 + 0x4e1358) - *(eax * 4 + 0x4e1354) << 0xa;
        } else {
L00436a17:
            eax = (dx & 65535) << 3;
            edx = (cx & 65535) << 3;
            ebx = edx & 65024;
            ebx = ebx + (eax >> 7) >> 2;
            ecx = *(ebx + 0x4e171c) & 0xff;
            Vfffffffc = *(ebx + 0x4e179c) & 0xff;
            Vfffffff8 = *(ebx + 0x4e179d) & 0xff;
            Vfffffff4 = *(ebx + 0x4e171d) & 0xff;
            eax = (eax & 0x1ff) << 6;
            edx = (edx & 0x1ff) << 6;
            ebx = Vfffffff4 - ecx;
            ebx = eax * eax;
            esi = Vfffffffc - ecx;
            ebx = ebx + edx * edx;
            esi = eax;
            esi = edx * edx >> 0xf;
            ebx = ebx + (Vfffffff8 - Vfffffffc - Vfffffff4 + ecx) * (Vfffffff8 - Vfffffffc - Vfffffff4 + ecx) + ebx + (Vfffffff8 - Vfffffffc - Vfffffff4 + ecx) * (Vfffffff8 - Vfffffffc - Vfffffff4 + ecx);
            ecx = ebx + (ecx << 0x10) >> 8;
            if(A10 >= 0x10) {
                eax = ecx;
            } else {
                ebx = eax + ecx;
                asm("imul edx");
                eax = *(((ebx ^ eax >> 0xf) >> 5 & 0x7f) * 4 + 0x4e14dc);
                if(A10 == 0) {
                    eax = eax * eax >> 0x10;
                } else {
                    edx = 0x10 - A10;
                    edx = eax * eax >> 5;
                    eax = (65535 - edx) * (65535 - edx) >> 0x10;
                }
            }
        }
    }
}

/*    Procedure: 0x00436AF7 - 0x00436B27
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00435860()
 *        L00435957()
 *        L004364BD()
 */

L00436AF7(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    L004341CA(A8, Ac, 6639144, A10);
    return L004557C8(6639144, A14, A18, A1c);
}

/*    Procedure: 0x00436B28 - 0x00436B71
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043BCAC()
 *        L0043EEA8()
 */

L00436B28(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = M00644e0d & 7;
    *(A8 + 0xc) = M00644e20;
    *(A8 + 0x10) = M00644e30;
    *A8 = M00644e18;
    *(A8 + 4) = M00644e1c;
    return L004713AC(A8 + 0x14, 6497135, 0x14);
}

/*    Procedure: 0x00436B72 - 0x00436BE3
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00434A50()
 *        L004368DD()
 */

L00436B72(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    eax = A10;
    *A14 = (A8 & -65536) + (( *(eax + 4) << 9) + 32768 & 65535);
    *(A14 + 4) = (Ac & -65536) + (( *(eax + 3) << 9) + 32768 & 65535);
    ecx = 65535;
    if(*(eax + 2) <= 0) {
        ecx = 0;
    }
    eax = ~( *(eax + 2)) << 0x10;
    *(A14 + 8) = ~((ecx | eax) >> 7);
}

/*    Procedure: 0x00436BE4 - 0x00436D1F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00411810()
 *        L0042BA58()
 *        L0042BC40()
 *        L0042C082()
 *        L0042C13B()
 *        L0042C1BC()
 *        L0042C4ED()
 *        L004308AC()
 */

L00436BE4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = ebp - 4;
    if(!(eax = Ac - 1)) {
        == ? L00436c0d : ;
        if(eax = eax - 1) {
            goto L00436c66;
        }
    } else {
        *esi = A8;
        *(esi + 3) = *(esi + 3) & 3;
        goto L00436cc7;
        *esi = A8;
        ax = *( *L004eeed4(0xc) * 4 + 0x4e58cc) + *esi & 8191;
        *esi = ax | *esi & 57344;
        eax = ( *( *L004eeed4(0xc) * 4 + 0x4e58ce) + ( *esi >> 0xd) & 8191) << 0xd;
        *esi = eax | *esi & -67100673;
        goto L00436cc7;
L00436c66:
        *esi = A8;
        ax = *( *L004eeed4(0xc) * 4 + 0x4e58fc) + *esi & 8191;
        *esi = ax | *esi & 57344;
        eax = ( *( *L004eeed4(0xc) * 4 + 0x4e58fe) + ( *esi >> 0xd) & 8191) << 0xd;
        *esi = eax | *esi & -67100673;
        goto L00436cc7;
    }
    *esi = 0;
    eax = *esi;
    goto L00436d1b;
L00436cc7:
    eax = *esi >> 0xd & 8191;
    ebx = L004369B9( *esi & 8191, eax, 0) >> 0xa;
    if(ebx == 0) {
        *esi = 0;
        eax = *esi;
    } else {
        eax = ( *L004eeed4(ebx) & 0x3f) << 2;
        *(esi + 3) = al | *(esi + 3) & 3;
        if(*esi == A8) {
            *esi = 0;
        }
        eax = *esi;
    }
L00436d1b:
}

/*    Procedure: 0x00436D20 - 0x00436E8C
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00415010()
 */

L00436D20(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    if(!(eax = Ac - 1)) {
        == ? L00436d4e : ;
        if(eax = eax - 1) {
            goto L00436db6;
        }
    } else {
        *(ebp - 4) = A8;
        *(ebp - 1) = *(ebp - 1) & 3;
        goto L00436e28;
        *(ebp - 4) = A8;
        ax = *( *L004eeed0(0xc, A10, A14) * 4 + 0x4e58cc) + *(ebp - 4) & 8191;
        *(ebp - 4) = ax | *(ebp - 4) & 57344;
        eax = *( *L004eeed0(0xc, A10, A14) * 4 + 0x4e58ce);
        eax = (eax + ( *(ebp - 4) >> 0xd) & 8191) << 0xd;
        *(ebp - 4) = eax | *(ebp - 4) & -67100673;
        goto L00436e28;
L00436db6:
        *(ebp - 4) = A8;
        ax = *( *L004eeed0(0xc, A10, A14) * 4 + 0x4e58fc) + *(ebp - 4) & 8191;
        *(ebp - 4) = ax | *(ebp - 4) & 57344;
        eax = *( *L004eeed0(0xc, A10, A14) * 4 + 0x4e58fe);
        eax = (eax + ( *(ebp - 4) >> 0xd) & 8191) << 0xd;
        *(ebp - 4) = eax | *(ebp - 4) & -67100673;
        goto L00436e28;
    }
    *(ebp - 4) = 0;
    eax = *(ebp - 4);
    goto L00436e87;
L00436e28:
    eax = *(ebp - 4) >> 0xd & 8191;
    edi = L004369B9( *(ebp - 4) & 8191, eax, 0) >> 0xa;
    if(edi == 0) {
        *(ebp - 4) = 0;
        eax = *(ebp - 4);
    } else {
        eax = ( *L004eeed0(edi, A10, A14) & 0x3f) << 2;
        *(ebp - 1) = al | *(ebp - 1) & 3;
        if(*(ebp - 4) == A8) {
            *(ebp - 4) = 0;
        }
        eax = *(ebp - 4);
    }
L00436e87:
}

/*    Procedure: 0x00436E8D - 0x00436EA8
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004308AC()
 */

L00436E8D(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L004368DD(A8, Ac, A10, A14, A18);
}

/*    Procedure: 0x00436EA9 - 0x00436F92
 *    Argument size: 8
 *    Local size: 56
 *    Save regs size: 4
 *    Called by:
 *        L00415010()
 *        L00424D2C()
 *        L0043BEE0()
 *        L0043C0E0()
 */

L00436EA9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(!(eax = L004368DD(Ac, & Vffffffc8, & Vfffffffc, & Vfffffff8, & Vfffffff4) + 1)) {
        eax = eax | -1;
    } else {
        L004341CA(0x1ff, 0, A8 + 0x14, Ac);
        L0043759C(Ac, & Vffffffd8, & Vffffffd4, & Vffffffe0, & Vfffffff0, & Vffffffec, & Vffffffe8, & Vffffffe4, & Vffffffdc);
        *(A8 + 8) = Vfffffff4 & 7;
        *(A8 + 0xc) = Ac;
        *(A8 + 0x10) = Vffffffe0;
        *A8 = !(Vfffffff8 & 0x80) ? 0 : (Vffffffcc >> 0x10) + (Vffffffcc << 0x10) + Vffffffc8 - Vffffffd0;
        eax = *((Vfffffff8 & 0xf) * 4 + 0x4e14a8) - *((Vfffffff8 & 0xf) * 4 + 0x4e14a4) >> 0x10;
        edx = (Vfffffff4 & 0xf8) << 8;
        asm("imul edx");
        *(A8 + 4) = eax + *((Vfffffff8 & 0xf) * 4 + 0x4e14a4);
        eax = 0;
    }
}

/*    Procedure: 0x00436F93 - 0x00436FC9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004355EB()
 */

L00436F93()
{



    eax = M00644dea;
    edx = M00644dea + M00644dee;
    ecx = eax << 3;
    eax = (ecx | eax >> 0x1d) + edx;
    ecx = edx << 5;
    M00644dee = ecx | edx >> 0x1b;
    M00644dea = eax;
}

/*    Procedure: 0x00436FCA - 0x0043708F
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 4
 *    Called by:
 *        L00434A50()
 */

L00436FCA(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = Ac;
    Vffffffe8 = *(eax + 8) >> 2;
    Vffffffec = *(eax + 4) - M00644de2 >> 2;
    eax = *eax - M00644dde >> 2;
    Vfffffff0 = eax;
    if(Vffffffec >= -32767 && Vffffffec <= 32767 && Vfffffff0 >= -32767 && Vfffffff0 <= 32767) {
        Vffffffe8 = Vffffffe8 << 0xf;
        Vffffffec = Vffffffec << 0xf;
        Vfffffff0 = Vfffffff0 << 0xf;
        L0045A7A8( & Vfffffff4, & Vffffffe8, A8);
        *(A8 + 0x26) = Vfffffff4 >> 0xd;
        *(A8 + 0x2e) = Vfffffff8 >> 0xd;
        *(A8 + 0x36) = (Vfffffffc >> 0xd) + M00644de6;
        *(A8 + 0x82) = A10;
        *(A8 + 0xa4) = A14;
        *(A8 + 0x9e) = M00644df2;
        eax = *L005030ec(A8);
    }
}

/*    Procedure: 0x00437090 - 0x0043716B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00434A50()
 */

L00437090()
{



    esp = esp + -2068;
    L00434844();
    *(ebp - 0x14) = M00644e10;
    *L005000c0(ebp + -1044, 33950, ebp - 0x14);
    L00474830(ebp + -2068, "%s %s", 6497135, ebp + -1044);
    *L005000c0(ebp + -1044, M00644e24, ebp - 0x14);
    L004711C8(ebp + -2068, "\r");
    L004711C8(ebp + -2068, 6497152);
    L004711C8(ebp + -2068, ": ");
    L004711C8(ebp + -2068, ebp + -1044);
    M004e125c = -1;
    return L0041D6C0(ebp + -2068, 0x12, 1);
}

/*    Procedure: 0x0043716C - 0x004371D2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0043716C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    if(A8 != 0) {
        M00632183 = 0;
        return L004347EB(A8);
    }
    L00455238();
    M00632182 = 0;
    M00632183 = 0;
    ebx = 0x1a;
    do {
        L0041D4C0(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0x24);
    L00434821();
    if(M004e125c != 0) {
        L0041D6C0(0, 0, 0);
    }
    M004e125c = 0;
    return 0;
}

/*    Procedure: 0x004371D3 - 0x004371D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004371D3()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004371D4 - 0x0043724F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00437250()
 */

L004371D4(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0xc9) > 0) {
        edx = *(A8 + 0x9e) & 65535;
        if(edx + (M00655674 >> 1) > 65535) {
            *(A8 + 0x9e) = 65535;
            *(A8 + 0xc9) = *(A8 + 0xc9) & 0xfe;
            goto L0043724e;
        }
        *(A8 + 0x9e) = dx;
        return;
    }
    if(*(A8 + 0xc9) < 0) {
        edx = *(A8 + 0x9e) & 65535;
        if(edx - (M00655674 >> 1) < 0) {
            *(A8 + 0xc9) = 0xfe;
            *(A8 + 0x9e) = 0;
            return;
        }
        *(A8 + 0x9e) = dx;
    }
L0043724e:
}

/*    Procedure: 0x00437250 - 0x004373AA
 *    Argument size: 4
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L00429A5C()
 */

L00437250(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    ebx = *(eax + 8);
    edi = *(eax + 4);
    esi = *eax;
    Vfffffff8 = *(ebx + 0xa8);
    Vfffffffc = *(ebx + 0xac);
    *(ebx + 0xa8) = esi;
    *(ebx + 0xac) = edi;
    if(!( *(ebx + 0x14c) & 0x20)) {
        eax = L004371D4(ebx);
    } else {
        Vfffffff0 = *(ebx + 0xba);
        Vfffffff4 = *(ebx + 0xbe);
        *L005016e8( & Vffffffe0, *(ebx + 0xc2), Vfffffffc, Vfffffff8, edi, esi);
        Vffffffe8 = Vffffffe0;
        Vffffffec = Vffffffe4;
        L0044EB4E(ebx + 0xba, Vfffffff0, Vfffffff4, Vffffffe8, Vffffffec);
        eax = *(ebx + 0xbe) - Vfffffff4;
        if(eax != 0) {
            if(eax > 0) {
                if(eax >= 65535) {
                    goto L00437313;
                }
                eax = *L005016e4(ebx, eax);
            } else {
L00437313:
                eax = *L005016e0(ebx, *(ebx + 0xb0), *(ebx + 0xc6), *(ebx + 0xbe));
            }
        }
        if(!( *(ebx + 0x14c) & 0x10)) {
            eax = L004371D4(ebx);
        }
        dl = *(ebx + 0xc8);
        if(dl != 0) {
            eax = esi;
            esi = dl - 1;
            if(esi >= 0) {
                ecx = esi;
                Vfffffff8 = Vfffffff8 << cl;
                eax = eax << esi;
            }
            if(Vfffffff8 >> 0x14 != eax >> 0x14) {
                eax = !( *(ebx + 0x14c) & 0x10) ? L0045AFF0(ebx, eax >> 0x10, *(ebx + 0xcc)) : L0045AFF0(ebx, *(ebx + 0xcc), eax >> 0x10);
            }
        }
    }
}

/*    Procedure: 0x004373AB - 0x0043747E
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 4
 */

L004373AB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    eax = A8;
    ebx = *eax;
    edx = *(eax + 4);
    eax = *(ebx + 0xd8);
    if(eax != 0 && eax <= edx) {
        goto L004373d7;
    }
    if(eax != 0) {
        *(ebx + 0xd8) = *(ebx + 0xd8) - dx;
        goto L00437449;
L004373d7:
        eax = *(ebx + 0xca);
        if(eax == M00644c64) {
            if(M00644c8c == 2) {
                *(ebx + 0xff) = 8;
                L00414070(0x17, 0, *(ebx + 0x86) & 0xff);
            }
            Vffffffd0 = 39101;
            Vffffffe8 = 8;
            eax = *(ebx + 0xa0);
            edx = eax >> 0x10;
            Vffffffdc = edx | eax << 0x10;
            Vffffffec = ebx;
            eax = L00421DEC( & Vffffffd0);
        }
        eax = L0042C96C( *(ebx + 0xca), ebx);
    }
L00437449:
    if(!( *(ebx + 0x14c) & 0x20)) {
        eax = *L00501b90(M00644db2);
        if(*(eax + 0x88) > *(ebx + 0x88)) {
            M00644db2 = *(ebx + 0x86);
        }
    }
}

/*    Procedure: 0x0043747F - 0x0043747F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043747F()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00437480 - 0x00437598
 *    Argument size: 7
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043759C()
 *        L00437628()
 *        L004376B0()
 */

L00437480(A8, Ab)
/* unknown */ void  A8;
/* unknown */ void  Ab;
{
    /* unknown */ void  ecx;



    eax = 0;
    for(edx = 0x4e74c4; 1; edx = edx + 0x36) {
        ecx = *edx;
        if(ecx == 0 || ecx == A8) {
            break;
        }
        eax = eax + 1;
    }
    if(*((eax + eax * 2 + (eax + eax * 2) * 8) * 2 + 0x4e74c4) == 0) {
        *(ebp - 4) = A8;
        *(ebp - 1) = *(ebp - 1) & 3;
        eax = 0;
        edx = 0x4ebc7c;
        do {
            if(*edx == *(ebp - 4)) {
                goto L004374cd;
            }
            eax = eax + 1;
            edx = edx + 4;
        } while(eax < 4);
        goto L004374e0;
L004374cd:
        return eax | -1;
L004374e0:
        eax = (A8 & 8191) - 0x1718;
        edx = eax > 0 ? eax : ~eax;
        eax = edx;
        eax = (Ab >> 2 & 0x3f & 7) + eax;
        edx = eax;
        eax = eax * eax;
        edx = (A8 >> 0xd & 8191) - 0x1524;
        ecx = edx > 0 ? edx : ~edx;
        edx = ecx;
        edx = (Ab >> 2 & 0x3f & 7) + edx;
        ecx = edx;
        eax = edx * edx + eax;
        eax = eax >= 19600 ? -8 : eax >= 0x121 ? -7 : eax >= 0x64 ? -6 : eax >= 0x31 ? -5 : eax >= 0x19 ? -4 : eax >= 9 ? -3 : -2;
    }
}

/*    Procedure: 0x00437599 - 0x0043759B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00437599()
{



}

/*    Procedure: 0x0043759C - 0x00437624
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041C97C()
 *        L0042B6E8()
 *        L0042D548()
 *        L00434425()
 *        L00435957()
 *        L00436EA9()
 */

L0043759C(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 0x4e7314;
    edx = L00437480(A8) + L00437480(A8) * 2 + (L00437480(A8) + L00437480(A8) * 2) * 8;
    ecx = *(ebx + edx * 2 + 0x1de);
    *Ac = ecx;
    ecx = *(ebx + edx * 2 + 0x1e2);
    *A10 = ecx;
    ecx = *(ebx + edx * 2 + 0x1b5) & 0xff;
    *A14 = ecx;
    ecx = *(ebx + edx * 2 + 0x1b6) & 0xff;
    *A18 = ecx;
    ecx = *(ebx + edx * 2 + 0x1b7) & 0xff;
    *A1c = ecx;
    ecx = *(ebx + edx * 2 + 0x1b8) & 0xff;
    *A20 = ecx;
    ecx = *(ebx + edx * 2 + 0x1b9) & 0xff;
    *A24 = ecx;
    eax = *(ebx + edx * 2 + 0x1ba) & 65535;
    *A28 = eax;
}

/*    Procedure: 0x00437625 - 0x00437627
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00437625()
{



}

/*    Procedure: 0x00437628 - 0x004376AE
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00411810()
 *        L0042B6E8()
 *        L0042BA58()
 *        L0042BC40()
 *        L0042C1BC()
 *        L0042C4ED()
 *        L004308AC()
 *        L00435957()
 */

L00437628(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    edx = L00437480(A8);
    Ac = edx + edx * 2 + (edx + edx * 2) * 8;
    ecx = *(Ac * 2 + 0x4e74c8) & 0xff;
    *A10 = ecx;
    ecx = *(Ac * 2 + 0x4e74d0) & 0xff;
    *A14 = ecx;
    Ac = *(Ac * 2 + 0x4e74ce) & 65535;
    *A18 = Ac;
    Ac = 0;
    ecx = 6519576;
    edx = (edx + edx * 2 + (edx + edx * 2) * 8) * 2 + 0x4e74d1;
    do {
        *ecx = *edx;
        Ac = Ac + 1;
        ecx = ecx + 1;
        edx = edx + 1;
    } while(Ac < 0x1f);
    edx = Ac + 6519576;
    do {
        *edx = 0;
        Ac = Ac + 1;
        edx = edx + 1;
    } while(Ac < 0x25);
    M00637b38 = 0xd;
    *Ac = 6519576;
}

/*    Procedure: 0x004376AF - 0x004376AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004376AF()
{



}

/*    Procedure: 0x004376B0 - 0x00437748
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00411810()
 *        L0042B6E8()
 *        L0043980C()
 */

L004376B0(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    edx = L00437480(A8) + L00437480(A8) * 2 + (L00437480(A8) + L00437480(A8) * 2) * 8;
    ecx = ( *(edx * 2 + 0x4e74f0) & 0xff) >> 4;
    *A10 = ecx;
    *Ac = *(edx * 2 + 0x4e74f0) & 0xf;
    eax = ( *(edx * 2 + 0x4e74ce) & 65535) >> 6;
    *A18 = eax;
    if(*A10 > *Ac || *A10 == *Ac && *A18 == 1) {
        *A1c = M00644d44;
        *A20 = M00644d48;
        eax = A14;
        *eax = *A10;
    } else {
        *A20 = M00644d44;
        *A1c = M00644d48;
        eax = A14;
        *eax = *Ac;
    }
}

/*    Procedure: 0x00437749 - 0x0043774B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00437749()
{



    *eax = *eax + al;
    *(ecx + 5) = *(ecx + 5) + ch;
}

/*    Procedure: 0x0043774C - 0x00437790
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00437794()
 *        L004378A8()
 */

L0043774C()
{



    edx = 0;
    edx = 0x27 / 0x27 % 0x27 / 0x27;
    M004ebff4 = M004ebff4 * 0xc6b & 65535;
    eax = M004ebff8;
    edx = eax;
    eax = ((edx + eax * 2 << 4) + edx << 6) + edx;
    edx = 0;
    edx = 0x27 / 0x27 % 0x27 / 0x27;
    eax = eax & 65535;
    M004ebff8 = eax;
    return M004ebff8;
}

/*    Procedure: 0x00437791 - 0x00437793
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00437791()
{



}

/*    Procedure: 0x00437794 - 0x004378A4
 *    Argument size: 56
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043798C()
 */

L00437794(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c, A30, A34, A38, A3c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
/* unknown */ void  A3c;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A1c;
    eax = A10;
    *A8 = Ac + 1;
    if(eax != 0) {
        edx = eax << 0x10;
        *(A8 + 4) = edx | eax >> 0x10;
    } else {
        *(A8 + 4) = (M004ebff4 << 0x10) + (M004ebff8 & 65535);
        L0043774C();
    }
    *(A8 + 8) = si;
    *(A8 + 0xa) = A34;
    ax = A38;
    *(A8 + 0xc) = ax;
    *(A8 + 0xe) = A20;
    edx = 0;
    edx = 0x168 / 0x168 % 0x168 / 0x168;
    *(A8 + 0x12) = A24 << 0x10;
    *(A8 + 0x14) = 0;
    *(A8 + 0x18) = 0;
    eax = A14 & 65535;
    *(A8 + 0x20) = ax;
    edx = 0;
    ecx = 0xe10 / 0xe10;
    edx = ecx % ecx;
    *(A8 + 0x22) = A18 << 0x10;
    ax = A28 + 0x111;
    *(A8 + 0x24) = ax;
    eax = A8 + 0x26;
    (save)esi;
    esi = eax;
    edi = A3c;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)esi;
    *(A8 + 0x3a) = 0;
    *(A8 + 0x3c) = 0;
    al = A2c;
    *(A8 + 0x3e) = al;
    if(esi < 2) {
        eax = esi;
    } else {
        al = 2;
    }
    *(A8 + 0x3f) = al;
    *(A8 + 0x40) = 0;
    edx = 0;
    edx = 0x168 / 0x168 % 0x168 / 0x168;
    *(A8 + 0x42) = A30 << 0x10;
    *(A8 + 0x42) = 0;
}

/*    Procedure: 0x004378A5 - 0x004378A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004378A5()
{



}

/*    Procedure: 0x004378A8 - 0x0043798A
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043798C()
 */

L004378A8(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = Ac;
    *A8 = -655360;
    if(eax != 0) {
        *(A8 + 4) = eax;
    } else {
        *(A8 + 4) = (M004ebff4 << 0x10) + (M004ebff8 & 65535);
        L0043774C();
    }
    *(A8 + 8) = A18;
    *(A8 + 0xa) = 0x23;
    ax = A1c;
    *(A8 + 0xc) = ax;
    *(A8 + 0xe) = 0;
    edx = 0;
    edx = 36000 / 36000 % 36000 / 36000;
    ax = ~(A10 << 0x10) - 16384;
    *(A8 + 0x12) = ax;
    *(A8 + 0x14) = 0;
    *(A8 + 0x18) = 0;
    *(A8 + 0x20) = 0;
    edx = 0;
    ecx = 36000 / 36000;
    edx = ecx % ecx;
    *(A8 + 0x22) = A14 << 0x10;
    *(A8 + 0x24) = 0x125;
    eax = A8 + 0x26;
    esi = eax;
    edi = A20;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    *(A8 + 0x3a) = 0;
    *(A8 + 0x3c) = 0;
    *(A8 + 0x3e) = 0;
    *(A8 + 0x3f) = 3;
    *(A8 + 0x40) = 0;
    *(A8 + 0x42) = 0;
}

/*    Procedure: 0x0043798B - 0x0043798B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043798B()
{



}

/*    Procedure: 0x0043798C - 0x004395AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004395AC()
 */

L0043798C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 6519616;
    esi = 0x4ec728;
    L00437794(6519616, 200000000, 0, 0, 0, 0, 0, 0, 0x16a8, 2, 0, 0x16, 0x8d, "Sol");
    L00437794(ebx + 0x44, 0x21, 0, 0xce, 0x46, 1, 1725554, 0x1e, 0x15e, 0, 0, 3, 0x78, esi + 0x18c1);
    L00437794(ebx + 0x88, 0, 0, 0, 0x384, 2, 0xdc, 0x32, 0xf, 0xc, 0, 0x20, 0x48, esi + 0x18c9);
    L00437794(ebx + 0xcc, 0x1e7, 0, 1, 0x22, 1, 3224611, 0xdc, 0x1e0, 0, 0, 0xc, 0x7b, esi + 0x18d2);
    L00437794(ebx + 0x110, 0x256, 305400508, 0x11, 0, 1, 0x4407bb, 0x5a, 0x16, 1, 0x17, 0xa, 0x81, esi + 0x18d8);
    L004378A8(ebx + 0x154, 0, -13168, 0xb34, 5, 0x54, esi + 0x18de);
    L004378A8(ebx + 0x198, 0, -14415, 0x7c1, 5, 0x53, esi + 0x18e5);
    L004378A8(ebx + 0x1dc, 0, -31505, 0x956, 5, 0x5a, esi + 0x18eb);
    L004378A8(ebx + 0x220, 0, -41383, 0x285, 5, 0x54, esi + 0x18f1);
    L004378A8(ebx + 0x264, 0, -18632, 0xfcc, 5, 0x54, esi + 0x18fa);
    L004378A8(ebx + 0x2a8, 0, -40668, -4116, 5, 0x5a, esi + 0x1905);
    L004378A8(ebx + 0x2ec, 0, -27483, -2506, 5, 0x5a, esi + 0x1917);
    L00437794(ebx + 0x330, 0, 0, 0, 0xeb, 5, 0x4e9, 0x78, 0xf, 0xa, 0, 0x22, 0x50, esi + 0x191e);
    L00437794(ebx + 0x374, 0, 0, 0, 0xeb, 5, 0x4e9, 0xf0, 0xf, 0xa, 0, 0x22, 0x50, esi + 0x192e);
    L00437794(ebx + 0x3b8, 0, 0, 0, 0xeb, 5, 0x4e9, 0, 0xf, 0xa, 0, 0x22, 0x50, esi + 0x193a);
    L00437794(ebx + 0x3fc, 7, 0x1234, 0x36, 0x33, 5, 11456, 0x96, -20, 0, 0, 3, 0x78, esi + 0x1946);
    L004378A8(ebx + 0x440, 0, -17127, 0x367, 0x10, 0x60, esi + 0x194b);
    L00437794(ebx + 0x484, 0, 0, 0, 0x384, 0x10, 0xfa, 0, 0xf, 0xb, 0, 0x21, 0x49, esi + 0x195b);
    L00437794(ebx + 0x4c8, 0x40, -1126301686, 0x5d, 0x13, 1, 6791949, 0x50, 0xf, 1, 0x18, 9, 0x7d, esi + 0x1963);
    L004378A8(ebx + 0x50c, 264237040, -31505, 0x956, 0x13, 0x54, esi + 0x1968);
    L004378A8(ebx + 0x550, -517782169, -13168, 0xb34, 0x13, 0x53, esi + 0x1978);
    L00437794(ebx + 0x594, 0, 0, 0, 0x384, 0x13, 0xb4, 0, 0xf, 0xa, 0, 0x22, 0x50, esi + 0x1982);
    L00437794(ebx + 0x5d8, 0, 979235, 0x15, 0xb, 0x13, 0x117, 0, -66, 5, 0, 1, 0x70, esi + 0x198c);
    L00437794(ebx + 0x61c, 0, 354185, 3, 0x12, 0x13, 0x2bc, 0, -66, 4, 0, 1, 0x70, esi + 0x1993);
    L00437794(ebx + 0x660, 1, 979235, 0x4f, 0x6a, 1, 12238382, 0xc8, -120, 0, 0, 2, 0x77, esi + 0x199a);
    L00437794(ebx + 0x6a4, 189900, 1610617396, 0x31, 0xd, 1, 23195147, 0x12c, -150, 2, 3, 0xf, 0x86, esi + 0x19a0);
    L00437794(ebx + 0x6e8, 0, 0, 3, 0x24, 0x1a, 0x1512, 0xaa, -155, 2, 0, 1, 0x70, esi + 0x19a8);
    L00437794(ebx + 0x72c, 9, 0, 4, 0x1f, 0x1a, 12577, 0x50, -145, 0, 0, 5, 0x7a, esi + 0x19b1);
    L00437794(ebx + 0x770, 0, 0, 0, 0x384, 0x1c, 0x8c, 0x5a, 0xf, 0xb, 0, 0x21, 0x49, esi + 0x19b4);
    L00437794(ebx + 0x7b4, 5, 0, 9, 0x24, 0x1a, 20000, 0x10e, -159, 0, 0, 2, 0x77, esi + 0x19bd);
    L00437794(ebx + 0x7f8, 0xf, 214375, 2, 0x21, 0x1a, 31888, 0x78, -160, 0, 0, 3, 0x78, esi + 0x19c4);
    L00437794(ebx + 0x83c, 0xa, 74565, 7, 0x24, 0x1a, 56028, 0xa, -160, 0, 0, 3, 0x78, esi + 0x19cd);
    L00437794(ebx + 0x880, 56860, -6225629, 0x37, 0x19, 1, 42527914, 0xdc, -180, 2, 0x1d, 0xe, 0x86, esi + 0x19d6);
    L00437794(ebx + 0x8c4, 1, 0, 0x14, 0, 0x21, 0x15a7, 0xfa, -190, 2, 0, 2, 0x77, esi + 0x19dd);
    L00437794(ebx + 0x908, 1, 0, 4, 0, 0x21, 7092, 0x28, -190, 0, 0x32, 2, 0x77, esi + 0x19e3);
    L00437794(ebx + 0x94c, 1, 0, 0, 0, 0x21, 8792, 0x5a, -190, 0, 0, 2, 0x77, esi + 0x19ed);
    L00437794(ebx + 0x990, 1, 0, 2, 0, 0x21, 11235, 0x8c, -190, 0, 0x1e, 2, 0x77, esi + 0x19f4);
    L00437794(ebx + 0x9d4, 1, 0, 1, 0, 0x21, 15705, 0x154, -190, 0, 0x5a, 2, 0x77, esi + 0x19fa);
    L00437794(ebx + 0xa18, 0xe, 0, 0x1d, 0, 0x21, 36418, 0xc8, -168, 0, 0, 7, 0x7c, esi + 0x19ff);
    L00437794(ebx + 0xa5c, 0, 0, 0, 0x384, 0x27, 0x1f4, 0x46, 0xf, 0xb, 0, 0x21, 0x49, esi + 0x1a05);
    L00437794(ebx + 0xaa0, 0, 0, 0x68, 0x126, 0x21, 44137, 0x50, -191, 0, 0, 1, 0x75, esi + 0x1a10);
    L00437794(ebx + 0xae4, 1, 0, 0x1c, 0x6e, 0x21, 106126, 0x78, -191, 0, 0, 2, 0x77, esi + 0x1a19);
    L00437794(ebx + 0xb28, 8660, 2139099700, 0x2f, 8, 1, 85520744, 0x46, -210, 2, 0x62, 0xd, 0x87, esi + 0x1a21);
    L00437794(ebx + 0xb6c, 0, 0, 0x11, 0x3d4, 0x2b, 0xf22, 0x122, -215, 0, 0, 1, 0x75, esi + 0x1a28);
    L00437794(ebx + 0xbb0, 1, 0, 3, 0x3d4, 0x2b, 0x165a, 0x28, -215, 0, 0x5a, 2, 0x77, esi + 0x1a30);
    L00437794(ebx + 0xbf4, 1, 0, 4, 0x3d4, 0x2b, 7957, 0x64, -215, 0, 0x1e, 2, 0x77, esi + 0x1a36);
    L00437794(ebx + 0xc38, 1, 0, 2, 0x3d4, 0x2b, 13053, 0x96, -215, 0, 0x46, 2, 0x77, esi + 0x1a3e);
    L00437794(ebx + 0xc7c, 1, 0, 1, 0x3d4, 0x2b, 17464, 0x14, -215, 0, 0xa, 2, 0x77, esi + 0x1a46);
    L00437794(ebx + 0xcc0, 10300, 2101377178, 9, 0x12, 1, 134009123, 0x96, -220, 2, 0, 0xd, 0x87, esi + 0x1a4d);
    L00437794(ebx + 0xd04, 6, 144470, 0, 0x63f, 0x31, 10579, 0x136, -190, 0, 0, 4, 0x79, esi + 0x1a55);
    L00437794(ebx + 0xd48, 0, 0, 0x2ed, 0x110, 0x31, 165760, 0x3c, -226, 0, 0, 1, 0x75, esi + 0x1a5c);
    L00437794(ebx + 0xd8c, 1, 0, 0xfa, 0xac, 1, 175833702, 0xaa, -232, 0, 0, 2, 0x77, esi + 0x1a63);
    L00437794(ebx + 0xdd0, 1, 0, 0, 0x28a, 0x34, 0x236, 0x14, -232, 0, 0, 2, 0x77, esi + 0x1a69);
    *(ebx + 0xe14) = 0;
    *(ebx + 0xe58) = 0;
    *(ebx + 0xe9c) = 0;
    L00437794(ebx + 0xee0, 398000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x17, esi + 0x1a70);
    L00437794(ebx + 0xf24, 220000000, 0, 0, 0, 1, 52029761, 0, 0x170c, 0, 0, 0x16, 0x8d, esi + 0x1a83);
    L00437794(ebx + 0xf68, 178000000, 0, 0, 0, 1, 52029761, 0xb4, 0x1388, 0, 0, 0x15, 0x8c, esi + 0x1a94);
    L00437794(ebx + 0xfac, 180000, -1, 3, 2, 1, 104059522, 0x5a, -208, 1, 0x50, 0xf, 0x86, esi + 0x1aa5);
    L00437794(ebx + 0xff0, 6, 0, 3, 0x33a, 4, 20000, 0, -217, 0, 0, 2, 0x77, esi + 0x1aae);
    L00437794(ebx + 0x1034, 10000, 0, 0x57, 0x7d, 1, 900000000, 0, -245, 0, 0xaf, 0xd, 0x87, esi + 0x1ab6);
    L00437794(ebx + 0x1078, 1, 0, 0xb2, 0x2da, 6, 7722, 0, -253, 0, 0, 2, 0x77, esi + 0x1abf);
    L00437794(ebx + 0x10bc, 20000000, 0, 0x1c2, 0x320, 1, -1, 0, 0xce4, 2, 0x4b, 0x12, 0x8a, esi + 0x1ac9);
    L00437794(ebx + 0x1100, 0x1c8, 0, 0xa, 0x304, 8, 400000, 0, 3, 2, 0x3c, 8, 0x80, esi + 0x1ada);
    L00437794(ebx + 0x1144, 0, 0, 0, 0, 9, 0x12c, 0, 0xf, 0xc, 0, 0x20, 0x48, esi + 0x1adf);
    L00437794(ebx + 0x1188, 6, 0, 0x15e, 0x2f6, 8, 1000000, 0, -81, 1, 0xaa, 2, 0x77, esi + 0x1aec);
    *(ebx + 0x11cc) = 0;
    L00437794(ebx + 0x1210, 658000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x17, esi + 0x1af5);
    L00437794(ebx + 0x1254, 462000000, 0, 0, 0, 1, 45096918, 0, 9000, 2, 0, 0x18, 0x8f, esi + 0x1b06);
    L00437794(ebx + 0x1298, 196000000, 0, 0, 0, 1, 45096918, 0xb4, 11000, 0xd, 0, 0x19, 0x94, esi + 0x1b0d);
    L00437794(ebx + 0x12dc, 0x23, 0, 0xe, 0x186, 3, 222921, 0, 0x9a, 5, 0x78, 5, 0x7a, esi + 0x1b16);
    L004378A8(ebx + 0x1320, 0, -21194, 0x6f8, 4, 0x60, esi + 0x1b1e);
    L00437794(ebx + 0x1364, 210000, 0, 0x11b, 0x147, 1, 1560449450, 0, -250, 0, 0x5f, 0xf, 0x86, esi + 6958);
    *(ebx + 0x13a8) = 0;
    L00437794(ebx + 0x13ec, 172000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x17, esi + 6967);
    L00437794(ebx + 0x1430, 91200000, 0, 0, 0x3b6, 1, 33438150, 0, 0xd48, 1, 0, 0x14, 0x8a, esi + 6980);
    L00437794(ebx + 0x1474, 80800000, 0, 0, 0x3b6, 1, 33438150, 0xb4, 0xd16, 1, 0, 0x14, 0x8a, esi + 6991);
    L00437794(ebx + 0x14b8, 150500000, 1916032639, 0, 0, 1, 773532400, 0x64, 10700, 0xc, 0, 0x19, 0x94, esi + 7002);
    L00437794(ebx + 0x14fc, 980000, -19088744, 0x5a, 0x4b0, 4, 16780000, 0, 0x4b0, 3, 0xa, 0x11, 0x89, esi + 7019);
    L00437794(ebx + 0x1540, 0x26c, 344865, 0xe, 0x186, 5, 82921, 0, 0x18, 3, 0x8c, 0xa, 0x7e, esi + 7028);
    L004378A8(ebx + 0x1584, 0, -21194, 0x6f8, 6, 0x53, esi + 7037);
    L00437794(ebx + 0x15c8, 0, 0, 0, 0, 6, 0x1f4, 0, 0xf, 0xb, 0, 0x21, 0x49, esi + 7052);
    L00437794(ebx + 0x160c, 658000000, 0, 0, 0x454, 1, -1, 0x104, 0, 0, 0, 0, 0x17, esi + 7067);
    L00437794(ebx + 0x1650, 41500000, 0, 0, -1153, 9, 2897973, 0, 0xc80, 1, 0, 0x14, 0x8a, esi + 7080);
    L00437794(ebx + 0x1694, 41000000, 0, 0, -1153, 9, 2897973, 0xb4, 0xc4e, 1, 0, 0x14, 0x8a, esi + 7091);
    *(ebx + 0x16d8) = 0;
    L00437794(ebx + 0x171c, 218000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x17, esi + 7102);
    L00437794(ebx + 0x1760, 118000000, 0, 0, 0, 1, 172651540, 0, 0x1388, 1, 0, 0x15, 0x8c, esi + 7115);
    L00437794(ebx + 0x17a4, 100000000, 0, 0, 0, 1, 172651540, 0xb4, 0x1324, 1, 0, 0x15, 0x8c, esi + 7126);
    L00437794(ebx + 0x17e8, 0x276, 0, 0x53, 0xe4, 3, 2258547, 0, -5, 2, 0, 0xb, 0x7f, esi + 7137);
    L004378A8(ebx + 0x182c, 0, -21194, 0x6f8, 4, 0x55, esi + 7143);
    L00437794(ebx + 0x1870, 430000, 0, 0x11b, 0x27a, 1, 1966439450, 0, -250, 0, 0, 0, 0x17, esi + 7152);
    L00437794(ebx + 0x18b4, 230000, 0, 0, 0x645, 6, 3410696, 0, -260, 1, 0, 0xf, 0x86, esi + 7169);
    L00437794(ebx + 0x18f8, 200000, 0, 0, 0x645, 6, 3410696, 0xb4, -260, 1, 0, 0xf, 0x86, esi + 7184);
    L00437794(ebx + 0x193c, 0x23, 0, 0x54, 0x64c, 8, 12000, 0, -213, 2, 0, 5, 0x7a, esi + 7199);
    L00437794(ebx + 0x1980, 3, 0, 0x5c, 0x6c0, 6, 30696264, 0, -270, 1, 0, 2, 0x77, esi + 7215);
    *(ebx + 0x19c4) = 0;
    L00437794(ebx + 0x1a08, 201500000, 0, 0, 0, 0, 0, 0, 0x170c, 2, 0, 0x16, 0x8d, esi + 7233);
    L00437794(ebx + 0x1a4c, 0x26, 0, 0x102, 0x33e, 1, 1035554, 0, 0x1cc, 0, 0, 3, 0x78, esi + 7248);
    L00437794(ebx + 0x1a90, 504000, -821979019, 0, 0xa, 1, 0x503cbb, 0, 0xe, 1, 0x28, 0x10, 0x88, esi + 7253);
    L00437794(ebx + 0x1ad4, 0x40, 19578110, 0x68, 0x12, 3, 51949, 0, 0xf, 1, 0x18, 9, 0x7d, esi + 7261);
    L00437794(ebx + 0x1b18, 0, 0, 0, 0x72, 4, 0xb4, 0, 0xf, 0xa, 0, 0x22, 0x50, esi + 7274);
    L00437794(ebx + 7004, 0x262, 126043446, 0, 0xa, 1, 0x503cbb, 0x12c, 0x18, 1, 0x14, 0xa, 0x7e, esi + 7292);
    L004378A8(ebx + 7072, 0, -13168, 0xb34, 6, 0x54, esi + 7299);
    L004378A8(ebx + 7140, 0, -21194, 0x6f8, 6, 0x53, esi + 7309);
    L004378A8(ebx + 7208, 0, -24701, 0xfac, 6, 0x53, esi + 7320);
    L004378A8(ebx + 7276, 0, -41383, 0x285, 6, 0x52, esi + 7335);
    L004378A8(ebx + 7344, 0, -18631, 0xfcc, 6, 0x51, esi + 7346);
    L00437794(ebx + 7412, 0, 0, 0, 0x44c, 6, 0x274, 0x78, 0xf, 0xa, 0, 0x22, 0x50, esi + 7361);
    L00437794(ebx + 7480, 5, 1197364, 0x36, 0x33, 6, 0xd80, 0, -20, 0, 0, 2, 0x77, esi + 7373);
    L00437794(ebx + 7548, 0x1f9, 30398303, 0, 0xa, 1, 0x503cbb, 0x3c, 0xa, 1, 0xa0, 0xa, 0x7e, esi + 7382);
    L004378A8(ebx + 7616, 0, -14415, 0x7c1, 0xe, 0x54, esi + 7390);
    L004378A8(ebx + 7684, 0, -24701, 0xfac, 0xe, 0x53, esi + 7406);
    L00437794(ebx + 7752, 0, 0, 0, 0x9c4, 0xe, 0x274, 0x78, 0xf, 0xb, 0, 0x21, 0x49, esi + 7423);
    L00437794(ebx + 7820, 19000000, 0, 0x2d, 0x32, 1, 273656592, 0xc8, 0xc80, 2, 0x4b, 0x14, 0x8a, esi + 7439);
    L00437794(ebx + 7888, 9, 0, 0x15e, 0x2f6, 0x12, 1000000, 0, -81, 1, 0xaa, 3, 0x78, esi + 7456);
    L00437794(ebx + 7956, 9000, 2139099700, 0x37, 0xa, 1, 949644951, 0, -249, 2, 0x9e, 0xd, 0x87, esi + 7469);
    *(ebx + 8024) = 0;
    L00437794(ebx + 8092, 19500000, 0, 0x1c2, 0x320, 0, 0, 0, 0xc80, 0, 0x4b, 0x12, 0x8a, esi + 7486);
    L00437794(ebx + 8160, 0x28, 0, 9, 0x24, 1, 445842, 0, -51, 0, 0, 2, 0x77, esi + 7495);
    L00437794(ebx + 8228, 65600, -1925154561, 9, 0x1c, 1, 1486142, 0x9b, -20, 3, 0, 0xd, 0x87, esi + 7505);
    L00437794(ebx + 8296, 0x19, 0, 0x1a, 0x12c, 3, 0x1a47, 0x91, -4, 1, 0x3c, 0xa, 0x7f, esi + 7511);
    L004378A8(ebx + 8364, 0, 8517, 33494, 4, 0x55, esi + 7518);
    L00437794(ebx + 8432, 7, 0, 0x1a, 0xbe, 3, 8087, 0, -40, 1, 0x3c, 3, 0x78, esi + 7534);
    L00437794(ebx + 8500, 0x1d, 0, 0x92, 0x35, 1, 13063112, 0, -185, 1, 0xa, 3, 0x78, esi + 7541);
    *(ebx + 8568) = 0;
    L00437794(ebx + 8636, 118000000, 0, 0, 0, 0, 0, 0, 0x1388, 0, 0, 0x15, 0x8c, esi + 7552);
    L00437794(ebx + 8704, 0x256, 19666997, 0x26, 0, 1, 2258427, 0, 0xe, 1, 0, 0xa, 0x7e, esi + 7557);
    L00437794(ebx + 8772, 0, 0, 0, 0x9c4, 2, 0x274, 0x78, 0xf, 0xc, 0, 0x20, 0x48, esi + 7569);
    *(ebx + 8840) = 0;
    L00437794(ebx + 8908, 200000000, 0, 0, 0, 0, 0, 0, 0x1388, 0, 0, 0x16, 0x8d, esi + 7582);
    L00437794(ebx + 8976, 0x256, 19666997, 0x26, 0, 1, 0x489b9b, 0, -24, 1, 0x1e, 0xa, 0x7f, esi + 7587);
    L00437794(ebx + 9044, 0, 0, 0, 0x9c4, 2, 0x274, 0x78, 0xf, 0xc, 0, 0x20, 0x48, esi + 7598);
    *(ebx + 9112) = 0;
    L00437794(ebx + 9180, 20000000, 0, 0, 0, 0, 0, 0, 0x1388, 0, 0, 0x14, 0x8a, esi + 7610);
    L00437794(ebx + 9248, 0x256, 19666997, 0x26, 0, 1, 1558427, 0, 0x10, 1, 0x1e, 3, 0x78, esi + 7617);
    L00437794(ebx + 9316, 0, 0, 0, 0x9c4, 2, 0x274, 0x78, 0xf, 0xc, 0, 0x20, 0x48, esi + 7626);
    *(ebx + 9384) = 0;
    L00437794(ebx + 9452, 20000000, 0, 0, 0, 0, 0, 0, 0x1388, 0, 0, 0x17, 0x8e, esi + 7639);
    L00437794(ebx + 9520, 0x256, 19666997, 0x26, 0, 1, 1558427, 0, 0x10, 1, 0x1e, 3, 0x78, esi + 7646);
    L00437794(ebx + 9588, 0, 0, 0, 0x9c4, 2, 0x274, 0x78, 0xf, 0xc, 0, 0x20, 0x48, esi + 7655);
    *(ebx + 9656) = 0;
    L00437794(ebx + 9724, 200000000, 0, 0, 0, 0, 0, 0, 0x1388, 0, 0, 0x16, 0x8d, esi + 7668);
    L00437794(ebx + 9792, 0x256, 19666997, 0x26, 0, 1, 2258427, 0, 0x1d, 1, 0x1e, 0xa, 0x7e, esi + 7677);
    L00437794(ebx + 9860, 0, 0, 0, 0x9c4, 2, 0x274, 0x78, 0xf, 0xb, 0, 0x21, 0x49, esi + 7686);
    *(ebx + 9928) = 0;
    return 0;
}

/*    Procedure: 0x004395AC - 0x004395C5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004395AC()
{



    if(M004ec6f4 != 0) {
        L0043798C();
        eax = 0;
        M004ec6f4 = 0;
    }
}

/*    Procedure: 0x004395C6 - 0x004395C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004395C6()
{



}

/*    Procedure: 0x004395C8 - 0x0043980B
 *    Argument size: 36
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L0043980C()
 *        L0043B6B4()
 */

L004395C8(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = A14;
    esi = A8;
    if(edi >= -17 || edi >= 170000000 && edi < 175000000) {
        eax = A24;
        L0043A374(esi, Ac, edi, A10, A18, A1c, eax, A28, & Vfffffffc, & Vfffffff8, & Vfffffff4);
        eax = A24;
        eax = L0043A374(esi, Ac, edi >> 2, *Ac, A18, A20, eax, A28, & Vfffffffc, & Vfffffff8, & Vfffffff4);
        return A20 << 3;
    }
    L0043B628();
    ax = (M00644c3c | 32768) & -1;
    eax = ax >> 2 & 65535;
    edx = edi >> 0x10;
    asm("imul edx");
    Vffffffec = eax;
    eax = Vffffffec > 17000000 ? Vffffffec : 17000000;
    Vffffffec = eax;
    eax = Vffffffec + edi;
    L0043A5F4(esi, *Ac, A10, A18, A1c, eax);
    eax = *Ac;
    edx = eax;
    *(esi + ((eax << 4) + edx) * 4 + 0xa) = 0;
    eax = *Ac;
    edx = eax;
    *(esi + ((eax << 4) + edx) * 4 + 0xc) = 0x17;
    Vfffffff0 = *Ac;
    eax = *Ac;
    edx = eax;
    eax = ((eax << 4) + edx << 2) + esi + 0x26;
    (save)esi;
    (save)edi;
    esi = eax;
    edi = A24;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)edi;
    (restore)esi;
    eax = *Ac;
    edx = eax;
    eax = L00471288(((eax << 4) + edx << 2) + esi + 0x26);
    Vffffffe8 = eax;
    if(Vffffffe8 > 0xb) {
        Vffffffe8 = 0xb;
        eax = *Ac;
        edx = eax;
        eax = ((eax << 4) + edx << 2) + esi + Vffffffe8 + 0x26;
        *eax = 0x2e;
        eax = eax + 1;
    } else {
        eax = *Ac;
        edx = eax;
        eax = ((eax << 4) + edx << 2) + esi + Vffffffe8 + 0x26;
        *eax = 0x20;
        eax = eax + 1;
    }
    *eax = M00644c4d + 0x41;
    eax = eax + 1;
    *eax = 0x2c;
    eax = eax + 1;
    *eax = M00644c4d + 0x42;
    *(eax + 1) = 0;
    *Ac = *Ac + 1;
    eax = A24;
    L0043A374(esi, Ac, edi, Vfffffff0 + 1, A18, A20, eax, A28, & Vfffffffc, & Vfffffff8, & Vfffffff4);
    eax = *Ac;
    edx = eax;
    *(esi + ((eax << 4) + edx) * 4 - 0x32) = 0;
    eax = A24;
    L0043A374(esi, Ac, Vffffffec, Vfffffff0 + 1, A18, A20, eax, A28, & Vfffffffc, & Vfffffff8, & Vfffffff4);
    eax = *Ac;
    edx = eax;
    eax = (eax << 4) + edx;
    *(esi + eax * 4 - 0x32) = 32767;
    return A20 << 3;
}

/*    Procedure: 0x0043980C - 0x00439D74
 *    Argument size: 8
 *    Local size: 92
 *    Save regs size: 12
 *    Called by:
 *        L00424D2C()
 *        L00435860()
 *        L0043BCCC()
 *        L0043EEA8()
 */

L0043980C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffa4;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc6;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd3;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffe;



    ebx = Ac;
    esi = A8;
    edi = & Vfffffff8;
    Vfffffff0 = 0;
    Vffffffec = 0;
    Vffffffe8 = 0;
    Vfffffff4 = & Vffffffa4;
    M00644c44 = ebx + 0x14;
    M00644c52 = *(ebx + 4);
    M00644c56 = *(ebx + 0xc);
    M00644c5a = *(ebx + 0x10);
    M00644c4e = 0;
    M00644c5e = 0;
    M00644c5f = 0;
    M00644c48 = 0;
    M00644c4c = 0;
    M00644c4d = 0;
    *edi = 0;
    L004376B0(M00644c56, & Vffffffe4, & Vffffffe0, & Vffffffdc, 0x4ebffc, & Vffffffd8, & Vffffffd4);
    eax = *ebx;
    if(eax != 0) {
        edx = *(ebx + 4);
        Vffffffd0 = edx;
        M00644c3c = eax;
        M00644c40 = Vffffffd0;
        al = *(ebx + 8);
        M00644c4f = al;
        M00644c50 = M00644c4f;
        if(!(eax = *(ebx + 8) - 1)) {
            == ? L00439963 : ;
            goto L004399f4;
        }
        eax = L0043A374(esi, edi, Vffffffd0, 0, 0, 0, ebx + 0x14, Vfffffff4, & Vfffffff0, & Vffffffec, & Vffffffe8);
        Vfffffffe = ax;
        if(Vfffffffe != 0) {
            Vffffffcc = Vffffffd0;
            edx = Vffffffcc;
            L0043B6B4(esi, edi, 1, L0043B628(), Vfffffffe, edx, Vffffffd0 >> 8, ebx + 0x14, Vfffffff4, Vfffffff0, 0, 0);
            eax = *edi;
            edx = eax;
            eax = (eax << 4) + edx;
            *(esi + eax * 4) = 0;
            goto L00439d6e;
            M00644c50 = M00644c50 - 1;
            L0043B628();
            eax = (M00644c40 & 65535) >> 3;
            edx = !(Vffffffd3 & 0xe0) ? edx | -1 : Vffffffd0 << 3;
            Vffffffc8 = edx;
            L004395C8(esi, edi, 0, Vffffffd0, Vffffffc8, 0, eax, ebx + 0x14, Vfffffff4);
            Vfffffffe = ax;
            eax = Vffffffc8;
            L0043B6B4(esi, edi, 1, L0043B628(), Vfffffffe, eax, Vffffffd0 >> 6, ebx + 0x14, Vfffffff4, Vfffffff0, 0, 0);
            eax = *edi;
            edx = eax;
            eax = (eax << 4) + edx;
            *(esi + eax * 4) = 0;
            goto L00439d6e;
L004399f4:
            L0043B628();
            Vffffffc6 = (M00644c40 & 65535) >> 8;
            eax = ebx + 0x14;
            eax = L004395C8(esi, edi, 0, Vffffffd0, -1, 0, Vffffffc6, eax, Vfffffff4);
            Vfffffffe = Vffffffc6 << 4;
            M00644c50 = M00644c50 - 1;
            Vffffffd0 = Vffffffd0 + 136000000;
            if(M00644c50 > 2) {
                Vffffffd0 = -1;
            }
            L0043B628();
            eax = (ax | 32768) >> 2;
            edx = Vffffffd0;
            L0043B6B4(esi, edi, 1, eax, Vfffffffe, -1, edx, ebx + 0x14, Vfffffff4, Vfffffff0, 0, 0);
            eax = *edi;
            edx = eax;
            eax = (eax << 4) + edx;
            *(esi + eax * 4) = 0;
        }
    } else {
        edx = 0x8f;
        ebx = 0x4ec540;
        goto L00439ab6;
L00439aae:
        edx = *(ebx + 4);
        goto L00439abc;
L00439ab6:
        while(1) {
            eax = *ebx;
            if(eax == 0) {
                break;
            }
            if(eax == M00644c56) {
                goto L00439aae;
            }
            ebx = ebx + 8;
        }
L00439abc:
        Vffffffc0 = edx;
        eax = Vffffffc0;
        edx = eax;
        for(ebx = ((eax << 4) + edx) * 4 + 6519616; *ebx != 0; ebx = ebx + 0x44) {
            if(*(ebx + 0xa) == 0x23) {
                eax = Vffffffc0;
                edx = eax;
                eax = *edi;
                edx = eax;
                L00471128(((eax << 4) + edx << 2) + esi, ((eax << 4) + edx << 2) + 6519616, 0x44);
                M00644c5e = M00644c5e + 1;
            } else {
                eax = *L005016c8( *ebx - 1);
                edx = *edi;
                ecx = edx;
                *(esi + ((edx << 4) + ecx) * 4) = eax;
                eax = *edi;
                edx = eax;
                *(esi + ((eax << 4) + edx) * 4 + 2) = *(esi + ((eax << 4) + edx) * 4 + 2) + 0x3f;
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 4) = *(ebx + 4);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 8) = *(ebx + 8);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0xa) = *(ebx + 0xa);
                eax = *L005016c8( *(ebx + 0xe));
                edx = *edi;
                ecx = edx;
                *(esi + ((edx << 4) + ecx) * 4 + 0xe) = eax;
                eax = *edi;
                edx = eax;
                *(esi + ((eax << 4) + edx) * 4 + 0x10) = *(esi + ((eax << 4) + edx) * 4 + 0x10) + 0x19;
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x12) = *(ebx + 0x12);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x20) = *(ebx + 0x20);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x22) = *(ebx + 0x22);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x24) = *(ebx + 0x24);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x3a) = *(ebx + 0x3a);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x3c) = *(ebx + 0x3c);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x3e) = *(ebx + 0x3e);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0x42) = *(ebx + 0x42);
                eax = *edi;
                edx = eax;
                eax = (eax << 4) + edx;
                *(esi + eax * 4 + 0xc) = *(ebx + 0xc);
                M00644c4c = M00644c4c + 1;
                ax = *(ebx + 0xa);
                if(ax >= 0x20 && ax <= 0x22) {
                    M00644c5e = M00644c5e + 1;
                    M00644c5f = M00644c5f + 1;
                }
                eax = *edi;
                edx = eax;
                if(*(esi + ((eax << 4) + edx) * 4 + 8) == 0) {
                    eax = *edi;
                    edx = eax;
                    eax = (eax << 4) + edx;
                    *(esi + eax * 4 + 0x14) = 0;
                } else {
                    eax = *edi;
                    edx = eax;
                    Vffffffbc = *(esi + ((eax << 4) + edx) * 4 + 0xe);
                    eax = *edi;
                    edx = eax;
                    eax = *(esi + ((eax << 4) + edx) * 4 + 8) & 65535;
                    edx = eax;
                    Vffffffb8 = *(esi + ((eax << 4) + edx) * 4 - 0x44);
                    edx = *edi;
                    ecx = edx;
                    *(esi + ((edx << 4) + ecx) * 4 + 0x14) = *L0050169c( *L005016a0(L00452919(L00452919(Vffffffbc, Vffffffbc), Vffffffbc), Vffffffb8));
                    eax = *edi;
                    edx = eax;
                    eax = (eax << 4) + edx;
                    *(esi + eax * 4 + 0x14) = *(esi + eax * 4 + 0x14) * 24283 >> 0xf;
                }
                eax = Vffffffc0;
                edx = eax;
                eax = ((eax << 4) + edx << 2) + 6519654;
                edx = *edi;
                ecx = edx;
                edx = ((edx << 4) + ecx << 2) + esi + 0x26;
                (save)esi;
                (save)edi;
                edi = eax;
                esi = edx;
                eax = 0;
                ecx = ecx | -1;
                asm("repne scasb");
                ecx = !ecx;
                edi = edi - ecx;
                asm("xchg esi,edi");
                eax = edi;
                edx = ecx;
                ecx = ecx >> 2;
                asm("rep movsd");
                ecx = edx & 3;
                asm("rep movsb");
                (restore)edi;
                (restore)esi;
            }
            *edi = *edi + 1;
            Vffffffc0 = Vffffffc0 + 1;
        }
        eax = *edi;
        edx = eax;
        eax = (eax << 4) + edx;
        *(esi + eax * 4) = 0;
    }
L00439d6e:
}

/*    Procedure: 0x00439D75 - 0x00439D77
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00439D75()
{



}

/*    Procedure: 0x00439D78 - 0x00439FB8
 *    Argument size: 16
 *    Local size: 56
 *    Save regs size: 12
 *    Called by:
 *        L0041F8F4()
 *        L00439FBC()
 */

L00439D78(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = A8;
    Vfffffffc = *L00501b94( *(edi + 0x56) & 0xff, A14);
    ebx = *L00501b9c( *(Vfffffffc + 0x82));
    L0045AF4C(edi, Ac, A10);
    eax = *(edi + 0xc);
    Vffffffe0 = eax;
    Vffffffe4 = Vffffffe0 >> 0x1f;
    eax = *(edi + 0x10);
    Vffffffe8 = eax;
    Vffffffec = Vffffffe8 >> 0x1f;
    eax = *(edi + 0x14);
    Vfffffff0 = eax;
    Vfffffff4 = Vfffffff0 >> 0x1f;
    esi = *(ebx + 0x2c) - 1;
    L0044EBDD( & Vffffffc8, Vffffffe0, Vffffffe4, esi);
    L0044EBDD( & Vffffffd0, Vffffffe8, Vffffffec, esi);
    L0044EBDD( & Vffffffd8, Vfffffff0, Vfffffff4, esi);
    ebx = *(ebx + 0x14) + *(ebx + 0x18) - 8;
    L0044EC90( & Vffffffc8, ebx - 0x1f);
    L0044EC90( & Vffffffd0, ebx - 0x1f);
    L0044EC90( & Vffffffd8, ebx - 0x1f);
    L00427824( & Vfffffff8, & Vffffffc8, edi, Vfffffffc);
    Vfffffff8 = Vfffffff8 - (Vfffffff8 >> 4);
    if(ebx < 0) {
        ecx = ~ebx;
        esi = esi - (Vfffffff8 << cl);
    } else {
        if(ebx < 0x10) {
            esi = (esi << ebx) - Vfffffff8;
            ebx = 0;
        } else {
            ebx = ebx - 0x10;
            ecx = ebx;
            eax = Vfffffff8 >> cl;
            esi = (esi << 0x10) - eax;
        }
    }
    L0044EBDD( & Vffffffc8, Vffffffe0, Vffffffe4, esi);
    L0044EBDD( & Vffffffd0, Vffffffe8, Vffffffec, esi);
    L0044EBDD( & Vffffffd8, Vfffffff0, Vfffffff4, esi);
    L0044EC90( & Vffffffc8, ebx - 0x1f);
    L0044EC90( & Vffffffd0, ebx - 0x1f);
    L0044EC90( & Vffffffd8, ebx - 0x1f);
    L00427824( & Vfffffff8, & Vffffffc8, edi, Vfffffffc);
    if(ebx < 0) {
        ecx = ~ebx;
        esi = esi - (Vfffffff8 << cl);
    } else {
        ecx = ebx;
        esi = esi - (Vfffffff8 >> cl);
    }
    L0044EBDD( & Vffffffc8, Vffffffe0, Vffffffe4, esi);
    L0044EBDD( & Vffffffd0, Vffffffe8, Vffffffec, esi);
    L0044EBDD( & Vffffffd8, Vfffffff0, Vfffffff4, esi);
    esi = ebx - 0x1f;
    L0044EC90( & Vffffffc8, esi);
    L0044EC90( & Vffffffd0, esi);
    eax = L0044EC90( & Vffffffd8, esi);
    (save)edi;
    esi = & Vffffffc8;
    edi = edi + 0x3e;
    ecx = 6;
    asm("rep movsd");
    (restore)edi;
}

/*    Procedure: 0x00439FB9 - 0x00439FBB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00439FB9()
{



}

/*    Procedure: 0x00439FBC - 0x0043A371
 *    Argument size: 16
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0043BCCC()
 *        L0043EEA8()
 */

L00439FBC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    edi = Ac;
    eax = 0;
    Vfffffff8 = 0;
    for(ebx = edi; *ebx != 0; ebx = ebx + 0x44) {
        if(*(ebx + 8) == 0) {
            esi = 0x4ec5a0;
        } else {
            eax = *(ebx + 8) & 65535;
            edx = eax;
            esi = *(edi + ((eax << 4) + edx) * 4 - 0x2c);
        }
        eax = *L004eecb4(A8, esi, 0x1d, *(ebx + 0xc) & 65535, & Vfffffff4);
        esi = eax;
        if(eax == 0) {
            break;
        }
        *(ebx + 0x18) = esi;
        *(esi + 0xa0) = *(ebx + 4);
        *(esi + 0xc8) = *(ebx + 0x3e);
        *(esi + 0xcb) = *(ebx + 0x3f);
        *(esi + 0xe0) = *(ebx + 0x24);
        *(esi + 0xcc) = *(ebx + 0x42);
        Vfffffffc = 16514;
        Vfffffffe = 65493;
        *(esi + 0xa4) = *L00501664(L00452919( *ebx, Vfffffffc));
        Vfffffffc = *(esi + 0xa4);
        if(*(ebx + 0xa) == 0) {
            eax = *(esi + 0x86) & 0xff;
            *(M00501ba8 + eax) = 0x11;
            Vfffffffe = Vfffffffe + 0x10;
        }
        ax = *(ebx + 8);
        if(ax != 0) {
            edx = ax & 65535;
            ecx = edx;
            if(*(edi + ((edx << 4) + ecx) * 4 - 0x3a) == 0 && (ax & 65535) + 1 >= Vfffffff8) {
                Vfffffffe = Vfffffffe - 0xa;
            }
        }
        *(esi + 0xda) = Vfffffffe;
        *(esi + 0xb0) = *(ebx + 0xe);
        *(esi + 0x87) = 1;
        if(*(ebx + 0xa) >= 0x20) {
            *(esi + 0xda) = *(esi + 0xda) + 4;
            *(esi + 0x14c) = *(esi + 0x14c) | 0x10;
            *(esi + 0xce) = 3;
            eax = *(esi + 0x86) & 0xff;
            *(M00501ba8 + eax) = 0x1f;
            if(*(ebx + 0xa) == 0x22) {
                *(esi + 0xce) = 7;
            }
            *(esi + 0xca) = 0;
            *(esi + 0xc9) = 0;
            *(esi + 0xd8) = 0;
            *(esi + 0xdc) = ( *(esi + 0xce) << 3) + 8;
            if(*(ebx + 0xa) == 0x23) {
                eax = *(ebx + 8) & 65535;
                edx = eax;
                eax = *(edi + ((eax << 4) + edx) * 4 - 0x2c);
                *(esi + 0x56) = *(eax + 0x86);
                *(esi + 0x14c) = *(esi + 0x14c) | 0x20;
                ax = *(ebx + 0xc);
                if(ax >= 0x51 && ax <= 0x5a) {
                    *(esi + 0x14c) = *(esi + 0x14c) | 0x40;
                }
                ax = *(ebx + 0xc);
                if(ax != 0x51 && ax != 0x52) {
                    *(esi + 0xce) = 5;
                }
                if(*(ebx + 0xc) == 0x55) {
                    *(esi + 0xce) = 1;
                }
                if(*(ebx + 0xc) == 0x56) {
                    *(esi + 0xce) = 1;
                }
                if(*(ebx + 0xc) == 0x59) {
                    *(esi + 0xce) = 1;
                }
                *(esi + 0xdc) = ( *(esi + 0xce) << 3) + 8;
                eax = *(esi + 0x86) & 0xff;
                *(M00501ba8 + eax) = 0xf;
                *(esi + 0x57) = 1;
                *(esi + 0x58) = M00644bb2 - 1;
                *(esi + 0xc2) = 0;
                L00439D78(esi, *(ebx + 0x12) & 65535, *(ebx + 0x22) & 65535, A8);
            }
        }
        if(*(ebx + 0xa) != 0x23) {
            ax = *(ebx + 8);
            if(ax != 0) {
                eax = ax & 65535;
                edx = eax;
                *(esi + 0x56) = *( *(edi + ((eax << 4) + edx) * 4 - 0x2c) + 0x86);
            }
            Vfffffffc = 21600;
            Vfffffffe = 65518;
            Vfffffff0 = *L005016a0(Vfffffffc, *L00501664( *(ebx + 0x14)));
            Vfffffff2 = Vfffffff2 + 0x40;
            *(esi + 0xc2) = *L005016b8(Vfffffff0);
            *(esi + 0xa8) = A10;
            *(esi + 0xac) = A14;
            *L005016e8(esi + 0xba, *(esi + 0xc2), 0, 0, A10, A14);
            *(esi + 0xbe) = *(esi + 0xbe) + (( *(ebx + 0x12) & 65535) << 0x10);
            ax = *(ebx + 0x22);
            *(esi + 0xc6) = ax;
            *L005016e0(esi, *(esi + 0xb0), ax, *(esi + 0xbe));
            eax = *(esi + 0xc8);
            ecx = 0x11 - eax;
            L0045AFF0(esi, *(esi + 0xcc), A10 >> cl);
        }
        esi = esi + 0x124;
        eax = Vfffffff8;
        edx = eax;
        (save)esi;
        (save)edi;
        edi = ((eax << 4) + edx << 2) + edi + 0x26;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)edi;
        (restore)esi;
        Vfffffff8 = Vfffffff8 + 1;
    }
}

/*    Procedure: 0x0043A372 - 0x0043A373
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043A372()
{



}

/*    Procedure: 0x0043A374 - 0x0043A5F2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004395C8()
 *        L0043980C()
 *        L0043B6B4()
 */

L0043A374()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 8);
    eax = *( *(ebp + 0xc));
    esi = eax;
    if(eax >= 0x3c) {
        ax = 65535;
    } else {
        M00644c4c = M00644c4c + 1;
        edx = 0;
        for(eax = 0x4ebe24; 1; eax = eax + 4) {
            ecx = *eax;
            if(ecx == 0 || ecx > *(ebp + 0x10)) {
                break;
            }
            edx = edx + 1;
        }
        ecx = *(edx * 4 + 0x4ebf3c);
        eax = (esi << 4) + esi;
        *(ebx + eax * 4 + 0x1c) = ecx;
        *(ebx + eax * 4 + 0xa) = *(edx * 4 + 0x4ebd6c);
        *(ebx + eax * 4 + 0x24) = *(edx * 4 + 0x4ebee0);
        *(ebx + eax * 4 + 0xc) = *(edx * 4 + 0x4ebdc8);
        *(ebp - 2) = *(edx * 4 + 0x4ebe84);
        *(ebp - 8) = *(edx * 4 + 0x4ebf98);
        if(*(ebp + 0x10) >= 17000000) {
            edi = ((esi << 4) + esi << 2) + ebx + 0x26;
            eax = *(ebp + 0x20);
            (save)esi;
            (save)edi;
            esi = edi;
            edi = eax;
            eax = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            eax = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
            (restore)edi;
            (restore)esi;
            L004711C8(edi, " ");
            M00644c4d = M00644c4d + 1;
            eax = L00471288(edi);
            eax = eax + ((esi << 4) + esi << 2) + ebx + 0x26;
            if(*(ebp + 0x14) != 0) {
                *eax = M00644c4d + 0x40;
                eax = eax + 1;
            }
            *eax = 0;
        } else {
            if(*(ebp + 0x14) != 0) {
                eax = *(ebp + 0x14);
                edx = eax;
                if(*(ebx + ((eax << 4) + edx) * 4 - 5) & 0x80) {
                    goto L0043a4c5;
                }
                eax = (esi << 4) + esi;
                *(ebx + eax * 4 + 4) = M00644c40;
                L0043B570(ebx, esi, 0xa, *(ebp + 0x24));
            } else {
L0043a4c5:
                edi = ((esi << 4) + esi << 2) + ebx + 0x26;
                eax = *(ebp + 0x14) - 1;
                edx = eax;
                eax = ((eax << 4) + edx << 2) + ebx + 0x26;
                (save)esi;
                (save)edi;
                esi = edi;
                edi = eax;
                eax = 0;
                ecx = ecx | -1;
                asm("repne scasb");
                ecx = !ecx;
                edi = edi - ecx;
                asm("xchg esi,edi");
                eax = edi;
                edx = ecx;
                ecx = ecx >> 2;
                asm("rep movsd");
                ecx = edx & 3;
                asm("rep movsb");
                (restore)edi;
                (restore)esi;
                L004711C8(edi, " ");
                if(M00644c4e == 0) {
                    eax = L00471288(edi);
                    eax = eax + ((esi << 4) + esi << 2) + ebx + 0x25;
                    *( *(ebp + 0x28)) = *( *(ebp + 0x28)) + 1;
                    if(*( *(ebp + 0x28)) > 9) {
                        *eax = 0x31;
                        eax = eax + 1;
                        *eax = *( *(ebp + 0x28)) + 0x26;
                        eax = eax + 1;
                    } else {
                        *eax = *( *(ebp + 0x28)) + 0x30;
                        eax = eax + 1;
                    }
                    *eax = 0;
                } else {
                    edi = ((esi << 4) + esi << 2) + ebx;
                    eax = L00471288(edi + 0x26) + edi + 0x25;
                    if(M00644c4e == 1) {
                        *( *(ebp + 0x2c)) = *( *(ebp + 0x2c)) + 1;
                        *eax = *( *(ebp + 0x2c)) + 0x60;
                    } else {
                        *( *(ebp + 0x30)) = *( *(ebp + 0x30)) + 1;
                        *eax = *( *(ebp + 0x30)) + 0x30;
                    }
                }
            }
        }
        eax = *(ebp + 0x10);
        L0043A5F4(ebx, esi, *(ebp + 0x14), *(ebp + 0x18), *(ebp + 0x1c), eax);
        if(*(ebp - 8) != 0) {
            *(ebp - 8)(ebx, *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x24));
        }
        eax = *(ebp + 0xc);
        *eax = *eax + 1;
        ax = *(ebp - 2);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0043A5F3 - 0x0043A5F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043A5F3()
{



}

/*    Procedure: 0x0043A5F4 - 0x0043A880
 *    Argument size: 24
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L004395C8()
 *        L0043A374()
 */

L0043A5F4(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vffffffee;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    edi = (Ac << 4) + Ac;
    *(A8 + edi * 4 + 0xe) = *L005016f8(A14, A18 & 65535);
    if(*(A8 + ((Ac << 4) + Ac) * 4 + 0xe) != 0) {
        *(A8 + edi * 4 + 0xe) = *L005016c8( *(A8 + ((Ac << 4) + Ac) * 4 + 0xe));
        *(A8 + edi * 4 + 0x10) = *(A8 + edi * 4 + 0x10) + 0x19;
        if(A10 != 0) {
            Vfffffffc = *(A8 + edi * 4 + 0xe);
            eax = A10;
            edx = eax;
            eax = (eax << 4) + edx;
            if(*(A8 + eax * 4 - 0x3a) == 0 && Ac - 1 <= A10) {
                Vfffffffe = Vfffffffe + 1;
            }
            Vfffffff8 = *(A8 + eax * 4 - 0x44);
            edi = (Ac << 4) + Ac;
            *(A8 + edi * 4 + 0x14) = *L0050169c( *L005016a0(L00452919(L00452919(Vfffffffc, Vfffffffc), Vfffffffc), Vfffffff8));
            *(A8 + edi * 4 + 0x14) = *(A8 + edi * 4 + 0x14) * 24283 >> 0xf;
        } else {
            eax = (Ac << 4) + Ac;
            *(A8 + eax * 4 + 0x14) = 0;
        }
        eax = (Ac << 4) + Ac;
        *(A8 + eax * 4 + 0x12) = M00644c3c;
    }
    edi = (Ac << 4) + Ac;
    *(A8 + edi * 4 + 4) = M00644c40;
    M00644c48 = M00644c48 + 1;
    *(A8 + edi * 4 + 8) = A10;
    *(A8 + edi * 4) = *L005016c8(A1c);
    *(A8 + edi * 4 + 2) = *(A8 + edi * 4 + 2) + 0x3f;
    eax = M00644c3c & 65535;
    edx = eax;
    edx = eax * eax;
    *(A8 + edi * 4 + 0x20) = (dx & 65535) >> 0x18;
    edx = (ax & 65535) >> 3;
    eax = M00644c3c << 0xd;
    eax = dx | ax;
    edx = ax & 65535;
    *(A8 + edi * 4 + 0x22) = (ax & 65535) * (ax & 65535) >> 0x14;
    if(A10 != 0) {
        eax = A10;
        edx = eax;
        ax = *(A8 + ((eax << 4) + edx) * 4 - 2);
        *(A8 + edi * 4 + 0x22) = *(A8 + edi * 4 + 0x22) + ax;
    }
    eax = *(A8 + edi * 4 + 4);
    edx = (Ac << 4) + Ac;
    asm("imul dword [ebx+edx*4+0x4]");
    *(A8 + edi * 4 + 0x42) = ax >> 0x11;
    *(A8 + edi * 4 + 0x3e) = *(A8 + edi * 4 + 0x42) & 3;
    *(A8 + edi * 4 + 0x3f) = M00644c4e;
    if(*(A8 + edi * 4 + 0x24) < 0x3e8) {
        edi = Ac;
        for(Vfffffff0 = 0; 1; edi = Vfffffff4) {
            ax = *(A8 + ((edi << 4) + edi) * 4 + 8);
            if(ax == 0) {
                break;
            }
            edx = (edi << 4) + edi;
            Vfffffff4 = (ax & 65535) - 1;
            eax = Vfffffff4;
            edx = eax;
            if(*(A8 + ((eax << 4) + edx) * 4 + 0x1c) != 0) {
                eax = Vfffffff4;
                edx = eax;
                Vffffffec = *L005016c8( *(A8 + ((eax << 4) + edx) * 4 + 0x1c));
                Vffffffee = Vffffffee + 0x32;
                Vffffffec = *L005016a0(Vffffffec, *(A8 + ((edi << 4) + edi) * 4 + 0xe));
                Vfffffff0 = *L005016c4(Vfffffff0, L00452919(Vffffffec, Vffffffec));
            }
        }
        edi = M0050169c;
        eax = *L005016ac( *edi( *edi(Vfffffff0)));
        *(A8 + ((Ac << 4) + Ac) * 4 + 0x24) = *(A8 + ((Ac << 4) + Ac) * 4 + 0x24) + ax;
    }
}

/*    Procedure: 0x0043A881 - 0x0043AD3D
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 */

L0043A881(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    eax = A10;
    edx = *Ac;
    *(ebp - 4) = edx;
    ecx = edx;
    if(*(A8 + ((edx << 4) + ecx) * 4 + 0x24) > 0x139) {
        edx = *Ac;
        ecx = edx;
        *(A8 + ((edx << 4) + ecx) * 4 + 0xc) = 0x7b;
        edx = *Ac;
        ecx = edx;
        *(A8 + ((edx << 4) + ecx) * 4 + 0xa) = 0xc;
        eax = eax >> 1;
        edx = *Ac;
        ecx = edx;
        *(A8 + ((edx << 4) + ecx) * 4 + 0x24) = *(A8 + ((edx << 4) + ecx) * 4 + 0x24) + ax;
    } else {
        edx = *Ac;
        ecx = edx;
        dx = *(A8 + ((edx << 4) + ecx) * 4 + 0x24);
        if(dx > 0xd7) {
            goto L0043aae5;
        }
        ecx = *Ac * 0x11;
        if(dx < 0xaa) {
            goto L0043aa83;
        }
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0x24) = *(A8 + ((eax << 4) + edx) * 4 + 0x24) + 0x19;
        if(M00644c5a >= 0xc8) {
            goto L0043a9e4;
        }
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x7b;
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0xa) = 6;
        eax = M00644c56;
        if(eax == 447256376 || eax == 44963608) {
            goto L0043a965;
        }
        if(eax == 246847293) {
L0043a965:
            eax = *Ac;
            edx = eax;
            eax = (eax << 4) + edx;
            *(A8 + eax * 4 + 0xc) = 0x85;
            if(M00644c56 == 44963608) {
                eax = *Ac;
                edx = eax;
                eax = (eax << 4) + edx;
                if(*(A8 + eax * 4 + 4) == 1533014672) {
                    eax = L0043B2D8(A8, Ac, 3, A14, *(ebp - 4) + 1);
                }
            }
            if(M00644c56 == 246847293) {
                eax = *Ac;
                edx = eax;
                eax = (eax << 4) + edx;
                if(*(A8 + eax * 4 + 4) == 1886650768) {
                    eax = L0043B2D8(A8, Ac, 4, A14, *(ebp - 4) + 1);
                    goto L0043ad38;
L0043a9e4:
                    eax = *Ac;
                    edx = eax;
                    eax = (eax << 4) + edx;
                    if(*(A8 + eax * 4 + 0x24) < 0x127) {
                        *(A8 + eax * 4 + 0x24) = 0x127;
                    }
                    eax = *Ac;
                    edx = eax;
                    *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x7e;
                    eax = *Ac;
                    edx = eax;
                    *(A8 + ((eax << 4) + edx) * 4 + 0xa) = 0xb;
                    L0043B570(A8, *Ac, 8, A14);
                    L0043B150(A8, Ac, 0, M00644c5a >> 5, A14);
                    eax = M00644c5a;
                    if(eax >= 0x1e) {
                        (save) *(ebp - 4) + 1;
                        (save)A14;
                        if(eax >= 0xf2) {
                            eax = 2;
                        } else {
                            eax = 1;
                            if(M00644c5a < 0x32) {
                                eax = 0;
                            }
                        }
                        (save)eax;
                        (save)Ac;
                        (save)A8;
                        eax = L0043B2D8();
                        esp = esp + 0x14;
                        goto L0043ad38;
L0043aa83:
                        edx = *Ac;
                        ecx = edx;
                        dx = *(A8 + ((edx << 4) + ecx) * 4 + 0x24);
                        if(dx <= 0x7b) {
                            ecx = *Ac * 0x11;
                            if(dx < 0x42) {
                                goto L0043aad4;
                            }
                            eax = *Ac;
                            edx = eax;
                            *(A8 + ((eax << 4) + edx) * 4 + 0x24) = *(A8 + ((eax << 4) + edx) * 4 + 0x24) + 0x16;
                            eax = *Ac;
                            edx = eax;
                            *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x7c;
                            eax = *Ac;
                            edx = eax;
                            eax = (eax << 4) + edx;
                            *(A8 + eax * 4 + 0xa) = 7;
                        } else {
L0043aad4:
                            eax = L0043AD40(A8, Ac, eax, A14);
                            goto L0043ad38;
L0043aae5:
                            eax = *Ac;
                            edx = eax;
                            *(A8 + ((eax << 4) + edx) * 4 + 0x24) = *(A8 + ((eax << 4) + edx) * 4 + 0x24) + 0x23;
                            L0043B628();
                            eax = *Ac;
                            ecx = eax;
                            eax = (eax << 4) + ecx;
                            if((M00644c3c & 0xff) >> 2 <= ( *(A8 + eax * 4 + 0x24) & 65535) + -250) {
                                goto L0043abe8;
                            }
                            if(M00644c5a < 0x78) {
                                *(A8 + eax * 4 + 0xc) = 0x80;
                                eax = *Ac;
                                edx = eax;
                                eax = (eax << 4) + edx;
                                *(A8 + eax * 4 + 0xa) = 8;
                            } else {
                                eax = *Ac;
                                edx = eax;
                                eax = (eax << 4) + edx;
                                if(*(A8 + eax * 4 + 0x24) < 0x127) {
                                    *(A8 + eax * 4 + 0x24) = 0x127;
                                }
                                eax = *Ac;
                                edx = eax;
                                *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x7e;
                                eax = *Ac;
                                edx = eax;
                                *(A8 + ((eax << 4) + edx) * 4 + 0xa) = 0xb;
                                L0043B570(A8, *Ac, 8, A14);
                                L0043B150(A8, Ac, 0, M00644c5a >> 5, A14);
                                eax = M00644c5a;
                                if(eax >= 0x1e) {
                                    (save) *(ebp - 4) + 1;
                                    (save)A14;
                                    if(eax >= 0xf2) {
                                        eax = 2;
                                    } else {
                                        eax = 1;
                                        if(M00644c5a < 0x32) {
                                            eax = 0;
                                        }
                                    }
                                    (save)eax;
                                    (save)Ac;
                                    (save)A8;
                                    eax = L0043B2D8();
                                    esp = esp + 0x14;
                                    goto L0043ad38;
L0043abe8:
                                    if(M00644c5a >= 4) {
                                        eax = L0043B570(A8, *Ac, 9, A14);
                                        if(M00644c5a >= 0x10) {
                                            if(!(M00644c3c & 0xf0)) {
                                                eax = *Ac;
                                                edx = eax;
                                                *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x84;
                                            }
                                            edx = *Ac;
                                            eax = edx;
                                            edx = (edx << 4) + eax;
                                            ax = *(A8 + edx * 4 + 0x24);
                                            if(ax <= 0x118) {
                                                goto L0043acec;
                                            }
                                            ecx = *Ac * 0x11;
                                            if(ax > 0x134) {
                                                *(A8 + edx * 4 + 0xc) = 0x83;
                                                eax = *Ac;
                                                edx = eax;
                                                eax = (eax << 4) + edx;
                                                if(*(A8 + eax * 4 + 0x24) > 0x152) {
                                                    *(A8 + eax * 4 + 0xc) = 0x82;
                                                }
                                            }
                                            if(!(M00644c3c & 0xf)) {
                                                eax = *Ac;
                                                edx = eax;
                                                *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x80;
                                                L0043B150(A8, Ac, 0x24, M00644c5a >> 5, A14);
                                            } else {
                                                L0043B150(A8, Ac, 0, M00644c5a >> 5, A14);
                                            }
                                            eax = M00644c5a;
                                            if(eax >= 0x1e) {
                                                (save) *(ebp - 4) + 1;
                                                (save)A14;
                                                if(eax >= 0xf2) {
                                                    eax = 2;
                                                } else {
                                                    eax = 1;
                                                    if(M00644c5a < 0x32) {
                                                        eax = 0;
                                                    }
                                                }
                                                (save)eax;
                                                (save)Ac;
                                                (save)A8;
                                                eax = L0043B2D8();
                                                esp = esp + 0x14;
                                                goto L0043ad38;
L0043acec:
                                                eax = *Ac;
                                                edx = eax;
                                                *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x7f;
                                                L0043B150(A8, Ac, 0x18, M00644c5a >> 6, A14);
                                                eax = M00644c5a;
                                                if(eax >= 0x28) {
                                                    (save) *(ebp - 4) + 1;
                                                    (save)A14;
                                                    edx = 1;
                                                    if(eax < 0x50) {
                                                        edx = 0;
                                                    }
                                                    (save)edx;
                                                    (save)Ac;
                                                    (save)A8;
                                                    eax = L0043B2D8();
                                                    esp = esp + 0x14;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0043ad38:
}

/*    Procedure: 0x0043AD3E - 0x0043AD3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043AD3E()
{



}

/*    Procedure: 0x0043AD40 - 0x0043AF33
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0043A881()
 */

L0043AD40(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    eax = *Ac;
    *(ebp - 4) = eax;
    edx = eax;
    *(A8 + ((eax << 4) + edx) * 4 + 0x24) = *(A8 + ((eax << 4) + edx) * 4 + 0x24) + 0x14;
    if(M00644c5a >= 0x96) {
        eax = *Ac;
        edx = eax;
        if(*(A8 + ((eax << 4) + edx) * 4 + 0x24) < 0x102) {
            goto L0043ae3d;
        }
        eax = *Ac;
        edx = eax;
        if(*(A8 + ((eax << 4) + edx) * 4 + 0x24) > 0x139) {
            goto L0043ae3d;
        }
        eax = *Ac;
        edx = eax;
        eax = (eax << 4) + edx;
        if(*(A8 + eax * 4 + 0x24) < 0x127) {
            *(A8 + eax * 4 + 0x24) = 0x127;
        }
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x7e;
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0xa) = 9;
        L0043B570(A8, *Ac, 8, A14);
        L0043B150(A8, Ac, 0, M00644c5a >> 6, A14);
        eax = M00644c5a;
        if(eax >= 0x1e) {
            (save) *(ebp - 4) + 1;
            (save)A14;
            if(eax >= 0xb4) {
                eax = 2;
            } else {
                eax = 1;
                if(M00644c5a < 0x32) {
                    eax = 0;
                }
            }
            (save)eax;
            (save)Ac;
            (save)A8;
            eax = L0043B2D8();
            esp = esp + 0x14;
        }
    } else {
L0043ae3d:
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x79;
        eax = *Ac;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 0xa) = 4;
        eax = *Ac;
        edx = eax;
        eax = (eax << 4) + edx;
        if(*(A8 + eax * 4 + 0x24) <= 0x212) {
            if(M00644c5a >= 0xc8) {
                eax = *Ac;
                edx = eax;
                if(*(A8 + ((eax << 4) + edx) * 4 + 0x24) >= 0xa0) {
                    goto L0043aeca;
                }
            }
            eax = *Ac;
            edx = eax;
            eax = (eax << 4) + edx;
            if(*(A8 + eax * 4 + 0x24) >= 0xb4 && M00644c5a > 6) {
                goto L0043aeca;
            }
            if(M00644c5a >= 0xfa) {
                eax = *Ac;
                edx = eax;
                eax = (eax << 4) + edx;
                if(*(A8 + eax * 4 + 0x24) > 0x87) {
L0043aeca:
                    eax = *Ac;
                    edx = eax;
                    eax = (eax << 4) + edx;
                    if(*(A8 + eax * 4 + 2) > 0x47) {
                        *(A8 + eax * 4 + 2) = 0x47;
                    }
                    eax = L0043B570(A8, *Ac, 0xa, A14);
                    if(M00644c5a >= 0x1e) {
                        L0043B150(A8, Ac, 0xc, 0, A14);
                        eax = M00644c5a;
                        if(eax >= 0x64) {
                            (save) *(ebp - 4) + 1;
                            (save)A14;
                            edx = 0;
                            if(eax >= 0xaa) {
                                edx = 1;
                            }
                            (save)edx;
                            (save)Ac;
                            (save)A8;
                            eax = L0043B2D8();
                            esp = esp + 0x14;
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x0043AF34 - 0x0043AFDD
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 */

L0043AF34(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = *Ac;
    eax = *Ac;
    edx = eax;
    eax = (eax << 4) + edx;
    ax = *(A8 + eax * 4 + 0x24);
    if(ax >= 0x96) {
        edx = *Ac;
        ecx = edx;
        edx = (edx << 4) + ecx;
        if(ax <= 0x1f4) {
            if(M00644c5a >= 0xc8) {
                goto L0043af93;
            }
            eax = *Ac;
            edx = eax;
            eax = (eax << 4) + edx;
            if(*(A8 + eax * 4 + 0x24) >= 0xc8 && M00644c5a > 8) {
L0043af93:
                eax = L0043B570(A8, *Ac, 0xa, A14);
                if(M00644c5a >= 0x2d) {
                    eax = L0043B150(A8, Ac, 0xc, 0, A14);
                    if(M00644c5a >= 0x96) {
                        eax = L0043B2D8(A8, Ac, 0, A14, *(ebp - 4) + 1);
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x0043AFDE - 0x0043B034
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 */

L0043AFDE(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{



    eax = *Ac;
    if(*(A8 + ((eax << 4) + eax) * 4 + 0x24) >= 0xdc && M00644c5a > 0x32) {
        eax = L0043B570(A8, eax, 0xa, A14);
        if(M00644c5a >= 0x50) {
            eax = L0043B150(A8, Ac, 0xc, 0, A14);
        }
    }
}

/*    Procedure: 0x0043B035 - 0x0043B08E
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 */

L0043B035(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    eax = A8;
    ecx = *Ac;
    ebx = ecx;
    *(eax + ((ecx << 4) + ebx) * 4) = 0;
    ecx = *Ac;
    ebx = ecx;
    *(eax + ((ecx << 4) + ebx) * 4 + 2) = 0x38;
    ecx = *Ac;
    if(*(eax + ((ecx << 4) + ecx) * 4 + 0x24) >= 0xdc && M00644c5a > 0x32) {
        eax = L0043B570(eax, ecx, 0xa, A14);
    }
}

/*    Procedure: 0x0043B08F - 0x0043B08F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B08F()
{



}

/*    Procedure: 0x0043B090 - 0x0043B0F4
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043B124()
 */

L0043B090(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = Ac;
    if(M00644c48 > 2) {
        ecx = *edx;
        ebx = ecx;
        *(A8 + ((ecx << 4) + ebx) * 4 + 0xc) = 0x94;
        ecx = *edx;
        ebx = ecx;
        *(A8 + ((ecx << 4) + ebx) * 4 + 0xa) = 0x19;
        ecx = *edx;
        ebx = ecx;
        *(A8 + ((ecx << 4) + ebx) * 4 + 0x1c) = 0x3e2;
        ecx = *edx;
        ebx = ecx;
        *(A8 + ((ecx << 4) + ebx) * 4 + 0x24) = 11273;
        edx = *edx;
        ecx = edx;
        *(A8 + ((edx << 4) + ecx) * 4 + 2) = *(A8 + ((edx << 4) + ecx) * 4 + 2) - 1;
    }
}

/*    Procedure: 0x0043B0F5 - 0x0043B120
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B0F5(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L0043B628();
    if(!(eax & -2147483648)) {
        eax = L0043B124(A8, Ac, A10, A14);
    }
}

/*    Procedure: 0x0043B121 - 0x0043B123
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B121()
{



}

/*    Procedure: 0x0043B124 - 0x0043B14C
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043B0F5()
 */

L0043B124(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L0043B628();
    if(!(eax & -2147483648)) {
        (save)A14;
        (save)A10;
        eax = L0043B090(A8, Ac);
    }
}

/*    Procedure: 0x0043B14D - 0x0043B14F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B14D()
{



}

/*    Procedure: 0x0043B150 - 0x0043B2D6
 *    Argument size: 20
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L0043A881()
 *        L0043AD40()
 *        L0043AF34()
 *        L0043AFDE()
 */

L0043B150(A8, Ac, A10, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A18;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = M00644c3c;
    eax = M00644c40;
    Vfffffffc = eax;
    Vfffffff8 = M00644c5a;
    Vfffffff0 = *Ac + 1;
    if(M00644c5e < 0x12) {
        eax = eax & 65535;
        asm("imul dword [ebp+0x14]");
        Vfffffff4 = eax >> 0x10;
        if(Vfffffff4 > 3) {
            Vfffffff4 = 3;
        }
        for(Vffffffec = 0; 1; Vffffffec = Vffffffec + 1) {
            eax = Vffffffec;
            if(eax > Vfffffff4) {
                break;
            }
            Vfffffffc = Vfffffffc + esi;
            eax = esi << 5;
            esi = (eax | esi >> 0x1b) + Vfffffffc;
            eax = esi << 0x10;
            esi = eax + (esi >> 0x10) + Vfffffffc;
            *Ac = *Ac + 1;
            eax = *Ac;
            edx = eax;
            L00471128(((eax << 4) + edx << 2) + A8, 6520704, 0x44);
            eax = *Ac;
            edx = eax;
            *(A8 + ((eax << 4) + edx) * 4) = 0;
            eax = *Ac;
            edx = eax;
            *(A8 + ((eax << 4) + edx) * 4 + 2) = 0x39;
            eax = *Ac;
            edx = eax;
            eax = (eax << 4) + edx;
            *(A8 + eax * 4 + 8) = Vfffffff0;
            eax = *Ac;
            edx = eax;
            *(A8 + ((eax << 4) + edx) * 4 + 4) = esi;
            M00644c48 = M00644c48 + 1;
            edx = *Ac;
            ecx = edx;
            *(A8 + ((edx << 4) + ecx) * 4 + 0x22) = *((M00644c48 & 0xf) * 8 + 0x4ec400);
            edx = *Ac;
            ecx = edx;
            *(A8 + ((edx << 4) + ecx) * 4 + 0x12) = *((M00644c48 & 0xf) * 8 + 0x4ec404);
            L0043B570(A8, *Ac, 6, A18);
            eax = *Ac;
            ecx = eax;
            eax = (eax << 4) + ecx;
            *(A8 + eax * 4 + 0xc) = *(((Vfffffff8 >> 5 & 7) + A10 + (( *(A8 + eax * 4 + 4) & 196608) >> 0x10)) * 4 + 0x4ec480);
            M00644c5e = M00644c5e + 1;
            if(M00644c5e >= 0x12) {
                break;
            }
        }
    }
}

/*    Procedure: 0x0043B2D7 - 0x0043B2D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B2D7()
{



}

/*    Procedure: 0x0043B2D8 - 0x0043B56F
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0043A881()
 *        L0043AD40()
 *        L0043AF34()
 */

L0043B2D8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A10;
    esi = Ac;
    if(M00644c5e < 0x12) {
        M00644c5e = M00644c5e + 1;
        M00644c5f = M00644c5f + 1;
        *esi = *esi + 1;
        eax = edi;
        if(eax <= 4) {
            switch(eax) {
                case 0:
L0043b329:
                    eax = *esi;
                    edx = eax;
                    L00471128(((eax << 4) + edx << 2) + A8, 6519752, 0x44);
                    edx = *esi;
                    ecx = edx;
                    *(A8 + ((edx << 4) + ecx) * 4 + 0xc) = *(((M00644c3c & 0x300) >> 8) * 4 + 0x4ec6f8);
                    goto L0043b456;
                case 1:
                    eax = *esi;
                    edx = eax;
                    L00471128(((eax << 4) + edx << 2) + A8, 6520772, 0x44);
                    edx = *esi;
                    ecx = edx;
                    *(A8 + ((edx << 4) + ecx) * 4 + 0xc) = *(((M00644c3c & 0x300) >> 8) * 4 + 0x4ec708);
                    goto L0043b456;
                case 2:
                    eax = *esi;
                    edx = eax;
                    L00471128(((eax << 4) + edx << 2) + A8, 6520432, 0x44);
                    edx = *esi;
                    ecx = edx;
                    *(A8 + ((edx << 4) + ecx) * 4 + 0xc) = *(((M00644c3c & 0x300) >> 8) * 4 + 0x4ec718);
                    goto L0043b456;
                case 3:
                    eax = *esi;
                    edx = eax;
                    L00471128(((eax << 4) + edx << 2) + A8, 6519752, 0x44);
                    eax = *esi;
                    edx = eax;
                    *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x45;
                    goto L0043b456;
                case 4:
                    eax = *esi;
                    edx = eax;
                    L00471128(((eax << 4) + edx << 2) + A8, 6520432, 0x44);
                    eax = *esi;
                    edx = eax;
                    *(A8 + ((eax << 4) + edx) * 4 + 0xc) = 0x4f;
                    goto L0043b456;
            }
            goto L0043b329;
        }
L0043b456:
        eax = *esi;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4) = 0;
        eax = *esi;
        edx = eax;
        *(A8 + ((eax << 4) + edx) * 4 + 2) = 0x39;
        eax = *esi;
        edx = eax;
        eax = (eax << 4) + edx;
        *(A8 + eax * 4 + 4) = M00644c3c;
        eax = *esi;
        edx = eax;
        eax = (eax << 4) + edx;
        *(A8 + eax * 4 + 8) = A18;
        M00644c48 = M00644c48 + 1;
        *(ebp - 4) = 32767;
        *(ebp - 2) = 0x22;
        eax = *esi;
        edx = eax;
        eax = (eax << 4) + edx;
        *(A8 + eax * 4 + 0xe) = *(ebp - 4);
        eax = *esi;
        edx = eax;
        eax = *(A8 + ((eax << 4) + edx) * 4 + 8) & 65535;
        edx = eax;
        eax = *L0050169c( *L005016a0(L00452919(L00452919( *(ebp - 4), *(ebp - 4)), *(ebp - 4)), *(A8 + ((eax << 4) + edx) * 4 - 0x44)));
        edx = *esi;
        ecx = edx;
        *(A8 + ((edx << 4) + ecx) * 4 + 0x14) = eax;
        eax = *esi;
        edx = eax;
        eax = (eax << 4) + edx;
        *(A8 + eax * 4 + 0x14) = *(A8 + eax * 4 + 0x14) * 24283 >> 0xf;
        if(edi == 3 || edi == 4) {
            eax = *esi;
            edx = eax;
            (save)esi;
            edi = A8 + ((eax << 4) + edx << 2) + 0x26;
            esi = "????";
            eax = edi;
            *edi = *esi;
            edi = edi + 4;
            esi = esi + 4;
            *edi = *esi;
            edi = edi + 1;
            esi = esi + 1;
            (restore)esi;
        } else {
            eax = L0043B570(A8, *esi, 7, A14);
        }
    }
}

/*    Procedure: 0x0043B570 - 0x0043B625
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043A374()
 *        L0043A881()
 *        L0043AD40()
 *        L0043AF34()
 *        L0043AFDE()
 *        L0043B035()
 *        L0043B150()
 *        L0043B2D8()
 */

L0043B570(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    ecx = A10;
    eax = A8;
    *(eax + ((Ac << 4) + Ac) * 4 + 0x3f) = *(eax + ((Ac << 4) + Ac) * 4 + 0x3f) | 0x80;
    if(M004ebffc == 3) {
        if(ecx == 8 || ecx == 9) {
            ecx = Ac;
            eax = L00430CB0(0x10, A14, *(eax + ((Ac << 4) + ecx) * 4 + 4), ((Ac << 4) + Ac << 2) + eax + 0x26);
        } else {
            if(ecx != 6 && ecx != 7) {
                goto L0043b5fc;
            }
            ecx = Ac;
            eax = L00430CB0(0x11, A14, *(eax + ((Ac << 4) + ecx) * 4 + 4), ((Ac << 4) + Ac << 2) + eax + 0x26);
        }
    } else {
L0043b5fc:
        ebx = Ac;
        eax = L00430CB0(ecx, A14, *(eax + ((Ac << 4) + ebx) * 4 + 4), ((Ac << 4) + Ac << 2) + eax + 0x26);
    }
}

/*    Procedure: 0x0043B626 - 0x0043B627
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B626()
{



}

/*    Procedure: 0x0043B628 - 0x0043B65C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004395C8()
 *        L0043980C()
 *        L0043A881()
 *        L0043B0F5()
 *        L0043B124()
 *        L0043B6B4()
 */

L0043B628()
{



    eax = M00644c3c;
    edx = M00644c40 + eax;
    ecx = eax << 3;
    eax = (ecx | eax >> 0x1d) + edx;
    ecx = edx << 5;
    edx = ecx | edx >> 0x1b;
    eax = eax + edx;
    M00644c40 = edx;
    M00644c3c = eax;
    return M00644c3c;
}

/*    Procedure: 0x0043B65D - 0x0043B68E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0043B65D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *L005000c8(A10, A8 & 0x1ff, Ac, 0x4ebc8c);
    return L00471288(A10) + A10;
}

/*    Procedure: 0x0043B68F - 0x0043B68F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B68F()
{



}

/*    Procedure: 0x0043B690 - 0x0043B6B1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043B6B4()
 */

L0043B690(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(ax > 16384) {
        return 65535;
    }
    eax = (ax & 65535) >> 6;
    return *(eax * 4 + 0x4ec000);
}

/*    Procedure: 0x0043B6B2 - 0x0043B6B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B6B2()
{



}

/*    Procedure: 0x0043B6B4 - 0x0043B963
 *    Argument size: 48
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L0043980C()
 *        L0043B6B4()
 */

L0043B6B4(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c, A30, A34)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A1c;
    ebx = A18;
    edx = eax > 2147483647 ? edx | -1 : eax + eax;
    Vfffffffc = edx;
    L0043B690(ebx);
    Vfffffff6 = ax;
    edi = 0;
    for(esi = ebx; 1; si = si + di) {
        eax = si & 65535;
        if(edi + eax >= 65536) {
            break;
        }
        if(((L0043B628() & 65535) >> 3) + (A14 & 65535) < 65536) {
            eax = si & 65535;
            asm("imul ebx");
            eax = eax >> 0x10;
        } else {
            eax = si & 65535;
        }
        ebx = eax;
        eax = si & 65535;
        edi = eax >> 2;
        edi = edi + (eax >> 3) + ebx;
        if(eax + edi >= 65536) {
            continue;
        }
        eax = L0043B628() & 65535;
        asm("imul ebx");
        eax = eax >> 0x10;
        asm("imul ebx");
        ebx = eax >> 0x10;
        L0043B690(edi + si);
        eax = ax & 65535;
        eax = eax - (Vfffffff6 & 65535);
        asm("imul ebx");
        ebx = eax >> 0x10;
        Vfffffff6 = Vfffffff6 + bx;
        ebx = *L005016f8(A20, bx & 65535);
        if(ebx > 0x20) {
            if(ebx < 15000) {
                ebx = ebx >> 3;
            }
            Vfffffff0 = *Ac;
            if(ebx <= 17000000 || M00644c50 <= 1) {
                if(ebx > 17000000) {
                    if(M00644c50 == 0) {
                        eax = L0043B628() & 65535;
                        ebx = eax + ((eax << 7) + eax) * 2;
                    } else {
                        M00644c50 = M00644c50 - 1;
                        eax = M00644c52 >> 1;
                        if(ebx > eax) {
                            ebx = eax;
                            if(ebx < 17000000) {
                                ebx = 17000000;
                            }
                        }
                    }
                }
                L0043A374(A8, Ac, ebx, A10, Vfffffffc, (edi >> 1) + si, A24, A28, & A2c, & A30, & A34);
                Vfffffff4 = ax;
            } else {
                eax = M00644c52 >> 1;
                if(ebx > eax) {
                    ebx = eax;
                }
                L0043B628();
                L004395C8(A8, Ac, A10, ebx, Vfffffffc, (edi >> 1) + si, (M00644c40 & 65535) >> 0xb, A24, A28);
                M00644c50 = M00644c50 + 0xfe;
                Vfffffff4 = 12288;
                ebx = ebx >> 2;
            }
            if(ebx <= 15000) {
                ebx = ebx << 3;
            }
            eax = ebx <= Vfffffffc >> 6 ? ebx : Vfffffffc >> 6;
            Vfffffff8 = eax;
            Vffffffec = M00644c3c;
            Vffffffe8 = M00644c40;
            Vffffffe4 = M00644c4e & 0xff;
            M00644c4e = ebx <= 17000000 ? M00644c4e + 1 : 0;
            eax = Vfffffff0;
            edx = eax;
            eax = Vfffffff8;
            L0043B6B4(A8, Ac, Vfffffff0 + 1, L0043B628(), Vfffffff4, eax, ebx >> 7, ((eax << 4) + edx << 2) + A8 + 0x26, A28, A2c, A30, A34);
            M00644c3c = Vffffffec;
            M00644c40 = Vffffffe8;
            M00644c4e = Vffffffe4;
        }
    }
}

/*    Procedure: 0x0043B964 - 0x0043B96D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004405E2()
 */

L0043B964()
{



    return L0043BCAC();
}

/*    Procedure: 0x0043B96E - 0x0043B96F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B96E()
{



}

/*    Procedure: 0x0043B970 - 0x0043B99A
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E55C()
 *        L00434425()
 */

L0043B970(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    return L0043BA88(A8, Ac, A10, A14, A18, A1c, A20, 1);
}

/*    Procedure: 0x0043B99B - 0x0043B99B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B99B()
{



}

/*    Procedure: 0x0043B99C - 0x0043B9D0
 *    Argument size: -4
 *    Local size: 16
 *    Save regs size: 0
 */

L0043B99C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff0 = 0;
    return L0043BA88(A8, & Vfffffff0, Ac, & Vfffffff8, & Vfffffffc, & Vfffffff4, A10, 1);
}

/*    Procedure: 0x0043B9D1 - 0x0043B9D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B9D1()
{



}

/*    Procedure: 0x0043B9D4 - 0x0043B9FE
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D376()
 *        L004308AC()
 *        L0043BD9F()
 */

L0043B9D4(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    return L0043BA88(A8, Ac, A10, A14, A18, A1c, A20, 2);
}

/*    Procedure: 0x0043B9FF - 0x0043B9FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043B9FF()
{



}

/*    Procedure: 0x0043BA00 - 0x0043BA87
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00423D14()
 */

L0043BA00()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0xc);
    *(ebp - 4) = *( *L00501b9c( *(ebp + 8) & 65535) + 0x38);
    ax = *( *(ebp - 4) + 6) != 0 ? *( *(ebp - 4) + 6) : 1;
    *(ebp - 6) = ax;
    *ebx = 0;
    esi = 1;
    ebx = ebx;
    ecx = 0x4ee5a4;
    do {
        if(*( *(ebp - 4) + 8) > *ecx) {
            (save) *(ebp - 6);
            eax = *(ecx - 8);
            (restore)edx;
            edi = edx;
            asm("cdq");
            edx = edi / edi % edi / edi;
            if(eax < 0x12c) {
                eax = 0;
            }
            *ebx = eax;
        } else {
            eax = 0;
            *ebx = 0;
        }
        esi = esi + 1;
        ebx = ebx + 4;
        ecx = ecx + 0x10;
    } while(esi <= 8);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0043BA88 - 0x0043BCA9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043B970()
 *        L0043B99C()
 *        L0043B9D4()
 */

L0043BA88()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0x18);
    ebx = *(ebp + 0x14);
    esi = *(ebp + 8);
    *(ebp - 4) = *( *L00501b9c( *(esi + 0x82)) + 0x38);
    *ebx = *( *(ebp - 4) + 6);
    *(ebp - 8) = ( *(esi + 0xd0) << 4) + 0x4ee57c;
    eax = *( *(ebp - 8) + 0xc);
    *( *(ebp + 0x10)) = eax;
    eax = *( *(ebp - 8));
    asm("cdq");
    *ebx = *ebx / *ebx;
    edx = *ebx % *ebx;
    *( *(ebp + 0x20)) = eax;
    edx = *( *(ebp + 0x20));
    eax = *( *(ebp + 0xc));
    if(edx < eax || eax == 0) {
        *edi = 0;
        *ebx = -1;
        eax = *(esi + 0x86) & 0xff;
        if(eax == M00644c64) {
            eax = *(ebp + 0xc);
            if(*eax != 0) {
                M00644c6a = M00644c6a & 65279;
            }
        }
        eax = eax | -1;
    } else {
        eax = *( *(ebp + 0xc));
        asm("imul dword [ebx]");
        ecx = 30001;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        *ebx = eax + 1;
        *ebx = *ebx - L004537B0( *ebx, *( *(ebp - 8) + 4) << 0xf);
        if(*ebx < 1) {
            *ebx = 1;
        }
        eax = ( *( *(ebp + 0xc)) << 0x10) - 1;
        ecx = *( *(ebp + 0x20));
        edx = 0;
        edx = ecx / ecx % ecx / ecx;
        edx = eax;
        eax = (eax << 3) - edx;
        *( *(ebp + 0x1c)) = eax;
        *edi = ( *(esi + 0x86) & 0xff) != M00644c64 ? *(esi + 0x119) & 0xff : *(esi + 0xd0) >= 0xa ? M00644d00 & 65535 : M00644cfe & 65535;
        if(*ebx > *edi) {
            *edi = 0;
            eax = *(esi + 0x86) & 0xff;
            if(eax == M00644c64) {
                M00644c6a = M00644c6a & 65279;
            }
            eax = eax | -1;
        } else {
            if(( *(esi + 0x86) & 0xff) == M00644c64) {
                M00644c6a = M00644c6a | 0x100;
            }
            if(*(ebp + 0x24) == 2) {
                if(( *(esi + 0x86) & 0xff) != M00644c64) {
                    *(esi + 0x119) = *(esi + 0x119) - *ebx;
                    *edi = *edi - *ebx;
                } else {
                    if(*(esi + 0xd0) >= 0xa) {
                        ax = *ebx;
                        M00644d00 = M00644d00 - ax;
                        M00644d12 = M00644d12 + ax;
                        *edi = *edi - *ebx;
                        M00644c6a = M00644c6a & 65279;
                    } else {
                        M00644cfe = M00644cfe - *ebx;
                        eax = *ebx;
                        M00644cc4 = M00644cc4 - eax;
                        *edi = *edi - eax;
                        M00644c6a = M00644c6a & 65279;
                    }
                }
            }
            ebx = *( *(ebp - 4) + 6);
            ebx = ebx - L004537B0(ebx, *( *(ebp - 8) + 4) << 0xf);
            if(ebx < 1) {
                ebx = 1;
            }
            eax = 30001;
            asm("cdq");
            edx = ebx / ebx % ebx / ebx;
            *edi = *edi * *edi;
            eax = *( *(ebp + 0x20));
            if(eax < *edi) {
                *edi = eax;
            }
            eax = *( *(ebp + 0xc));
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0043BCAA - 0x0043BCAB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043BCAA()
{



}

/*    Procedure: 0x0043BCAC - 0x0043BCC9
 *    Argument size: -40
 *    Local size: 40
 *    Save regs size: 0
 *    Called by:
 *        L0043B964()
 */

L0043BCAC()
{
    /* unknown */ void  Vffffffd8;



    L00436B28( & Vffffffd8);
    return L0043BCCC( & Vffffffd8);
}

/*    Procedure: 0x0043BCCA - 0x0043BCCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043BCCA()
{



}

/*    Procedure: 0x0043BCCC - 0x0043BD24
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043BCAC()
 *        L0043BEE0()
 *        L0043C0E0()
 */

L0043BCCC(A8)
/* unknown */ void  A8;
{



    L0043BD28( *(A8 + 0xc));
    L0043980C(6529816, A8);
    M00648ae2 = M00644c5f;
    M00644db2 = 0;
    L0043BD60();
    return L00439FBC(M0064a3b0, 6529816, M00644ba4, M00644ba8);
}

/*    Procedure: 0x0043BD25 - 0x0043BD27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043BD25()
{



}

/*    Procedure: 0x0043BD28 - 0x0043BD5E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043BCCC()
 */

L0043BD28(A8)
/* unknown */ void  A8;
{



    *L00644D4C = *L00644D50;
    *L00644D50 = *L00644D54;
    *L00644D54 = *L00644CAE;
    *L00644CAE = A8;
    return 6572964;
}

/*    Procedure: 0x0043BD5F - 0x0043BD5F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043BD5F()
{



}

/*    Procedure: 0x0043BD60 - 0x0043BD9E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043BCCC()
 */

L0043BD60()
{



    (save)M00644c4c & 0xff;
    (restore)edx;
    eax = 0xc - edx;
    if(eax > 0) {
        eax = eax << 3;
        ecx = M00644c3c & 65535;
        eax = (eax * eax >> 0x10) * (eax * eax >> 0x10) >> 0x10;
    } else {
        eax = 0;
    }
    M00649cbd = al;
}

/*    Procedure: 0x0043BD9F - 0x0043BEDD
 *    Argument size: 0
 *    Local size: 20
 *    Save regs size: 4
 */

L0043BD9F()
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 6572964;
    al = *L00644C8C;
    if((al == 0 || al == 0x24) && *(ebx + 0x268) != 0 && *(ebx + 0xdc) >= 12000000) {
        L004124F8(0xf, 1);
        eax = L00412518(0xf);
        if(eax != 0) {
            L004124F8(0xf, 0);
            *(ebx + 21296) = *(ebx + 0x26c);
            *(ebx + 0x1b4) = *(ebx + 0x27c);
            eax = L0043B9D4( *(ebx + 0xc8), ebx + 21296, & Vfffffff4, & Vfffffff0, & Vffffffec, & Vfffffffc, & Vfffffff8);
            if(eax >= 0) {
                *(ebx + 21292) = Vfffffffc;
                *(ebx + 0x180) = Vffffffec;
                edx = Vfffffffc << 0x10;
                eax = edx + *ebx;
                *(ebx + 0x76) = eax;
                ecx = (Vfffffffc >> 0x10) + *(ebx + 4);
                eax :: edx + *ebx;
                asm("setc al");
                *(ebx + 0x7a) = ecx + (eax & 1);
                *(ebx + 0xe8) = 4;
                L00414070(1, 0, 0xe);
                L004701BE(0x21);
                L0043BEE0( *(ebx + 0x27c), 1);
                eax = *(ebx + 21292);
                *(ebx + 0x106) = eax;
                *(ebx + 0xef) = 0;
                M005015f0 = 260571136;
                M0064a114 = 0x12;
            }
        }
    }
}

/*    Procedure: 0x0043BEDE - 0x0043BEDF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043BEDE()
{



}

/*    Procedure: 0x0043BEE0 - 0x0043C0DD
 *    Argument size: 8
 *    Local size: 56
 *    Save regs size: 4
 *    Called by:
 *        L004115B4()
 *        L0043BD9F()
 */

L0043BEE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    ebx = 6572964;
    eax = *L00644C6C;
    *(eax + 0xb6) = 0;
    *(eax + 0xba) = 0;
    L00419470(1, A8);
    *(ebx + 0x70) = 0;
    L0043FA4C(M0064a3b0);
    eax = *( *(ebx + 0xc8) + 0x86) & 0xff;
    *(M00501ba8 + eax) = 0x4f;
    if(*(ebx + 0xe8) == 0x2a) {
        eax = *( *(ebx + 0xcc) + 0x86) & 0xff;
        *(M00501ba8 + eax) = 0x4f;
    } else {
        *L004eeed4(8192);
        Vfffffffc = ax | 16384;
        Vfffffffe = 0x33;
        L0043C280( *(ebx + 0xc8), Vfffffffc);
        eax = *(ebx + 0xc8);
        *(eax + 0x56) = 0;
        *(eax + 0x57) = 0;
        *(eax + 0x14d) = 0;
    }
    *(ebx + 0xec) = 0;
    *(ebx + 0xed) = 0;
    *(ebx + 0x112) = 0;
    if(Ac != 0) {
        if(*L00501b8c() > 65024) {
            eax = L0043C0E0( *(ebx + 0xc8), 0, A8);
            goto L0043c0d9;
        }
        if(M00501504 == 0) {
            L0043C0E0( *(ebx + 0xc8), 1, A8);
        }
    }
    L00419470(0x13, 0);
    L00436EA9( & Vffffffc8, A8);
    L0043BCCC( & Vffffffc8);
    if(*(ebx + 0xe8) == 0x2a) {
        if(*( *(ebx + 0xcc) + 0x82) != 0x45) {
            goto L0043c082;
        }
        eax = *(ebx + 0xcc);
        *(eax + 0x56) = 0x70;
        *(eax + 0x3e) = 1000000;
        *(eax + 0x42) = 0;
        *(eax + 0x46) = 10000000;
        *(eax + 0x4a) = 0;
        *(eax + 0x4e) = 0;
        *(eax + 0x52) = 0;
        *(eax + 0x8c) = 0;
        *(eax + 0x90) = 0;
        *(eax + 0x94) = 0;
    } else {
L0043c082:
        *L004dde5c( *(ebx + 0xc8), M0064a3b0);
        *L004dde5c( *(ebx + 0xc8), M0064a3b0);
    }
    L00419470(2, 0);
    *(ebx + 0x408) = 3375103;
    *(ebx + 0x3fb) = 0x72;
    eax = L00414070(1, 0, 4);
L0043c0d9:
}

/*    Procedure: 0x0043C0DE - 0x0043C0DF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C0DE()
{



}

/*    Procedure: 0x0043C0E0 - 0x0043C23B
 *    Argument size: 12
 *    Local size: 96
 *    Save regs size: 4
 *    Called by:
 *        L0043BEE0()
 */

L0043C0E0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vffffffff;



    ebx = Ac == 0 ? 39109 : 39110;
    Vffffffff = *(( *L00501b8c() & 0xf) + 0x4ee66c);
    L00419470(0x14, & Vffffffff);
    eax = Vffffffff & 0xff;
    if(eax > 6) {
        goto L0043c205;
    }
    switch(eax) {
        case 0:
            goto L0043c156;
        case 1:
L0043c14a:
            ebx = L0043C23C(A8);
            goto L0043c156;
        case 2:
L0043c205:
            Vffffffc8 = ebx;
            Vffffffe0 = -1;
            L00421DEC( & Vffffffc8);
            goto L0043c219;
        case 3:
            ebx = L0043C23C(A8);
            goto L0043c205;
        case 4:
            goto L0043c205;
        case 5:
            Vffffffc8 = ebx;
            Vffffffe0 = -1;
            L00421DEC( & Vffffffc8);
            goto L0043c219;
        case 6:
            eax = *L004eeed8(M00644c6c);
            goto L0043c237;
    }
    goto L0043c14a;
L0043c156:
    Vffffffc8 = ebx;
    Vffffffe0 = -1;
    L00421DEC( & Vffffffc8);
    L00436EA9( & Vffffffa0, A10);
    L0043BCCC( & Vffffffa0);
    L00419470(2, 0);
    Vfffffff8 = 22016;
    Vfffffffa = 0x39;
    ecx = M00644e10;
    if(ecx != 0) {
        eax = ecx;
        ecx = 0x50;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        Vfffffff8 = eax * 26960;
        Vfffffffa = 0x3f;
    }
    L0043C280(M00644c6c, Vfffffff8);
L0043c219:
    eax = M00649ed0;
    M00644caa = eax;
    M005015f0 = 260571136;
    M0064a114 = 0x12;
L0043c237:
}

/*    Procedure: 0x0043C23C - 0x0043C27F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C0E0()
 */

L0043C23C(A8)
/* unknown */ void  A8;
{



    eax = *(( *(A8 + 0xd0) << 4) + 0x4ee584) - 4;
    if(eax >= 0) {
        M00644d14 = M00644d14 + ax;
        M00644cc4 = M00644cc4 + eax;
        M00644cbc = eax;
    }
    *(A8 + 0xd0) = 1;
    M00644d24 = 0;
    return 39111;
}

/*    Procedure: 0x0043C280 - 0x0043C2FF
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043BEE0()
 *        L0043C0E0()
 */

L0043C280(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *L00501b8c();
    *L005016e0(A8, Ac, M00644bc8, M00644bcc);
    *(A8 + 0x25) = 0;
    *(A8 + 0xb4) = 0;
    *(A8 + 0xb6) = 0;
    *(A8 + 0xb8) = 0;
    *(A8 + 0x8c) = 0;
    *(A8 + 0x90) = 0;
    *(A8 + 0x94) = 0;
    *(A8 + 0xf2) = 0;
    *(A8 + 0xf6) = 0;
    *(A8 + 0xfa) = 0;
    M00644d5c = 0;
    return 0;
}

/*    Procedure: 0x0043C300 - 0x0043C318
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C300(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00458580(A8, Ac, A10);
}

/*    Procedure: 0x0043C319 - 0x0043C31B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C319()
{



}

/*    Procedure: 0x0043C31C - 0x0043C383
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00427350()
 */

L0043C31C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    if(A8 == M004eec4c && eax == M004eec50 && M006321da != 0 && M004eec54 != 0) {
        return L00418264(0);
    }
    M004eec4c = A8;
    M004eec50 = eax;
    eax = L00418B4C(A8);
    if(eax != 0) {
        M006321da = 1;
        M004eec54 = 1;
        return;
    }
    M004eec54 = 0;
}

/*    Procedure: 0x0043C384 - 0x0043C3A6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C384()
{



    ecx = 6595504;
    M00644c14 = 0;
    eax = 0x72;
    do {
        edx = *ecx;
        if(!( *(edx + eax) & 0x20)) {
            *(edx + eax) = 0;
        }
        eax = eax - 1;
    } while(eax > 0);
}

/*    Procedure: 0x0043C3A7 - 0x0043C3A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C3A7()
{



}

/*    Procedure: 0x0043C3A8 - 0x0043C3EE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C3F0()
 *        L0043C40C()
 */

L0043C3A8()
{



    do {
        *L00500398();
    } while(al != 0);
    M00655674 = 0;
    M00655678 = 0;
    M0064a110 = 0;
    M0065567c = 0;
    M00644dd0 = 0;
    L004552D4();
    L00458384();
    L004552D4();
    return *L004f80ac();
}

/*    Procedure: 0x0043C3EF - 0x0043C3EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C3EF()
{



}

/*    Procedure: 0x0043C3F0 - 0x0043C408
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041BC5C()
 *        L00426810()
 *        L0043C550()
 *        L00453FAE()
 */

L0043C3F0()
{



    L0043C3A8();
    return L004782DA(6595096, 1);
}

/*    Procedure: 0x0043C409 - 0x0043C40B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C409()
{



}

/*    Procedure: 0x0043C40C - 0x0043C54D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C550()
 */

L0043C40C()
{



    esp = esp + -340;
    (save)ebx;
    (save)esi;
    (save)edi;
    L0043C3A8();
    L0047017D();
    if(M00644bb4 < 0) {
        M00644bb4 = 0;
    }
    M00644c18 = M00644c18 | 0x20;
    M00644bd0 = M004eecd4;
    M00644bd4 = M004eecd8;
    M00644bd8 = M004eecdc;
    *(ebp + -210) = M00644cae == 246847293 ? 0xaf : 0xac;
    esi = ebp - 0x30;
    edi = 6573430;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    *(ebp + -302) = 0;
    *(ebp + -294) = 0;
    ebx = 250000;
    do {
        *(ebp + -286) = ebx;
        if(ebx < 35000) {
            *(ebp + -286) = 35000;
        }
        L004537F4();
        *L00500398();
        if(al != 0) {
            break;
        }
        L0045AFF0(ebp + -340, 0, ebx >> 1);
        L00461644();
        *L005030e8(ebp + -340);
        *L004f80ac();
        L00457DA4();
        L004617E8();
        L00458384();
        eax = M0065567c;
        M0064a110 = eax;
        M0065567c = M0065567c - eax;
        ebx = ebx - eax;
    } while(ebx > -700000);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return L004782DA(6595096, 1);
}

/*    Procedure: 0x0043C54E - 0x0043C54F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C54E()
{



}

/*    Procedure: 0x0043C550 - 0x0043C566
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C5F2()
 *        L0044569C()
 */

L0043C550(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return L0043C3F0();
    }
    return L0043C40C();
}

/*    Procedure: 0x0043C567 - 0x0043C5F1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C567()
{



    *L004f80ac();
    M00644c18 = 0;
    M00655674 = 0;
    M00655678 = 0;
    M0064a110 = 0;
    M00644dd0 = 0;
    M0065567c = 0;
    M006495dd = 0;
    M00644c1e = -1;
    edx = 0;
    eax = 6533900;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 1;
    } while(edx < 0x40);
    L00419470(3, 0);
    L00470183();
    L004706D4();
    L0041934C(3, 1, 0);
    return L004782DA(6595128, 1);
}

/*    Procedure: 0x0043C5F2 - 0x0043C902
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0043C5F2(Ac)
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 6572964;
    L00471198(6572964, 0, 21866);
    L00471198(6497135, 0, 0x51);
    L00451100( *Ac);
    L0045381C();
    L0043E5C0();
    L004193A8();
    do {
    } while(L004782A4(6595096) != 0);
    L0043FA48();
    *(ebx + 0x74) = 0;
    eax = M004ef0cc;
    M0064a3b0 = eax;
    *(ebx + 0x70) = 0;
    L0043FA4C(M0064a3b0);
    *(ebx + 0xe) = 1;
    L0045527C(0x4eece0);
    L00455238();
    *(ebx + 0x74) = *(ebx + 0x74) | 0x20;
    L004552D4();
    L00458384();
    L004552D4();
    M005015f0 = 0x3e2;
    *L005003b4(0x4eee54);
    eax = *(ebx + 0x10);
    esi = eax;
    if(eax < 0) {
        *(ebx + 0x10) = 0;
    }
    edi = edi | -1;
    M00655674 = 0;
    M00655678 = 0;
    *ebx = 0x400;
    M0063b308 = 0;
    *L00500398();
    L004700B4(0);
    L0047017D();
    do {
        if(L00470A94() != 0) {
            L004700B4(0);
        }
        M005015dc = 0;
        L00461644();
        eax = M00655678;
        M00655674 = eax;
        M00655678 = M00655678 - eax;
        *ebx = *ebx + eax;
        if(eax > *ebx) {
            *(ebx + 4) = *(ebx + 4) + 1;
        }
        L0043E7A4();
        eax = *L00500398() & 0xff;
        if(eax != 0) {
            if(eax >= 0x31 && eax <= 0x35) {
                goto L0043c739;
            }
            if(eax != 0x56) {
                edi = M004eecb8;
                goto L0043c74d;
L0043c739:
                edi = *(eax * 4 + 0x4eebf8);
            }
        }
L0043c74d:
        L004537F4();
        *L004f80ac();
        L00457D88();
        L004617E8();
        L0041934C(8, 4, 0);
        L00458384();
    } while(edi == -1);
    do {
    } while(L0044F974(0) != 0);
    *(ebx + 0x10) = esi;
    do {
        *L00500398();
    } while(al != 0);
    L0047017D();
    *(ebx + 0x74) = *(ebx + 0x74) & 0xdf;
    if(L004782A4(6595128) == 0) {
        L004193F0(edi);
    } else {
        do {
        } while(L004782A4(6595128) != 0);
    }
    while(1) {
        if(M005015dc < 2) {
            0;
            continue;
        }
        M005015dc = 0;
        L004537F4();
        L00461644();
        *(ebx + 0xe) = *(ebx + 0xe) + 1;
        if(*(ebx + 0xe) == 0) {
            *(ebx + 0xe) = *(ebx + 0xe) + 1;
        }
        eax = M00655678;
        M00655674 = eax;
        M00655678 = M00655678 - eax;
        esi = *(ebx + 4);
        *ebx = *ebx + eax;
        if(eax > *ebx) {
            *(ebx + 4) = *(ebx + 4) + 1;
            if(*(ebx + 4) > 1211534) {
                L0043C550(1);
            }
        }
        if(*(ebx + 4) >= *(ebx + 0x7a) && *ebx >= *(ebx + 0x76)) {
            *ebx = *(ebx + 0x76);
            *(ebx + 4) = *(ebx + 0x7a);
            L00419470(0x15, 0);
            *(ebx + 0x7a) = -1;
        }
        ecx = *(ebx + 4);
        if(esi != ecx) {
            eax = ecx;
            edx = 0;
            if(7 / 7 % 7 / 7 == 0) {
                L00419470(0x10, 0);
            }
            L00419470(0xf, 0);
        }
        eax = M0065567c;
        M0064a110 = eax;
        M0065567c = 0;
        M0063b308 = M0063b308 + M0064a110;
        L004194B0(M0064a3b0, *ebx, *(ebx + 4));
        L00419530();
        L00419608(M0064a3b0);
        L0041969C(M0064a3b0);
        if(*(ebx + 0xc) & 1) {
            *L004f80ac();
            if(!( *(ebx + 0xc) & 1)) {
                L00457D88();
            }
            L004617E8();
            L004196EC();
            L00458384();
            continue;
        }
        L004196EC();
    }
}

/*    Procedure: 0x0043C903 - 0x0043C941
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0043C903(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    edx = A10;
    *Ac = *Ac + *edx;
    ecx = *edx;
    ebx = ecx >> 0x1b;
    ebx = ebx | ecx << 5;
    *edx = ebx;
    *Ac = *Ac + *edx;
    edx = *Ac;
    ecx = edx << 0x10;
    ecx = ecx + (edx >> 0x10);
    *Ac = ecx;
    ecx = *Ac & 65535;
    return A8 * A8 >> 0x10;
}

/*    Procedure: 0x0043C942 - 0x0043C98A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0043C942(A8)
/* unknown */ void  A8;
{



    A8 = M00644bcc;
    eax = M00644bc8 + A8;
    ecx = A8 >> 0x1b;
    A8 = ecx | A8 << 5;
    eax = eax + A8;
    ecx = eax << 0x10;
    eax = ecx | eax >> 0x10;
    M00644bc8 = eax;
    M00644bcc = A8;
    return (M00644bc8 & 65535) * (M00644bc8 & 65535) >> 0x10;
}

/*    Procedure: 0x0043C98B - 0x0043CA1C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0043C98B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A8;
    esi = 0x4eecb0;
    L0045397C();
    edx = ebx >> 4;
    ebx = ebx & 0xf0f;
    edx = edx & 0xf0f;
    al = *(ebx + "0123456789ABCDEF");
    *(esi + 3) = al;
    al = *((ebx >> 8) + "0123456789ABCDEF");
    *(esi + 1) = al;
    al = *(edx + "0123456789ABCDEF");
    *(esi + 2) = al;
    dl = *((edx >> 8) + "0123456789ABCDEF");
    *esi = dl;
    L00473DA8("\n%s %c%c%c%c\n\n", 0x4eecac, dl, *(esi + 1), *(esi + 2), *(esi + 3));
    return L00477E60(1);
}

/*    Procedure: 0x0043CA1D - 0x0043CA53
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0043CA1D(A8)
/* unknown */ void  A8;
{



    if(M00632160 == 0) {
        M00632160 = A8;
        return;
    }
    M00632160 = A8;
    return L0041934C(M00632160, 8, 0);
}

/*    Procedure: 0x0043CA54 - 0x0043CA83
 *    Argument size: 4
 *    Local size: 32
 *    Save regs size: 8
 */

L0043CA54(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe0;



    ebx = A8;
    esi = & Vffffffe0;
    for(*(esi + 1) = 2; 1; eax = L00470FE8(0x21, esi, esi)) {
        al = *ebx;
        ebx = ebx + 1;
        *(esi + 0xc) = al;
        if(al == 0) {
            break;
        }
    }
}

/*    Procedure: 0x0043CA84 - 0x0043CAFC
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0043CAFD()
 *        L0043DD28()
 */

L0043CA84(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;



    edi = *(A8 + 0x86) & 0xff;
    eax = M00501ba8;
    if(!( *(eax + edi) & 0x20)) {
        M00644c14 = M00644c14 - 1;
        *(eax + edi) = 0;
    } else {
        ebx = 0;
        for(esi = 6496625; ebx <= M00632168; esi = esi + 8) {
            if(!( *esi & 4)) {
                Vfffffff4 = 0;
                Vfffffff8 = A8;
                Vfffffffc = edi;
                Vfffffffd = Ac;
                L0041934C(ebx, 0xb, & Vfffffff4);
            }
            ebx = ebx + 1;
        }
        eax = M00501ba8;
        *(eax + edi) = 0;
    }
}

/*    Procedure: 0x0043CAFD - 0x0043CB12
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0043CAFD(A8)
/* unknown */ void  A8;
{



    return L0043CA84(A8, 0);
}

/*    Procedure: 0x0043CB13 - 0x0043CB2E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0043CB13(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = *(A8 + 0x86) & 0xff;
    *(M00501ba8 + eax) = Ac;
}

/*    Procedure: 0x0043CB2F - 0x0043CB2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043CB2F()
{



}

/*    Procedure: 0x0043CB30 - 0x0043CC05
 *    Argument size: 8
 *    Local size: 36
 *    Save regs size: 8
 *    Called by:
 *        L00412C5C()
 *        L0043D05C()
 *        L0043DD28()
 */

L0043CB30(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = *L004eecb4(M0064a3b0, Ac, 0xf, 0x99, & Vfffffffc);
    if(ebx == 0) {
        eax = 0;
    } else {
        *(ebx + 0x9e) = A8 + 29184;
        *L005000c0(ebx + 0x124, A8, & Vffffffdc);
        *(ebx + 0x118) = 0xfa;
        *(ebx + 0x87) = 0xb;
        *(ebx + 0xff) = 0x15;
        *(ebx + 0x14e) = 6;
        *L00501b8c();
        Vfffffff0 = M00644bc8 >> 0x16;
        *L00501b8c();
        Vfffffff4 = M00644bc8 >> 0x16;
        Vfffffff8 = M00644bcc >> 0x16;
        *(ebx + 0x8c) = *(ebx + 0x8c) + Vfffffff0;
        *(ebx + 0x90) = *(ebx + 0x90) + Vfffffff4;
        *(ebx + 0x94) = *(ebx + 0x94) + Vfffffff8;
        *L005016f4(ebx, & Vfffffff0);
        eax = ebx;
    }
}

/*    Procedure: 0x0043CC06 - 0x0043CC24
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 */

L0043CC06(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L004554A4(A8, Ac, A10, A14);
}

/*    Procedure: 0x0043CC25 - 0x0043CCCF
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 8
 */

L0043CC25(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A18;
    ebx = 0x72;
    for(eax = A8 + 0x72; ebx > 0 && *eax != 0; eax = eax - 1) {
        ebx = ebx - 1;
    }
    if(ebx >= 0x14 && ebx > 0) {
        goto L0043cc85;
    }
    ebx = 0x72;
    eax = A8 + 0x72;
    do {
        if(!( *eax & 0x20)) {
            goto L0043cc5e;
        }
        ebx = ebx - 1;
        eax = eax - 1;
    } while(ebx > 0);
    goto L0043cc79;
L0043cc5e:
    if(ebx >= 0x14) {
        M00644c14 = M00644c14 - 1;
    } else {
        *esi = 0;
        eax = 0;
        goto L0043cccc;
    }
L0043cc79:
    if(ebx <= 0) {
        *esi = 0;
        eax = 0;
    } else {
L0043cc85:
        *(A8 + ebx) = A10;
        if(!(A10 & 0x20)) {
            M00644c14 = M00644c14 + 1;
        }
        *esi = ebx;
        esi = ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74;
        *L00501b98(esi, Ac, A14);
        *(esi + 0x82) = A14;
        *(esi + 0x86) = bl;
        eax = esi;
    }
L0043cccc:
}

/*    Procedure: 0x0043CCD0 - 0x0043CDC0
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 */

L0043CCD0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    ebx = 0x72;
    edi = A8 + 38782;
    eax = A8 + 0x72;
    do {
        if(*eax == 0) {
            goto L0043ccef;
        }
        ebx = ebx - 1;
        edi = edi + -338;
        eax = eax - 1;
    } while(ebx > 0);
    goto L0043cd46;
L0043ccef:
    *eax = dl;
    if(!(dl & 0x20)) {
        M00644c14 = M00644c14 + 1;
    }
    *A18 = ebx;
    *L00501b98(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74, Ac, A14);
    *edi = bl;
    eax = ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74;
    goto L0043cdbc;
L0043cd46:
    ebx = 0x72;
    edi = A8 + 38782;
    eax = A8 + 0x72;
    do {
        if(!( *eax & 0x20)) {
            goto L0043cd59;
        }
        ebx = ebx - 1;
        edi = edi + -338;
        eax = eax - 1;
    } while(ebx > 0);
    goto L0043cdb8;
L0043cd59:
    M00644c14 = M00644c14 - 1;
    *eax = dl;
    if(!(dl & 0x20)) {
        M00644c14 = M00644c14 + 1;
    }
    *A18 = ebx;
    *L00501b98(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74, Ac, A14);
    *edi = bl;
    eax = ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + A8 + 0x74;
    goto L0043cdbc;
L0043cdb8:
    *A18 = 0;
    eax = 0;
L0043cdbc:
}

/*    Procedure: 0x0043CDC1 - 0x0043CDC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043CDC1()
{



}

/*    Procedure: 0x0043CDC4 - 0x0043CF4F
 *    Argument size: 8
 *    Local size: 48
 *    Save regs size: 8
 *    Called by:
 *        L0043CF50()
 *        L0043D6F8()
 */

L0043CDC4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;



    esi = 6572964;
    ecx = *(A8 + 0x11e);
    if(ecx > Ac) {
        *(A8 + 0x11e) = *(A8 + 0x11e) - Ac;
        eax = *(A8 + 0x86) & 0xff;
        if(eax == *L00644C64) {
            *(A8 + 0xbc) = *L00644DB8;
            *(A8 + 0xbe) = *L00644DBC;
            *(A8 + 0xc0) = *L00644DC0;
            *(A8 + 0xc2) = *L00644DC4;
            *(A8 + 0xc4) = *L00644DC8;
            *(A8 + 0xc6) = *L00644DCC;
        }
    } else {
        *(A8 + 0x11e) = 0;
        eax = *(A8 + 0x86) & 0xff;
        if(eax == *(esi + 0xc0)) {
            if(!( *(A8 + 0xc8) & 2)) {
                if(*(A8 + 0xd0) < 0xa) {
                    if(*(esi + 0x15a) == 0) {
                        goto L0043cece;
                    }
                    *(esi + 0x15a) = *(esi + 0x15a) - 1;
                    *(esi + 0x120) = *(esi + 0x120) - 1;
                    *(A8 + 0x11e) = *(A8 + 0x11e) + 536870912;
                    goto L0043cf4a;
                }
                if(*(esi + 0x15c) == 0) {
                    goto L0043cece;
                }
                *(esi + 0x15c) = *(esi + 0x15c) - 1;
                *(esi + 0x16e) = *(esi + 0x16e) + 1;
                *(A8 + 0x11e) = *(A8 + 0x11e) + 536870912;
                goto L0043cf4a;
            }
L0043cece:
            if(!( *(esi + 0xc6) & 1)) {
                Vffffffe8 = -1;
                Vffffffd0 = 39175;
                eax = L00421DEC( & Vffffffd0);
                *(esi + 0xc6) = *(esi + 0xc6) | 1;
            }
        } else {
            if(*(A8 + 0x119) != 0) {
                *(A8 + 0x119) = *(A8 + 0x119) - 1;
                *(A8 + 0x11e) = *(A8 + 0x11e) + 536870912;
                goto L0043cf4a;
            }
        }
        *(A8 + 0xbc) = 0;
        *(A8 + 0xc0) = 0;
        *(A8 + 0xc4) = 0;
        *(A8 + 0xbe) = 0;
        *(A8 + 0xc2) = 0;
        *(A8 + 0xc6) = 0;
    }
L0043cf4a:
}

/*    Procedure: 0x0043CF50 - 0x0043D05B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043D05C()
 */

L0043CF50(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = (M00644c19 & 0x78) >> 3;
    ebx = *(edi * 4 + 0x4eed48);
    if(edi < 4) {
        L004703C0(0xa, *(A8 + 0x88));
        *(A8 + 0xea) = *(A8 + 0xea) + (ebx << 3);
        ecx = 65535;
        if(edi != 3) {
            ecx = 31068;
        }
        *(A8 + 0xe8) = cx;
        edi = M00655674;
        if(edi >= ecx) {
            eax = edi;
            edx = 0;
            edx = ecx / ecx % ecx / ecx;
            asm("imul ebx");
            ebx = eax;
            L0043CDC4(A8, ebx << 4);
            eax = ebx;
        } else {
            L0043CDC4(A8, ebx << 4);
            eax = ebx;
        }
    } else {
        L004703C0(0xb, *(A8 + 0x88));
        eax = M00655674 >> 7 & 65535;
        asm("imul ebx");
        ebx = eax;
        if(ebx > 65535) {
            ebx = 65535;
        }
        eax = ebx << 3;
        eax = eax >> *(edi * 4 + 0x4eed20);
        dx = *(A8 + 0xea);
        *(A8 + 0xea) = *(A8 + 0xea) + (ax & 65535);
        if(dx > *(A8 + 0xea)) {
            *(A8 + 0xea) = 65535;
        }
        L0043CDC4(A8, ebx << 4);
        eax = ebx;
    }
}

/*    Procedure: 0x0043D05C - 0x0043D3D3
 *    Argument size: 8
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L0042EA09()
 *        L004421A4()
 */

L0043D05C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    if(*(A8 + esi + 0xd2) != 0) {
        edx = eax;
        M00644c19 = dl;
        if(*(A8 + 0xe8) == 0 && *(A8 + 0xea) <= 61440 && *(A8 + 0x11e) != 0) {
            if(A8 != M00644c6c) {
                goto L0043d0ea;
            }
            L004124F8(5, ((dl & 0xff) >> 3 & 0xf) + 0x7cf);
            eax = L00412518(5);
            if(eax != 0) {
                L004124F8(5, 0);
L0043d0ea:
                if(( *(A8 + 0x86) & 0xff) == M00644c64 && !(M00644c6a & 4)) {
                    M00644c6a = M00644c6a | 4;
                    L0041C44F(3, A8);
                }
                *(A8 + 0x151) = *(A8 + 0x151) | 2;
                if(!(esi = esi - 1)) {
                    == ? L0043d12e : ;
                    if(esi = esi - 3) {
                        goto L0043d18c;
                    }
                    goto L0043d1e4;
                    *(A8 + 0x151) = *(A8 + 0x151) | 8;
                    Vffffffec = ~( *(A8 + 0x18)) >> 0x10;
                    Vfffffff0 = ~( *(A8 + 0x1c)) >> 0x10;
                    Vfffffff4 = ~( *(A8 + 0x20)) >> 0x10;
                    esi = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x24);
                    eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x26);
                    edi = *(A8 + 0x86) & 0xff;
                } else {
L0043d18c:
                    *(A8 + 0x151) = *(A8 + 0x151) | 4;
                    Vffffffec = *(A8 + 0x18) >> 0x10;
                    Vfffffff0 = *(A8 + 0x1c) >> 0x10;
                    Vfffffff4 = *(A8 + 0x20) >> 0x10;
                    esi = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x20);
                    eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x22);
                    edi = *(A8 + 0x86) & 0xff;
                    goto L0043d26b;
L0043d1e4:
                    *(A8 + 0x151) = *(A8 + 0x151) | 0x10;
                    edi = 0;
                    Vffffffec = M00644dac;
                    Vfffffff0 = M00644dae;
                    Vfffffff4 = M00644db0;
                    if(M00644daa < 0) {
                        esi = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x28);
                        eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x2a);
                    } else {
                        esi = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x2c);
                        eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x2e);
                    }
                }
L0043d26b:
                edx = *(A8 + 0x18) >> 0x10;
                Vffffffe0 = esi * esi;
                edx = *(A8 + 0x1c) >> 0x10;
                Vffffffe4 = esi * esi;
                edx = *(A8 + 0x20) >> 0x10;
                Vffffffe8 = esi * esi;
                if(eax != 0) {
                    edx = *(A8 + 0xc) >> 0x10;
                    Vffffffe0 = Vffffffe0 + eax * eax;
                    edx = *(A8 + 0x10) >> 0x10;
                    Vffffffe4 = Vffffffe4 + eax * eax;
                    edx = *(A8 + 0x14) >> 0x10;
                    Vffffffe8 = Vffffffe8 + eax * eax;
                }
                Vffffffe0 = Vffffffe0 >> 0xc;
                Vffffffe4 = Vffffffe4 >> 0xc;
                Vffffffe8 = Vffffffe8 >> 0xc;
                *(A8 + 0xe6) = 65535;
                Vfffffff8 = 8388607;
                Vfffffffc = 0;
                *L004e0a6c(A8, M0064a3b0, & Vffffffe0, & Vffffffec, edi, Vfffffff8, Vfffffffc, 0x1a80);
                if(!(M006355d4 & 0x80)) {
                    if(M006355e0 == 0) {
                        goto L0043d3c6;
                    }
                    *(A8 + 0xe6) = M006355d6 >> 7 & 65535;
                    eax = *(M006355e0 + 0x82);
                    if(eax >= 0x70 && eax <= 0x74 && M00644c19 == 0x9a) {
                        esi = *L004eeed4(3);
                        do {
                            eax = M006355e0;
                            eax = L0043CB30( *(( *(eax + 0xa0) & 0x1f) * 2 + 0x4eece4) & 65535, eax);
                            if(eax != 0) {
                                (save)esi;
                                edi = eax + 0x3e;
                                esi = 6510052;
                                ecx = 6;
                                asm("rep movsd");
                                (restore)esi;
                            }
                            esi = esi - 1;
                        } while(esi >= 0);
                    }
                    L0043E288(M006355e0, L0043CF50(A8), *(A8 + 0x86) & 0xff);
                    eax = L0043D8E4(M00644c6c, 6510052, 1);
                } else {
L0043d3c6:
                    eax = L0043CF50(A8);
                }
            }
        }
    }
}

/*    Procedure: 0x0043D3D4 - 0x0043D40D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043F170()
 *        L0043F26E()
 */

L0043D3D4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    eax = A8;
    M00644bf4 = 0;
    edx = 0x72;
    esi = eax + 38787;
    eax = eax + 0x72;
    do {
        cl = *eax;
        if(cl != 0 && !(cl & 0x20)) {
            *esi = 0;
        }
        edx = edx - 1;
        esi = esi + -338;
        eax = eax - 1;
    } while(edx > 0);
}

/*    Procedure: 0x0043D40E - 0x0043D40F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D40E()
{



}

/*    Procedure: 0x0043D410 - 0x0043D480
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043D484()
 *        L0043E014()
 */

L0043D410(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = *(A8 + 0xc8);
    edx = esi >> 0x10;
    esi = edx | esi << 0x10;
    if(esi != 0) {
        ebx = 0x1c;
        do {
            eax = *L004eeed4(0x1d);
            ecx = eax;
            if(1 << cl & esi) {
                break;
            }
            ebx = ebx - 1;
        } while(ebx >= 0);
        if(ebx < 0) {
            eax = 0;
        } else {
            ecx = eax ^ 0x10;
            edx = 1 << cl;
            *(A8 + 0xcc) = *(A8 + 0xcc) | edx;
            *(A8 + 0xc8) = *(A8 + 0xc8) & !edx;
            eax = *(eax * 4 + 0x4eedb0);
        }
    } else {
        eax = 0;
    }
}

/*    Procedure: 0x0043D481 - 0x0043D483
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D481()
{



}

/*    Procedure: 0x0043D484 - 0x0043D585
 *    Argument size: 8
 *    Local size: 96
 *    Save regs size: 12
 *    Called by:
 *        L004408BF()
 */

L0043D484(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffa0;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe8;



    eax = Ac;
    esi = 6572964;
    if(eax < *L00644C24) {
        *L00644C24 = *L00644C24 - eax;
    } else {
        *(esi + 0x80) = *(esi + 0x80) + 108000 - eax;
        *(esi + 0x1f4) = *(esi + 0x1f4) - 1;
        *(esi + 0x1f8) = *(esi + 0x1f8) - 1;
        if(( *L00501b8c() & 0xff) > *(esi + 0x1f4)) {
            edi = L0043D410(A8);
            if(edi == 0) {
                goto L0043d508;
            }
            Vffffffd0 = 39117;
            Vffffffd4 = edi;
            Vffffffe8 = -1;
            eax = L00421DEC( & Vffffffd0);
        } else {
L0043d508:
            eax = *L00501b8c() & 0xff;
            if(eax > *(esi + 0x1f8)) {
                al = *(A8 + 0xd0);
                if(al != 0) {
                    eax = al;
                    *(A8 + 0xd0) = 0;
                    *(A8 + 0x11e) = 0;
                    *(esi + 0x170) = *(esi + 0x170) + ( *(eax * 4 + 0x4eed74) & 65535);
                    edx = *(eax * 4 + 0x4eed74);
                    *(esi + 0x120) = edx + *(esi + 0x120);
                    *(esi + 0x118) = edx + *(esi + 0x118);
                    Vffffffa0 = 39116;
                    Vffffffb8 = -1;
                    eax = L00421DEC( & Vffffffa0);
                }
            }
        }
    }
}

/*    Procedure: 0x0043D586 - 0x0043D587
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D586()
{



}

/*    Procedure: 0x0043D588 - 0x0043D5FF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043008F()
 *        L00442EC4()
 */

L0043D588(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(!( *(eax + 0xca) & 0x80)) {
        M00644c18 = M00644c18 | 0xc;
        *(eax + 0x14f) = 2;
        *(eax + 0x151) = *(eax + 0x151) | 0x20;
        *(eax + 0x151) = *(eax + 0x151) & 0xbf;
        return L004703C0(0x1a, *(eax + 0x88));
    }
    if(!( *(eax + 0xca) & 8)) {
        M00644c18 = M00644c18 | 4;
        *(eax + 0x14f) = 2;
        *(eax + 0x151) = *(eax + 0x151) | 0x20;
        *(eax + 0x151) = *(eax + 0x151) & 0xbf;
        eax = L004703C0(0x19, *(eax + 0x88));
    }
}

/*    Procedure: 0x0043D600 - 0x0043D650
 *    Argument size: 8
 *    Local size: 16
 *    Save regs size: 8
 *    Called by:
 *        L0043D654()
 */

L0043D600(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    if(*(A8 + 0x82) <= 0x3f && Ac != A8) {
        eax = *L004dde44(A8, Ac, & Vfffffff0, & Vfffffffc);
        if(Vfffffffc <= 0x11) {
            eax = L0043E288(A8, 0x105, *(Ac + 0x86) & 0xff);
        }
    }
}

/*    Procedure: 0x0043D651 - 0x0043D653
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D651()
{



}

/*    Procedure: 0x0043D654 - 0x0043D6F4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042FE4D()
 *        L00442EC4()
 */

L0043D654(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 6595504;
    if(!( *(A8 + 0xcb) & 4)) {
        if(*(A8 + 0x118) == 0xff) {
            M00644cbc = M00644cbc + 4;
        } else {
            *(A8 + 0x116) = *(A8 + 0x116) + 4;
        }
        *(A8 + 0x14f) = 7;
        *(A8 + 0x151) = *(A8 + 0x151) | 0x40;
        *(A8 + 0x151) = *(A8 + 0x151) & 0xdf;
        eax = L004703C0(0x1b, *(A8 + 0x88));
        ebx = 0x72;
        do {
            edx = *edi;
            al = *(edx + ebx);
            if(al != 0) {
                ecx = *edi;
                if(!(al & 0x20)) {
                    eax = L0043D600(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + edx + 0x74, A8);
                }
            }
            ebx = ebx - 1;
        } while(ebx > 0);
        M00644c18 = M00644c18 | 0x10;
    }
    *(A8 + 0xc8) = *(A8 + 0xc8) & -67108865;
}

/*    Procedure: 0x0043D6F5 - 0x0043D6F7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D6F5()
{



}

/*    Procedure: 0x0043D6F8 - 0x0043D8E1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042EF05()
 *        L004408BF()
 */

L0043D6F8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    edi = *(A8 + 0xc8);
    eax = edi << 0x10;
    edi = eax | edi >> 0x10;
    ax = *(A8 + 0xe0);
    if(ax != *(A8 + 0xe2)) {
        eax = *(A8 + 0xe2) & 65535;
        asm("imul esi");
        eax = eax >> 5;
        if(!(edi & 0x1000)) {
            eax = eax >> 1;
        }
        edx = ( *(A8 + 0xe0) & 65535) + eax;
        if(edx > ( *(A8 + 0xe2) & 65535)) {
            ax = *(A8 + 0xe2);
            *(A8 + 0xe0) = ax;
        } else {
            *(A8 + 0xe0) = *(A8 + 0xe0) + ax;
        }
    }
    if(!(edi & 32768)) {
        eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 6) << 2;
        if(eax != ( *(A8 + 0xe4) & 65535)) {
            eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 6) << 2;
            if(eax >= ( *(A8 + 0xe4) & 65535) + Ac) {
                *(A8 + 0xe4) = *(A8 + 0xe4) + si;
            } else {
                eax = *( *L00501b9c( *(A8 + 0x82)) + 0x38);
                eax = *(eax + 6) << 2;
                *(A8 + 0xe4) = ax;
            }
        }
    }
    al = *(A8 + 0x14e);
    if(al != 0) {
        *(A8 + 0x14e) = Ac < al ? *(A8 + 0x14e) - Ac : 0;
    }
    al = *(A8 + 0x14f);
    if(al != 0) {
        if(Ac < al) {
            *(A8 + 0x14f) = *(A8 + 0x14f) - Ac;
        } else {
            *(A8 + 0x14f) = 0;
            *(A8 + 0x151) = *(A8 + 0x151) & 0x9f;
        }
    }
    dx = *(A8 + 0xea);
    if(dx != 0) {
        eax = Ac << 0xa;
        if(!(edi & 65536)) {
            eax = eax << 2;
        }
        *(A8 + 0xea) = eax < (dx & 65535) ? *(A8 + 0xea) - ax : 0;
    }
    eax = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 6);
    edx = *(A8 + 0xb6) > 0 ? *(A8 + 0xb6) : ~( *(A8 + 0xb6));
    ecx = *(A8 + 0xb8) > 0 ? *(A8 + 0xb8) : ~( *(A8 + 0xb8));
    edx = edx + ecx;
    ecx = *(A8 + 0xba) > 0 ? *(A8 + 0xba) : ~( *(A8 + 0xba));
    edx = edx + ecx;
    asm("imul edx");
    eax = eax >> 9;
    asm("imul esi");
    return L0043CDC4(A8, eax);
}

/*    Procedure: 0x0043D8E2 - 0x0043D8E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D8E2()
{



}

/*    Procedure: 0x0043D8E4 - 0x0043D9FD
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0042E1FA()
 *        L0042E326()
 *        L0042E654()
 *        L0042EA2D()
 *        L0042EBA8()
 *        L0042ED79()
 *        L0043D05C()
 *        L00440C98()
 *        L00440CDD()
 *        L00441700()
 *        L004424FC()
 */

L0043D8E4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    Ac = A10;
    if(M005015f0 != 0) {
        if(Ac & 1) {
            goto L0043d912;
        }
        if(!( *L00501b8c() & 0x80)) {
L0043d912:
            eax = *L004eeedc(M0064a3b0, A8, 0x29, 0x9e, ebp - 4);
            ebx = eax;
            if(ebx != 0) {
                (save)Ac;
                edi = ebx + 0x3e;
                ecx = 6;
                asm("rep movsd");
                (restore)Ac;
                *(ebx + 0x87) = 0xb;
                *(ebx + 0xff) = 0x1a;
                *(ebx + 0x118) = 0xf8;
                M00644b9c = *L00501b8c();
                M00644ba0 = *L00501b8c();
                *(ebx + 0xa4) = M00644b9c | 32768;
                L0045AFF0(ebx, M00644b9c, M00644ba0);
                if(!(Ac & 2)) {
                    *(ebx + 0x7e) = *(ebx + 0x7e) + 2;
                }
                if(!(Ac & 4)) {
                    *(ebx + 0x7e) = *(ebx + 0x7e) - 1;
                }
                eax = *L00501b94( *(M00644c6c + 0x56) & 0xff, M0064a3b0);
                if(*(eax + 0x14c) & 0x10) {
                    goto L0043d9e0;
                }
                if(M00644c80 < 40000) {
L0043d9e0:
                    *(ebx + 0x8c) = 0;
                    *(ebx + 0x90) = 0;
                    eax = 0;
                    *(ebx + 0x94) = 0;
                }
            }
        }
    }
}

/*    Procedure: 0x0043D9FE - 0x0043D9FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043D9FE()
{



}

/*    Procedure: 0x0043DA00 - 0x0043DA25
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042D299()
 *        L0042D66E()
 *        L0042D768()
 *        L0042D862()
 *        L0042E1FA()
 *        L0042E270()
 *        L0042E38F()
 *        L00430365()
 *        L004303D2()
 *        L0043EEF8()
 */

L0043DA00(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0x86) & 0xff;
    ecx = M00501ba8;
    if(!( *(ecx + edx) & 0x20)) {
        M00644c14 = M00644c14 - 1;
    }
    *(ecx + edx) = 0;
}

/*    Procedure: 0x0043DA26 - 0x0043DA27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043DA26()
{



}

/*    Procedure: 0x0043DA28 - 0x0043DD27
 *    Argument size: 12
 *    Local size: 80
 *    Save regs size: 12
 *    Called by:
 *        L0042FE4D()
 *        L00444804()
 */

L0043DA28(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vffffffff;



    esi = A8;
    bl = *(esi + Ac + 0xd5);
    if(bl == 0) {
        eax = 0;
    } else {
        Vffffffff = ebx & 0x40;
        bl = bl & 0xf;
        if(esi == M00644c6c) {
            L004124F8(5, *((bl & 0xff) * 4 + 0x4eef08));
            if(L00412518(5) == 0) {
                eax = 0;
                goto L0043dd21;
            }
            L004124F8(5, 0);
        }
        edi = *L004eeedc(M0064a3b0, esi, 0x4b, *((bl & 0xff) * 4 + 0x4eeee0), & Vfffffff8);
        if(edi == 0) {
            eax = 0;
        } else {
            *(esi + Ac + 0xd5) = 0;
            if(( *(esi + 0x86) & 0xff) == M00644c64) {
                M00644c93 = *(edi + 0x86);
                if(!(M00644c6a & 4)) {
                    L0041C44F(3, esi);
                }
                M00644c6a = M00644c6a | 4;
                M00644cbc = M00644cbc + 1;
            } else {
                *(esi + 0x116) = *(esi + 0x116) + 1;
            }
            *(edi + 0x87) = 0xb;
            *(edi + 0x118) = 0xfd;
            *(edi + 0x100) = *(esi + 0x86);
            *(edi + 0xc8) = 0;
            *(edi + 0xd0) = 0;
            if(Vffffffff != 0) {
                (save)esi;
                (save)edi;
                edi = edi + 0x124;
                esi = "Mine";
                eax = edi;
                *edi = *esi;
                edi = edi + 4;
                esi = esi + 4;
                *edi = *esi;
                edi = edi + 1;
                esi = esi + 1;
                (restore)edi;
                (restore)esi;
                *(edi + 0xff) = 0x14;
                if(*(edi + 0x82) == 4) {
                    *(edi + 0xff) = 0x16;
                }
            } else {
                *(edi + 0xff) = 0x13;
                *(edi + 0xba) = 0x442;
                (save)esi;
                (save)edi;
                edi = edi + 0x124;
                esi = "Missile";
                eax = edi;
                *edi = *esi;
                edi = edi + 4;
                esi = esi + 4;
                *edi = *esi;
                edi = edi + 4;
                esi = esi + 4;
                (restore)edi;
                (restore)esi;
                *(edi + 0xfe) = A10;
                *(edi + 0x106) = 8;
                if(A10 == M00644c64) {
                    Vffffffb0 = 39108;
                    Vffffffc8 = -1;
                    L00421DEC( & Vffffffb0);
                    L004701BE(0x1e);
                } else {
                    eax = *L00501b94(A10, M0064a3b0);
                    if(*(eax + 0x87) == 0xb && *(eax + 0xff) < 0xc) {
                        *(eax + 0xff) = 0xc;
                        *(eax + 0xfe) = *(edi + 0x86);
                        L00414070(0x17, 0, *(eax + 0x86) & 0xff);
                    }
                }
                L004703C0(0x20, *(esi + 0x88));
            }
            *(edi + 0x9e) = 0;
            Vffffffec = L004537B0( *(edi + 0xc), ~( *(esi + 0x140)));
            Vfffffff0 = L004537B0( *(edi + 0x10), ~( *(esi + 0x140)));
            Vfffffff4 = L004537B0( *(edi + 0x14), ~( *(esi + 0x140)));
            Vffffffe0 = *edi >> 0x12;
            Vffffffe4 = *(edi + 4) >> 0x12;
            Vffffffe8 = *(edi + 8) >> 0x12;
            if(*(edi + 0x140) >= 18000) {
                Vffffffe0 = Vffffffe0 + Vffffffe0;
                Vffffffe4 = Vffffffe4 + Vffffffe4;
                Vffffffe8 = Vffffffe8 + Vffffffe8;
            }
            if(!(Ac & 1)) {
                Vffffffec = Vffffffec + Vffffffe0;
                Vfffffff0 = Vfffffff0 + Vffffffe4;
                Vfffffff4 = Vfffffff4 + Vffffffe8;
            } else {
                Vffffffec = Vffffffec - Vffffffe0;
                Vfffffff0 = Vfffffff0 - Vffffffe4;
                Vfffffff4 = Vfffffff4 - Vffffffe8;
            }
            *L005016f4(edi, & Vffffffec);
            eax = L00414070(0xc, *(esi + 0x86) & 0xff, *((bl & 0xff) * 4 + 0x4eef08)) | -1;
        }
    }
L0043dd21:
}

/*    Procedure: 0x0043DD28 - 0x0043DFA6
 *    Argument size: 8
 *    Local size: 112
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L0043E288()
 */

L0043DD28(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffff90;
    /* unknown */ void  Vffffffa8;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(Ac != 0 && Ac == M00644c64) {
        if(*(A8 + 0x118) == 0xfb) {
            eax = *(A8 + 0x11a);
            if(eax != 0 && !( *(M00644c6c + 0xca) & 0x40)) {
                Vffffffc0 = 34357;
                Vffffffd8 = -1;
                Vffffffcc = eax;
                L00421DEC( & Vffffffc0);
                M00644cb8 = M00644cb8 + *(A8 + 0x11a) + *(A8 + 0x11a) + ( *(A8 + 0x11a) + *(A8 + 0x11a)) * 4;
            }
        }
        if(*( *L00501b9c( *(A8 + 0x82)) + 0x38) != 0) {
            ebx = M00644d40;
            M00644d40 = M00644d40 + *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 0x16);
            if(M00644d40 >> 0x10 != ebx >> 0x10) {
                Vffffff90 = 39119;
                Vffffffa8 = -1;
                L00421DEC( & Vffffff90);
            }
        }
    }
    L004703C0(5, *(A8 + 0x88));
    ebx = *L004eeedc(M0064a3b0, A8, 9, 0x9b, & Vfffffffc);
    if(ebx != 0) {
        *(ebx + 0x87) = 0xb;
        *(ebx + 0xff) = 0x1c;
        *(ebx + 0xa4) = -1;
        *(ebx + 0x9e) = 65535;
        M00644b9c = *L00501b8c();
        M00644ba0 = *L00501b8c();
        L0045AFF0(ebx, M00644b9c, M00644ba0);
        if(*( *L00501b9c( *(A8 + 0x82)) + 0x38) != 0) {
            Vfffffff8 = *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 6);
            *(ebx + 0x7e) = *(ebx + 0x7e) - 1;
            if(Vfffffff8 >= 0xa) {
                L004703C0(0x1f, *(A8 + 0x88));
                *(ebx + 0x7e) = *(ebx + 0x7e) + 1;
                if(Vfffffff8 >= 0x190) {
                    Vfffffff4 = *L00501b9c( *(A8 + 0x82));
                    Vfffffff0 = *L00501b9c( *(ebx + 0x82));
                    *(ebx + 0x7e) = *(Vfffffff4 + 0x14) + *(Vfffffff4 + 0x18) - *(Vfffffff0 + 0x14) + *(Vfffffff0 + 0x18) + 4;
                }
            }
        }
        eax = *(A8 + 0x82);
        if(eax >= 0xf && eax <= 0x3f) {
            ebx = *L004eeed4(6) - 2;
            do {
                L0043CB30(36367, A8);
                ebx = ebx - 1;
            } while(ebx > 0);
            ebx = ( *(A8 + 0x116) & 65535) >> 1;
            if(ebx > 4) {
                ebx = 4;
            }
            if(ebx > 0) {
                eax = *L004eeed4(ebx) - 2;
                ebx = eax;
                if(eax >= 0) {
                    do {
                        (save)A8;
                        (save)( *(( *L00501b8c() & 0x1f) + 0x4eee28) & 0xff) + 36352;
                        L0043CB30();
                        esp = esp + 8;
                        ebx = ebx - 1;
                    } while(ebx >= 0);
                }
            }
        }
    }
    L0043CA84(A8, Ac);
    return 0;
}

/*    Procedure: 0x0043DFA7 - 0x0043DFA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043DFA7()
{



}

/*    Procedure: 0x0043DFA8 - 0x0043DFC9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043DFCC()
 *        L0043E014()
 *        L0043E1E4()
 */

L0043DFA8(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x118) == 0xff) {
        L00419470(0x17, 0);
    }
    return 1;
}

/*    Procedure: 0x0043DFCA - 0x0043DFCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043DFCA()
{



}

/*    Procedure: 0x0043DFCC - 0x0043E013
 *    Argument size: 12
 *    Local size: 48
 *    Save regs size: 4
 *    Called by:
 *        L0043E014()
 *        L0043E06C()
 *        L0043E0B4()
 *        L0043E0FC()
 *        L0043E1E4()
 */

L0043DFCC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe8;



    if(*(A8 + 0x118) == 0xff) {
        Vffffffe8 = -1;
        Vffffffd0 = Ac;
        Vffffffd4 = A10;
        L00421DEC( & Vffffffd0);
        L00419470(0x17, 0);
    }
    return L0043DFA8(A8);
}

/*    Procedure: 0x0043E014 - 0x0043E041
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E19C()
 */

L0043E014(A8)
/* unknown */ void  A8;
{



    eax = L0043D410(A8);
    if(eax != 0) {
        return L0043DFCC(A8, 39113, eax);
    }
    return L0043DFA8(A8);
}

/*    Procedure: 0x0043E042 - 0x0043E043
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E042()
{



}

/*    Procedure: 0x0043E044 - 0x0043E06B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043E06C()
 *        L0043E0B4()
 */

L0043E044(A8)
/* unknown */ void  A8;
{



    M00644d14 = M00644d14 + A8;
    M00644cc4 = M00644cc4 + eax;
    eax = eax + M00644cbc;
    M00644cbc = eax;
    return M00644cbc;
}

/*    Procedure: 0x0043E06C - 0x0043E0B2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E19C()
 */

L0043E06C(A8)
/* unknown */ void  A8;
{



    eax = *(A8 + 0xd0);
    *(A8 + 0xd0) = 0;
    *(A8 + 0x11e) = 0;
    if(*(A8 + 0x118) == 0xff) {
        L0043E044( *(eax * 4 + 0x4eed74));
    }
    return L0043DFCC(A8, 39114, 0);
}

/*    Procedure: 0x0043E0B3 - 0x0043E0B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E0B3()
{



}

/*    Procedure: 0x0043E0B4 - 0x0043E0FB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E19C()
 */

L0043E0B4(A8)
/* unknown */ void  A8;
{



    al = *(A8 + 0xd0);
    if(al != 0) {
        eax = al;
        *(A8 + 0xd0) = 1;
        if(*(A8 + 0x118) == 0xff) {
            L0043E044( *(eax * 4 + 0x4eed74) - 4);
        }
    }
    return L0043DFCC(A8, 39114, 0);
}

/*    Procedure: 0x0043E0FC - 0x0043E19A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E19C()
 */

L0043E0FC(A8)
/* unknown */ void  A8;
{



    eax = *L004eeed4(6);
    edx = eax;
    if(edx <= 5) {
        switch(edx) {
            case 0:
L0043e132:
                *(A8 + 0xbc) = 0;
                goto L0043e172;
            case 1:
                *(A8 + 0xbe) = 0;
                goto L0043e172;
            case 2:
                *(A8 + 0xc0) = 0;
                goto L0043e172;
            case 3:
                *(A8 + 0xc2) = 0;
                goto L0043e172;
            case 4:
                *(A8 + 0xc4) = 0;
                goto L0043e172;
            case 5:
                *(A8 + 0xc6) = 0;
                goto L0043e172;
        }
        goto L0043e132;
    }
L0043e172:
    if(*(A8 + 0x118) == 0xff) {
        *(eax * 4 + 6573496) = 0;
    }
    return L0043DFCC(A8, 39115, eax + 39342);
}

/*    Procedure: 0x0043E19B - 0x0043E19B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E19B()
{



}

/*    Procedure: 0x0043E19C - 0x0043E1E2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E23C()
 */

L0043E19C(A8)
/* unknown */ void  A8;
{



    *L00501b8c();
    if(ax >= 21845) {
        return L0043E014(A8);
    }
    if(ax < 0x888) {
        return L0043E06C(A8);
    }
    if(ax < 7281) {
        return L0043E0B4(A8);
    }
    return L0043E0FC(A8);
}

/*    Procedure: 0x0043E1E3 - 0x0043E1E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E1E3()
{



}

/*    Procedure: 0x0043E1E4 - 0x0043E23B
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043E23C()
 */

L0043E1E4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = Ac;
    if(ecx < M00644cc4) {
        edx = 0x25;
        eax = 6573346;
        do {
            if(!(ecx = ecx - ( *eax & 65535))) {
                goto L0043e208;
            }
            edx = edx - 1;
            eax = eax - 2;
        } while(edx >= 0);
        goto L0043e231;
L0043e208:
        *eax = *eax - 1;
        M00644d14 = M00644d14 + 1;
        eax = L0043DFCC(A8, 39112, edx + 36352);
    } else {
L0043e231:
        eax = L0043DFA8(A8);
    }
}

/*    Procedure: 0x0043E23C - 0x0043E287
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E288()
 */

L0043E23C(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x118) == 0xff) {
        eax = *L004eeed4( *( *( *L00501b9c( *(A8 + 0x82)) + 0x38) + 8));
        if(eax < M00644cbc) {
            return L0043E1E4(A8, eax);
        }
    }
    return L0043E19C(A8);
}

/*    Procedure: 0x0043E288 - 0x0043E43B
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00412C5C()
 *        L00427898()
 *        L004283B0()
 *        L0042E7CB()
 *        L0042E868()
 *        L0043D05C()
 *        L0043D600()
 *        L00440DAC()
 *        L00441A7C()
 */

L0043E288(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = Ac;
    if(edi < 0) {
        edi = 2147483647;
    }
    L004124F8(0xd, *(A8 + 0x86) & 0xff);
    L004124F8(0xe, A10);
    L004124F8(0xc, edi);
    edi = L00412518(0xc);
    esi = 0;
    for(Vfffffff0 = 6496625; esi < M00632168; Vfffffff0 = Vfffffff0 + 8) {
        if(!( *Vfffffff0 & 4)) {
            Vfffffff4 = 1;
            Vfffffff8 = A8;
            Vfffffffc = *(A8 + 0x86);
            L0041934C(esi, 0xb, & Vfffffff4);
        }
        esi = esi + 1;
    }
    if(*(A8 + 0x87) != 3) {
        if(*(A8 + 0x87) != 0xb) {
            goto L0043e41e;
        }
        eax = *(A8 + 0x86) & 0xff;
        if(*(M00501ba8 + eax) & 0x10 || *( *L00501b9c( *(A8 + 0x82)) + 0x38) == 0) {
            goto L0043e41e;
        }
    }
    if(edi <= ( *(A8 + 0xe0) & 65535)) {
        *(A8 + 0xe0) = *(A8 + 0xe0) - di;
        L004703C0(0x1c, *(A8 + 0x88));
        *(A8 + 0x151) = *(A8 + 0x151) | 1;
    } else {
        edi = edi - ( *(A8 + 0xe0) & 65535);
        *(A8 + 0xe0) = 0;
        if(edi >= ( *(A8 + 0xe4) & 65535)) {
            eax = L0043DD28(A8, A10);
            goto L0043e435;
        }
        *(A8 + 0xe4) = *(A8 + 0xe4) - di;
        *(A8 + 0x14e) = 0xa;
        L004703C0(0x1d, *(A8 + 0x88));
        esi = ( *(A8 + 0xe4) & 65535) >> 2;
        if(edi >= esi) {
            goto L0043e3f9;
        }
        ecx = *L00501b8c();
        eax = edi << 0xf;
        asm("cdq");
        edx = esi / esi % esi / esi;
        if(ecx < eax) {
L0043e3f9:
            eax = L0043E23C(A8);
            goto L0043e435;
        }
    }
    if(*(A8 + 0x118) == 0xff) {
        L00419470(0x17, 0);
    }
    eax = 1;
    goto L0043e435;
L0043e41e:
    L004703C0(0x1d, *(A8 + 0x88));
    eax = 1;
L0043e435:
}

/*    Procedure: 0x0043E43C - 0x0043E4F6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043E4F8()
 */

L0043E43C(A8)
/* unknown */ void  A8;
{



    esp = esp + -1304;
    (save)ebx;
    (save)esi;
    (save)edi;
    L00474830(ebp + -1304, "Cabin%i.bmp", A8);
    eax = L00473538(ebp + -1304, "rb");
    esi = eax;
    if(esi != 0) {
        if(L004737C4(ebp - 0x18, 0xe, 1, esi) == 1) {
            eax = *(ebp - 0xe);
            edx = M005b0b6c;
            *(ebp - 8) = *(edx + 1) & 0xff;
            edi = *(edx + 2) + 3 & -4;
            L00473878(esi, eax, 0);
            *(ebp - 4) = M005b0b6c + 8;
            ebx = 1;
            if(1 <= *(ebp - 8)) {
                do {
                    (save)esi;
                    (save)edi;
                    (save)1;
                    eax = *(ebp - 8) - ebx;
                    asm("imul edi");
                    (save)eax + *(ebp - 4);
                    L004737C4();
                    esp = esp + 0x10;
                    ebx = ebx + 1;
                } while(ebx <= *(ebp - 8));
            }
        }
        eax = L004731B8(esi);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0043E4F7 - 0x0043E4F7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E4F7()
{



}

/*    Procedure: 0x0043E4F8 - 0x0043E559
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043E55C()
 *        L0043E580()
 */

L0043E4F8()
{
    /* unknown */ void  ebx;



    ebx = *(M00644c6c + 0x82);
    if(ebx == 0x34) {
        ebx = 5;
    } else {
        ecx = *( *( *L00501b9c(ebx) + 0x38) + 6);
        eax = 0;
        edx = 0x4eef30;
        do {
            if(ecx < *edx) {
                break;
            }
            eax = eax + 1;
            edx = edx + 8;
        } while(eax < 5);
        ebx = *(eax * 8 + 0x4eef34);
    }
    if(ebx != M004eef58) {
        L0043E43C(ebx);
        M004eef58 = ebx;
    }
    return 0x60;
}

/*    Procedure: 0x0043E55A - 0x0043E55B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E55A()
{



}

/*    Procedure: 0x0043E55C - 0x0043E57D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416998()
 *        L00416CB8()
 *        L0041E55C()
 *        L0041F544()
 *        L0041F6D4()
 *        L00420DD8()
 *        L00420F18()
 *        L004219F8()
 *        L004241FC()
 *        L004267CC()
 *        L00434A50()
 *        L00435860()
 *        L0043672C()
 *        L0043ECB8()
 *        L0043F26E()
 *        L00442880()
 */

L0043E55C(A8)
/* unknown */ void  A8;
{



    eax = L0043E4F8();
    if(A8 == 0) {
        eax = L00457E1C(0x502e84, eax, 0, 0);
    }
}

/*    Procedure: 0x0043E57E - 0x0043E57F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E57E()
{



}

/*    Procedure: 0x0043E580 - 0x0043E5A6
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E55C()
 *        L0041EC08()
 *        L0041F544()
 *        L0041F6D4()
 *        L004205E8()
 *        L004207A0()
 *        L00420DD8()
 *        L0042718C()
 */

L0043E580(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L00457DEC(L0043E4F8(), 0, 0, A8, Ac, A10, A14);
}

/*    Procedure: 0x0043E5A7 - 0x0043E5BD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E5A7()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    edx = *(ebp + 0xc);
    eax = *(ebp + 8);
    cl = *eax;
    *eax = *eax | dl;
    eax = edx & cl;
    (restore)ebp;
}

/*    Procedure: 0x0043E5BE - 0x0043E5BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E5BE()
{



}

/*    Procedure: 0x0043E5C0 - 0x0043E5D4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C5F2()
 */

L0043E5C0()
{



    M00644bc8 = 305419896;
    M00644bcc = -1985229329;
}

/*    Procedure: 0x0043E5D5 - 0x0043E74F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E5D5()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    esp = esp - 0x24;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = 6595160;
    edx = 0x4eefdc;
    esi = 0x4eefe8;
    edi = ebp - 0x24;
    ecx = 9;
    asm("rep movsd");
    if(*(ebp + 8) == 0) {
        esi = ebp - 0x24;
        edi = ebx;
        ecx = 9;
        asm("rep movsd");
        *(ebx + 0x24) = 0x3c;
        *(ebx + 0x25) = 0;
        eax = *edx;
        *(ebx + 0x26) = eax;
        *(ebx + 0x2e) = *(edx + 4);
        ecx = *(edx + 8);
        *(ebx + 0x36) = ecx;
        ecx = *(ebx + 0x36) | -1;
        if(eax >= 0) {
            ecx = ecx + 1;
        }
        *(ebx + 0x2a) = ecx;
        eax = eax | -1;
        if(*(edx + 4) >= 0) {
            eax = eax + 1;
        }
        *(ebx + 0x32) = eax;
        eax = eax | -1;
        if(*(edx + 8) >= 0) {
            eax = eax + 1;
        }
        *(ebx + 0x32) = eax;
        L00471128(ebx + 0x3e, ebx + 0x26, 0x18);
        *(ebx + 0x56) = 0;
        *(ebx + 0x57) = 0;
        *(ebx + 0x7e) = 0;
        *(ebx + 0x82) = 0xb0;
        *(ebx + 0x58) = 0;
        *(ebx + 0x86) = 0;
        *(ebx + 0x87) = 0;
        *(ebx + 0x88) = 0;
        *(ebx + 0x8b) = 0;
        *(ebx + 0x8a) = 0;
        L00471198(ebx + 0x8c, 0, 0xc);
        *(ebx + 0x98) = 32768;
        *(ebx + 0x9a) = 32768;
        *(ebx + 0x9c) = 0;
        *(ebx + 0x9e) = 0;
        *(ebx + 0xa0) = 2023371862;
        *(ebx + 0xa4) = 0;
        edi = ebx + 0x124;
        eax = edi;
        *edi = *L004EF010;
        edi = edi + 4;
        *edi = *L004EF014;
        edi = edi + 1;
        esi = 0x4ef015;
        *(ebx + 0x138) = 0;
        *(ebx + 0x13c) = 0;
        *(ebx + 0x140) = 0;
        *(ebx + 0x144) = 0;
        eax = 0;
        *(ebx + 0x148) = 0;
        *(ebx + 0x14c) = 0;
        *(ebx + 0x14d) = 0;
        *(ebx + 0x14e) = 0;
        *(ebx + 0x14f) = 0;
        *(ebx + 0x150) = 0;
        *(ebx + 0x151) = 0;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0043E750 - 0x0043E7A0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043E7A4()
 */

L0043E750(A8)
/* unknown */ void  A8;
{



    M00644bd0 = M004eefb8;
    M00644bd4 = M004eefbc;
    M00644bd8 = M004eefc0;
    L00471128(6573048, 0x4eefc4, 0x18);
    M0064a2da = A8;
    return *L005030ec(6595160);
}

/*    Procedure: 0x0043E7A1 - 0x0043E7A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043E7A1()
{



}

/*    Procedure: 0x0043E7A4 - 0x0043E88A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043C5F2()
 */

L0043E7A4()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = 6572964;
    eax = *L00644BA4;
    M0064a3ac = eax;
    if(M0064a3ac < 534382) {
        *(ebp - 3) = 0;
        *(ebp - 2) = 0;
        *(ebp - 1) = 0;
        *L00644BC4 = 0;
        *L00644BC5 = 0;
        *L00644BC6 = 4;
        L0045527C(ebp - 3);
        M0064a2f4 = M0064a3ac >> 0xa;
        eax = L0043E750(0xb1);
    } else {
        M0064a2f4 = M0064a3ac - 534382 >> 0xa;
        *(ebx + 0x1c) = 0;
        L0043E750(0xb0);
        if(*(ebx + 0x1c) == 0) {
            *(ebx + 0x20) = 0;
            *(ebx + 0x21) = 0;
            *(ebx + 0x22) = 4;
        }
        eax = L0045527C(ebx + 0x20);
    }
    if(M0064a3ac >= 8289142) {
        L004552D4();
        L00458384();
        L004552D4();
        *(ebx + 0x74) = *(ebx + 0x74) | 0x20;
        *ebx = 0;
        M0064a37d = M0064a37d + 1;
        if((M0064a37d & 0xff) >= 0x39) {
            M0064a37d = 0x30;
            al = M0064a37c;
            M0064a37c = M0064a37c + 1;
            if(al >= 0x39) {
                M0064a37c = 0x30;
            }
        }
    }
}

/*    Procedure: 0x0043E88B - 0x0043EC41
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 12
 */

L0043E88B()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    ebx = 6572964;
    esi = 0x5000d8;
    if(*L00644BA4 > 497100 && *L00644BB1 == 0) {
        eax = *(L00457DBC(0x42) + 2) >> 1;
        >= ? 0x43e8c0 : ;
        asm("adc eax,+0x0");
        Vfffffffc = 0xa0 - ax;
        Vfffffffe = 0x9e;
        L004553B4(0x42, & Vfffffffc);
    }
    if(*ebx < 534382) {
        eax = 0;
        M004ef00c = 0;
    } else {
        edi = *L00500398() & 0xff;
        if(edi == 0x56) {
            M004ef00c = 1;
        } else {
            *L0050039c(edi);
        }
        if(M004ef00c != 0) {
            *esi(37933, & Vffffffe8, 0x10, 0xa, 0x3c, 0x136);
        }
        if(*ebx < 1031482) {
            eax = *esi(37915, & Vffffffe8, 0xf, 0x5a, 0xf, 0);
        } else {
            eax = *ebx;
            if(eax >= 1578292) {
                if(eax < 2025682) {
                    eax = *esi(37916, & Vffffffe8, 0xf, 2, 0x44, 0);
                } else {
                    eax = *ebx;
                    if(eax >= 2174812) {
                        if(eax < 2423362) {
                            *esi(37917, & Vffffffe8, 0xf, 0xf5, 0x14, 0);
                        }
                        eax = *ebx;
                        if(eax >= 2323942) {
                            if(eax < 2572492) {
                                *esi(37918, & Vffffffe8, 0xf, 0xa, 0x73, 0);
                            }
                            eax = *ebx;
                            if(eax >= 2970172) {
                                if(eax < 3467272) {
                                    *esi(37919, & Vffffffe8, 0xf, 0xf0, 0xf, 0);
                                }
                                eax = *ebx;
                                if(eax >= 3318142) {
                                    if(eax < 3616402) {
                                        eax = *esi(37920, & Vffffffe8, 0xf, 5, 0x7d, 0);
                                    } else {
                                        eax = *ebx;
                                        if(eax >= 3914662) {
                                            if(eax < 4163212) {
                                                eax = *esi(37921, & Vffffffe8, 0xf, 0xf5, 0xf, 0);
                                            } else {
                                                eax = *ebx;
                                                if(eax >= 0x48a0b4) {
                                                    if(eax < 0x4d2dc8) {
                                                        *esi(37922, & Vffffffe8, 0xf, 0x14, 0x14, 0);
                                                    }
                                                    eax = *ebx;
                                                    if(eax >= 0x4ae73e) {
                                                        if(eax < 0x4f7452) {
                                                            *esi(37923, & Vffffffe8, 0xf, 0xf0, 0x73, 0);
                                                        }
                                                        eax = *ebx;
                                                        if(eax >= 0x4d2dc8) {
                                                            if(eax < 0x50f8ae) {
                                                                *esi(37924, & Vffffffe8, 0xf, 0x14, 0x14, 0);
                                                            }
                                                            eax = *ebx;
                                                            if(eax >= 0x588e7a) {
                                                                if(eax < 0x5d1b8e) {
                                                                    *esi(37925, & Vffffffe8, 0xf, 5, 0x7d, 0);
                                                                }
                                                                eax = *ebx;
                                                                if(eax >= 0x5ad504) {
                                                                    if(eax < 0x5e9fea) {
                                                                        eax = *esi(37926, & Vffffffe8, 0xf, 0xf5, 0xa, 0);
                                                                    } else {
                                                                        eax = *ebx;
                                                                        if(eax >= 6449872) {
                                                                            if(eax < 6797842) {
                                                                                *esi(37928, & Vffffffe8, 0xf, 0x14, 0x64, 0);
                                                                            }
                                                                            eax = *ebx;
                                                                            if(eax >= 6648712) {
                                                                                if(eax < 6897262) {
                                                                                    eax = *esi(37927, & Vffffffe8, 0xf, 0x8c, 0xa, 0);
                                                                                } else {
                                                                                    eax = *ebx;
                                                                                    if(eax >= 7046392) {
                                                                                        if(eax < 7394362) {
                                                                                            *esi(37929, & Vffffffe8, 0xf, 5, 0x14, 0);
                                                                                        }
                                                                                        eax = *ebx;
                                                                                        if(eax > 7145812 && eax < 7493782) {
                                                                                            eax = *esi(37930, & Vffffffe8, 0xf, 0xdc, 0x14, 0);
                                                                                        }
                                                                                        if(*ebx >= 7841752) {
                                                                                            *esi(37931, & Vffffffe8, 0xf, 5, 0xa, 0x136);
                                                                                            eax = *esi(37932, & Vffffffe8, 0xf, 5, 0x44, 0x136);
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x0043EC42 - 0x0043ECB7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EC42()
{



    *eax = *eax + al;
    (save)ebp;
    eax = *(esp + 8);
    edx = 6572964;
    if(!(ecx = (eax & 0xff) - 1)) {
        *L00644F9E = 0;
        *L00644FA4 = *L00644BA4;
        *L00644FA8 = *L00644BA8;
        *L00644FAE = 0x2a;
        *L00644FAC = 32767;
        if(!(eax = (eax >> 8) - 1)) {
            if(!(eax = eax - 1)) {
                if(eax = eax - 1) {
                    goto L0043ec9d;
                }
                goto L0043ecaf;
            }
            *(edx + 0x3fb) = 0x60;
            (restore)ebp;
            return;
L0043ec9d:
            *(edx + 0x3fb) = 0x70;
            (restore)ebp;
            return;
        }
        *(edx + 0x3fb) = 0x6c;
        (restore)ebp;
        return;
L0043ecaf:
        *(edx + 0x3fb) = 0x6f;
    }
    (restore)ebp;
}

/*    Procedure: 0x0043ECB8 - 0x0043ED2D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L0043ECB8()
{
    /* unknown */ void  ebx;



    M0063219a = 0;
    M0063219b = 0;
    L0041D4C0(0x50);
    *L005003b0();
    L0043E55C(0);
    L00455244();
    if(!(M00644f9e & 0x10)) {
        M00644f9f = M00644e9e;
        M00644fac = M00644fa0;
    }
    if(!(M00644f9e & 1)) {
        L0041D6C0(0, 0, 0);
    }
    ebx = 0x1a;
    do {
        eax = L0041D4C0(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0x24);
}

/*    Procedure: 0x0043ED2E - 0x0043ED2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043ED2E()
{



}

/*    Procedure: 0x0043ED30 - 0x0043ED53
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043F010()
 */

L0043ED30(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x4ef044);
}

/*    Procedure: 0x0043ED54 - 0x0043ED78
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00434A50()
 *        L00435957()
 *        L0043623A()
 */

L0043ED54()
{



    M00644f9e = M00644f9e | 0x10;
    M00644e9e = M00644f9f;
    L0043EDB0();
    L0043EE68();
    return L0043ED8C();
}

/*    Procedure: 0x0043ED79 - 0x0043ED7B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043ED79()
{



}

/*    Procedure: 0x0043ED7C - 0x0043ED88
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043ED8C()
 */

L0043ED7C()
{



    return L0041D49C(0x50);
}

/*    Procedure: 0x0043ED89 - 0x0043ED8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043ED89()
{



}

/*    Procedure: 0x0043ED8C - 0x0043EDAE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043ED54()
 *        L0043EF64()
 *        L0043F154()
 */

L0043ED8C()
{



    if(!( *((M00644e9e & 0xff) + 6533968) & 8)) {
        M00644e9e = M00644e9e - 1;
    }
    return L0043ED7C(0);
}

/*    Procedure: 0x0043EDAF - 0x0043EDAF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EDAF()
{



}

/*    Procedure: 0x0043EDB0 - 0x0043EE31
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0043ED54()
 *        L0043EF64()
 */

L0043EDB0()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    *L004eecd0(5);
    *(ebx + 0x3fa) = *(ebx + 0x3fa) & 0xfe;
    *(ebx + 0x3fe) = 0x33;
    *(ebx + 0x3fc) = 32767;
    *(ebx + 0x400) = *ebx;
    *(ebx + 0x404) = *(ebx + 4);
    *L005003c4(0x100, 0x100);
    M0063219a = 0xff;
    M0063219b = 0xff;
    *(ebx + 0xc) = 0xfe;
    *(ebx + 0x20) = 2;
    *(ebx + 0x21) = 2;
    *(ebx + 0x22) = 2;
    *L005003b0();
    return *L005003b4(0x4ef04c);
}

/*    Procedure: 0x0043EE32 - 0x0043EE33
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EE32()
{



}

/*    Procedure: 0x0043EE34 - 0x0043EE66
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043EE68()
 */

L0043EE34(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    M00501ba8 = eax;
    ebx = 0x72;
    esi = eax + 0x72;
    do {
        if(!( *esi & 0x20)) {
            eax = L0043EEF8( *L00501b90(ebx));
        }
        ebx = ebx - 1;
        esi = esi - 1;
    } while(ebx > 0);
}

/*    Procedure: 0x0043EE67 - 0x0043EE67
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EE67()
{



}

/*    Procedure: 0x0043EE68 - 0x0043EEA5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043ED54()
 */

L0043EE68()
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    L0043FA4C(6533968);
    esi = M0064a3b0;
    edi = 6533968;
    ecx = 9746;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    M00644fa0 = M00644fac;
    return L0043EE34(6533968);
}

/*    Procedure: 0x0043EEA6 - 0x0043EEA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EEA6()
{



}

/*    Procedure: 0x0043EEA8 - 0x0043EEF5
 *    Argument size: -40
 *    Local size: 40
 *    Save regs size: 0
 *    Called by:
 *        L0043EF64()
 */

L0043EEA8()
{
    /* unknown */ void  Vffffffd8;



    L0043FA4C(6533968);
    L00436B28( & Vffffffd8);
    L0043980C(6529816, & Vffffffd8);
    return L00439FBC(6533968, 6529816, M00644ba4, M00644ba8);
}

/*    Procedure: 0x0043EEF6 - 0x0043EEF7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EEF6()
{



}

/*    Procedure: 0x0043EEF8 - 0x0043EF61
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043EE34()
 */

L0043EEF8(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax + 0x87) == 3) {
        *(eax + 0x87) = 5;
        if(*(eax + 0xff) == 0x24) {
            goto L0043ef60;
        }
        *(eax + 0x57) = 0;
        return;
    }
    if(*(eax + 0x87) == 0xb) {
        dl = *(eax + 0xff);
        if(dl == 0x24 || dl == 0x11 || *(eax + 0x82) == 0x9a && *(eax + 0x9e) != 1) {
            eax = L0043DA00(eax);
        } else {
            *(eax + 0x87) = 5;
            *(eax + 0x57) = 0;
        }
    }
L0043ef60:
}

/*    Procedure: 0x0043EF62 - 0x0043EF63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EF62()
{



}

/*    Procedure: 0x0043EF64 - 0x0043EFA0
 *    Argument size: -56
 *    Local size: 56
 *    Save regs size: 0
 *    Called by:
 *        L00434A50()
 *        L00435957()
 */

L0043EF64()
{
    /* unknown */ void  Vffffffc9;
    /* unknown */ void  Vffffffca;
    /* unknown */ void  Vffffffcb;



    M00644f9e = M00644f9e & 0xef;
    M00644e9e = 0x72;
    L0043EDB0();
    Vffffffc9 = 3;
    Vffffffca = 0;
    Vffffffcb = 0;
    L0045527C( & Vffffffc9);
    L0043EEA8();
    return L0043ED8C();
}

/*    Procedure: 0x0043EFA1 - 0x0043EFA3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043EFA1()
{



}

/*    Procedure: 0x0043EFA4 - 0x0043F00F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043F043()
 *        L0043F26E()
 */

L0043EFA4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    M00501ba8 = eax;
    esi = 0x72;
    ebx = eax + 0x72;
    do {
        al = *ebx;
        if(!(al & 8) && !(al & 0x20)) {
            eax = *L00501b90(esi);
            edx = *(eax + 0x98) + 3;
            if(edx < 0x13c && *(eax + 0x9a) - 4 < 0x95) {
                eax = *Ac(eax, edx, *(eax + 0x9a) - 4);
            }
        }
        esi = esi - 1;
        ebx = ebx - 1;
    } while(esi > 0);
}

/*    Procedure: 0x0043F010 - 0x0043F042
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043F043()
 */

L0043F010(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    L0043ED30(A8, Ac, 6639144);
    return L00455564(6639144, A14, A18, A10);
}

/*    Procedure: 0x0043F043 - 0x0043F08F
 *    Argument size: -20
 *    Local size: 20
 *    Save regs size: 0
 */

L0043F043()
{
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;



    Vffffffec = M00644fa4;
    Vfffffff0 = M00644fa8;
    eax = L0043F010(0, & Vffffffec, 0xf, 0xa, 0x94);
    if(!(M00644f9e & 2)) {
        eax = L0043EFA4(6533968, 0x43f090);
    }
}

/*    Procedure: 0x0043F090 - 0x0043F153
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0043F090(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = *(A8 + 0x86) & 0xff;
    if(eax == M00644c90 && !(M00644ba5 & 1)) {
        eax = L00455564(0x4ef074, Ac - 8, A10, 0x11);
    }
    if(*(A8 + 0x87) == 1) {
        if(*(A8 + 0x56) == 0) {
            goto L0043f13c;
        }
        eax = *L00501b94(eax & 0xff, 6533968);
        edx = !(edx = *(eax + 0x98) - Ac) ? ~( *(eax + 0x98) - Ac) : *(eax + 0x98) - Ac;
        ecx = !(ecx = *(eax + 0x9a) - A10) ? ~( *(eax + 0x9a) - A10) : *(eax + 0x9a) - A10;
        if(edx + ecx >= 0xa) {
L0043f13c:
            eax = L004557C8(A8 + 0x124, Ac, A10, 0xf);
        }
    }
}

/*    Procedure: 0x0043F154 - 0x0043F16D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043F26E()
 */

L0043F154()
{



    if(!(M00644f9e & 8)) {
        M00644f9e = M00644f9e & 0xf7;
        eax = L0043ED8C();
    }
}

/*    Procedure: 0x0043F16E - 0x0043F16F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043F16E()
{



}

/*    Procedure: 0x0043F170 - 0x0043F22E
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 4
 *    Called by:
 *        L0043F26E()
 */

L0043F170(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 6572964;
    if(A8 >= 0) {
        Vfffffff4 = *L00644FA8;
        Vfffffff0 = *L00644FA4;
        L0044EB4E( & Vfffffff8, Vfffffff0, Vfffffff4, Ac, A10);
        *(ebx + 0x404) = Vfffffffc;
        *(ebx + 0x400) = Vfffffff8;
    } else {
        Vfffffff4 = !( *(ebx + 0x404));
        Vfffffff0 = !( *(ebx + 0x400));
        L0044EB4E( & Vfffffff8, Vfffffff0, Vfffffff4, Ac, A10);
        *(ebx + 0x404) = !Vfffffffc;
        *(ebx + 0x400) = !Vfffffff8;
    }
    L0043D3D4(6533968);
    return L004194B0(6533968, *(ebx + 0x400), *(ebx + 0x404));
}

/*    Procedure: 0x0043F22F - 0x0043F22F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043F22F()
{



}

/*    Procedure: 0x0043F230 - 0x0043F26D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043F26E()
 */

L0043F230(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    M00501ba8 = A8;
    esi = 0x72;
    ebx = A8 + 0x72;
    do {
        al = *ebx;
        if(al != 0 && !(al & 0x20)) {
            eax = L0043F914( *L00501b90(esi), A8);
        }
        esi = esi - 1;
        ebx = ebx - 1;
    } while(esi > 0);
}

/*    Procedure: 0x0043F26E - 0x0043F76D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043F26E()
{



    esp = esp + -336;
    (save)ebx;
    (save)esi;
    (save)edi;
    L0043E55C(0);
    esi = *L00500398() & 0xff;
    if(esi != 0) {
        eax = esi;
        if(eax <= 0xf5) {
            == ? L0043f2ed : ;
            if(eax = eax - 3) {
                goto L0043f552;
            }
            if(eax = eax - 1) {
                goto L0043f582;
            }
            if(eax = eax - 0x70) {
                goto L0043f335;
            }
            if(eax = eax - 0xc) {
                goto L0043f46e;
            }
            goto L0043f5fd;
        }
        if(!(eax = eax + -246 - 5)) {
            == ? L0043f3ed : ;
            if(eax = eax - 1) {
                goto L0043f5af;
            }
            if(eax = eax - 3) {
                goto L0043f394;
            }
            goto L0043f5fd;
            L0043475C(0);
            eax = L0041D444(0x24, 1);
            goto L0043f767;
        }
        L0043475C(0);
        ebx = esi;
        *L0050039c(ebx);
        L00434A50(0);
        *L0050039c(ebx);
        eax = L00434A50(0);
        goto L0043f767;
L0043f335:
        if(!(M00644f9e & 0x10)) {
            M00644f9e = M00644f9e | 1;
            *(ebp + -336) = 35329;
            *(ebp + -312) = -1;
            *L005000c0(ebp + -288, *(ebp + -336), ebp + -336);
            L0041D6C0(ebp + -288, 0, 1);
        }
        L0043F154();
        goto L0043f607;
L0043f394:
        M00644c92 = 0;
        L0043EFA4(6533968, 0x43f770);
        M00644f9e = M00644f9e & 0xfe;
        L0041D6C0(0, 0, 0);
        if(L0043F868() > M00644fa2) {
            M00644fa2 = ax;
        }
        L0043D3D4(6533968);
        L0043F154();
        goto L0043f607;
        if(esi != (M00655682 & 0xff)) {
            goto L0043f41e;
        }
        if(M00655684 < 0x14) {
            L0043F868();
            M00644fa2 = ax;
            M00644fa0 = 16384;
            goto L0043f607;
L0043f41e:
            *(ebp - 0xe) = 0;
            *(ebp - 0x10) = 31128;
            *(ebp - 0x10) = *L00501664(L00452919(M00644fa0, *(ebp - 0x10)));
            eax = L0043F868();
            eax :: *(ebp - 0xe);
            asm("setng al");
            if((eax & 1) != 0) {
                M00644fa0 = *(ebp - 0x10);
            }
            L0043F154();
            goto L0043f607;
L0043f46e:
            ax = M00657642;
            if(ax >= 0x92 && ax <= 0xbc && M00657640 >= 0x10c && M00657640 <= 0x14c) {
                eax = M00657640;
                ebx = eax + -300;
                if(ebx < 0) {
                    L00457DEC(0x122, 0x10c, 0x9e, eax - 1, 0, 0x12c, -1);
                    esi = esi | -1;
                    ebx = ~ebx;
                } else {
                    L00457DEC(0x122, 0x10c, 0x9e, 0x12c, 0, M00657640 + 1, -1);
                    esi = 1;
                }
                if(!(M00644f9e & 0x10)) {
                    eax = ebx;
                    asm("imul ebx");
                    *(ebp - 0x18) = eax;
                } else {
                    eax = ebx;
                    asm("imul ebx");
                    asm("imul ebx");
                    *(ebp - 0x18) = eax;
                }
                *(ebp - 0x14) = 0;
                L0044EC10(ebp - 0x18, 0x12);
                L0043F170(esi, *(ebp - 0x18), *(ebp - 0x14));
                goto L0043f607;
L0043f552:
                *(ebp - 0xc) = M0064a110;
                *(ebp - 8) = 0;
                L0044EC10(ebp - 0xc, 0xd);
                L0043F170(-1, *(ebp - 0xc), *(ebp - 8));
                goto L0043f607;
L0043f582:
                *(ebp - 0xc) = M0064a110;
                *(ebp - 8) = 0;
                L0044EC10(ebp - 0xc, 0xd);
                L0043F170(1, *(ebp - 0xc), *(ebp - 8));
                goto L0043f607;
L0043f5af:
                *(ebp - 0x1a) = 1;
                *(ebp - 0x1c) = 17245;
                eax = *L00501664(L00452919(M00644fa0, *(ebp - 0x1c)));
                *(ebp - 0x1c) = eax;
                if(( *(ebp - 0x1a) :: 0x3f > 0 & 1) != 0) {
                    *(ebp - 0x1a) = 0x3f;
                    *(ebp - 0x1c) = 32767;
                }
                M00644fa0 = *(ebp - 0x1c);
                goto L0043f607;
L0043f5fd:
                *L0050039c(esi);
            }
        }
    }
L0043f607:
    M00644f9a = *L005003c8();
    eax = M00644f9c << 6;
    M00644b9c = eax;
    edx = M00644f9a << 6;
    M00644ba0 = edx;
    L0045B08C(6573640, M00644b9c, ~M00644ba0);
    eax = ~M00644fa0;
    edx = M00644e60 >> 0x10;
    asm("imul edx");
    ebx = ebx | -1;
    if(eax >= 0) {
        ebx = ebx + 1;
    }
    edx = ~M00644fa0;
    ecx = M00644e64 >> 0x10;
    edx = ecx * ecx;
    ecx = ecx | -1;
    if(edx >= 0) {
        ecx = ecx + 1;
    }
    *(ebp - 4) = ecx;
    ecx = ~M00644fa0;
    esi = M00644e68 >> 0x10;
    ecx = esi * esi;
    esi = esi | -1;
    if(ecx >= 0) {
        esi = esi + 1;
    }
    if(M00644fa2 < 0x1f) {
        edi = M00644fa2 - 0x1f;
        do {
            eax = eax >> 1;
            edx = edx >> 1;
            ecx = ecx >> 1;
            edi = edi + 1;
        } while(edi < 0);
    } else {
        if(M00644fa2 > 0x1f) {
            *(ebp - 0x20) = M00644fa2 - 0x1f;
            do {
                ebx = ebx + ebx;
                if(!(eax & -2147483648)) {
                    ebx = ebx | 1;
                }
                eax = eax + eax;
                *(ebp - 4) = *(ebp - 4) << 1;
                if(!(edx & -2147483648)) {
                    *(ebp - 4) = *(ebp - 4) | 1;
                }
                edx = edx + edx;
                esi = esi + esi;
                if(!(ecx & -2147483648)) {
                    esi = esi | 1;
                }
                ecx = ecx + ecx;
                *(ebp - 0x20) = *(ebp - 0x20) - 1;
            } while(*(ebp - 0x20) > 0);
        }
    }
    M00644e86 = eax;
    M00644e8a = ebx;
    M00644e8e = edx;
    M00644e92 = *(ebp - 4);
    M00644e96 = ecx;
    M00644e9a = esi;
    M00644e6d = 0;
    eax = *L00501c40(6533968, 6573640);
    if(!(M00644f9e & 4)) {
        eax = L0043F230(6533968);
    }
L0043f767:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0043F76E - 0x0043F867
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0043F76E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edx = A10;
    eax = Ac;
    esi = 6572964;
    if(*L00644C92 == 0) {
        eax = eax - 3;
        edx = edx + 4;
        if(!(edi = eax - *L00644C10)) {
            edi = ~(eax - *L00644C10);
        } else {
            ecx = *(esi + 0x6c);
            edi = eax - ecx;
        }
        eax = edi;
        ecx = *(esi + 0x6e);
        if(!(edi = edx - ecx)) {
            ecx = *(esi + 0x6e);
            edi = ~(edx - ecx);
        } else {
            ecx = *(esi + 0x6e);
            edi = edx - ecx;
        }
        if(edi + eax <= 8) {
            if(*(esi + 0x3fa) & 1) {
                goto L0043f83e;
            }
            *(esi + 0xee) = 0xff;
            *(esi + 0xec) = *(A8 + 0x86);
            eax = L004701BE(0x15);
            if(*(esi + 0xe8) == 2) {
                eax = *(esi + 0xc8);
                *(eax + 0xff) = 8;
                *(eax + 0x100) = *(A8 + 0x86);
                eax = L00414070(0x17, 0, *(eax + 0x86) & 0xff);
                goto L0043f863;
L0043f83e:
                if(!( *(A8 + 0x14c) & 0x20) && *(A8 + 0x87) == 1) {
                    *(esi + 0xee) = 0xff;
                    *(esi + 0x2fa) = *(A8 + 0x86);
                }
            }
        }
    }
L0043f863:
}

/*    Procedure: 0x0043F868 - 0x0043F89B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043F26E()
 */

L0043F868()
{



    eax = *L00501b9c( *( *L00501b94(M00644e9e & 0xff, 6533968) + 0x82));
    return *(eax + 0x14) + *(eax + 0x18) + 0xa;
}

/*    Procedure: 0x0043F89C - 0x0043F912
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L0043F89C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8;
    ebx = *(eax + 8);
    edx = *(ebx + 0xa8);
    ecx = *(ebx + 0xac);
    *(ebx + 0xa8) = *eax;
    *(ebx + 0xac) = *(eax + 4);
    if(*(ebx + 0xff) != 0x24) {
        esi = *eax - edx;
        edi = *(eax + 4) - ecx;
        if(esi > *eax) {
            edi = edi - 1;
        }
        *(ebx + 0x8a) = 0;
        *L004dde58(ebx, 6533968, esi);
        *L004dde5c(ebx, 6533968);
        eax = *L005016ec(ebx, esi, edi);
    }
}

/*    Procedure: 0x0043F913 - 0x0043F913
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043F913()
{



}

/*    Procedure: 0x0043F914 - 0x0043FA45
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043F230()
 */

L0043F914(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -344;
    (save)A8;
    (save)esi;
    (save)edi;
    if(*(A8 + 0x87) == 1) {
        if(*(A8 + 0x56) != 0) {
            if(*(A8 + 0x14c) & 0x20) {
                goto L0043f9f7;
            }
            esi = *(A8 + 0xc6);
            *(ebp - 4) = *(A8 + 0xbe) >> 0x10;
            eax = *L00501b94(eax & 0xff, Ac);
            *(ebp + -168) = *(A8 + 0xb0);
            *(ebp + -166) = *(ebp + -166) - 0x19;
            *(ebp + -218) = *(ebp + -166);
            *(ebp + -258) = *(eax + 0x56);
            *(ebp + -214) = 0x96;
            (save)esi;
            esi = eax + 0x3e;
            edi = ebp + -282;
            ecx = 6;
            asm("rep movsd");
            (restore)esi;
            *(ebp + -257) = 0;
            *(ebp + -210) = 0;
            *(ebp + -307) = 0;
            L0045B08C(ebp + -344, esi, *(ebp - 4));
            eax = *L005030e4(ebp + -344, 6573640);
        } else {
L0043f9f7:
            eax = *(A8 + 0x82);
            esi = eax;
            edi = *(A8 + 0x9e) & 65535;
            if(eax == 0x9a) {
                edx = 1;
                *(A8 + 0x82) = 0x98;
            }
            *(A8 + 0x9e) = dx;
            eax = *L005030e4(A8, 6573640);
            *(A8 + 0x9e) = di;
            *(A8 + 0x82) = esi;
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0043FA46 - 0x0043FA47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FA46()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0043FA48 - 0x0043FA48
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C5F2()
 */

L0043FA48()
{



}

/*    Procedure: 0x0043FA49 - 0x0043FA4B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FA49()
{



}

/*    Procedure: 0x0043FA4C - 0x0043FA67
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043BEE0()
 *        L0043C5F2()
 *        L0043EE68()
 *        L0043EEA8()
 */

L0043FA4C(A8)
/* unknown */ void  A8;
{



    M00501ba8 = A8;
    eax = 0;
    do {
        ecx = eax;
        eax = eax + 1;
        *(A8 + ecx) = 0;
    } while(eax < 0x73);
}

/*    Procedure: 0x0043FA68 - 0x0043FAE3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004438E8()
 *        L004439C8()
 *        L00443A98()
 *        L00443B5C()
 *        L00444A88()
 */

L0043FA68(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8;
    M00501ba8 = eax;
    esi = 0x72;
    ebx = eax + 0x72;
    do {
        al = *ebx;
        if(!(al & 8) && !(al & 0x20)) {
            eax = *L00501b90(esi);
            dx = *(eax + 0x98);
            edi = dx + 3;
            if(edi < 0x13c && dx > 0 && *(eax + 0x9a) - 4 < 0x95 && *(eax + 0x9a) > 0) {
                eax = Ac(eax, edi, *(eax + 0x9a) - 4);
            }
        }
        esi = esi - 1;
        ebx = ebx - 1;
    } while(esi > 0);
}

/*    Procedure: 0x0043FAE4 - 0x0043FB35
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00442EC4()
 *        L00444A88()
 */

L0043FAE4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A8;
    M00501ba8 = eax;
    esi = 0x72;
    ebx = eax + 0x72;
    do {
        al = *ebx;
        if(!(al & 8) && !(al & 0x20)) {
            eax = *L00501b90(esi);
            eax = *Ac(eax, *(eax + 0x98) + 3, *(eax + 0x9a) - 4);
        }
        esi = esi - 1;
        ebx = ebx - 1;
    } while(esi > 0);
}

/*    Procedure: 0x0043FB36 - 0x0043FB37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FB36()
{



}

/*    Procedure: 0x0043FB38 - 0x0043FC21
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004407A8()
 *        L00444804()
 *        L004454FC()
 */

L0043FB38()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    L0041D49C(0x10);
    if(!( *( *(ebx + 0xc8) + 0xc8) & 0x20)) {
        L0041D49C(0x11);
    } else {
        L0041D4C0(0x11);
    }
    if(*( *(ebx + 0xc8) + 0xc8) & 134217728 || !(al & 8)) {
        L0041D49C(0x12);
    } else {
        L0041D4C0(0x12);
    }
    if(!( *( *(ebx + 0xc8) + 0xc8) & 0x40)) {
        L0041D49C(0x13);
    } else {
        L0041D4C0(0x13);
    }
    if(*(ebx + 0xef) != 0) {
        if(*( *(ebx + 0xc8) + 0xc9) & 2) {
            goto L0043fbd6;
        }
        L0041D49C(0x14);
    } else {
L0043fbd6:
        L0041D4C0(0x14);
    }
    L0041D49C(0x15);
    if(*( *(ebx + 0xc8) + 0xd1) > 2) {
        L0041D49C(0x16);
    } else {
        L0041D4C0(0x16);
    }
    L0041D49C(0x17);
    L0041D49C(0x18);
    return L0041D49C(0x19);
}

/*    Procedure: 0x0043FC22 - 0x0043FC23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FC22()
{



}

/*    Procedure: 0x0043FC24 - 0x0043FC61
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043FC64()
 *        L0043FF64()
 *        L00444870()
 */

L0043FC24(A8)
/* unknown */ void  A8;
{



    M00644cbc = *(A8 + 0x116) & 65535;
    M00644cc4 = 0;
    M00644cc8 = 0;
    M00644cc0 = 0;
    edx = 0;
    eax = 6573272;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 2;
    } while(edx < 0x26);
}

/*    Procedure: 0x0043FC62 - 0x0043FC63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FC62()
{



}

/*    Procedure: 0x0043FC64 - 0x0043FC72
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00423EE4()
 *        L004404E7()
 */

L0043FC64(A8)
/* unknown */ void  A8;
{



    return L0043FC24(A8);
}

/*    Procedure: 0x0043FC73 - 0x0043FC73
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FC73()
{



}

/*    Procedure: 0x0043FC74 - 0x0043FDD5
 *    Argument size: 8
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L00440194()
 */

L0043FC74(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;



    edi = Ac;
    esi = 6572964;
    *L00644C69 = edi;
    *(esi + 0xcc) = *L00501b94(edi, M0064a3b0);
    *(esi + 0x20e) = *( *(esi + 0xcc) + 0x86);
    *(esi + 0x212) = 1;
    *(esi + 0xe8) = 0x30;
    (save)esi;
    esi = *(esi + 0xcc);
    edi = A8;
    ecx = 9;
    asm("rep movsd");
    (restore)esi;
    (save)esi;
    esi = *(esi + 0xcc) + 0x3e;
    edi = A8 + 0x3e;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    *(A8 + 0x57) = 1;
    eax = *(esi + 0xcc);
    *(eax + 0xd1) = 0xff;
    L0042C7C4(eax, *(A8 + 0x86) & 0xff, & Vffffffe4, & Vfffffffc, esi + 0xf4);
    *( *(esi + 0xcc) + 0xd1) = 0;
    *(esi + 0xf8) = 0;
    esi = A8 + 0x3e;
    L0045A044(esi, & Vffffffe4);
    L0044EB67(esi, *(A8 + 0x3e), *(A8 + 0x42), L004537B0( *(A8 + 0xc), *(A8 + 0x140)));
    L0044EB67(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), L004537B0( *(A8 + 0x10), *(A8 + 0x140)));
    L0044EB67(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), L004537B0( *(A8 + 0x14), *(A8 + 0x140)));
    L00414070(1, 0, 0xd);
    return L00414070(1, 0, 0xe);
}

/*    Procedure: 0x0043FDD6 - 0x0043FDD7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FDD6()
{



}

/*    Procedure: 0x0043FDD8 - 0x0043FF60
 *    Argument size: 0
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L004408BF()
 *        L00440F61()
 *        L0044155E()
 */

L0043FDD8()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 6572964;
    eax = *L00644C70;
    eax = *L00644C6C;
    L0044EB80( & Vffffffe8, *(eax + 0x3e), *(eax + 0x42), *(eax + 0x3e), *(eax + 0x42));
    eax = *(ebx + 0xcc);
    eax = *(ebx + 0xc8);
    L0044EB80( & Vfffffff0, *(eax + 0x46), *(eax + 0x4a), *(eax + 0x46), *(eax + 0x4a));
    eax = *(ebx + 0xcc);
    eax = *(ebx + 0xc8);
    L0044EB80( & Vfffffff8, *(eax + 0x4e), *(eax + 0x52), *(eax + 0x4e), *(eax + 0x52));
    esi = L004537B0( *( *(ebx + 0xcc) + 0xc), Vffffffe8);
    esi = esi + L004537B0( *( *(ebx + 0xcc) + 0x10), Vfffffff0);
    esi = esi + L004537B0( *( *(ebx + 0xcc) + 0x14), Vfffffff8);
    esi = esi - *( *(ebx + 0xc8) + 0x140);
    edi = L004537B0( *( *(ebx + 0xcc) + 0xc), esi);
    Vffffffe8 = edi;
    Vffffffec = Vffffffe8 >> 0x1f;
    edi = L004537B0( *( *(ebx + 0xcc) + 0x10), esi);
    Vfffffff0 = edi;
    Vfffffff4 = Vfffffff0 >> 0x1f;
    edi = L004537B0( *( *(ebx + 0xcc) + 0x14), esi);
    Vfffffff8 = edi;
    Vfffffffc = Vfffffff8 >> 0x1f;
    eax = *(ebx + 0xc8);
    L0044EB80(eax + 0x3e, *(eax + 0x3e), *(eax + 0x42), Vffffffe8, Vffffffec);
    eax = *(ebx + 0xc8);
    L0044EB80(eax + 0x46, *(eax + 0x46), *(eax + 0x4a), Vfffffff0, Vfffffff4);
    eax = *(ebx + 0xc8);
    return L0044EB80(eax + 0x4e, *(eax + 0x4e), *(eax + 0x52), Vfffffff8, Vfffffffc);
}

/*    Procedure: 0x0043FF61 - 0x0043FF63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0043FF61()
{



}

/*    Procedure: 0x0043FF64 - 0x00440177
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440194()
 */

L0043FF64(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -652;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = A8;
    esi = 0x4ef718;
    edi = ebp - 0x24;
    ecx = 9;
    asm("rep movsd");
    L00471198(ebp + -652, 0, 0x152);
    esi = ebp - 0x24;
    edi = ebp + -652;
    ecx = 9;
    asm("rep movsd");
    *(ebp + -522) = ebx;
    *(ebp + -494) = 65535;
    *(ebp + -500) = 32768;
    *(ebp + -498) = 32768;
    *(ebp + -492) = 2023371862;
    esi = "Frontier";
    edi = ebp + -360;
    eax = edi;
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    *edi = *esi;
    edi = edi + 1;
    esi = esi + 1;
    ebx = *L004eeedc(M0064a3b0, ebp + -652, 0x4f, ebx, 6573156);
    if(ebx != 0) {
        *(ebx + 0x118) = 0xff;
        M00644c6c = ebx;
        *(ebx + 0x25) = 0;
        M00644db8 = *(ebx + 0xbc);
        M00644dbc = *(ebx + 0xbe);
        M00644dc0 = *(ebx + 0xc0);
        M00644dc4 = *(ebx + 0xc2);
        M00644dc8 = *(ebx + 0xc4);
        M00644dcc = *(ebx + 0xc6);
        *(ebx + 0x88) = 0;
        L0043FC24(M00644c6c);
        *(ebx + 0x116) = 0;
        M00644c90 = 0;
        M00644c91 = 0;
        M00644cb6 = 0;
        *(ebx + 0x87) = 3;
        M00644d5c = 0;
        M00644d90 = 0;
        M00644c7c = 0;
        M00644d94 = 0;
        edx = 0;
        eax = 6573352;
        do {
            *eax = 0;
            edx = edx + 1;
            eax = eax + 4;
        } while(edx < 6);
        M00644c8f = 0;
        M00644c94 = 0;
        M00644c8e = 0;
        L0041D444(0x18, 1);
        M00644da0 = M00644ba8;
        M00644da4 = M00644ba8;
        M00644d98 = 0x1f4;
        M00644d9c = 0x1f4;
        eax = Ac * 18957;
        *(ebx + 0xa0) = eax;
        L00430CB0(0x12, ebp + -312, eax, ebp + -292);
        esi = ebx + 0x124;
        edi = ebp + -292;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
    }
    eax = ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00440178 - 0x00440190
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440194()
 */

L00440178(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x18) = ~( *(A8 + 0x18));
    *(A8 + 0x1c) = ~( *(A8 + 0x1c));
    *(A8 + 0x20) = ~( *(A8 + 0x20));
    *A8 = ~( *A8);
    *(A8 + 4) = ~( *(A8 + 4));
    *(A8 + 8) = ~( *(A8 + 8));
}

/*    Procedure: 0x00440191 - 0x00440193
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440191()
{



}

/*    Procedure: 0x00440194 - 0x004404E6
 *    Argument size: 0
 *    Local size: 36
 *    Save regs size: 8
 *    Called by:
 *        L004405E2()
 */

L00440194()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffdd;
    /* unknown */ void  Vffffffdf;



    M00644d54 = 0;
    M00644d50 = 0;
    M00644d4c = 0;
    M00644d44 = 0;
    M00644d48 = 0;
    M00644d40 = 0;
    M00649c7c = 0;
    edx = 0;
    eax = 6593692;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 4;
    } while(edx < 6);
    if(!(eax = M00644c9e - 1)) {
        if(!(eax = eax - 1)) {
            if(eax = eax - 1) {
                goto L00440279;
            }
            goto L0044040c;
        }
        M00644cb8 = 0x3e8;
        ebx = L0043FF64(0x17, 18957);
        *(ebx + 0xd0) = 1;
        *(ebx + 0xd2) = 0xa0;
        *(ebx + 0xd6) = 0x82;
        *(ebx + 0xd7) = 0x82;
        *(ebx + 0xe2) = 0;
        *(ebx + 0xc8) = 1073741824;
        M00644cbc = M00644cbc - 0xc;
        M00644d24 = 0;
        M00644cc4 = 0;
        *(ebx + 0x11e) = 1073741824;
        *(ebx + 0x56) = 0x60;
        eax = L0043FC74(ebx, 0x5f);
        goto L004404e1;
L00440279:
        M00644cb8 = 0x3e8;
        ebx = L0043FF64(0x26, 37914);
        *(ebx + 0xd0) = 3;
        *(ebx + 0xd2) = 0x88;
        *(ebx + 0xd6) = 0x82;
        *(ebx + 0xd7) = 0x82;
        *(ebx + 0xd8) = 0x82;
        *(ebx + 0xd9) = 0x82;
        *(ebx + 0xe2) = 0;
        *(ebx + 0xc8) = 262144;
        M00644cbc = M00644cbc - 0x1f;
        M00644d24 = 0x320;
        *(ebx + 0x11e) = 1073741824;
        M00644cfe = 4;
        M00644cc4 = 4;
        M00649ca4 = 700000;
        M00649ca0 = 700000;
        M00644d2c = 0x1f4;
        M00644d30 = 0x1f4;
        *(ebx + 0x56) = 0x70;
        M00644c69 = 0x70;
        esi = *L00501b94(0x70, M0064a3b0);
        M00644c70 = esi;
        *(M00644c70 + 0xd0) = M00644c64;
        *(ebx + 0x57) = 1;
        M00644c98 = 0;
        M00644c8c = 0x2a;
        eax = *(ebx + 0x86) & 0xff;
        *(M00501ba8 + eax) = 0x4b;
        M00644c80 = -1;
    } else {
        M00644cb8 = 0x3e8;
        ebx = L0043FF64(0x17, 56871);
        *(ebx + 0xd0) = 2;
        *(ebx + 0xd2) = 0x88;
        *(ebx + 0xc8) = 1076101120;
        *(ebx + 0xd6) = 0x82;
        *(ebx + 0xd7) = 0x82;
        M00644cbc = M00644cbc - 0x10;
        M00644cfe = 1;
        M00644cc4 = 1;
        *(ebx + 0x11e) = 536870912;
        M00644d24 = 0x3e8;
        *(ebx + 0x56) = 0x6f;
        eax = L0043FC74(ebx, 0x6e);
        goto L004404e1;
L0044040c:
        ebx = L0043FF64(0x1f, 56871);
        M00644cb8 = 10000;
        *(ebx + 0xd2) = 0x88;
        M00644cfe = 1;
        M00644cc4 = 1;
        M00644cbc = M00644cbc - 0x10;
        M00644d24 = 0x42f;
        *(ebx + 0xd0) = 2;
        *(ebx + 0xc8) = 1076101152;
        *(ebx + 0xd6) = 0x82;
        *(ebx + 0xd7) = 0x82;
        *(ebx + 0x11e) = 536870912;
        *(ebx + 0x56) = 0x6c;
        L0043FC74(ebx, 0x6a);
        L00440178(ebx);
        Vffffffdd = M004ef73c;
        Vffffffdf = M004ef73e;
        M00644bc4 = Vffffffdd;
        M00644bc6 = Vffffffdf;
        M00653c08 = Vffffffdd;
        M00653c0a = Vffffffdf;
        M00644bc0 = -1;
        eax = L0045527C( & Vffffffdd);
    }
L004404e1:
}

/*    Procedure: 0x004404E7 - 0x004405E1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L004404E7()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 6572964;
    esi = *L00501b9c( *( *L00644C6C + 0x82));
    *(ebx + 0x1f4) = 0x1f4;
    *(ebx + 0x1f8) = 0x1f4;
    *(ebx + 0x1fc) = *(ebx + 4);
    *(ebx + 0x200) = *(ebx + 4);
    *(ebx + 20524) = *( *(esi + 0x38) + 0x10) - 1;
    L0043FC64( *(ebx + 0xc8));
    L0041CF94();
    *(ebx + 0x214) = *( *(ebx + 0xc8) + 0xbc);
    *(ebx + 0x218) = *( *(ebx + 0xc8) + 0xbe);
    *(ebx + 0x21c) = *( *(ebx + 0xc8) + 0xc0);
    *(ebx + 0x220) = *( *(ebx + 0xc8) + 0xc2);
    *(ebx + 0x224) = *( *(ebx + 0xc8) + 0xc4);
    *(ebx + 0x228) = *( *(ebx + 0xc8) + 0xc6);
    eax = *(esi + 0x38);
    if(*(eax + 0x14) > 0) {
        eax = *((eax & 0xff) * 4 + 0x4d8b50);
        *(ebx + 0x118) = *(ebx + 0x118) - eax;
    }
}

/*    Procedure: 0x004405E2 - 0x004406C2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004405E2(A8)
/* unknown */ void  A8;
{



    if(!(edx = (A8 & 0xff) - 1)) {
        if(edx = edx - 1) {
            goto L004406a6;
        }
        return;
    }
    M00644c9e = (A8 & 65280) >> 8;
    L0043B964();
    M00653c0c = 0;
    M004ef0da = 0;
    M004ef0db = 0;
    M004ef0d0 = 0;
    M004ef0d4 = 0;
    M00644c93 = 0;
    L0041D444(0x48, 0);
    M00644c8d = 0;
    L0041D444(0x10, 0);
    M00644c6a = 0;
    M00644c74 = 0;
    M00644c76 = 0x200;
    M00644ccc = 0;
    M00644cd0 = 0x200;
    M00644cd4 = -12582912;
    L00440194();
    L0041D514(34304);
    return L004407A8();
L004406a6:
    return L00413E60(0xb, 0, M00644c64, 0x4404e8, 0, 0);
}

/*    Procedure: 0x004406C3 - 0x004406C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004406C3()
{



}

/*    Procedure: 0x004406C4 - 0x0044071A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044071C()
 */

L004406C4()
{



    eax = 1;
    if(!(edx = M00644c8e + 1 - 2)) {
        if(!(edx = edx - 1)) {
            eax = 2;
        }
    } else {
        if(*(M00644c6c + 0xd1) <= 2) {
            eax = eax + 2;
        } else {
            if(M00644daa >= 0) {
                eax = eax + 1;
            }
        }
    }
    M00644c8e = M00644c8e + al;
    if(M00644c8e > 4) {
        M00644c8e = 0;
    }
    return L00445DE4();
}

/*    Procedure: 0x0044071B - 0x0044071B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044071B()
{



}

/*    Procedure: 0x0044071C - 0x004407A5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00445590()
 */

L0044071C()
{



    if(M0063218a < 0) {
        L004406C4();
    } else {
        L004407A8();
    }
    if(M00644c8e == 4) {
        L0041D444(0x15, 1);
    } else {
        al = M00644c8e;
        if(al == 3 || al == 2) {
            L0041D444(0x16, 1);
        } else {
            L0041D444(0x18 - M00644c8e, 1);
        }
    }
    M00644bc4 = M00653c08;
    M00644bc6 = M00653c0a;
    return L0045527C(6634504);
}

/*    Procedure: 0x004407A6 - 0x004407A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004407A6()
{



}

/*    Procedure: 0x004407A8 - 0x00440837
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004405E2()
 *        L0044071C()
 */

L004407A8()
{



    *L004eecd0(3);
    *L005003b0();
    L00445FB8();
    M0063218a = 0xff;
    M0063218b = 0xff;
    *L005003c4(M00644c74, M00644c76);
    L00445DE4();
    L0043FB38();
    L0041D444(0xe, 1);
    M00644bc4 = M00653c08;
    M00644bc6 = M00653c0a;
    eax = L0045527C(6634504);
    if(!(M00644c8d & 8)) {
        eax = *L005003b4(0x4ef388);
    }
}

/*    Procedure: 0x00440838 - 0x00440856
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00440858()
 *        L00446018()
 */

L00440838(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    for(ebx = A8; *ebx != -1; ebx = ebx + 0x14) {
        eax = *L005003c0( *(ebx + 0x10));
    }
}

/*    Procedure: 0x00440857 - 0x00440857
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440857()
{



}

/*    Procedure: 0x00440858 - 0x00440873
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00445F40()
 */

L00440858()
{



    L00440838(0x4ef388);
    return *L005003b4(0x4ef4dc);
}

/*    Procedure: 0x00440874 - 0x004408BE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00440874()
{
    /* unknown */ void  ebx;



    ebx = 0xf;
    do {
        L0041D4C0(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0x19);
    ebx = 0xd1;
    do {
        eax = *L005003c0(ebx);
        M004ef0db = 0;
        ebx = ebx + 1;
    } while(ebx < 0xe3);
    M0063218a = 0x7f;
    M0063218b = 0;
    M00644bb0 = M00644bb0 | 1;
}

/*    Procedure: 0x004408BF - 0x00440AAA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L004408BF(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 6572964;
    esi = *(A8 + 4);
    eax = esi & 65535;
    if(eax > *L00644CB2) {
        *L00644CB2 = 0;
    } else {
        *(ebx + 0x10e) = *(ebx + 0x10e) - eax;
    }
    if(*(ebx + 0x1ec) != 0) {
        *(ebx + 0x1ec) = !( *( *(ebx + 0xc8) + 0xcb) & 0x40) ? *(ebx + 0x1ec) - (esi << 9) : *(ebx + 0x1ec) - (esi << 7);
        if(*(ebx + 0x1ec) < 0) {
            *(ebx + 0x1ec) = 0;
        }
    }
    L0043D484( *(ebx + 0xc8), esi);
    if(*(ebx + 0xe8) != 2) {
        eax = L0043D6F8( *(ebx + 0xc8), esi);
    } else {
        esi = *L00501b94( *( *(ebx + 0xc8) + 0xfe) & 0xff, M0064a3b0);
        L0041934C(0xb, 6, A8);
        eax = *(ebx + 0xc8);
        if(*(eax + 0x138) + *(eax + 0x138) * 2 > *(ebx + 0xdc)) {
            *L004dde40(eax, *(ebx + 0xcc), -1);
        }
        eax = *(ebx + 0xc8);
        if(*(eax + 0xff) == 0x20) {
            eax = esi;
            *(ebx + 0xcc) = eax;
            *(ebx + 0xc5) = *( *(ebx + 0xcc) + 0x86);
            *(ebx + 0xec) = 0;
            al = *(esi + 0x14c);
            if(!(al & 0x40)) {
                *(ebx + 0xe9) = *(ebx + 0xe9) & 0xfb;
                if(!(al & 0x20)) {
                    *(ebx + 0xe8) = 0xa;
                    L00445DE4();
                } else {
                    *(ebx + 0xe8) = 8;
                    *(ebx + 0xdc) = 0;
                    L00445DE4();
                }
            } else {
                *(ebx + 0xe8) = 0x2e;
                L0043FDD8();
                L00445DE4();
            }
            L00414070(1, 0, 0xd);
            eax = L00414070(1, 0, 0xe);
        } else {
            if(!( *(esi + 0x14c) & 0x10)) {
                eax = *(ebx + 0xc8);
                if(*(eax + 0xfe) == *(eax + 0x56)) {
                    eax = *(ebx + 0xc8);
                    if(*(eax + 0x10e) < 0x17) {
                        *(ebx + 0xe8) = 0;
                        L00444850(34359, -1);
                        *(ebx + 0x1b8) = 0;
                        L00445DE4();
                        eax = L00414070(1, 0, 0xe);
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x00440AAB - 0x00440AAB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440AAB()
{



}

/*    Procedure: 0x00440AAC - 0x00440BDC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00440BDD()
 */

L00440AAC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 6572964;
    ax = *(A8 + 0xe8);
    if(ax != 0) {
        edx = M00655674;
        if(edx <= 65535) {
            if(edx <= (ax & 65535)) {
                ax = M00655674;
                *(A8 + 0xe8) = *(A8 + 0xe8) - ax;
            } else {
                *(A8 + 0xe8) = 0;
            }
        } else {
            *(A8 + 0xe8) = 0;
        }
    }
    if(*(esi + 0xe8) == 2) {
        *(esi + 0xc6) = *(esi + 0xc6) & 65533;
        if(*(A8 + 0xff) > 0x1e) {
            if(!( *(esi + 0xe9) & 2)) {
                L00445DE4();
            }
            *(esi + 0xe9) = *(esi + 0xe9) & 0xfd;
        } else {
            *(esi + 0xe9) = *(esi + 0xe9) | 2;
            if(!( *(esi + 0xe9) & 2)) {
                L00445DE4();
            }
        }
    }
    if(!( *(esi + 0xe9) & 2)) {
        edx = *(A8 + 0x9e) & 65535;
        eax = M00655674 >> 1;
        *(A8 + 0x9e) = edx > eax ? *(A8 + 0x9e) - ax : 0;
    } else {
        if(*(esi + 0xe8) != 2 && *(esi + 0xd8) >= 100000) {
            if(!( *(esi + 0xc6) & 2)) {
                L00444850(39118, -1);
            }
            *(esi + 0xc6) = *(esi + 0xc6) | 2;
        }
        eax = *(A8 + 0x9e) & 65535;
        eax = eax + (M00655674 >> 1);
        *(A8 + 0x9e) = eax > 65535 ? 65535 : *(A8 + 0x9e) + (M00655674 >> 1);
    }
}

/*    Procedure: 0x00440BDD - 0x00440C57
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00440BDD(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = *(A8 + 8);
    edx = *A8;
    ecx = edx - *(ebx + 0xa8);
    esi = *(A8 + 4) - *(ebx + 0xac);
    edi = 1;
    if(edx >= *(ebx + 0xa8)) {
        edi = 0;
    }
    esi = esi - edi;
    *(ebx + 0xa8) = edx;
    *(ebx + 0xac) = *(A8 + 4);
    M00644c84 = ecx;
    M00644c88 = esi;
    *(ebx + 0x8a) = 0;
    *(ebx + 0x8b) = 0;
    L00440AAC(ebx);
    return *( *((M00644c8c >> 1) * 8 + 0x4ef154))(ebx);
}

/*    Procedure: 0x00440C58 - 0x00440C97
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440C58()
{



    al = M00644c8e;
    if(al != 6 && al != 5) {
        if(M004ef0d0 != 0) {
            L00443A98();
        }
        if(M004ef0d4 != 0) {
            L00443B5C();
        }
    }
    return *( *((M00644c8c >> 1) * 8 + 0x4ef158))();
}

/*    Procedure: 0x00440C98 - 0x00440CDC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00440C98(A8)
/* unknown */ void  A8;
{



    M00644c80 = 0;
    L00442188(A8);
    eax = M00644c70;
    if(!( *(eax + 0x14c) & 0x40)) {
        eax = L00440DAC(A8);
    }
    if(*(A8 + 0x14e) != 0) {
        eax = L0043D8E4(A8, A8 + 0x3e, 0);
    }
}

/*    Procedure: 0x00440CDD - 0x00440D28
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00440CDD(A8)
/* unknown */ void  A8;
{



    M00644c80 = 0;
    L00442188(A8);
    eax = !(M00644db6 & 1) ? L00440DAC(A8) : L00440EF0(A8);
    if(*(A8 + 0x14e) != 0) {
        eax = L0043D8E4(A8, A8 + 0x3e, 0);
    }
}

/*    Procedure: 0x00440D29 - 0x00440DA9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440D29()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    L00441F3C(ebx);
    if(M00644c80 > 200000 || M00644d5c != 0) {
        M00644c8c = 0x26;
        L00445DE4();
        L00414070(1, 0, 0xe);
    }
    L0044220C(ebx);
    *L004dde54(ebx, M00644c84);
    L004424FC(ebx);
    eax = L00441A7C(ebx, M0064a3b0, ebp - 8, ebp - 1, ebp - 2);
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00440DAA - 0x00440DAB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440DAA()
{



}

/*    Procedure: 0x00440DAC - 0x00440EEC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00440C98()
 *        L00440CDD()
 *        L00440F61()
 *        L004411B5()
 */

L00440DAC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 6572964;
    if(*L00644C80 <= 20000000) {
        eax = !( *(A8 + 0xcb) & 0x40) ? 0xb : 5;
        ecx = eax;
        eax = *(esi + 0xd8) >> cl;
        if(*(esi + 0x1ec) + eax > 65535) {
            L0043E288(A8, -1, 0);
        } else {
            *(esi + 0x1ec) = *(esi + 0x1ec) + eax;
            edx = eax >> 8;
            if(edx > 0) {
                L0043E288(A8, edx, 0);
            }
        }
        if(*(esi + 16226) != 0 && *(esi + 16220) != 0 && *( *L00501b94( *(A8 + 0x56) & 0xff, M0064a3b0) + 0xe0) < 0x116) {
            *(esi + 0x74) = *(esi + 0x74) | 0x40;
            L004701BE(0xe);
        }
        if(*(esi + 0xd8) < 0xbb8) {
            eax = L00440F24(A8);
        } else {
            esi = M00655674 > 1048575 ? 1048575 : M00655674;
            esi = esi << 0xb;
            *(A8 + 0x8c) = *(A8 + 0x8c) - L004537B0( *(A8 + 0x8c), esi);
            *(A8 + 0x90) = *(A8 + 0x90) - L004537B0( *(A8 + 0x90), esi);
            *(A8 + 0x94) = *(A8 + 0x94) - L004537B0( *(A8 + 0x94), esi);
            eax = L00440F08(A8);
        }
    }
}

/*    Procedure: 0x00440EED - 0x00440EEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440EED()
{



}

/*    Procedure: 0x00440EF0 - 0x00440F05
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440CDD()
 *        L00441C98()
 */

L00440EF0(A8)
/* unknown */ void  A8;
{



    M00644c18 = M00644c18 & 0xbf;
    return L00440F08(A8);
}

/*    Procedure: 0x00440F06 - 0x00440F07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440F06()
{



}

/*    Procedure: 0x00440F08 - 0x00440F22
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440DAC()
 *        L00440EF0()
 */

L00440F08(A8)
/* unknown */ void  A8;
{



    if(M00644c80 <= 20000000) {
        eax = L00440F24(A8);
    }
}

/*    Procedure: 0x00440F23 - 0x00440F23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440F23()
{



}

/*    Procedure: 0x00440F24 - 0x00440F2D
 *    Argument size: -32
 *    Local size: 32
 *    Save regs size: 0
 *    Called by:
 *        L00440DAC()
 *        L00440F08()
 */

L00440F24()
{



}

/*    Procedure: 0x00440F2E - 0x00440F2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440F2E()
{



}

/*    Procedure: 0x00440F30 - 0x00440F60
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440F61()
 *        L004411B5()
 *        L00442EC4()
 */

L00440F30()
{



    M00644d5c = M00644c7c;
    M00644c8c = 0;
    L00445DE4();
    L004701BE(0x14);
    return L00414070(1, 0, 0xe);
}

/*    Procedure: 0x00440F61 - 0x00441108
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00440F61()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 8);
    esi = 6572964;
    if(!( *L00648B5A & 2)) {
        if(M00653c0c == 0) {
            goto L00440f90;
        }
        eax = L00440F30();
    } else {
L00440f90:
        L00442188(ebx);
        eax = L00441A7C(ebx, M0064a3b0, ebp - 8, ebp - 1, ebp - 2);
        if(*(esi + 0xe8) != 0x2c) {
            if(!(al & 0x20)) {
                if(!(al & 1)) {
                    L00440DAC(ebx);
                    goto L004410c0;
                }
                L00441C98(ebx);
                goto L004410c0;
            }
            if(al & 0x40) {
                goto L004410ac;
            }
            if(!(al & 0x80)) {
                *(esi + 0xcc) = *(ebp - 8);
                *(esi + 0xf8) = 0;
                *(esi + 0xc5) = *( *(ebp - 8) + 0x86);
                L0044230C(ebx);
                eax = *(ebp - 8);
                L0042C9B4( *(esi + 0xc0), eax);
                if(!( *( *(ebp - 8) + 0x14c) & 0x40)) {
                    *(esi + 0xe8) = 0x2e;
                    L0043FDD8();
                    L00445DE4();
                } else {
                    *(esi + 0x106) = 458752;
                    L004701BE(0x13);
                    *(esi + 0xe9) = *(esi + 0xe9) & 0xdb;
                    if(!( *( *(ebp - 8) + 0x14c) & 0x20)) {
                        *(esi + 0xe8) = 8;
                        *(esi + 0xdc) = 0;
                        L00445DE4();
                    } else {
                        *(esi + 0xe8) = 0xa;
                        L00445DE4();
                    }
                }
                L00414070(1, 0, 0xd);
                eax = L00414070(1, 0, 0xe);
                goto L00441103;
L004410ac:
                if(!(al & 1)) {
                    L00440DAC(ebx);
                } else {
                    L00441C98(ebx);
                }
L004410c0:
                L004424FC(ebx);
                *L004dde58(ebx, M0064a3b0, *(esi + 0xe0));
                *L004dde2c(ebx, *(esi + 0xe0));
                eax = *(esi + 0xe0);
                eax = *L004dde30(ebx, eax, 1, eax);
            }
        }
    }
L00441103:
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00441109 - 0x0044110B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441109()
{



}

/*    Procedure: 0x0044110C - 0x004411B4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00442EC4()
 */

L0044110C()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    if(*L00644C8C < 0x28) {
        *L00644C8D = *L00644C8D & 0xfe;
        eax = *L00644C6C;
        *(eax + 0x100) = *L00644C90;
        if(*L00644C90 != 0) {
            eax = *L00644C6C;
            if(!( *(eax + 0xca) & 0x20)) {
                if(*L00644C8C == 0x26) {
                    L00441A54( *L00644C6C);
                }
                *( *(ebx + 0xc8) + 0xff) = 8;
                *(ebx + 0xe8) = 2;
                L00414070(0x17, 0, *( *(ebx + 0xc8) + 0x86) & 0xff);
                L00445DE4();
                L004701BE(0x14);
                eax = L00414070(1, 0, 0xe);
            }
        }
    }
}

/*    Procedure: 0x004411B5 - 0x004413F0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004411B5()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 8);
    esi = 6572964;
    L00441F3C(ebx);
    L0044220C(ebx);
    if(!( *(esi + 0xe9) & 1)) {
        *L004dde54(ebx, *(esi + 0xe0));
    } else {
        *L004dde2c(ebx, *(esi + 0xe0));
    }
    if(!( *(esi + 16310) & 2)) {
        if(M00653c0c != 0) {
            if(*(esi + 0xe8) == 2) {
                L00440F30();
            }
            eax = L00446018();
            M00653c04 = *(esi + 0xe9) & 1;
            M00653c0c = 0;
        }
        L0042EAE6( *(esi + 0xc8) + 0x8c, esi + 0x88, *(esi + 0xe0), 0xd);
        *(esi + 0xe9) = *(esi + 0xe9) | 1;
        L0042EAE6(esi + 0x88, *(esi + 0xc8) + 0x8c, *(esi + 0xe0), 0xb);
    } else {
        if(M00653c0c == 0) {
            *(esi + 0xe9) = *(esi + 0xe9) & 0xfe;
            *(esi + 0xe9) = *(esi + 0xe9) | M00653c04;
            L00445F40();
            L00445DE4();
            M00653c0c = 1;
        }
    }
    L004424FC(ebx);
    eax = L00441A7C(ebx, M0064a3b0, ebp - 4, ebp - 5, ebp - 6);
    if(*(esi + 0xe8) != 0x2c) {
        if(al & 0x20) {
            goto L00441362;
        }
        if(!(al & 0x40)) {
            *(esi + 0xe8) = 0x24;
            L00445DE4();
            L00414070(1, 0, 0xe);
        }
        eax = *(ebp - 4);
        if(!( *(eax + 0x14c) & 0x10)) {
            L0042CBB4( *(esi + 0xc0), *(ebp - 4));
            if(al != 0) {
                *(esi + 0xe8) = 6;
                eax = L00414070(1, 0, 0xe);
            } else {
                eax = L004413F4( *(ebp - 4));
                goto L004413eb;
L00441362:
                if(!(al & 0x40)) {
                    eax = *(ebp - 4);
                    *(esi + 0xcc) = eax;
                    *(esi + 0xc5) = *( *(esi + 0xcc) + 0x86);
                    L0044230C(ebx);
                    *(esi + 0xf8) = 0xff;
                    *(esi + 0xe8) = 0x32;
                    L00414070(1, 0, 0xd);
                    eax = L00414070(1, 0, 0xe);
                } else {
                    *(esi + 0xeb) = 0;
                    if(!(al & 1)) {
                        L00440DAC(ebx);
                        *(esi + 0x88) = 0;
                        *(esi + 0x8c) = 0;
                        *(esi + 0x90) = 0;
                        *(esi + 0x94) = *(esi + 0xd8);
                    }
                    eax = L00441C98(ebx);
                }
            }
        }
    }
L004413eb:
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004413F1 - 0x004413F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004413F1()
{



}

/*    Procedure: 0x004413F4 - 0x0044145C
 *    Argument size: -44
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L004411B5()
 *        L0044155E()
 */

L004413F4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff8;



    eax = A8;
    if(M00644c8f == 0) {
        M00644c8f = 6;
        M00644c70 = eax;
        M00644c69 = *(eax + 0x86);
        Vffffffd0 = 39102;
        Vffffffe8 = 8;
        Vffffffec = eax;
        Vffffffd4 = M00644c69 & 0xff;
        Vfffffff8 = *(eax + 0xa0);
        L00421DEC( & Vffffffd0);
        eax = L00414070(1, 0, 0xd);
    }
}

/*    Procedure: 0x0044145D - 0x0044155D
 *    Argument size: 0
 *    Local size: 48
 *    Save regs size: 4
 */

L0044145D()
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff8;



    ebx = 6572964;
    eax = M0063b308;
    edx = 0;
    edx = 49710 / 49710 % 49710 / 49710;
    ecx = eax & 1;
    M004ef0dc = ecx;
    if(M004ef0d0 != 0) {
        eax = ecx != 0 ? L0041D49C(0x49) : L0041D4C0(0x49);
    }
    if(M004ef0d4 != 0) {
        eax = M004ef0dc != 0 ? L0041D49C(0x4f) : L0041D4C0(0x4f);
    }
    if(*(ebx + 0xe8) == 2) {
        eax = L0041D444(0x49, M004ef0dc);
    }
    if(*(ebx + 0xeb) != 0 && *(ebx + 0xe8) != 2) {
        *(ebx + 0xeb) = *(ebx + 0xeb) + 0xff;
        if(*(ebx + 0xeb) <= 0) {
            if(*(ebx + 0xeb) == 0) {
                *(ebx + 0xeb) = *(ebx + 0xeb) - 1;
                Vffffffd0 = 39103;
                Vffffffe8 = 8;
                eax = *(ebx + 0xcc);
                Vffffffec = eax;
                Vfffffff8 = *(Vffffffec + 0xa0);
                eax = L00421DEC( & Vffffffd0);
            } else {
                if(*(ebx + 0xeb) == 0xf8) {
                    eax = L0041C44F(0, *(ebx + 0xcc));
                }
            }
        }
    }
}

/*    Procedure: 0x0044155E - 0x004416FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044155E()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 8);
    esi = 6572964;
    L00441F3C(ebx);
    L0044220C(ebx);
    *L004dde2c(ebx, *(esi + 0xe0));
    L004424FC(ebx);
    eax = L00441A7C(ebx, M0064a3b0, ebp - 8, ebp - 1, ebp - 2);
    if(*(esi + 0xe8) != 0x2c) {
        if(al & 0x20) {
            goto L004416e5;
        }
        *(ebp - 2) = *(ebp - 2) - 1;
        if(*(ebp - 2) >= 0 && *(ebp - 2) < 7 && *(ebp - 2) != *(esi + 0xf4)) {
            (save)ebx;
            L004413F4();
            goto L004416c2;
        }
        *(esi + 0xeb) = 0;
        if(al & 0x40) {
            goto L004416c2;
        }
        if(!(al & 0x80)) {
            *(esi + 0xcc) = *(ebp - 8);
            *(esi + 0xf8) = 0;
            *(esi + 0xc5) = *( *(ebp - 8) + 0x86);
            L0044230C(ebx);
            eax = *(ebp - 8);
            L0042C9B4( *(esi + 0xc0), eax);
            if(!( *( *(ebp - 8) + 0x14c) & 0x40)) {
                *(esi + 0xe8) = 0x2e;
                L0043FDD8();
                L00445DE4();
            } else {
                *(esi + 0x106) = 458752;
                L004701BE(0x13);
                *(esi + 0xe9) = *(esi + 0xe9) & 0xdb;
                if(!( *( *(ebp - 8) + 0x14c) & 0x20)) {
                    *(esi + 0xe8) = 8;
                    *(esi + 0xdc) = 0;
                    L00445DE4();
                } else {
                    *(esi + 0xe8) = 0xa;
                    L00445DE4();
                }
            }
            L00414070(1, 0, 0xd);
            eax = L00414070(1, 0, 0xe);
            goto L004416fa;
L004416c2:
            *L004dde40(ebx, *(ebp - 8), 0);
            eax = *(ebp - 8);
            *(ebx + 0xb2) = *(eax + 0x112);
            goto L004416fa;
L004416e5:
            *(esi + 0xe8) = 0;
            eax = L00414070(1, 0, 0xe);
        }
    }
L004416fa:
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00441700 - 0x0044191B
 *    Argument size: 4
 *    Local size: 36
 *    Save regs size: 8
 */

L00441700(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;
    /* unknown */ void  Vffffffff;



    esi = 6572964;
    if(*(A8 + 0x14e) != 0) {
        L0043D8E4(A8, A8 + 0x3e, 0);
    }
    *(esi + 0x1b8) = 0;
    *(esi + 0xec) = 0;
    *(esi + 0xed) = 0;
    *(A8 + 0xff) = 0x24;
    L00414070(0x17, 0, *(A8 + 0x86) & 0xff);
    if(*( *(esi + 0xcc) + 0xc9) == 2 && !( *(esi + 0xe9) & 0x20)) {
        *(esi + 0xe9) = *(esi + 0xe9) | 0x20;
        L004701BE(0x22);
    }
    *L004dde40(A8, *(esi + 0xcc), -1);
    *L004dde48(A8, *(esi + 0xcc), & Vffffffdc);
    if(*(esi + 0xe8) == 0xa) {
        L0044EB67( & Vffffffec, Vffffffec, Vfffffff0, 65536);
    }
    *(A8 + 0x8c) = Vffffffdc >> 6 | (Vffffffe0 & 0x3f) << 0x1a;
    *(A8 + 0x90) = Vffffffe4 >> 6 | (Vffffffe8 & 0x3f) << 0x1a;
    *(A8 + 0x94) = Vffffffec >> 6 | (Vfffffff0 & 0x3f) << 0x1a;
    eax = M00655674;
    *L004dde30(A8, eax, 1, eax);
    L004424FC(A8);
    *(A8 + 0x8c) = 0;
    *(A8 + 0x90) = 0;
    *(A8 + 0x94) = 0;
    *"8tB"(A8, M0064a3b0, & Vfffffffe, & Vfffffffd, & Vfffffff4, & Vfffffff8, & Vffffffff);
    if(*(esi + 0x106) < M00655674) {
        eax = *( *(esi + 0xcc) + 0x82);
        if(eax == 0x45 || eax == 0x4f) {
            *(esi + 0xe9) = *(esi + 0xe9) & 0xdf;
            *(esi + 0xe8) = 0x28;
            L0042C9E0( *(esi + 0xcc));
            *(esi + 0xea) = 0;
            L00445DE4();
            eax = L00414070(1, 0, 0xe);
        } else {
            *(esi + 0xe9) = *(esi + 0xe9) & 0xdf;
            *(esi + 0xe8) = 0xc;
            *(esi + 0x106) = 131071;
            L0042C9E0( *(esi + 0xcc));
            *(esi + 0xea) = 0;
            L00445DE4();
            eax = L00414070(1, 0, 0xe);
        }
    } else {
        eax = *(esi + 0x106) - M00655674;
        *(esi + 0x106) = eax;
    }
}

/*    Procedure: 0x0044191C - 0x00441938
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00441939()
 */

L0044191C()
{



    if(!(M00644c8d & 0x20)) {
        eax = L004701BE(0x12);
    }
    M00644c8d = M00644c8d | 0x20;
}

/*    Procedure: 0x00441939 - 0x00441956
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00441939(A8)
/* unknown */ void  A8;
{



    if(M00644caa < 65535) {
        eax = L0044191C(A8);
    }
}

/*    Procedure: 0x00441957 - 0x00441963
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441957()
{



    M00644c8d = M00644c8d & 0xdf;
}

/*    Procedure: 0x00441964 - 0x0044198C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00441964(A8)
/* unknown */ void  A8;
{



    eax = !(M00644c8d & 0x20) ? L00441990(A8) : L004701BE(0x13);
    M00644c8d = M00644c8d | 0x20;
}

/*    Procedure: 0x0044198D - 0x0044198F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044198D()
{



}

/*    Procedure: 0x00441990 - 0x00441994
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00441964()
 */

L00441990()
{



}

/*    Procedure: 0x00441995 - 0x00441A51
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441995()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 8);
    esi = L00441A7C(ebx, M0064a3b0, ebp - 8, ebp - 1, ebp - 2);
    L00441F3C(ebx);
    L0044220C(ebx);
    *L004dde2c(ebx, M00644c84);
    eax = L004424FC(ebx);
    if(M00644c8c != 0x2c) {
        if(!(esi & 0x20)) {
            M00644c8c = 0;
            L00445DE4();
            L00441A54(ebx);
            M004d8e70 = 1;
            eax = L00414070(1, 0, 0xe);
        } else {
            if(!(esi & 0x40)) {
                eax = M00644c70;
                if(!( *(eax + 0x14c) & 0x20)) {
                    M00644d5c = 0;
                    M00644c8c = 0x24;
                    eax = L00445DE4();
                }
            }
        }
    }
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00441A52 - 0x00441A53
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441A52()
{



}

/*    Procedure: 0x00441A54 - 0x00441A79
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044110C()
 *        L00441995()
 */

L00441A54(A8)
/* unknown */ void  A8;
{



    if(M00644c9c == 0) {
        eax = A8;
        eax = L0042C96C( *(eax + 0x86), M00644c70);
    }
}

/*    Procedure: 0x00441A7A - 0x00441A7B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441A7A()
{



}

/*    Procedure: 0x00441A7C - 0x00441C53
 *    Argument size: 20
 *    Local size: 56
 *    Save regs size: 12
 *    Called by:
 *        L00440D29()
 *        L00440F61()
 *        L004411B5()
 *        L0044155E()
 *        L00441995()
 */

L00441A7C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;



    esi = 6572964;
    *"htB"(A8, Ac, & Vfffffffb, A14, A10, & Vfffffffc, A18);
    *(esi + 0x212) = Vfffffffb;
    eax = Vfffffffc == -1 ? 2147483647 : Vfffffffc;
    *(esi + 0xdc) = eax;
    if(eax >= 12000000) {
        if(*(esi + 0xe8) != 0x2c) {
            if(!( *(esi + 0xc6) & 0x40) && M0063218a < 0) {
                L00445DE4();
            }
            *(esi + 0xc6) = *(esi + 0xc6) | 0x40;
        }
    } else {
        if(!( *(esi + 0xc6) & 0x40) && M0063218a < 0) {
            L00445DE4();
        }
        *(esi + 0xc6) = *(esi + 0xc6) & 65471;
    }
    if(!( *(esi + 0x212) & 1)) {
        L00441C54(A8);
        eax = *(esi + 0x212);
    } else {
        eax = *( *A10 + 0x82);
        if(eax >= 0x86 && eax <= 0x94) {
            if(!( *(A8 + 0xca) & 0x10)) {
                if(Vfffffffc > 30000000 || *(esi + 0xd8) < 9000 || *(esi + 0x1e8) > M00655674) {
                    eax = *(esi + 0x212);
                    goto L00441c4d;
                }
                if(*(esi + 0x120) < *(esi + 0x118)) {
                    *(esi + 0x120) = *(esi + 0x120) + 1;
                    *(esi + 0x15a) = *(esi + 0x15a) + 1;
                    Vffffffc8 = 39174;
                    Vffffffcc = *(esi + 0x15a) & 65535;
                    Vffffffe0 = -1;
                    L00421DEC( & Vffffffc8);
                    L00419470(0x16, 36371);
                    L004701BE(0x11);
                }
            }
            *(esi + 0x1e8) = 149130;
            edx = *( *A10 + 0x82);
            if(edx >= 0x89) {
                eax = *(esi + 0x1ec);
                edx = edx >= 0x8c ? M00655674 >> 8 : M00655674 >> 0xa;
                *(esi + 0x1ec) = edx + *(esi + 0x1ec);
                if(eax > *(esi + 0x1ec)) {
                    L0043E288(A8, -1, 0);
                }
            }
        }
        eax = *(esi + 0x212);
    }
L00441c4d:
}

/*    Procedure: 0x00441C54 - 0x00441C94
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00441A7C()
 */

L00441C54(A8)
/* unknown */ void  A8;
{



    if(!( *(A8 + 0xca) & 2)) {
        if(M00644cf0 != 0) {
            M00644cf0 = M00644cf0 - 1;
            M00644cea = M00644cea + 1;
        }
        if(M00644cee != 0) {
            M00644cee = M00644cee - 1;
            M00644ce0 = M00644ce0 + 1;
        }
    }
}

/*    Procedure: 0x00441C95 - 0x00441C97
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441C95()
{



}

/*    Procedure: 0x00441C98 - 0x00441DB2
 *    Argument size: 4
 *    Local size: 28
 *    Save regs size: 8
 *    Called by:
 *        L00440F61()
 *        L004411B5()
 */

L00441C98(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    if(M00644c80 < 20000000) {
        eax = L00440EF0(ebx);
    } else {
        eax = L00441DB4(ebx);
        if(M00648af5 != 0 && M0063218a < 0) {
            eax = *L00501b8c() & 65535;
            if(eax < 13106 && M005015f0 != 0) {
                eax = *L004eeedc(M0064a3b0, ebx, 0x2a, 0x6d, & Vfffffffc);
                ebx = eax;
                if(ebx != 0) {
                    *(ebx + 0xb0) = 0;
                    *(ebx + 0x57) = 0;
                    *(ebx + 0x87) = 0xb;
                    *(ebx + 0xff) = 0x1b;
                    esi = *L00501b8c();
                    M00644b9c = esi;
                    eax = M00644bcc & 65535;
                    M00644ba0 = eax;
                    L0045AFF0(ebx, M00644b9c, M00644ba0);
                    *(ebx + 0x7e) = ( *L00501b8c() & 3) + M00644c78 + M0064a114 - 7;
                    *L00501700( & Vffffffe4, ebx + 0x8c, M0064a114 + 7);
                    eax = L0045A044(ebx + 0x3e, & Vffffffe4);
                }
            }
        }
    }
}

/*    Procedure: 0x00441DB3 - 0x00441DB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441DB3()
{



}

/*    Procedure: 0x00441DB4 - 0x00441F3A
 *    Argument size: 4
 *    Local size: 40
 *    Save regs size: 4
 *    Called by:
 *        L00441C98()
 */

L00441DB4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *L00501b8c() & 65535;
    if(eax < 0x1999 && *(ebx + 0x56) == 0x72 && M00649cbc < M00649cbd && M005015f0 != 0) {
        eax = *L004eecb4(M0064a3b0, ebx, 0xf, *(( *L00501b8c() & 0x1f) * 2 + 0x4ef740) & 65535, & Vfffffffc);
        ebx = eax;
        if(ebx != 0) {
            M00649cbc = M00649cbc + 1;
            *(ebx + 0xb0) = 0;
            *(ebx + 0x57) = 0;
            *(ebx + 0x87) = 0xb;
            *(ebx + 0xff) = 0x19;
            *(ebx + 0x118) = 0xfc;
            *L00501b8c();
            *(ebx + 0xa0) = M00644bc8;
            Vfffffff0 = *L00501b8c() << 0xc;
            Vfffffff4 = *L00501b8c() << 0xc;
            Vfffffff8 = *L00501b8c() << 0xc;
            eax = Vfffffff0;
            asm("cdq");
            ecx = (eax ^ edx) - edx;
            eax = Vfffffff4;
            asm("cdq");
            ecx = ecx + (eax ^ edx) - edx;
            eax = Vfffffff8;
            asm("cdq");
            if(ecx + (eax ^ edx) - edx < 0x3e8) {
                Vfffffff0 = 0x5dc;
            }
            *(ebx + 0x8c) = *(ebx + 0x8c) + Vfffffff0;
            *(ebx + 0x90) = *(ebx + 0x90) + Vfffffff4;
            *(ebx + 0x94) = *(ebx + 0x94) + Vfffffff8;
            eax = *(ebx + 0x8c);
            Vffffffd8 = eax;
            edx = 0;
            if(Vffffffd8 < 0) {
                edx = -1;
            }
            Vffffffdc = edx;
            eax = *(ebx + 0x90);
            Vffffffe0 = eax;
            edx = 0;
            if(Vffffffe0 < 0) {
                edx = -1;
            }
            Vffffffe4 = edx;
            eax = *(ebx + 0x94);
            Vffffffe8 = eax;
            edx = 0;
            if(Vffffffe8 < 0) {
                edx = -1;
            }
            Vffffffec = edx;
            L0045A044(ebx + 0x3e, & Vffffffd8);
            *(ebx + 0x8c) = 0;
            *(ebx + 0x90) = 0;
            eax = 0;
            *(ebx + 0x94) = 0;
        }
    }
}

/*    Procedure: 0x00441F3B - 0x00441F3B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00441F3B()
{



}

/*    Procedure: 0x00441F3C - 0x0044203B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00440D29()
 *        L004411B5()
 *        L0044155E()
 *        L00441995()
 */

L00441F3C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    ebx = 6572964;
    if(M0063218a < 0) {
        if(!( *L00644C8D & 1)) {
            if(M005014e8 == 0) {
                if(*L00644D5C < 0) {
                    *L00644D5C = 0;
                    eax = L0044203C(A8);
                    goto L00442037;
                }
                *(ebx + 0x1b8) = *(ebx + 0x1b8) + L004461F8( *(ebx + 0x1b8));
                if(*(ebx + 0x1b8) < 0) {
                    *(ebx + 0x1b8) = 2147483647;
                }
            }
            if(M00501502 != 0) {
                goto L00442029;
            }
            eax = *(ebx + 0x1b8);
            if(eax > 0) {
                goto L00441ff1;
            }
            if(!( *(ebx + 0xe9) & 0x80)) {
                (save)M0064a110 >> 8;
                edx = eax;
                (restore)eax;
                edx = edx - eax;
                *(ebx + 0x1b8) = edx;
                if(*(ebx + 0x1b8) > 0) {
                    *(ebx + 0x1b8) = -2147483648;
                    goto L00442030;
L00441ff1:
                    edi = *(ebx + 0x1b8);
                    *(ebx + 0xe9) = *(ebx + 0xe9) | 0x80;
                    *(ebx + 0x1b8) = *(ebx + 0x1b8) - L004461F8( *(ebx + 0x1b8));
                    eax = *(ebx + 0x1b8);
                    if(edi < eax) {
                        goto L0044201f;
                    }
                    if(eax < 0) {
L0044201f:
                        *(ebx + 0x1b8) = 0;
                        goto L00442030;
L00442029:
                        *(ebx + 0xe9) = *(ebx + 0xe9) & 0x7f;
                    }
                }
            }
        }
L00442030:
        eax = L0044203C(A8);
    }
L00442037:
}

/*    Procedure: 0x0044203C - 0x00442187
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00441F3C()
 *        L00442188()
 */

L0044203C()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    esi = *(ebp + 8);
    ebx = 6572964;
    *(ebp - 4) = *L00644C74;
    eax = *L005003c8(esi, ebx);
    *(ebx + 0xd0) = eax;
    *(ebp - 8) = *(ebx + 0xd0) - *(ebp - 4) << 6;
    eax = *(ebx + 0xd2) - *(ebp - 2) << 6;
    *(ebp - 6) = ax;
    al = *(ebx + 0xea);
    if(al != 2) {
        if(al == 3) {
            goto L00442116;
        }
        if(*(ebx + 16212) == 0) {
            eax = *(ebp - 8);
            edx = eax;
            eax = ~eax;
            *(ebp - 8) = ax;
        }
        if(*(ebx + 16213) == 0) {
            eax = *(ebp - 6);
            edx = eax;
            *(ebp - 6) = ~eax;
        }
        *(esi + 0xb0) = *(esi + 0xb0) + *(ebp - 6);
        if(*(ebx + 16214) == 0) {
            *(esi + 0xb4) = *(esi + 0xb4) - *(ebp - 8);
        } else {
            if(!( *(ebx + 0x212) & 0x20)) {
                *(esi + 0xb2) = *(esi + 0xb2) + *(ebp - 8);
                if(*(ebx + 0xdc) <= 40000000) {
                    *(esi + 0xb4) = *(esi + 0xb4) - *(ebp - 6);
                }
            }
        }
    } else {
L00442116:
        *(ebx + 0x204) = *(ebx + 0x204) + *(ebp - 8);
        *(ebx + 0x206) = *(ebx + 0x206) - *(ebp - 6);
        if(*(ebx + 0x206) >= 0) {
            goto L00442153;
        }
        *(ebx + 0xea) = 2;
        if(*(ebx + 0x206) <= 49152) {
            *(ebx + 0x206) = 49153;
            goto L00442182;
L00442153:
            if(*(esi + 0xd1) < 4) {
                goto L00442179;
            }
            *(ebx + 0xea) = 3;
            if(*(ebx + 0x206) >= 16384) {
                *(ebx + 0x206) = 16383;
                goto L00442182;
L00442179:
                *(ebx + 0x206) = 65535;
            }
        }
    }
L00442182:
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x00442188 - 0x004421A3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440C98()
 *        L00440CDD()
 *        L00440F61()
 */

L00442188(A8)
/* unknown */ void  A8;
{



    al = M00644c8e;
    if(al == 2 || al == 3) {
        eax = L0044203C(A8);
    }
}

/*    Procedure: 0x004421A4 - 0x00442209
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442EC4()
 */

L004421A4(A8)
/* unknown */ void  A8;
{



    eax = *L005003c8();
    if(M00644c8e != 5) {
        if(M00501505 == 0 || M00655685 & 0x10 || M00655685 & 0x20) {
            goto L004421e3;
        }
        if(M005015f8 != 0 && M00501601 != 0) {
L004421e3:
            al = M00644c8e;
            eax = al == 4 || al == 6 ? 0 : M00644c8e;
            eax = L0043D05C(A8, eax);
        }
    }
}

/*    Procedure: 0x0044220A - 0x0044220B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044220A()
{



}

/*    Procedure: 0x0044220C - 0x00442309
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 4
 *    Called by:
 *        L00440D29()
 *        L004411B5()
 *        L0044155E()
 *        L00441995()
 */

L0044220C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = M00655674 >> 1;
    *L004dde30(A8, eax, 0, eax);
    eax = M00655674 >> 1;
    *L004dde30(A8, eax, 0, eax);
    *L004dde58(A8, M0064a3b0, M00655674);
    if(M00644c80 <= 40000000) {
        *L004dde68(A8);
        *(A8 + 0xb2) = *(A8 + 0x112);
    }
    *(A8 + 0x14d) = *(A8 + 0x14d) - 1;
    if(*(A8 + 0x14d) < 0) {
        *L004dde5c(A8, M0064a3b0);
        *(A8 + 0x14d) = 0xd;
    }
    if(M00644c8c == 0x24) {
        Vfffffff4 = 0;
        Vfffffffc = 0;
        Vfffffff8 = 0xcc6;
        eax = *L004dde50(A8, & Vfffffff4, & Vffffffe8);
    } else {
        if(!(M00644c8d & 1)) {
            eax = L0044237C(A8);
        } else {
            *L004dde60(A8, M00644d5c, & Vfffffff4);
            eax = *L004dde50(A8, & Vfffffff4, & Vffffffe8);
        }
    }
}

/*    Procedure: 0x0044230A - 0x0044230B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044230A()
{



}

/*    Procedure: 0x0044230C - 0x0044237B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440F61()
 *        L004411B5()
 *        L0044155E()
 *        L00442650()
 *        L0044421C()
 */

L0044230C(A8)
/* unknown */ void  A8;
{



    eax = A8;
    *(eax + 0x8c) = 0;
    *(eax + 0x90) = 0;
    *(eax + 0x94) = 0;
    *(eax + 0xb0) = 0;
    *(eax + 0xb2) = 0;
    M00644d5c = 0;
    *(eax + 0xb6) = 0;
    *(eax + 0xb8) = 0;
    *(eax + 0xba) = 0;
    if(!(M00644c6a & 0x80)) {
        eax = L00470711(3, 1, 0x12c, eax);
    }
}

/*    Procedure: 0x0044237C - 0x004424CA
 *    Argument size: 4
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L0044220C()
 */

L0044237C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = 0;
    Vfffffff8 = 0;
    Vfffffff4 = 0;
    if(!(M00648b5a & 2)) {
        Vffffffdc = *(A8 + 0x8c) - M00644c2c;
        Vffffffe0 = *(A8 + 0x90) - M00644c30;
        Vffffffe4 = *(A8 + 0x94) - M00644c34;
        esi = L004537B0( *(A8 + 0xc), Vffffffdc);
        esi = esi + L004537B0( *(A8 + 0x10), Vffffffe0);
        esi = esi + L004537B0( *(A8 + 0x14), Vffffffe4);
        edi = L004537B0( *A8, Vffffffdc);
        edi = edi + L004537B0( *(A8 + 4), Vffffffe0);
        eax = edi + L004537B0( *(A8 + 8), Vffffffe4);
        if(eax > 0x100) {
            Vfffffff4 = ~eax << 2;
        }
        if(eax < -256) {
            Vfffffff4 = ~eax << 2;
        }
        if(esi > 0x100) {
            Vfffffff8 = ~esi << 2;
        }
        if(esi < -256) {
            Vfffffff8 = ~esi << 2;
        }
    }
    if(M005014e8 == 0) {
        Vfffffffc = 32767;
    } else {
        if(M00501502 == 0) {
            Vfffffffc = -32767;
        } else {
            L00470711(3, 1, 0x12c, A8);
        }
    }
    return *L004dde50(A8, & Vfffffff4, & Vffffffe8);
}

/*    Procedure: 0x004424CB - 0x004424DA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004424CB(A8)
/* unknown */ void  A8;
{



    return L004424DC(A8);
}

/*    Procedure: 0x004424DB - 0x004424DB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004424DB()
{



}

/*    Procedure: 0x004424DC - 0x004424F9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004424CB()
 *        L004424FC()
 */

L004424DC(A8)
/* unknown */ void  A8;
{



    return *L005016ec(A8, M00644c88, M00644c84);
}

/*    Procedure: 0x004424FA - 0x004424FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004424FA()
{



}

/*    Procedure: 0x004424FC - 0x004425C4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00440D29()
 *        L00440F61()
 *        L004411B5()
 *        L0044155E()
 *        L00441700()
 *        L00441995()
 */

L004424FC(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x14e) != 0) {
        L0043D8E4(A8, A8 + 0x3e, 0);
    }
    eax = L004424DC(A8);
    if(M00648b02 != 0 && M00649ed8 < 0) {
        edx = *(A8 + 0xb6) >= 0 ? *(A8 + 0xb6) : ~( *(A8 + 0xb6));
        eax = *(A8 + 0xb8) >= 0 ? *(A8 + 0xb8) : ~( *(A8 + 0xb8));
        ecx = *(A8 + 0xba) >= 0 ? *(A8 + 0xba) : ~( *(A8 + 0xba));
        if(edx > eax) {
            eax = edx;
        }
        if(ecx > eax) {
            eax = ecx;
        }
        eax = eax - 0x221;
        if(eax >= 0) {
            eax = L00470711(3, eax, 0x1ae - eax, A8);
            M00644c6a = M00644c6a | 0x80;
        }
    }
}

/*    Procedure: 0x004425C5 - 0x00442608
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004425C5()
{



    L00419470(0xe, 0);
    M00644c8c = 0x34;
    M00644c9c = 0xff;
    M00644c94 = 1;
    L00446004();
    L00442650();
    return L00414070(1, 0, 0xe);
}

/*    Procedure: 0x00442609 - 0x0044264E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00442609()
{



    L00419470(5, 0);
    M00644c8c = 0x30;
    M00644c94 = 0;
    L0042C9E0(M00644c70);
    L0047017D();
    L00442650();
    return L00414070(1, 0, 0xe);
}

/*    Procedure: 0x0044264F - 0x0044264F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044264F()
{



}

/*    Procedure: 0x00442650 - 0x00442671
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004425C5()
 *        L00442609()
 */

L00442650()
{



    L0044230C(M00644c6c);
    M00644c8d = M00644c8d & 0xfe;
    L00445DE4();
    return L00442674();
}

/*    Procedure: 0x00442672 - 0x00442673
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00442672()
{



}

/*    Procedure: 0x00442674 - 0x004426D0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442650()
 */

L00442674()
{



    eax = M00644c6c;
    *(eax + 0xff) = 0x24;
    L00414070(0x17, 0, *(eax + 0x86) & 0xff);
    eax = L00442EC4(M00644c6c);
    if(M0063218a < 0) {
        eax = M00644cd0;
        if(eax < 0 || eax > 32768) {
            M00644cd0 = 0;
        }
        eax = L00442880(M00644c6c);
    }
}

/*    Procedure: 0x004426D1 - 0x004426F9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004426D1()
{



    eax = L00442EC4(M00644c6c);
    if(M0063218a < 0) {
        eax = L00442880(M00644c6c);
    }
}

/*    Procedure: 0x004426FA - 0x004426FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004426FA()
{



}

/*    Procedure: 0x004426FC - 0x004427FF
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L00442800()
 *        L00442880()
 */

L004426FC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = Ac;
    Vfffffff8 = eax;
    esi = 0;
    if(Vfffffff8 < 0) {
        esi = -1;
    }
    Vfffffffc = esi;
    Vfffffff0 = A10;
    eax = 0;
    if(A10 < 0) {
        eax = -1;
    }
    Vfffffff4 = eax;
    Vffffffe8 = A14;
    eax = 0;
    if(A14 < 0) {
        eax = -1;
    }
    Vffffffec = eax;
    L0044EB4E(A8 + 0x3e, Vfffffff8, Vfffffffc, *(A8 + 0x3e), *(A8 + 0x42));
    L0044EB4E(A8 + 0x46, Vfffffff0, Vfffffff4, *(A8 + 0x46), *(A8 + 0x4a));
    L0044EB4E(A8 + 0x4e, Vffffffe8, Vffffffec, *(A8 + 0x4e), *(A8 + 0x52));
    if(M00648af6 != 0 && M00644bc0 == 0) {
        *L005030f4(A8);
    }
    M00644bc0 = 0;
    *L00501c3c(M0064a3b0, A8);
    if(M00644bc0 == 0) {
        M00644bc4 = 0;
        M00644bc5 = 0;
        M00644bc6 = 4;
    }
    M00653c08 = M00644bc4;
    M00653c0a = M00644bc6;
    M00644c22 = 0;
    return L0045527C(6572996);
}

/*    Procedure: 0x00442800 - 0x0044287D
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00442880()
 */

L00442800(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = Ac;
    edx = bx;
    edx = ( *(A8 + 0x18) >> 0x10) * ( *(A8 + 0x18) >> 0x10);
    ecx = bx;
    ecx = ( *(A8 + 0x1c) >> 0x10) * ( *(A8 + 0x1c) >> 0x10);
    esi = bx;
    esi = ( *(A8 + 0x20) >> 0x10) * ( *(A8 + 0x20) >> 0x10);
    if(A10 != 0) {
        ebx = A10;
        edx = edx + ( *(A8 + 0xc) >> 0x10) * ( *(A8 + 0xc) >> 0x10);
        ebx = A10;
        ecx = ecx + ( *(A8 + 0x10) >> 0x10) * ( *(A8 + 0x10) >> 0x10);
        ebx = A10;
        esi = esi + ( *(A8 + 0x14) >> 0x10) * ( *(A8 + 0x14) >> 0x10);
    }
    edx = edx >> 0xc;
    ecx = ecx >> 0xc;
    return L004426FC(A8, edx, ecx, esi >> 0xc);
}

/*    Procedure: 0x0044287E - 0x0044287F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044287E()
{



}

/*    Procedure: 0x00442880 - 0x00442EB1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442674()
 *        L004426D1()
 *        L00444448()
 *        L00444492()
 *        L004456A9()
 */

L00442880(A8)
/* unknown */ void  A8;
{



    esp = esp + -780;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)6572964;
    esi = *L00644C6C;
    edi = ebp + -368;
    ecx = 0x54;
    asm("rep movsd");
    *edi = *esi;
    edi = edi + 4;
    esi = esi + 4;
    (restore)esi;
    ebx = *L00501b9c( *(ebp + -238));
    *(ebp + -280) = 0;
    eax = *(esi + 0xea);
    if(eax <= 6) {
        switch(eax) {
            case 0:
                goto L00442ad5;
            case 1:
                *(esi + 0xc) = 0xff;
                eax = *(ebp + -344);
                edx = eax;
                *(ebp + -344) = ~eax;
                eax = *(ebp + -340);
                edx = eax;
                *(ebp + -340) = ~eax;
                eax = *(ebp + -336);
                edx = eax;
                *(ebp + -336) = ~eax;
                eax = *(ebp + -368);
                edx = eax;
                *(ebp + -368) = ~eax;
                eax = *(ebp + -364);
                edx = eax;
                *(ebp + -364) = ~eax;
                eax = *(ebp + -360);
                edx = eax;
                *(ebp + -360) = ~eax;
                *(esi + 0x7e) = 0;
                eax = *(ebx + 0x38);
                L00442800(ebp + -368, *(eax + 0x18), *(eax + 0x1a));
                eax = 0;
                goto L00442eab;
            case 2:
                goto L00442da2;
            case 3:
                goto L00442da2;
            case 4:
                goto L00442baa;
            case 5:
                *(esi + 0xc) = 0xff;
                (save)esi;
                esi = *L00501b94( *(esi + 0xef), M0064a3b0);
                edi = ebp + -368;
                ecx = 0x54;
                asm("rep movsd");
                *edi = *esi;
                edi = edi + 4;
                esi = esi + 4;
                (restore)esi;
                *(ebp + -280) = 0;
                eax = *( *L00501b9c( *(ebp + -238)) + 0x38);
                L00442800(ebp + -368, *(eax + 0x18), *(eax + 0x1a));
                eax = 0;
                goto L00442eab;
            case 6:
                goto L004428f4;
        }
L004428f4:
        (save)esi;
        esi = *(esi + 0xc8);
        edi = ebp + -708;
        ecx = 0x54;
        asm("rep movsd");
        *edi = *esi;
        edi = edi + 4;
        esi = esi + 4;
        (restore)esi;
        *(esi + 0x7e) = 0;
        *(esi + 0xc) = 0xfe;
        L0043E55C(0);
        if(M004ef784 < 0x12c) {
            M004ef784 = 0x12c;
        }
        M004ef780 = M004ef780 + M004ef780 * 2 + M004ef784 >> 2;
        M004ef788 = M004ef788 + ( *( *(esi + 0xc8) + 0xb4) >> 1);
        M004ef788 = M004ef788 >> 1;
        *L005016f0(ebp + -356, ebp + -344, 0x9f5);
        *L005016f0(ebp + -344, ebp + -368, M004ef788);
        L00442800(ebp + -368, ~((M004ef780 << 3) + (M004ef780 << 3) * 4), 0);
        *(ebp + -578) = 0xa7;
        *(ebp + -712) = 0;
        *(ebp + -716) = 0;
        *(ebp + -720) = 0;
        eax = A8;
        *(ebp + -732) = *(eax + 0x18);
        *(ebp + -728) = *(eax + 0x1c);
        *(ebp + -724) = *(eax + 0x20);
        *(ebp - 4) = 0;
        *(ebp - 8) = 8000000;
        eax = *L004e0a6c(A8, M0064a3b0, ebp + -720, ebp + -732, *(esi + 0xc0), *(ebp - 8), *(ebp - 4), 0x1a80);
        *(ebp + -550) = M006355d6 :: 8000000 < 0 & 1;
        *L005030e4(ebp + -708, ebp + -368);
        eax = 0;
        goto L00442eab;
L00442ad5:
        *(esi + 0xc) = 0xff;
        if(*( *(esi + 0xc8) + 0x57) != 0) {
            *L005030e0(ebp + -368);
        }
        *(esi + 0x7e) = *(esi + 0xc0);
        eax = *(ebx + 0x38);
        L00442800(ebp + -368, *(eax + 0x18), *(eax + 0x1a));
        eax = 0;
        goto L00442eab;
L00442baa:
        *(esi + 0xc) = 0xff;
        if(*(esi + 16211) != 0) {
            *(esi + 0x7e) = 0;
            *L005016f0(ebp + -344, ebp + -368, *(esi + 0x128));
            *L005016f0(ebp + -356, ebp + -344, *(esi + 0x12c));
            eax = *(esi + 0x130) >> 0x10;
            ecx = eax;
            edx = *(ebp + -344) >> 0x10;
            *(ebp + -744) = edx * edx >> 7;
            ebx = eax;
            ecx = *(ebp + -340) >> 0x10;
            *(ebp + -740) = ecx * ecx >> 7;
            *(ebp + -736) = ( *(ebp + -336) >> 0x10) * ( *(ebp + -336) >> 0x10) >> 7;
            *(ebp + -756) = ~edx;
            *(ebp + -752) = ~ecx;
            *(ebp + -748) = ~( *(ebp + -336) >> 0x10);
            *(ebp - 0x10) = 0xa;
            *(ebp - 0xc) = 0;
            L004426FC(ebp + -368, *(ebp + -744), *(ebp + -740), *(ebp + -736));
            eax = 0;
        } else {
            *(ebp - 0x18) = M004ef78c;
            *(ebp - 0x14) = M004ef790;
            *(esi + 0xc) = 0xff;
            *L005016f0(ebp + -344, ebp + -368, *(esi + 0x128));
            *L005016f0(ebp + -356, ebp + -344, *(esi + 0x12c));
            *(esi + 0x7e) = 0;
            eax = *(esi + 0x130) >> 0x10;
            edx = eax;
            *(ebp + -768) = ( *(A8 + 0x18) >> 0x10) * ( *(A8 + 0x18) >> 0x10) >> 7;
            edx = eax;
            *(ebp + -764) = ( *(A8 + 0x1c) >> 0x10) * ( *(A8 + 0x1c) >> 0x10) >> 7;
            edx = eax;
            edx = ( *(A8 + 0x20) >> 0x10) * ( *(A8 + 0x20) >> 0x10) >> 7;
            *(ebp + -760) = edx;
            *(ebp + -780) = ~( *(ebp + -344) >> 0x10);
            *(ebp + -776) = ~( *(ebp + -340) >> 0x10);
            *(ebp + -772) = ~( *(ebp + -336) >> 0x10);
            *(ebp - 0x18) = 0xa;
            L004426FC(ebp + -368, *(ebp + -768), *(ebp + -764), edx);
            eax = 0;
        }
    } else {
L00442da2:
        if(*(esi + 0xea) == 2) {
            edx = *(ebx + 0x38);
            eax = *(edx + 0x28);
            edx = *(edx + 0x2a) + 0x3e;
        } else {
            edx = *(ebx + 0x38);
            eax = *(edx + 0x2c);
            edx = *(edx + 0x2e) - 0x3e;
        }
        ebx = *(ebp + -344) >> 0x10;
        ebx = eax * eax;
        ecx = *(ebp + -356) >> 0x10;
        ebx = ebx + edx * edx >> 0xc;
        ecx = *(ebp + -340) >> 0x10;
        ecx = eax * eax;
        edi = *(ebp + -352) >> 0x10;
        *(ebp - 0x1c) = ecx + edx * edx >> 0xc;
        edi = *(ebp + -336) >> 0x10;
        edi = eax * eax;
        eax = *(ebp + -348) >> 0x10;
        asm("imul edx");
        edi = edi + eax >> 0xc;
        *(esi + 0x7e) = 0;
        *L005016f0(ebp + -344, ebp + -368, *(esi + 0x204));
        *L005016f0(ebp + -356, ebp + -344, *(esi + 0x206));
        eax = *(ebp + -344) >> 0x10;
        *(esi + 0x208) = ax;
        eax = *(ebp + -340) >> 0x10;
        *(esi + 0x20a) = ax;
        *(esi + 0x20c) = *(ebp + -336) >> 0x10;
        L004426FC(ebp + -368, ebx, *(ebp - 0x1c), edi);
        eax = 0;
    }
L00442eab:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00442EB2 - 0x00442EB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00442EB2()
{



}

/*    Procedure: 0x00442EB4 - 0x00442EC2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00444534()
 */

L00442EB4(A8)
/* unknown */ void  A8;
{



    return L00442EC4(A8);
}

/*    Procedure: 0x00442EC3 - 0x00442EC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00442EC3()
{



}

/*    Procedure: 0x00442EC4 - 0x004438A2
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L00442674()
 *        L004426D1()
 *        L00442EB4()
 *        L00444448()
 *        L00444492()
 */

L00442EC4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    esi = 6572964;
    edx = 0x5014cc;
    if(M0063218a < 0 && *L00644C8E == 4 && *L00501504 != 0) {
        eax = !(M0064a110 & -65536) ? 65535 : M0064a110 & 65535;
        ecx = M005014c8;
        if(ecx >= 0x10) {
            eax = ecx * ecx >> 4;
            ecx = !(eax & -65536) ? 65535 : eax;
            eax = ecx;
        }
        if(*(edx + 0x4b) == 0 || *(edx + 0x2b) == 0 || *(edx + 0xcb) == 0 || *(edx + 0xab) == 0) {
            *(esi + 0x128) = (eax >> 4 & 65535) + *(esi + 0x128);
        }
        if(*(edx + 0x4d) == 0 || *(edx + 0x4e) == 0 || *(edx + 0xcd) == 0 || *(edx + 0xce) == 0) {
            ecx = eax >> 4 & 65535;
            *(esi + 0x128) = *(esi + 0x128) - ecx;
        }
        if(*(edx + 0x48) == 0 || *(edx + 0x29) == 0 || *(edx + 0xc8) == 0 || *(edx + 0xa9) == 0) {
            *(esi + 0x12c) = (eax >> 4 & 65535) + *(esi + 0x12c);
        }
        if(*(edx + 0x50) == 0 || *(edx + 0x4a) == 0 || *(edx + 0xd0) == 0 || *(edx + 0xca) == 0) {
            ecx = eax >> 4 & 65535;
            *(esi + 0x12c) = *(esi + 0x12c) - ecx;
        }
        if(*(edx + 0xd) == 0) {
            (save)eax << 8;
            ecx = *(esi + 0x130);
            (restore)ebx;
            ecx = ecx - ebx;
            *(esi + 0x130) = ecx;
            if(*(esi + 0x130) >= 0) {
                *(esi + 0x130) = -2147483647;
            }
        }
        if(*(edx + 0xc) == 0) {
            *(esi + 0x130) = (eax << 8) + *(esi + 0x130);
            edx = *L00501b9c( *( *(esi + 0xc8) + 0x82));
            eax = *(edx + 0x1c) & 65535;
            edx = *(edx + 0x14) + 8;
            if(edx != 0) {
                eax = eax << edx;
            }
            eax = ~eax;
            edx = *(esi + 0x130);
            if(edx >= 0) {
                goto L0044308d;
            }
            if(eax <= edx) {
L0044308d:
                *(esi + 0x130) = eax;
            }
        }
    }
    if(*(esi + 0xe8) != 0x2a) {
        L004421A4(A8);
    }
    ebx = *L00500398() & 0xff;
    eax = 0;
    if(0 == 0) {
        eax = ebx;
        if(eax <= 0x64) {
            == ? L004431b9 : ;
            if(eax = eax - 0x10 - 0xa) {
                goto L0044312f;
            }
            if(eax = eax - 0x15) {
                goto L004431a5;
            }
            if(eax = eax - 0x33) {
                goto L00443189;
            }
            if(eax = eax - 1) {
                goto L004431d0;
            }
        } else {
            if(eax = eax - 0x65) {
                goto L00443158;
            }
            if(!(eax = eax - 8)) {
                if(eax = eax - 0xb) {
                    goto L0044316f;
                }
            } else {
                eax = 0;
                edx = *(esi + 0xc8) + 0xd6;
L00443115:
                if(*edx != 0) {
                    ebx = eax + 0x10;
                } else {
                    eax = eax + 1;
                    edx = edx + 1;
                    if(eax < 0xa) {
                        goto L00443115;
                    }
                }
                if(ebx != 0x6d) {
L0044312f:
                    eax = ebx - 0xf;
                    if(eax != *(esi + 0xc4)) {
                        *(esi + 0xc4) = bl + 0xf1;
                    }
                    L00444804();
                    eax = L004701BE(0x14);
                    goto L0044389c;
L00443158:
                    L0043D588(A8);
                    eax = L004701BE(0x14);
                    goto L0044389c;
L0044316f:
                    L00444870( *(esi + 0xc8));
                    eax = L004701BE(0x14);
                    goto L0044389c;
L00443189:
                    L0043D654(A8);
                    L00446004();
                    eax = L004701BE(0x14);
                    goto L0044389c;
L004431a5:
                    *(esi + 0xe9) = *(esi + 0xe9) ^ 0x40;
                    eax = L004701BE(0x14);
                    goto L0044389c;
                    L0044624C(A8);
                    eax = L004701BE(0x14);
                    goto L0044389c;
L004431d0:
                    if(M0063218a < 0 && !( *(A8 + 0xc9) & 8) && *(esi + 0x174) != 0) {
                        eax = L0041EF5C( *(esi + 0xc8), 0x20);
                        if(eax != 0) {
                            *(eax + 0x82) = 0xa4;
                            edx = *(eax + 0x86) & 0xff;
                            M004ef0e0 = edx;
                            *(M00501ba8 + M004ef0e0) = 0x2b;
                            L0043FAE4(M0064a3b0, 0x4438a4);
                        }
                        eax = L004701BE(0x14);
                        goto L0044389c;
                    }
                }
            }
        }
        if(M0063218a >= 0) {
            eax = *L0050039c(ebx);
        } else {
            if(!( *( *(esi + 0xc8) + 0xc8) & 0x20)) {
                if(ebx < 0xd1 || ebx > 0xe2) {
                    goto L0044334a;
                }
                edi = ebx + -208;
                ebx = 0x72;
                edx = M0064a3b0 + 38980;
                eax = M0064a3b0 + 0x72;
                goto L004432bd;
L004432a6:
                if(*eax != 0 && !( *edx & 0x10)) {
                    edi = edi - 1;
                    if(edi == 0) {
                        goto L004432c5;
                    }
                }
                ebx = ebx - 1;
                edx = edx + -338;
                eax = eax - 1;
L004432bd:
                if(ebx > 0 && edi != 0) {
                    goto L004432a6;
                }
L004432c5:
                eax = ebx + (ebx + (ebx + ebx * 4) * 4) * 8;
                *(esi + 0xec) = *(M0064a3b0 + eax * 2 + 0xfa);
                M004ef0d0 = 0;
                eax = *(esi + 0xe8) & 0xff;
                if(al != 2 && al < 0x28) {
                    L0044110C();
                }
                al = *(esi + 0xe8);
                if(al == 2 && al < 0x28) {
                    *(esi + 0xe8) = 0;
                    L0044110C();
                }
                L0041D444(0x11, 0);
                ebx = 0xd1;
L00443326:
                eax = *L005003c0(ebx);
                ebx = ebx + 1;
                if(ebx < 0xe3) {
                    goto L00443326;
                }
                M004ef0db = 0;
                M004ef0da = 0;
            } else {
L0044334a:
                eax = ebx;
                if(eax <= 0xf6) {
                    == ? L00443410 : ;
                    if(eax <= 0x74) {
                        == ? L004437fe : ;
                        if(eax = eax - 9) {
                            goto L00443676;
                        }
                        if(eax = eax - 0x63) {
                            goto L004433d9;
                        }
                        if(eax = eax - 2) {
                            goto L00443526;
                        }
                        goto L00443894;
                    }
                    if(eax = eax - 0x75) {
                        goto L004435c2;
                    }
                    if(eax = eax - 0x5b) {
                        goto L0044387d;
                    }
                    if(eax = eax - 0x25) {
                        goto L0044358f;
                    }
                    goto L00443894;
                }
                eax = eax + -247;
                if(eax > 8) {
                    goto L00443894;
                }
                switch(eax) {
                    case 0:
                        eax = L0041D444(0x17, 1);
                        *(esi + 0xea) = 1;
                        goto L0044389c;
                    case 1:
                        goto L00443440;
                    case 2:
                        eax = L0041D444(0x15, 1);
                        *(esi + 0xea) = 4;
                        goto L0044389c;
                    case 3:
                        goto L00443493;
                    case 4:
                        goto L004434cb;
                    case 5:
                        L00444870( *(esi + 0xc8));
                        eax = L004701BE(0x14);
                        goto L0044389c;
                    case 6:
L00443894:
                        eax = *L0050039c(ebx);
                        goto L0044389c;
                    case 7:
                        goto L00443894;
                    case 8:
                        goto L00443636;
                }
L004433d9:
                *(esi + 0xe9) = *(esi + 0xe9) ^ 4;
                if(!( *(esi + 0xe9) & 4)) {
                    L0041D444(0x10, 1);
                } else {
                    L0041D444(0x10, 0);
                }
                eax = L004701BE(0x14);
                goto L0044389c;
                eax = L0041D444(0x18, 1);
                *(esi + 0xea) = 0;
                goto L0044389c;
L00443440:
                eax = *(esi + 0xc8);
                if(*(eax + 0xd1) > 2) {
                    *(esi + 0xea) = 2;
                    if(*(esi + 0x206) >= 0) {
                        *(esi + 0xea) = *(esi + 0xea) + 1;
                    }
                    eax = L0041D444(0x16, 1);
                    goto L0044389c;
L00443493:
                    if(*(esi + 0xef) != 0) {
                        eax = *(esi + 0xc8);
                        if(!( *(eax + 0xc9) & 2)) {
                            eax = L0041D444(0x14, 1);
                            *(esi + 0xea) = 5;
                            goto L0044389c;
L004434cb:
                            eax = *(esi + 0xc8);
                            if(!( *(eax + 0xc8) & 0x40)) {
                                *(esi + 0xea) = 6;
                                M004ef784 = 0x320;
                                M004ef780 = 0x320;
                                M004ef788 = 0;
                                eax = L0041D444(0x13, 1);
                                goto L0044389c;
L00443526:
                                eax = *(esi + 0xc8);
                                if(!( *(eax + 0xc8) & 0x20)) {
                                    eax = M004ef0da;
                                    eax :: 1;
                                    asm("sbb eax,eax");
                                    eax = ~eax;
                                    M004ef0da = al;
                                    if(M004ef0da != 0) {
                                        eax = L0041D444(0x11, 1);
                                    } else {
                                        L0041D444(0x11, 0);
                                        ebx = 0xd1;
L00443572:
                                        eax = *L005003c0(ebx);
                                        ebx = ebx + 1;
                                        if(ebx < 0xe3) {
                                            goto L00443572;
                                        }
                                        M004ef0db = 0;
                                        goto L0044389c;
L0044358f:
                                        M004ef0d0 = 0;
                                        M004ef0d4 = 0;
                                        *(esi + 18586) = 0;
                                        if(!( *(esi + 0xe9) & 8)) {
                                            eax = L00446018();
                                        } else {
                                            eax = L00445F40();
                                            goto L0044389c;
L004435c2:
                                            if(*( *(esi + 0xc8) + 0xff) != 0x24) {
                                                *(esi + 0xe9) = *(esi + 0xe9) ^ 2;
                                                *(esi + 0xc6) = *(esi + 0xc6) & 65533;
                                                if(!( *(esi + 0xe9) & 2)) {
                                                    L0041D444(0x38, 0);
                                                    L0041D444(0x46, 0);
                                                } else {
                                                    L0041D444(0x38, 1);
                                                    L0041D444(0x46, 1);
                                                }
                                                L00445DE4();
                                                L004701BE(0xc);
                                            }
                                            eax = L004701BE(0x14);
                                            goto L0044389c;
L00443636:
                                            if(!( *(esi + 0xe9) & 8)) {
                                                eax = L004439C8();
                                            } else {
                                                L004438E8();
                                                if(*(esi + 0xe8) == 2) {
                                                    *(esi + 0xe8) = 0;
                                                    L00414070(1, 0, 0xe);
                                                }
                                                eax = L00445DE4();
                                                goto L0044389c;
L00443676:
                                                al = *(esi + 0xe8);
                                                if(al < 0x28) {
                                                    goto L0044375c;
                                                }
                                                if(al >= 0x2e) {
                                                    if(al == 0x30) {
                                                        eax = *(esi + 20528);
                                                        if(eax != *(esi + 20524)) {
                                                            Vffffffd0 = 39224;
                                                            Vffffffec = *(esi + 0xcc);
                                                            Vffffffe8 = -1;
                                                            Vffffffd4 = eax;
                                                            eax = L00421DEC( & Vffffffd0);
                                                            goto L0044389c;
                                                        }
                                                        if(*(esi + 0xf0) == 0) {
                                                            L0041C44F(1, *(esi + 0xcc));
                                                            if(*(esi + ( *(esi + 0x43c) & 65535) * 4 + 20728) > 0x1388) {
                                                                L0041C44F(2, *(esi + 0xcc));
                                                            }
                                                        }
                                                    }
                                                    *(esi + 0xe8) = 0x24;
                                                    *(esi + 0xc6) = *(esi + 0xc6) & 65519;
                                                    L00446004();
                                                    eax = *(esi + 0xc8);
                                                    *(eax + 0xff) = 0;
                                                    L00414070(0x17, 0, *(eax + 0x86) & 0xff);
                                                    L00445DE4();
                                                    L004701BE(0x14);
                                                    eax = L00414070(1, 0, 0xe);
                                                    goto L0044389c;
L0044375c:
                                                    if(*(esi + 0xe8) == 0x24) {
                                                        *(esi + 0xe8) = 0x26;
                                                        eax = *(esi + 0xc8);
                                                        *(eax + 0xff) = 0;
                                                        L00414070(0x17, 0, *(eax + 0x86) & 0xff);
                                                        L00445DE4();
                                                        L004701BE(0x14);
                                                        eax = L00414070(1, 0, 0xe);
                                                    } else {
                                                        if(*(esi + 0xe8) != 2) {
                                                            *(esi + 0xe9) = *(esi + 0xe9) ^ 1;
                                                            if(!( *(esi + 0xe9) & 1)) {
                                                                eax = L0044110C();
                                                            } else {
                                                                L00445DE4();
                                                                eax = L004701BE(0x14);
                                                                == ? L0044389c : ;
                                                                eax = L0044110C();
                                                            }
                                                        } else {
                                                            eax = L00440F30();
                                                            goto L0044389c;
                                                            eax = *(esi + 0xc8);
                                                            if(!( *(eax + 0xc8) & 0x80)) {
                                                                if(!( *(esi + 0xe9) & 8)) {
                                                                    if(M004ef0d4 != 0) {
                                                                        M004ef0d4 = 0;
                                                                        eax = L00446018();
                                                                    } else {
                                                                        M004ef0d4 = 1;
                                                                        M004ef0d9 = *(esi + 0xed);
                                                                    }
                                                                } else {
                                                                    if(M004ef0d0 != 0) {
                                                                        M004ef0d0 = 0;
                                                                        eax = L00445DE4();
                                                                    } else {
                                                                        M004ef0d0 = 1;
                                                                        M004ef0d8 = *(esi + 0xec);
                                                                        if(*(esi + 0xe8) == 2) {
L0044387d:
                                                                            eax = *(esi + 0xe8) != 2 ? L0044110C() : L00440F30();
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0044389c:
}

/*    Procedure: 0x004438A3 - 0x004438E5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L004438A3(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = *(A8 + 0x82);
    if(esi >= 6 && esi <= 0xb) {
        eax = *(A8 + 0xfe) & 0xff;
        if(eax == M00644c64 && !( *L00501b8c() & 0x10)) {
            *(A8 + 0xfe) = M004ef0e0;
        }
    }
}

/*    Procedure: 0x004438E6 - 0x004438E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004438E6()
{



}

/*    Procedure: 0x004438E8 - 0x00443921
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442EC4()
 */

L004438E8()
{



    if(M00644c12 < 0x9e) {
        M00644c92 = 0;
        eax = L0043FA68(M0064a3b0, 0x443b90);
        if(M00644c92 == 0) {
            M00644c90 = 0;
        }
    }
}

/*    Procedure: 0x00443922 - 0x004439C6
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00443922(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    edx = A10;
    eax = Ac;
    ecx = 6572964;
    if(*L00644C92 == 0) {
        ebx = eax - 3;
        if(!(ebx = ebx - *L00644C10)) {
            ebx = eax - 3;
            ebx = ebx - *L00644C10;
        } else {
            ebx = eax - 3;
            ebx = ~(ebx - *(ecx + 0x6c));
        }
        eax = edx + 4;
        if(!(eax = eax - *(ecx + 0x6e))) {
            eax = edx + 4;
            eax = eax - *(ecx + 0x6e);
        } else {
            eax = edx + 4;
            eax = ~(eax - *(ecx + 0x6e));
        }
        if(ebx + eax <= 6) {
            eax = A8;
            al = *(eax + 0x86);
            edx = al & 0xff;
            if(edx != *(ecx + 0xed)) {
                *(ecx + 0xee) = 0xff;
                *(ecx + 0xed) = al;
                eax = L004701BE(0x15);
            }
        }
    }
}

/*    Procedure: 0x004439C7 - 0x004439C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004439C7()
{



}

/*    Procedure: 0x004439C8 - 0x00443A0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442EC4()
 */

L004439C8()
{



    if(M00644c12 < 0x9e) {
        M00644c92 = 0;
        eax = L0043FA68(M0064a3b0, 0x443924);
        if(M00644c92 == 0) {
            M00644c91 = 0;
            return;
        }
        eax = 0;
        M004ef0d4 = 0;
    }
}

/*    Procedure: 0x00443A0B - 0x00443A97
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00443A0B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = Ac;
    if(M00644c92 == 0) {
        ebx = eax + -163 >= 0 ? eax + -163 : ~(eax + -163);
        eax = A10 - 0x4b >= 0 ? A10 - 0x4b : ~(A10 - 0x4b);
        if(ebx + eax <= 6) {
            dl = *(A8 + 0x86);
            eax = dl & 0xff;
            if(eax != M00644c90 && eax != M004ef0d8) {
                M00644c92 = 0xff;
                M00644c90 = dl;
                eax = L004701BE(0x15);
            }
        }
    }
}

/*    Procedure: 0x00443A98 - 0x00443ACF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440C58()
 */

L00443A98()
{



    M00644c92 = 0;
    eax = L0043FA68(M0064a3b0, 0x443a0c);
    if(M00644c92 == 0) {
        M00644c90 = 0;
        return;
    }
    M004ef0d0 = 0;
    return 0;
}

/*    Procedure: 0x00443AD0 - 0x00443B5B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00443AD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = Ac;
    if(M00644c92 == 0) {
        ebx = eax + -163 >= 0 ? eax + -163 : ~(eax + -163);
        eax = A10 - 0x4b >= 0 ? A10 - 0x4b : ~(A10 - 0x4b);
        if(ebx + eax <= 6) {
            dl = *(A8 + 0x86);
            eax = dl & 0xff;
            if(eax != M00644c91 && eax != M004ef0d9) {
                M00644c92 = 0xff;
                M00644c91 = dl;
                eax = L004701BE(0x15);
            }
        }
    }
}

/*    Procedure: 0x00443B5C - 0x00443B8F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00440C58()
 */

L00443B5C()
{



    M00644c92 = 0;
    eax = L0043FA68(M0064a3b0, 0x443ad0);
    if(M00644c92 != 0) {
        M004ef0d4 = 0;
        eax = L00446018();
    }
}

/*    Procedure: 0x00443B90 - 0x00443C32
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00443B90(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    edx = A10;
    eax = Ac;
    ecx = 6572964;
    if(*L00644C92 == 0) {
        ebx = eax - 3;
        if(!(ebx = ebx - *L00644C10)) {
            ebx = eax - 3;
            ebx = ebx - *L00644C10;
        } else {
            ebx = eax - 3;
            ebx = ~(ebx - *(ecx + 0x6c));
        }
        eax = edx + 4;
        if(!(eax = eax - *(ecx + 0x6e))) {
            eax = edx + 4;
            eax = eax - *(ecx + 0x6e);
        } else {
            eax = edx + 4;
            eax = ~(eax - *(ecx + 0x6e));
        }
        if(ebx + eax <= 6) {
            eax = A8;
            al = *(eax + 0x86);
            edx = al & 0xff;
            if(edx != *(ecx + 0xec)) {
                *(ecx + 0xee) = 0xff;
                *(ecx + 0xec) = al;
                eax = L004701BE(0x15);
            }
        }
    }
}

/*    Procedure: 0x00443C33 - 0x00443D35
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00443C33()
{



    esp = esp + -376;
    (save)ebx;
    (save)esi;
    ebx = ebp + -376;
    esi = 6572964;
    (save)M00655674 >> 0x10;
    (restore)edx;
    eax = *L00644CAA - edx;
    *L00644CAA = eax;
    if(eax < 0) {
        eax = L00444610();
    } else {
        if(M0063218a <= 0) {
            if(!(al = *(esi + 0xea) - 1)) {
                *(esi + 0xea) = 0;
                L00445DE4();
            }
            L00471128(esi + 0x54, 0x4ef794, 0x18);
            *(ebp - 0x23) = 0;
            *(ebp - 0x22) = 0;
            *(ebp - 0x21) = 4;
            L0045527C(ebp - 0x23);
            ecx = *(esi + 21292);
            eax = ecx - *(esi + 0x106);
            edx = eax;
            eax = (edx + eax * 8 << 4) + edx;
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
            *(ebx + 0x9c) = eax << 8;
            *(ebx + 0x82) = 0xa5;
            L004445D4(ebx);
            *(ebx + 0xa4) = -1;
            *(ebx + 0x56) = 0;
            *(ebx + 0x25) = 0;
            *(ebx + 0x57) = 0;
            *(ebx + 0x26) = 0;
            *(ebx + 0x2a) = 0;
            *(ebx + 0x2e) = 0;
            *(ebx + 0x32) = 0;
            *(ebx + 0x36) = 84000;
            *(ebx + 0x3a) = 0;
            eax = *L005030ec(ebx);
        }
    }
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00443D36 - 0x00443D37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00443D36()
{



}

/*    Procedure: 0x00443D38 - 0x00443D51
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443F7B()
 *        L00443FA5()
 *        L00443FE0()
 *        L00444018()
 *        L004440E7()
 *        L00444114()
 *        L00444171()
 */

L00443D38(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00443D54(A8, 131071, Ac);
}

/*    Procedure: 0x00443D52 - 0x00443D53
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00443D52()
{



}

/*    Procedure: 0x00443D54 - 0x00443DAC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443D38()
 *        L00443DAD()
 *        L004440BB()
 *        L004441E3()
 */

L00443D54(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = M00644caa - M00655674;
    M00644caa = eax;
    if(M00644caa < 0) {
        M00644c8c = A8;
        M00644caa = Ac;
        *A10 = 0;
        L00414070(1, 0, 0xe);
    } else {
        *A10 = M00644caa;
    }
    if(M0063218a >= 0) {
        return 1;
    }
    return 0;
}

/*    Procedure: 0x00443DAD - 0x00443DE0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00443DAD()
{
    /* unknown */ void  ecx;



    eax = L00443D54(0xe, 98304, ebp - 4);
    if(eax == 0) {
        eax = L00443F5C(196608, *(ebp - 4) >> 1);
    }
}

/*    Procedure: 0x00443DE1 - 0x00443DE3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00443DE1()
{



}

/*    Procedure: 0x00443DE4 - 0x00443F1B
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443F1C()
 */

L00443DE4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    esp = esp + -340;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = ebp + -340;
    esi = 6572964;
    eax = *L00501b9c( *( *L00644C6C + 0x82));
    if(M0063218a < 0) {
        *(esi + 0xc) = *(esi + 0xc) & 0xfe;
        edx = *(esi + 0xcc);
        *(ebx + 0xa0) = *(edx + 0xa0);
        *(ebx + 0xa4) = !( *(edx + 0x14c) & 0x20) ? 0 : 1;
        *(ebx + 0x82) = A10;
        *(ebx + 0x9e) = Ac;
        *(ebx + 0x26) = A14;
        edx = *(eax + 0x38);
        ecx = *(edx + 0x1a) << 3;
        *(ebx + 0x2e) = A18 - ecx;
        eax = *(edx + 0x18) << 3;
        *(ebx + 0x36) = A8 - eax;
        *(ebx + 0x2a) = 0;
        *(ebx + 0x32) = 0;
        *(ebx + 0x3a) = 0;
        L0045AFF0(ebx, M00644b9c, M00644ba0);
        *(ebx + 0x124) = *(esi + 0xf4) + 0x31;
        *(ebx + 0x125) = 0;
        if(*(ebx + 0x82) == 0xea) {
            (save)esi;
            edi = *(esi + 0xcc) + 0x124;
            esi = ebx + 0x124;
            eax = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            eax = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
            (restore)esi;
        }
        *(ebx + 0x9c) = *esi >> 0xa;
        eax = *L005030ec(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00443F1C - 0x00443F3F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443F40()
 *        L00444018()
 *        L0044405C()
 *        L00444080()
 *        L00444534()
 */

L00443F1C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M00644b9c = 0;
    return L00443DE4(A8, Ac, A10, 0, 0);
}

/*    Procedure: 0x00443F40 - 0x00443F59
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443F5C()
 *        L00443FA5()
 *        L00443FE0()
 *        L004441AC()
 *        L004441E3()
 */

L00443F40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00443F1C(A8, Ac, 0xea);
}

/*    Procedure: 0x00443F5A - 0x00443F5B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00443F5A()
{



}

/*    Procedure: 0x00443F5C - 0x00443F7A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443DAD()
 *        L00443F7B()
 */

L00443F5C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    M00644ba0 = 32768;
    return L00443F40(A8, Ac);
}

/*    Procedure: 0x00443F7B - 0x00443FA4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00443F7B()
{
    /* unknown */ void  ecx;



    eax = L00443D38(0x10, ebp - 4);
    if(eax == 0) {
        eax = L00443F5C( *(ebp - 4) + *(ebp - 4), 0);
    }
}

/*    Procedure: 0x00443FA5 - 0x00443FDF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00443FA5()
{
    /* unknown */ void  ecx;



    eax = L00443D38(0x12, ebp - 4);
    if(eax == 0) {
        *(ebp - 4) = *(ebp - 4) >> 2;
        M00644ba0 = *(ebp - 4) & 65535;
        eax = L00443F40(0, *(ebp - 4));
    }
}

/*    Procedure: 0x00443FE0 - 0x00444016
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00443FE0()
{
    /* unknown */ void  ecx;



    eax = L00443D38(0x14, ebp - 4);
    if(eax == 0) {
        M00644ba0 = 0;
        eax = L00443F40(0, !( *(ebp - 4) >> 1 & 65535));
    }
}

/*    Procedure: 0x00444017 - 0x00444017
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444017()
{



}

/*    Procedure: 0x00444018 - 0x0044404A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044404B()
 *        L0044419B()
 */

L00444018(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    eax = L00443D38(A8, ebp - 4);
    if(eax == 0) {
        M00644ba0 = 0;
        eax = L00443F1C(-1, 0, 0xec);
    }
}

/*    Procedure: 0x0044404B - 0x00444058
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044404B()
{



    return L00444018(0x16);
}

/*    Procedure: 0x00444059 - 0x0044405B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444059()
{



}

/*    Procedure: 0x0044405C - 0x0044407C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004440E7()
 *        L00444114()
 */

L0044405C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    M00644ba0 = 0;
    return L00443F1C(A8, Ac, 0xe9);
}

/*    Procedure: 0x0044407D - 0x0044407F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044407D()
{



}

/*    Procedure: 0x00444080 - 0x004440BA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004440BB()
 *        L00444171()
 */

L00444080(A8)
/* unknown */ void  A8;
{



    M00644ba0 = 0;
    L00443F1C(0, A8, 0xec);
    M00644ba0 = 0;
    return L00443F1C(191072, A8, 0xe9);
}

/*    Procedure: 0x004440BB - 0x004440E6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004440BB()
{
    /* unknown */ void  ecx;



    eax = L00443D54(0x18, 95536, ebp - 4);
    if(eax == 0) {
        *(ebp - 4) = *(ebp - 4) >> 1;
        eax = L00444080( *(ebp - 4));
    }
}

/*    Procedure: 0x004440E7 - 0x00444113
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004440E7()
{
    /* unknown */ void  ecx;



    eax = L00443D38(0x28, ebp - 4);
    if(eax == 0) {
        *(ebp - 4) = *(ebp - 4) << 1;
        eax = L0044405C( *(ebp - 4), *(ebp - 4));
    }
}

/*    Procedure: 0x00444114 - 0x00444170
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00444114()
{
    /* unknown */ void  ecx;



    eax = *(M00644c70 + 0x82);
    if(eax == 0x45 || eax == 0x4f) {
        M00644c8c = 0x22;
        M00644caa = -1;
        return L0044421C();
    }
    eax = L00443D38(0x1c, ebp - 4);
    if(eax == 0) {
        eax = *(ebp - 4) + *(ebp - 4);
        eax = L0044405C(191072 - eax, eax);
    }
}

/*    Procedure: 0x00444171 - 0x0044419A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00444171()
{
    /* unknown */ void  ecx;



    eax = L00443D38(0x1e, ebp - 4);
    if(eax == 0) {
        eax = L00444080( !( *(ebp - 4) >> 1));
    }
}

/*    Procedure: 0x0044419B - 0x004441A8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044419B()
{



    return L00444018(0x20);
}

/*    Procedure: 0x004441A9 - 0x004441AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004441A9()
{



}

/*    Procedure: 0x004441AC - 0x004441E2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044421C()
 */

L004441AC(Ac)
/* unknown */ void  Ac;
{



    eax = Ac;
    if(M0063218a != 0) {
        M00644ba0 = 0;
        eax = eax > 0 ? eax + eax : 0;
        eax = L00443F40( ~(196608 - eax), 0);
    }
}

/*    Procedure: 0x004441E3 - 0x00444218
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004441E3()
{
    /* unknown */ void  ecx;



    eax = L00443D54(0x22, 98304, ebp - 4);
    if(eax == 0) {
        M00644ba0 = 0;
        eax = L00443F40(0, *(ebp - 4) >> 1);
    }
}

/*    Procedure: 0x00444219 - 0x0044421B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444219()
{



}

/*    Procedure: 0x0044421C - 0x00444447
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00444114()
 */

L0044421C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 6572964;
    eax = *L00644CAA - M00655674;
    *L00644CAA = eax;
    if(*L00644CAA <= 0) {
        L004701BE(0x22);
        L004701BE(0x13);
        if(!( *( *(ebx + 0xcc) + 0x14c) & 0x20)) {
            *(ebx + 0xe8) = 0x36;
            eax = *(ebx + 0xc8);
            *(eax + 0xff) = 0;
            L00414070(0x17, 0, *(eax + 0x86) & 0xff);
            eax = *(ebx + 0xc8);
            *(eax + 0xa8) = *ebx;
            *(eax + 0xac) = *(ebx + 4);
            *(eax + 0x42) = 0;
            *(eax + 0x4a) = 0;
            *(eax + 0x52) = 0;
            *(eax + 0x3e) = 0;
            *(eax + 0x46) = 0;
            *(eax + 0x4e) = 65536;
            *(eax + 0x25) = 0;
            *(eax + 0x57) = 1;
            L0044230C(eax);
            L004445D4( *(ebx + 0xc8));
            eax = *( *(ebx + 0xcc) + 0x82);
            if(eax == 0x45 || eax == 0x4f) {
                eax = *(ebx + 0xc8);
                *eax = ~( *eax);
                *(eax + 0x20) = ~( *(eax + 0x20));
                *(ebx + 0x1b8) = -2909;
            } else {
                *(ebx + 0x1b8) = 0xb5d;
            }
            *(ebx + 0xd0) = *L005003c8();
            eax = *(ebx + 0xcc);
            *(eax + 0xc9) = 0xff;
            *(eax + 0x9e) = 65535;
            (save) *(ebx + 0x106);
            L004441AC(eax);
            if(M0063218a < 0) {
                *(ebx + 0xc) = *(ebx + 0xc) | 1;
            }
            L00414070(1, 0, 0xe);
        } else {
            *(ebx + 0xe8) = 0x38;
            eax = *(ebx + 0xc8);
            *(eax + 0xff) = 0;
            L00414070(0x17, 0, *(eax + 0x86) & 0xff);
            edx = *(ebx + 0xcc);
            eax = *(ebx + 0xc8);
            esi = edx + 0x3e;
            edi = eax + 0x3e;
            ecx = 6;
            asm("rep movsd");
            esi = *(ebx + 0xcc);
            edi = eax;
            ecx = 9;
            asm("rep movsd");
            *"Z7E"(eax);
            L0044230C( *(ebx + 0xc8));
            L00445DE4();
            *( *(ebx + 0xc8) + 0x57) = 1;
            *(ebx + 0xd0) = *L005003c8();
            eax = *(ebx + 0xcc);
            *(eax + 0xc9) = 0xff;
            *(eax + 0x9e) = 65535;
            (save) *(ebx + 0x106);
            L004441AC(eax);
            if(M0063218a < 0) {
                *(ebx + 0xc) = *(ebx + 0xc) | 1;
            }
        }
        eax = L00414070(1, 0, 0xe);
    } else {
        (save) *(ebx + 0x106);
        eax = L004441AC( *(ebx + 0xcc));
    }
}

/*    Procedure: 0x00444448 - 0x00444491
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444448()
{



    if(*(M00644c70 + 0x9e) == 0) {
        M00644c8c = 0x26;
        L00414070(1, 0, 0xe);
    }
    eax = L00442EC4(M00644c6c);
    if(M0063218a < 0) {
        eax = L00442880(M00644c6c);
    }
}

/*    Procedure: 0x00444492 - 0x004444DD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444492()
{



    if(*(M00644c70 + 0x9e) == 0) {
        M00644c8c = 0x24;
        L00414070(1, 0, 0xe);
    }
    eax = L00442EC4(M00644c6c);
    if(M0063218a < 0) {
        eax = L00442880(M00644c6c);
    }
}

/*    Procedure: 0x004444DE - 0x00444531
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004444DE()
{



    L00419470(5, 0);
    L0047017D();
    *(M00501ba8 + ( *(M00644c6c + 0x86) & 0xff)) = 0x4b;
    M00644c90 = 0;
    M00644c8c = 0x2a;
    L00445DE4();
    L00444534();
    return L00414070(1, 0, 0xe);
}

/*    Procedure: 0x00444532 - 0x00444533
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444532()
{



}

/*    Procedure: 0x00444534 - 0x004445D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004444DE()
 */

L00444534()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    if(*L00648B04 != 0) {
        L00470592(0xf, 8);
    }
    eax = *(ebx + 0xc8);
    *(eax + 0xff) = 0x24;
    L00414070(0x17, 0, *(eax + 0x86) & 0xff);
    eax = L00442EB4( *(ebx + 0xc8));
    if(M0063218a < 0) {
        M00644ba0 = 0;
        eax = *( *(ebx + 0xcc) + 0x82);
        if(eax == 0x45 || eax == 0x4f) {
            M00644ba0 = 32768;
            return L00443F1C(0, 0, eax);
        }
        eax = L00443F1C(0, 0, 0xe9);
    }
}

/*    Procedure: 0x004445D4 - 0x0044460D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00443C33()
 *        L0044421C()
 *        L00444610()
 */

L004445D4(A8)
/* unknown */ void  A8;
{



    *A8 = 2130706432;
    *(A8 + 0xc) = 0;
    *(A8 + 0x18) = 0;
    *(A8 + 4) = 0;
    *(A8 + 0x10) = 2130706432;
    *(A8 + 0x1c) = 0;
    *(A8 + 8) = 0;
    *(A8 + 0x14) = 0;
    *(A8 + 0x20) = 2130706432;
}

/*    Procedure: 0x0044460E - 0x0044460F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044460E()
{



}

/*    Procedure: 0x00444610 - 0x004447EC
 *    Argument size: 0
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L00443C33()
 */

L00444610()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd9;
    /* unknown */ void  Vffffffdb;
    /* unknown */ void  Vfffffffc;



    esi = 6572964;
    *L00644C8C = 0;
    L00414070(1, 0, 0xe);
    *L004d3050();
    if(M0063218a < 0) {
        Vffffffd9 = M004ef7ac;
        Vffffffdb = M004ef7ae;
        L0045527C( & Vffffffd9);
        *(esi + 0xc) = 0xff;
        L00445DE4();
    }
    edi = *(esi + 0xc8);
    *(edi + 0xa8) = *esi;
    *(edi + 0xac) = *(esi + 4);
    *(edi + 0x57) = 0;
    eax = *L004eeedc(M0064a3b0, edi, 0xa, 0x9a, & Vfffffffc);
    ebx = eax;
    if(ebx != 0) {
        L004445D4(ebx);
        eax = *(esi + 0xc8);
        *(eax + 0x8c) = 0;
        *(eax + 0x90) = 0;
        *(eax + 0x94) = 29111;
        *(eax + 0xf2) = 0;
        *(eax + 0xf6) = 0;
        *(eax + 0xfa) = 0;
        *(ebx + 0x7e) = 8;
        *(ebx + 0xa4) = -1;
        *(ebx + 0xff) = 0x1e;
        *(ebx + 0x87) = 0xb;
        *(ebx + 0x9e) = 1;
        *(ebx + 0xf2) = *(esi + 0x1b0);
        *(ebx + 0x118) = 0xfe;
        *(ebx + 0xe6) = *( *(esi + 0xc8) + 0x82);
        *L004dde5c( *(esi + 0xc8), M0064a3b0);
        *L004dde5c( *(esi + 0xc8), M0064a3b0);
        *(ebx + 0xa8) = *(ebx + 0xa8) + 16752270;
        eax = *(ebx + 0xa8);
        if(eax > *(ebx + 0xa8)) {
            *(ebx + 0xac) = *(ebx + 0xac) + 1;
        }
    }
    if(!( *(esi + 20697) & 0x40) && *(esi + 0x10a) == 178566936 || !( *(esi + 20697) & 0x20) && *(esi + 0x10a) == 379885336) {
        goto L004447c0;
    }
    if(!( *(esi + 20697) & 0x80) && *(esi + 0x10a) == 178558746) {
L004447c0:
        eax = L0041C44F(9, 0);
    }
    if(*(esi + 16221) != 0 && *(esi + 16223) != 0) {
        eax = L004700B4(-2);
    }
}

/*    Procedure: 0x004447ED - 0x004447EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004447ED()
{



}

/*    Procedure: 0x004447F0 - 0x00444803
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00444804()
 */

L004447F0()
{



    return L00444850(_LIBID_ATLLib, -1);
}

/*    Procedure: 0x00444804 - 0x0044484E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442EC4()
 */

L00444804()
{



    dl = M00644c68;
    if(dl != 0) {
        eax = M00644c6c;
        if(eax != 0) {
            cl = M00644c91;
            if(cl != 0) {
                L0043DA28(eax, dl, cl);
                M00644c68 = 0;
                L00446004();
                return L0043FB38();
            }
            eax = L004447F0();
        }
    }
}

/*    Procedure: 0x0044484F - 0x0044484F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044484F()
{



}

/*    Procedure: 0x00444850 - 0x0044486F
 *    Argument size: -40
 *    Local size: 48
 *    Save regs size: 0
 *    Called by:
 *        L004408BF()
 *        L00440AAC()
 *        L004447F0()
 *        L00445474()
 *        L004462A8()
 */

L00444850(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe8;



    Vffffffd0 = A8;
    Vffffffe8 = Ac;
    return L00421DEC( & Vffffffd0);
}

/*    Procedure: 0x00444870 - 0x00444A87
 *    Argument size: 4
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00442EC4()
 *        L00445590()
 */

L00444870(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = 6572964;
    eax = 0;
    if(!( *(A8 + 0xc8) & 8)) {
        eax = 0x10;
    } else {
        if(!(edx & 134217728)) {
            eax = 0xe;
        }
    }
    if(eax != 0) {
        ebx = *L004eeedc(M0064a3b0, A8, 0x4f, eax, & Vfffffffc);
        if(ebx == 0) {
            eax = 0;
        } else {
            *(edi + 0xc8) = ebx;
            *(A8 + 0x118) = 1;
            *(A8 + 0xb6) = 0;
            *(A8 + 0xb8) = 0;
            *(A8 + 0xba) = 0;
            *(ebx + 0x118) = 0xff;
            *(edi + 0xc0) = *(ebx + 0x86) & 0xff;
            *(A8 + 0x87) = 0xb;
            *(A8 + 0xff) = 0x16;
            *(edi + 0xe8) = 0x24;
            *(edi + 0xea) = 0;
            L0043FC24(ebx);
            if(!( *(A8 + 0xc8) & 8)) {
                *(ebx + 0xc8) = 1075838976;
                *(ebx + 0xd2) = 0x88;
                *(ebx + 0xd0) = 2;
                *(edi + 0x15a) = 2;
                *(edi + 0x120) = 2;
            } else {
                *(ebx + 0xc8) = 1075838976;
                *(ebx + 0xd2) = 0;
            }
            *(ebx + 0xcc) = 0;
            *(ebx + 0xd6) = 0;
            *(ebx + 0xd7) = 0;
            *(ebx + 0xd8) = 0;
            *(ebx + 0xd9) = 0;
            *(ebx + 0xda) = 0;
            *(ebx + 0xdb) = 0;
            *(ebx + 0xdc) = 0;
            *(ebx + 0xdd) = 0;
            *(ebx + 0xde) = 0;
            *(ebx + 0xdf) = 0;
            *(ebx + 0xd3) = 0;
            *(ebx + 0xd4) = 0;
            *(ebx + 0xd5) = 0;
            *(ebx + 0xe0) = 0;
            *(ebx + 0xe2) = 0;
            *(edi + 20524) = 0;
            *(edi + 20528) = 0;
            *(edi + 18968) = 0;
            *(edi + 20692) = 0;
            *(edi + 19001) = 0;
            *(ebx + 0x11e) = 536870912;
            Vfffffff0 = *(ebx + 0xc);
            Vfffffff4 = *(ebx + 0x10);
            Vfffffff8 = *(ebx + 0x14);
            Vfffffff0 = Vfffffff0 >> 0x10;
            Vfffffff4 = Vfffffff4 >> 0x10;
            Vfffffff8 = Vfffffff8 >> 0x10;
            *L005016f4(ebx, & Vfffffff0);
            L0041CF94();
            L00446018();
            L004701BE(0x20);
            L00445DE4();
            M006321ea = 0;
            M006321e9 = M006321e9 & 0xfe;
            eax = L00414070(1, 0, 0xe) | -1;
        }
    } else {
        eax = 0;
    }
}

/*    Procedure: 0x00444A88 - 0x00445195
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00444A88()
{



    esp = esp + -200;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = 6572964;
    (save)0;
    eax = 0x5f;
    if(*L00644C8E != 5) {
        eax = 0x10;
    }
    (save)eax;
    (save) *(ebx + 0xed);
    eax = L00445198();
    esp = esp + 0xc;
    if(*(ebx + 0xea) != 5) {
        if(M004ef0da != 0) {
            *(ebp - 8) = 0;
            *(ebp - 4) = 0xa;
            edi = 5;
            esi = 0x72;
            do {
                eax = M0064a3b0;
                if(*(eax + esi) != 0) {
                    eax = esi + (esi + (esi + esi * 4) * 4) * 8;
                    if(!( *(M0064a3b0 + eax * 2 + 0x1c0) & 0x10)) {
                        (save)esi;
                        (save)edi;
                        esi = 0x4ef7b0;
                        edi = ebp - 0x30;
                        ecx = 0xa;
                        asm("rep movsd");
                        (restore)edi;
                        (restore)esi;
                        if(M004ef0db == 0) {
                            *(ebp - 0x30) = *(ebp - 4);
                            *(ebp - 0x2c) = edi;
                            *(ebp - 0x28) = *(ebp - 4) + 0xa;
                            *(ebp - 0x24) = edi + 0xa;
                            *(ebp - 0x20) = *(ebp - 8) + 0xd1;
                            *L005003b4(ebp - 0x30);
                            *(ebp - 8) = *(ebp - 8) + 1;
                        }
                        L00457DCC(0x31, *(ebp - 4), edi);
                        eax = L00455564(esi + (esi + (esi + esi * 4) * 4) * 8 + esi + (esi + (esi + esi * 4) * 4) * 8 + M0064a3b0 + 0x198, *(ebp - 4) + 0xf, edi, 0x11);
                        edi = edi + 0xf;
                        if(edi == 0x8c) {
                            edi = 5;
                            *(ebp - 4) = 0xe6;
                        }
                    }
                }
                esi = esi - 1;
            } while(esi > 0);
            M004ef0db = 1;
        }
        L00445198( *(ebx + 0xec), 0x11, 1);
        al = *(ebx + 0xea);
        if(al != 4 && al != 6) {
            eax = al;
            if(*( *(ebx + 0xc8) + eax + 0xd2) != 0) {
                L00445B24();
            }
            if(*(ebx + 0xea) == 0) {
                eax = *(ebx + 0xc8);
                *L004dde64(eax + 0x8c, eax, ebp - 0x64, ebp - 0x38);
                *(ebp - 0x5c) = *(ebp - 0x5c) + 0xff;
                L00452681(ebp - 0x34, ebp - 0x64);
                L00445BF0( *(ebp - 0x34), *(ebp - 0x32));
            }
            if(*(ebx + 0xea) >= 2) {
                *(ebp - 0x78) = ( *(ebx + 0x204) << 4) + ( *(ebx + 0x204) << 4) * 4 + (( *(ebx + 0x204) << 4) + ( *(ebx + 0x204) << 4) * 4) * 4 + (( *(ebx + 0x204) << 4) + ( *(ebx + 0x204) << 4) * 4 + (( *(ebx + 0x204) << 4) + ( *(ebx + 0x204) << 4) * 4) * 4) * 8 >> 0x10;
                *(ebp - 0x74) = ~(( *(ebx + 0x206) << 4) + ( *(ebx + 0x206) << 4) * 4 + (( *(ebx + 0x206) << 4) + ( *(ebx + 0x206) << 4) * 4) * 4 + (( *(ebx + 0x206) << 4) + ( *(ebx + 0x206) << 4) * 4 + (( *(ebx + 0x206) << 4) + ( *(ebx + 0x206) << 4) * 4) * 4) * 8 >> 0x10);
                *L005000d8(34358, ebp - 0x78, 0x12, 5, 0x4c, 0);
            }
        }
        esi = L004516B0(ebp - 0x44, *(ebx + 0xc8) + 0x8c);
        *(ebx + 0xd4) = esi;
        eax = L0045122F(ebp - 0x44);
        if(esi > 0) {
            do {
                if(!(eax & 1073741824)) {
                    goto L00444ce1;
                }
                eax = eax + eax;
                esi = esi - 1;
            } while(esi > 0);
            goto L00444cef;
L00444ce1:
            eax = 2147483647;
        }
L00444cef:
        *(ebx + 0xd8) = eax;
        M0064a118 = 0;
        if(*( *(ebx + 0xc8) + 0x56) != 0) {
            edi = *L00501b94( *( *(ebx + 0xc8) + 0x56) & 0xff, M0064a3b0) + 0x124;
            esi = 6594840;
            eax = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            eax = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
        }
        edi = 34336;
        *(ebp - 0x50) = *(ebx + 0xdc);
        ecx = *(ebx + 0xdc);
        if(ecx >= 0) {
            eax = ecx;
            esi = 0x3e8;
            asm("cdq");
            edx = esi / esi % esi / esi;
            if(eax <= 60000) {
                edi = 34338;
                eax = ecx;
                ecx = 0x3e8;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                *(ebp - 0x50) = eax;
            }
        }
        if(*(ebx + 0xe9) & 1 || *(ebx + 0xe8) == 2) {
            edi = edi + 1;
            if(*(ebx + 0xe8) == 2) {
                *L005000d8(34328, ebp - 0x58, 0xf, 2, 0x8b, 0);
            }
        }
        *(ebp - 0x58) = *(ebx + 0x1b8);
        *(ebp - 0x54) = *(ebx + 0xd8);
        *(ebp - 0x4c) = 6594840;
        *L005000d8(edi, ebp - 0x58, 0xf, 2, 0x94, 0);
        if(*(ebx + 0xea) == 6) {
            M004ef784 = 0x320;
            L0043FAE4(M0064a3b0, 0x44581c);
        } else {
            if(!( *(ebx + 0xe9) & 4)) {
                L0043FA68(M0064a3b0, 0x445738);
            }
        }
        eax = *(ebx + 0xc8);
        cx = *(eax + 0xe0);
        si = *(eax + 0xe2);
        if(cx != si) {
            eax = ((cx & 65535) << 2) + ((cx & 65535) << 2) * 4 + (((cx & 65535) << 2) + ((cx & 65535) << 2) * 4) * 4;
            ecx = si & 65535;
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
            *(ebp + -140) = eax;
            eax = *L005000d8(34340, ebp + -140, 0xf, 2, 1, 0);
        }
        if(*(ebx + 0x10e) != 0) {
            ecx = *L00501b9c( *( *(ebx + 0xc8) + 0x82));
            eax = (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) + (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) * 4 + ((( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) + (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) * 4) * 4 + ((( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) + (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) * 4 + ((( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) + (( *( *(ebx + 0xc8) + 0xe4) & 65535) << 3) * 4) * 4) * 4;
            if(eax < 0) {
                eax = eax + 3;
            }
            eax = eax >> 2;
            ecx = *( *(ecx + 0x38) + 6);
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
            *(ebp + -160) = eax;
            eax = *L005000d8(34360, ebp + -160, 0xf, 2, 0xb, 0);
        }
        if(!( *(ebx + 0xe9) & 8)) {
            eax = *(ebx + 0xc8);
            if(!( *(eax + 0xca) & 0x40) && *(ebx + 0xed) != 0 && *(ebx + 0xea) != 6) {
                esi = *L00501b94( *(ebx + 0xed), M0064a3b0);
                eax = *L00501b9c( *(esi + 0x82));
                ecx = eax;
                if(*(esi + 0x82) <= 0x50 && *(ecx + 0x38) != 0) {
                    edi = 34342;
                    if(*(esi + 0xe2) != 0) {
                        edi = 34341;
                        eax = (( *(esi + 0xe0) & 65535) << 2) + (( *(esi + 0xe0) & 65535) << 2) * 4 + ((( *(esi + 0xe0) & 65535) << 2) + (( *(esi + 0xe0) & 65535) << 2) * 4) * 4;
                        (save)ecx;
                        ecx = *(esi + 0xe2) & 65535;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        *(ebp + -180) = eax;
                        *(ebp + -176) = (( *(esi + 0xe0) & 65535) << 2) + (( *(esi + 0xe0) & 65535) << 2) * 4 + ((( *(esi + 0xe0) & 65535) << 2) + (( *(esi + 0xe0) & 65535) << 2) * 4) * 4 >> 6;
                    }
                    eax = ( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535) + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535)) * 4 + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535) + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535)) * 4) * 4 + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535) + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535)) * 4 + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535) + (( *(esi + 0xe4) & 65535) + ( *(esi + 0xe4) & 65535)) * 4) * 4) * 4;
                    (save)ecx;
                    ecx = *( *(ecx + 0x38) + 6);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    *(ebp + -172) = eax;
                    *(ebp + -164) = *( *(ecx + 0x38) + 0xe);
                    *(ebp + -168) = *( *(esi + 0xd0) * 4 + 0x4ef59c);
                    eax = *L005000d8(edi, ebp + -180, 0xf, 0xeb, 1, 0);
                    if(!( *(esi + 0xcb) & 1)) {
                        eax = *L005000d8(34351, 0, 0x5f, 0xeb, 0x33, 0);
                    }
                    if(!( *(esi + 0xc8) & 0x410)) {
                        eax = *L005000d8(39070, 0, 0x5f, 0xeb, 0x3d, 0);
                    }
                    if(*(esi + 0x118) == 0xfb && *(esi + 0x11a) != 0 && !( *(ebx + 1) & 0x80)) {
                        *(ebp + -172) = *(esi + 0x11a);
                        eax = *L005000d8(34356, ebp + -180, 0x10, 0xeb, 0x47, 0);
                    }
                }
            }
        }
        if(!( *(ebx + 0xe9) & 0x40)) {
            eax = *(ebx + 0xc8);
            if(!( *(eax + 0xcb) & 1) && *(ebx + 0xed) != 0) {
                eax = *L00501b94( *(ebx + 0xed), M0064a3b0);
                esi = eax;
                if(*(esi + 0x82) == 0x9a) {
                    edi = 34353;
                    if(*(esi + 0x9e) == 0) {
                        edi = 34352;
                    } else {
                        if(!(ah & 0x80)) {
                            edi = 34354;
                        }
                    }
                    *(ebp + -200) = *(esi + 0xf2);
                    *(ebp + -196) = *(esi + 0xa8);
                    *(ebp + -192) = *(esi + 0xac);
                    *(ebp + -188) = *( *( *L00501b9c( *(esi + 0xe6) & 65535) + 0x38) + 6);
                    eax = *L005000d8(edi, ebp + -200, 0xf, 0xe1, 1, 0);
                    *(ebx + 0xe9) = *(ebx + 0xe9) | 0x40;
                }
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00445196 - 0x00445197
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445196()
{



}

/*    Procedure: 0x00445198 - 0x00445472
 *    Argument size: 12
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L00444A88()
 */

L00445198(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    if(al != 0) {
        edx = al;
        if(!( *(M0064a3b0 + edx) & 8)) {
            eax = L00445474(edx);
        } else {
            ebx = *L00501b94(edx, M0064a3b0);
            if(*(ebx + 0x8a) != 0 && !( *(ebx + 0x14c) & 0x10)) {
                ebx = *L00501b94( *(ebx + 0x56) & 0xff, M0064a3b0);
                if(*(ebx + 0x8a) != 0 && *(ebx + 0x56) != 0) {
                    ebx = *L00501b94( *(ebx + 0x56) & 0xff, M0064a3b0);
                }
            }
            esi = *(ebx + 0x98);
            edi = *(ebx + 0x9a);
            (save) & Vfffffffc;
            (save) & Vfffffff0;
            (save)ebx;
            eax = M00644c8e == 5 ? *L00501b94(M00644c93, M0064a3b0) : M00644c6c;
            (save)eax;
            *L004dde44();
            esp = esp + 0x10;
            M00644ca6 = *L005016c8(L0045122F( & Vfffffff0));
            M00644ca8 = Vfffffffc + M00644ca8 - 0xf;
            M00644ca6 = *L00501664(M00644ca6);
            if(M00644c8e != 4 && M00644c8e != 6 && M00648afb != 0) {
                if(A10 != 0) {
                    goto L004452e9;
                }
                if(M00644c8e == 5) {
L004452e9:
                    if(M00648afc != 0) {
                        goto L0044530a;
                    }
                    if(*( *L00501b9c( *(ebx + 0x82)) + 0x38) == 0) {
L0044530a:
                        if(esi > -1000 && esi < 0x3e8 && edi > -1000 && edi < 0x3e8) {
                            ebx = esi - 1;
                            L00445C2C(ebx, edi, (( ~M00644ca6 & 0x7ff) >> 5) + 0x40, Ac, 0);
                            L00445C2C(ebx, edi, (( ~M00644ca6 & 0x7ff) >> 5) + 0x40, Ac, 1);
                            L00445C2C(ebx, edi, (( ~M00644ca6 & 0x7ff) >> 5) + 0x40, Ac, 2);
                            L00445C2C(ebx, edi, (( ~M00644ca6 & 0x7ff) >> 5) + 0x40, Ac, 3);
                        }
                    }
                }
            }
            eax = esi - 5;
            if(eax < 0x138 && edi - 5 < 0x8e) {
                if(M00644ca8 <= 0x1d) {
                    Vffffffdc = M00644ca6 * 53712 >> 0x1d - M00644ca8;
                    eax = *L005000e0(34308, & Vffffffdc, Ac, eax, edi - 5, 0);
                } else {
                    Vffffffdc = M00644ca6 * 60244 >> 0x35 - M00644ca8;
                    eax = *L005000e0(34309, & Vffffffdc, Ac, eax, edi - 5, 0);
                }
            }
        }
    }
}

/*    Procedure: 0x00445473 - 0x00445473
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445473()
{



}

/*    Procedure: 0x00445474 - 0x004454F8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00445198()
 *        L004454FC()
 */

L00445474(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = 6572964;
    if(A8 == *L00644C90 || A8 == *L00644C91) {
        (save)-1;
        (save)39106;
        L00444850();
    }
    if(A8 == *(esi + 0xec)) {
        *(esi + 0xec) = 0;
        if(A8 != *(esi + 0xc0) && *(esi + 0xe8) == 2) {
            *(esi + 0xe8) = 0;
            L00445DE4();
            L00414070(1, 0, 0xe);
        }
    }
    eax = *(esi + 0xed);
    if(A8 == eax) {
        *(esi + 0xed) = 0;
    }
}

/*    Procedure: 0x004454F9 - 0x004454FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004454F9()
{



}

/*    Procedure: 0x004454FC - 0x00445576
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00445577()
 */

L004454FC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    if(Ac == 0) {
        if(bl == M00644cb6) {
            M00644cb6 = 0;
        }
        if(bl == M00644c93) {
            M00644c93 = 0;
            if(M00644c8e == 5) {
                M00644c8e = 0;
            }
            L0041D444(0x14, 0);
            eax = L0043FB38();
        } else {
            esi = bl;
            L00445474(esi);
            eax = L00445590(esi);
        }
    } else {
        eax = bl;
        if(eax == M00644c64) {
            M00644cb2 = 0x1e;
        }
    }
}

/*    Procedure: 0x00445577 - 0x0044558E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00445577(A8)
/* unknown */ void  A8;
{



    return L004454FC( *(A8 + 8), *A8);
}

/*    Procedure: 0x0044558F - 0x0044558F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044558F()
{



}

/*    Procedure: 0x00445590 - 0x0044566C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004454FC()
 */

L00445590(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    eax = A8;
    if(eax == M00644c64 && M00644c8c != 0x2c) {
        if(M0063218a >= 0) {
            L0044071C(0);
        }
        L004701BE(0x1f);
        eax = L00444870(M00644c6c);
        if(eax == 0) {
            M00644c8c = 0x2c;
            L00414070(1, 0, 0xe);
            ebx = 0x72;
            do {
                eax = M0064a3b0;
                if(*(eax + ebx) != 0) {
                    L00445670(ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + ebx + (ebx + (ebx + ebx * 4) * 4) * 8 + eax + 0x74);
                }
                ebx = ebx - 1;
            } while(ebx > 0);
            M00644c8e = 4;
            M00644cd4 = -117440512;
            *L004d3050();
            L004552D4();
            L00458384();
            L004552D4();
            M00644caa = 248550;
            M0063218b = 0;
            *L005003ac();
            M00644c18 = M00644c18 | 0x21;
            eax = L004701BE(0x1f);
        }
    }
}

/*    Procedure: 0x0044566D - 0x0044566F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044566D()
{



}

/*    Procedure: 0x00445670 - 0x0044569A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00445590()
 */

L00445670(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x87) == 0xb && *(A8 + 0x118) == 0xff && *(A8 + 0x82) == 0x9b) {
        M00644c6c = A8;
    }
}

/*    Procedure: 0x0044569B - 0x0044569B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044569B()
{



}

/*    Procedure: 0x0044569C - 0x004456A8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004456A9()
 */

L0044569C()
{



    return L0043C550(1);
}

/*    Procedure: 0x004456A9 - 0x00445737
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004456A9()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    eax = *L00644CAA - M00655674;
    *L00644CAA = eax;
    if(*L00644CAA < 0) {
        L0044569C();
    }
    *(ebx + 0x128) = (M00655674 >> 2) + *(ebx + 0x128);
    eax = L00442880( *(ebx + 0xc8));
    if(eax != 0) {
        *(ebx + 0x128) = *(ebx + 0x128) + 8192;
        eax = L00442880( *(ebx + 0xc8));
        if(eax != 0) {
            *(ebx + 0x128) = *(ebx + 0x128) + 24576;
            eax = L00442880( *(ebx + 0xc8));
            if(eax != 0) {
                *(ebx + 0x128) = *(ebx + 0x128) + 0x1000;
            }
        }
    }
}

/*    Procedure: 0x00445738 - 0x0044581B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445738()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0x10);
    esi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    if(*(ebx + 0x82) != 0x9a) {
        if(*(ebx + 0x56) == 0) {
            goto L00445801;
        }
        *(ebp - 4) = *L00501b94(eax & 0xff, M0064a3b0);
        eax = *( *(ebp - 4) + 0x98) - esi;
        asm("cdq");
        ecx = (eax ^ edx) - edx;
        eax = *( *(ebp - 4) + 0x9a) - edi;
        asm("cdq");
        eax = (eax ^ edx) - edx;
        if(ecx + eax >= 0xc) {
            if(*(ebx + 0x87) != 0xb || *(ebx + 0xff) != 0x24) {
                goto L00445801;
            }
            *(ebp - 8) = *L00501b94( *(ebx + 0xfe) & 0xff, M0064a3b0);
            eax = *( *(ebp - 8) + 0x98) - esi;
            asm("cdq");
            ecx = (eax ^ edx) - edx;
            eax = *( *(ebp - 8) + 0x9a) - edi;
            asm("cdq");
            eax = (eax ^ edx) - edx;
            if(ecx + eax >= 0xc) {
L00445801:
                eax = L00455564(ebx + 0x124, esi + 1, edi, 0xf);
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044581C - 0x0044599C
 *    Argument size: 12
 *    Local size: 44
 *    Save regs size: 12
 */

L0044581C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    if(*(A8 + 0x87) == 0xb && *(A8 + 0x88) <= 0x14 && *(A8 + 0x82) >= 0xf && *(A8 + 0x82) <= 0x3f) {
        Vfffffff4 = *(A8 + 0xe2) & 65535;
        esi = *L00501b9c( *(A8 + 0x82));
        *L004dde44(M00644c6c, A8, & Vffffffd4, & Vfffffff8);
        Vfffffffc = *L005016c8(L0045122F( & Vffffffd4));
        Vfffffffe = Vfffffff8 + Vfffffffe - 0xf;
        Vfffffffc = *L00501664(Vfffffffc);
        Vffffffe0 = Vfffffffc * 53712 >> 0x1d - Vfffffffe;
        eax = (( *(A8 + 0xe4) & 65535) << 2) + (( *(A8 + 0xe4) & 65535) << 2) * 4 + ((( *(A8 + 0xe4) & 65535) << 2) + (( *(A8 + 0xe4) & 65535) << 2) * 4) * 4;
        if(eax < 0) {
            eax = eax + 3;
        }
        eax = eax >> 2;
        ecx = *(esi + 0x38);
        (save)ecx;
        ecx = *(ecx + 6);
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        (restore)ecx;
        Vffffffe4 = eax;
        Vffffffec = *(ecx + 0xe);
        eax = Vffffffe0;
        if(eax < M004ef784) {
            M004ef784 = eax;
        }
        if(Ac < 0x140) {
            eax = A10 + 0x1e;
            if(eax < 0x9e) {
                if(Vfffffff4 != 0) {
                    eax = (( *(A8 + 0xe0) & 65535) << 2) + (( *(A8 + 0xe0) & 65535) << 2) * 4 + ((( *(A8 + 0xe0) & 65535) << 2) + (( *(A8 + 0xe0) & 65535) << 2) * 4) * 4;
                    asm("cdq");
                    Vfffffff4 = Vfffffff4 / Vfffffff4;
                    edx = Vfffffff4 % Vfffffff4;
                    Vffffffe8 = eax;
                    eax = *L005000e0(34362, & Vffffffe0, 0x5f, Ac - 8, A10 + 9, 0);
                } else {
                    eax = *L005000e0(34361, & Vffffffe0, 0x5f, Ac - 8, A10 + 9, 0);
                }
            }
        }
    }
}

/*    Procedure: 0x0044599D - 0x004459C5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044599D()
{



    (save)ebp;
    (save)ecx;
    (save)ebx;
    if(*( *(esp + 8)) > 0x17) {
        goto L00445b20;
    }
    switch(*(edx + 0x4459c0)) {
        case 0:
            goto L00445b20;
        case 1:
            goto L00445a3a;
        case 2:
            goto L00445aef;
        case 3:
            goto L00445a2b;
        case 4:
            goto L00445aff;
        case 5:
            goto L004459f0;
    }
    *eax = *eax + al;
    M04000400 = M04000400 + al;
}

/*    Procedure: 0x00445B24 - 0x00445B95
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00444A88()
 */

L00445B24()
{
    /* unknown */ void  ecx;



    eax = L00457E1C(0x502e84, 0x61, 0x81, 0x30);
    if(M004ef0d0 != 0 && M004ef0dc != 0) {
        eax = L00445C2C(0xa0, 0x4f, 4, 0x11, 0);
    }
    if(M004ef0d4 != 0 && M004ef0dc != 0) {
        *(ebp - 4) = 0x9f;
        *(ebp - 2) = 0x4f;
        eax = L004576B4(ebp - 4, 0xc, 0x10);
    }
}

/*    Procedure: 0x00445B96 - 0x00445BED
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445B96()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0x10);
    ecx = *(ebp + 0xc);
    si = *(ebp + 8) + *eax;
    *(ebp - 4) = si;
    *(ebp - 2) = ecx + *(eax + 4);
    *(ebp - 8) = bx + *(eax + 8);
    *(ebp - 6) = si + *(eax + 0xc);
    eax = L00457ABC(ebp - 4, ebp - 8, M00632ab4);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00445BEE - 0x00445BEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445BEE()
{



}

/*    Procedure: 0x00445BF0 - 0x00445C2A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00444A88()
 */

L00445BF0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    if(eax > 0xe && Ac > 0xe && eax <= 0x131 && Ac <= 0x8f) {
        eax = L00457E1C(0x502e84, 0x62, eax - 0x13, Ac - 0x12);
    }
}

/*    Procedure: 0x00445C2B - 0x00445C2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445C2B()
{



}

/*    Procedure: 0x00445C2C - 0x00445C7D
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00445198()
 *        L00445B24()
 */

L00445C2C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    eax = A18;
    ecx = eax << 5;
    edx = ecx;
    ebx = 0x80 - ecx;
    ecx = eax;
    eax = edx;
    return L00445C80(A8 * A8 + (ebx << 5) + (ebx << 5) * 4 >> 7, Ac * Ac + (ebx + ebx * 4 << 4) - ebx >> 7, A10 >> cl, A14);
}

/*    Procedure: 0x00445C7E - 0x00445C7F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445C7E()
{



}

/*    Procedure: 0x00445C80 - 0x00445DBC
 *    Argument size: 16
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00445C2C()
 */

L00445C80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    if(A8 - A10 > 0) {
        ax = A8 - bx;
    } else {
        eax = 0;
    }
    Vfffffffc = ax;
    Vfffffff4 = ax;
    if(Ac - A10 > 0) {
        ax = Ac - bx;
    } else {
        eax = 0;
    }
    Vfffffffa = ax;
    Vfffffffe = ax;
    ax = A10 + A8 < 0x140 ? A8 + bx : 0x13f;
    Vfffffff0 = ax;
    Vfffffff8 = ax;
    eax = A10 + Ac;
    ax = eax < 0x9e ? Ac + bx : 0x9d;
    Vfffffff2 = ax;
    Vfffffff6 = ax;
    if(Vfffffff4 <= 0x140 && Vfffffffe <= 0x9e && Vfffffff8 >= 0 && Vfffffff6 >= 0) {
        eax = A8 - A10;
        if(eax >= 0 && eax < 0x140) {
            L00457ABC( & Vfffffffc, & Vfffffff4, A14);
        }
        eax = A10 + A8;
        if(eax >= 0 && eax < 0x140) {
            L00457ABC( & Vfffffff8, & Vfffffff0, A14);
        }
        eax = Ac - A10;
        if(eax >= 0 && eax < 0x9e) {
            L00457ABC( & Vfffffffc, & Vfffffff8, A14);
        }
        eax = A10 + Ac;
        if(eax >= 0 && eax < 0x9e) {
            eax = L00457ABC( & Vfffffff4, & Vfffffff0, A14);
        }
    }
}

/*    Procedure: 0x00445DBD - 0x00445DE3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00445DBD(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *L005000c8(A10, A8 & 0x1ff, Ac, 0x4ef244);
}

/*    Procedure: 0x00445DE4 - 0x00445F3D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004406C4()
 *        L004407A8()
 *        L004408BF()
 *        L00440AAC()
 *        L00440D29()
 *        L00440F30()
 *        L00440F61()
 *        L0044110C()
 *        L004411B5()
 *        L0044155E()
 *        L00441700()
 *        L00441995()
 *        L00441A7C()
 *        L00442650()
 *        L00442EC4()
 *        L00443C33()
 *        L0044421C()
 *        L004444DE()
 *        L00444610()
 *        L00444870()
 *        L00445474()
 *        L00445F40()
 */

L00445DE4()
{
    /* unknown */ void  ebx;



    ebx = 6572964;
    if(!( *L00644C8D & 8)) {
        if(*L00644C8C >= 0x2e) {
            if(*L00644C94 != 0) {
                goto L00445e16;
            }
            L0041D49C(0x47);
        } else {
L00445e16:
            L0041D4C0(0x47);
        }
        if(*(ebx + 0x268) != 0) {
            if(*(ebx + 0xe8) > 6 || *(ebx + 0xc6) & 0x40 || *(ebx + 0xc7) & 1) {
                goto L00445e4c;
            }
            L0041D49C(0x45);
        } else {
L00445e4c:
            L0041D4C0(0x45);
        }
        L0041D49C(0x46);
        if(!( *(ebx + 0xe9) & 2)) {
            L0041D444(0x38, 0);
            L0041D444(0x46, 0);
        } else {
            L0041D444(0x38, 1);
            L0041D444(0x46, 1);
        }
        L0041D49C(0x48);
        if(M004ef0d0 == 0) {
            L0041D49C(0x49);
        }
        if(*(ebx + 0xe8) != 2) {
            L0041D444(0x39, 0);
            if(*(ebx + 0xec) != 0) {
                if(*( *(ebx + 0xc8) + 0xca) & 0x20) {
                    goto L00445eeb;
                }
                eax = L0041D444(0x49, 1);
            } else {
L00445eeb:
                eax = L0041D444(0x49, 0);
            }
        } else {
            eax = L0041D444(0x39, 1);
        }
        if(*(ebx + 0xe8) < 0x28) {
            if(*(ebx + 0xe9) & 1 || !( *(ebx + 16310) & 2)) {
                return L0041D444(0x48, 1);
            }
            eax = L0041D444(0x48, 0);
        }
    }
}

/*    Procedure: 0x00445F3E - 0x00445F3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00445F3E()
{



}

/*    Procedure: 0x00445F40 - 0x00445FB7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004411B5()
 *        L00442EC4()
 *        L00445FB8()
 */

L00445F40()
{
    /* unknown */ void  ebx;



    M00644c8d = M00644c8d & 0xf7;
    L0041D4C0(0x3a);
    ebx = 9;
    do {
        L0041D4C0(ebx + 0x3b);
        ebx = ebx - 1;
    } while(ebx >= 0);
    L0041D444(0x19, 0);
    L00440858();
    L0041D4C0(0x4a);
    L0041D4C0(0x4b);
    L0041D4C0(0x4c);
    L0041D4C0(0x4d);
    L0041D4C0(0x4e);
    L0041D4C0(0x4f);
    L0041D4C0(0x51);
    return L00445DE4();
}

/*    Procedure: 0x00445FB8 - 0x00445FD8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004407A8()
 */

L00445FB8()
{



    if(!(M00644c8d & 8)) {
        return L00446018();
    }
    M00644c8d = M00644c8d & 0xf7;
    return L00445F40();
}

/*    Procedure: 0x00445FD9 - 0x00446000
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00445FD9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = A8;
    *(ebp - 2) = 0xbc;
    return L004553B4(Ac, ebp - 4);
}

/*    Procedure: 0x00446001 - 0x00446003
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446001()
{



}

/*    Procedure: 0x00446004 - 0x00446016
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004425C5()
 *        L00442EC4()
 *        L00444804()
 */

L00446004()
{



    if(!(M00644c8d & 8)) {
        eax = L00446018();
    }
}

/*    Procedure: 0x00446017 - 0x00446017
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446017()
{



}

/*    Procedure: 0x00446018 - 0x004461F7
 *    Argument size: 0
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L004411B5()
 *        L00442EC4()
 *        L00443B5C()
 *        L00444870()
 *        L00445FB8()
 *        L00446004()
 */

L00446018()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 6572964;
    L0041D4C0(0x46);
    L0041D4C0(0x48);
    L0041D4C0(0x49);
    L0041D4C0(0x47);
    L0041D4C0(0x45);
    L0041D49C(0x3a);
    if(M004ef0d4 == 0) {
        L0041D49C(0x4f);
    }
    ebx = 9;
    do {
        if(*( *(esi + 0xc8) + ebx + 0xd6) == 0) {
            L0041D4C0(ebx + 0x3b);
        } else {
            edi = ebx + 0x3b;
            L0041D49C(edi);
            eax = *(esi + 0xc8);
            L0041D444(edi, *(eax + ebx + 0xd6) & 0xf);
        }
        if(*( *(esi + 0xc8) + 0xc9) & 8 || *(esi + 0x174) == 0) {
            L0041D4C0(0x51);
        } else {
            L0041D49C(0x51);
        }
        ebx = ebx - 1;
    } while(ebx >= 0);
    if(!( *( *(esi + 0xc8) + 0xca) & 0x80)) {
        L0041D444(0x4a, 1);
        L0041D49C(0x4a);
    } else {
        if(!( *( *(esi + 0xc8) + 0xca) & 8)) {
            L0041D444(0x4a, 0);
            L0041D49C(0x4a);
        } else {
            L0041D4C0(0x4a);
        }
    }
    if(!( *( *(esi + 0xc8) + 0xcb) & 4)) {
        L0041D49C(0x4b);
    } else {
        L0041D4C0(0x4b);
    }
    if(!( *( *(esi + 0xc8) + 0xcb) & 1)) {
        L0041D49C(0x4c);
    } else {
        L0041D4C0(0x4c);
    }
    if(!( *( *(esi + 0xc8) + 0xc8) & 4)) {
        L0041D49C(0x4d);
    } else {
        L0041D4C0(0x4d);
    }
    if(*(esi + 20766) != 0 && *(esi + 0xe8) == 0x34) {
        goto L004461ac;
    }
    if(!( *(esi + 0xc6) & 0x10)) {
L004461ac:
        L0041D49C(0x4e);
    } else {
        L0041D4C0(0x4e);
    }
    L00440838(0x4ef4dc);
    if(!( *(esi + 0xe9) & 8)) {
        *L005003b4(0x4ef388);
    }
    *(esi + 0xe9) = *(esi + 0xe9) | 8;
    return L0041D444(0x19, 1);
}

/*    Procedure: 0x004461F8 - 0x0044624B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00441F3C()
 */

L004461F8(A8)
/* unknown */ void  A8;
{



    eax = A8;
    edx = 0;
    do {
        if(!(eax & -2147483648)) {
            goto L00446207;
        }
        eax = eax + eax;
        edx = edx + 1;
    } while(edx < 5);
    goto L00446216;
L00446207:
    eax = 2147418111;
L00446216:
    eax = (eax >> 0x10) + 1;
    if((M005014c8 & 0xff) > 0x10) {
        eax = eax * eax >> 4;
        if(eax > 32767) {
            eax = 32767;
        }
    }
    asm("imul dword [0x64a110]");
    return eax >> 6;
}

/*    Procedure: 0x0044624C - 0x0044628E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00442EC4()
 */

L0044624C(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(!(M00644c6a & 0x10)) {
        return L00446290(eax);
    }
    if(M00649cc2 != 0 && M00644c8c == 0x34) {
        return L0044629C(eax);
    }
    if(!( *(eax + 0xc8) & 4)) {
        eax = L004462A8();
    }
}

/*    Procedure: 0x0044628F - 0x0044628F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044628F()
{



}

/*    Procedure: 0x00446290 - 0x00446299
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044624C()
 */

L00446290()
{



    return L0041CD14();
}

/*    Procedure: 0x0044629A - 0x0044629B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044629A()
{



}

/*    Procedure: 0x0044629C - 0x004462A5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044624C()
 */

L0044629C()
{



    return L0041C97C();
}

/*    Procedure: 0x004462A6 - 0x004462A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004462A6()
{



}

/*    Procedure: 0x004462A8 - 0x00446346
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0044624C()
 */

L004462A8()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 6593176;
    esi = M00649a94;
    do {
        eax = *(ebx + 4) & 0xf;
        if(eax == 3 || eax == 4) {
            eax = *(ebx + 6);
            if(eax == M00644cae && *(ebx + 0x1a) != 0) {
                eax = *L00501b94( *(ebx + 0x1a), M0064a3b0);
                if(*(eax + 0x88) <= 0xd) {
                    *(ebx + 5) = 0xff;
                    dl = *(eax + 0x88);
                    if(dl <= *(ebx + 0x1b)) {
                        *(ebx + 0x1b) = dl;
                    }
                }
            }
        }
        ebx = ebx + 0x34;
        esi = esi - 1;
    } while(esi > 0);
    L004124F8(0, 4);
    L004124F8(0, 0);
    L004701BE(0x27);
    (save)-1;
    (save)34355;
    return L00444850();
}

/*    Procedure: 0x00446347 - 0x00446348
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446347()
{



    bl = bl + al;
}

/*    Procedure: 0x00446349 - 0x00446390
 *    Argument size: -12
 *    Local size: 16
 *    Save regs size: 0
 *    Called by:
 *        L00447237()
 */

L00446349(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    if(*(eax * 4 + 0x4efcb0) == 0) {
        eax = 1;
    } else {
        Vfffffff0 = *(eax * 8 + 0x4efc38);
        Vfffffff4 = *(eax * 8 + 0x4efc3c);
        Vfffffff8 = *(eax * 8 + 0x4efc88);
        Vfffffffc = *(eax * 8 + 0x4efc8c);
        eax = 0;
    }
}

/*    Procedure: 0x00446391 - 0x00446391
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446391()
{



}

/*    Procedure: 0x00446392 - 0x00446398
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446392()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
}

/*    Procedure: 0x00446399 - 0x0044675F
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L004111F4()
 */

L00446399(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edx = "HMIMIDIP013195";
    edi = 0;
    eax = 0;
    goto L004463ca;
L004463bf:
    eax = 0xe;
    goto L00446759;
L004463ca:
    while(*(edx + eax) != 0) {
        ecx = *( *A8 + eax);
        if(ecx != ( *(edx + eax) & 0xff)) {
            goto L004463bf;
        }
        eax = eax + 1;
    }
    eax = 0;
    do {
        if(*(eax * 4 + 0x4f0c04) == 0) {
            goto L004463dc;
        }
        eax = eax + 1;
    } while(eax < 8);
    goto L004463e6;
L004463dc:
    esi = eax;
L004463e6:
    if(eax == 8) {
        eax = 0xb;
    } else {
        ebx = 0;
        do {
            edx = (eax << 7) + 0x4efd1c;
            *(edx + ebx * 4) = 0;
            ebx = ebx + 1;
        } while(ebx < 0x20);
        *(esi * 4 + 0x4f0c04) = *A8;
        ebx = 0;
        do {
            eax = ((esi << 7) - esi) * 4 + 0x4f3a30;
            *(eax + ebx * 4) = 0;
            ebx = ebx + 1;
        } while(ebx < 0x7f);
        *(esi * 4 + 0x4f39f0) = 0;
        *(esi * 4 + 0x4f3a10) = 0;
        Vfffffff4 = *A8 + *( *(esi * 4 + 0x4f0c04) + 0x20);
        Vfffffffc = *(esi * 4 + 0x4f0c04) + 0x388;
        *(esi * 4 + 0x4f091c) = Ac;
        *(esi * 4 + 0x4f093c) = *( *(esi * 4 + 0x4f0c04) + 0x30);
        *(esi * 4 + 0x4f095c) = *(esi * 4 + 0x4f093c);
        *( *(esi * 4 + 0x4f0c04) + 0x380) = *(A8 + 4);
        for(ebx = 0; ebx < *(esi * 4 + 0x4f093c); ebx = ebx + 1) {
            eax = (esi << 7) + 0x4f051c;
            *(eax + ebx * 4) = 0;
            eax = Vfffffffc + edi;
            *((esi << 7) + 0x4f2214 + ebx * 4) = eax;
            eax = edi + 0xc + Vfffffffc;
            *((esi << 7) + 0x4efd1c + ebx * 4) = eax;
            eax = esi << 7;
            edx = L004469B4( *((esi << 7) + 0x4efd1c + ebx * 4), eax + (ebx << 2) + 0x4f011c);
            eax = *((esi << 7) + 0x4efd1c + ebx * 4) + edx;
            *((esi << 7) + 0x4efd1c + ebx * 4) = eax;
            edi = edi + *(Vfffffffc + edi + 4);
        }
        Vfffffff0 = Vfffffff4;
        Vfffffff4 = Vfffffff4 + *(esi * 4 + 0x4f093c);
        for(ebx = 0; ebx < *(esi * 4 + 0x4f093c); ebx = ebx + 1) {
            if(*Vfffffff0 != 0) {
                eax = (esi << 7) + 0x4f35f0;
                *(eax + ebx * 4) = Vfffffff4;
            }
            for(edi = 0; edi < *Vfffffff0; edi = edi + 1) {
                eax = edi + edi * 2;
                eax = *(Vfffffff4 + eax * 8 + 0xc);
                eax = L00447E0D(eax + *A8);
                edx = edi + edi * 2;
                *(Vfffffff4 + edx * 8 + 8) = eax;
            }
            Vfffffff4 = Vfffffff4 + ( *Vfffffff0 << 3) + ( *Vfffffff0 << 3) * 2;
            Vfffffff0 = Vfffffff0 + 1;
        }
        for(ebx = 0; ebx < *(esi * 4 + 0x4f095c); ebx = ebx + 1) {
            if(*( *(esi * 4 + 0x4f091c) + ebx * 4) == 0xff) {
                Vfffffff8 = 0;
                for(edx = 0; 1; edx = edx + 1) {
                    eax = ebx + ebx * 4;
                    if(*( *(esi * 4 + 0x4f0c04) + eax * 4 + edx * 4 + 0x80) == 0 || Vfffffff8 != 0 || edx >= 5) {
                        break;
                    }
                    eax = 0;
                    do {
                        ecx = ebx + ebx * 4;
                        if(*( *(esi * 4 + 0x4f0c04) + ecx * 4 + edx * 4 + 0x80) != 40960) {
                            ecx = ebx + ebx * 4;
                            if(*( *(esi * 4 + 0x4f0c04) + ecx * 4 + edx * 4 + 0x80) != 40962) {
                                ecx = ebx + ebx * 4;
                                if(*( *(esi * 4 + 0x4f0c04) + ecx * 4 + edx * 4 + 0x80) != *(eax * 4 + 0x4efcec)) {
                                    goto L004466ae;
                                } else {
                                    goto L004466a2;
                                }
                            }
                            if(*(eax * 4 + 0x4efcec) == 40962) {
                                goto L0044666b;
                            }
                            if(*(eax * 4 + 0x4efcec) != 40969) {
                                goto L004466ae;
                            } else {
                                goto L0044666b;
                            }
                        }
                        if(*(eax * 4 + 0x4efcec) == 40960 || *(eax * 4 + 0x4efcec) == 40961 || *(eax * 4 + 0x4efcec) == 40968) {
                            goto L00446621;
                        }
L004466ae:
                        eax = eax + 1;
                    } while(eax < 5);
                    goto L004466b8;
L004466a2:
                    *( *(esi * 4 + 0x4f091c) + ebx * 4) = eax;
                    Vfffffff8 = 1;
                    goto L004466b8;
L0044666b:
                    *( *(esi * 4 + 0x4f091c) + ebx * 4) = eax;
                    Vfffffff8 = 1;
                    goto L004466b8;
L00446621:
                    *( *(esi * 4 + 0x4f091c) + ebx * 4) = eax;
                    Vfffffff8 = 1;
L004466b8:
                }
                eax = ebx + ebx * 4;
                if(*( *(esi * 4 + 0x4f0c04) + eax * 4 + 0x80) == 0) {
                    goto L004466f3;
                }
                if(Vfffffff8 == 0) {
                    eax = (esi << 7) + 0x4efd1c;
                    *(eax + ebx * 4) = 0;
                    *( *(esi * 4 + 0x4f091c) + ebx * 4) = 0xff;
                    *(esi * 4 + 0x4f093c) = *(esi * 4 + 0x4f093c) - 1;
                    goto L0044672b;
L004466f3:
                    eax = *(esi * 4 + 0x4f091c);
                    *(eax + ebx * 4) = 0;
                }
            }
L0044672b:
        }
        eax = 0;
        do {
            *( *(esi * 4 + 0x4f0c04) + eax + 0x300) = 1;
            eax = eax + 1;
        } while(eax < 0x80);
        *A10 = esi;
        eax = 0;
    }
L00446759:
}

/*    Procedure: 0x00446760 - 0x00446780
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00470183()
 */

L00446760(A8)
/* unknown */ void  A8;
{



    if(A8 < 8) {
        *(A8 * 4 + 0x4f0c04) = 0;
    } else {
        return 0xa;
    }
    return 0;
}

/*    Procedure: 0x00446781 - 0x004467D3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004700B4()
 */

L00446781(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = L0044DF6E( *( *(A8 * 4 + 0x4f0c04) + 0x38), 0x449bbd, (A8 << 2) + 0x4f0c24);
    if(esi != 0) {
        eax = esi;
    } else {
        *( *(A8 * 4 + 0x4f0c24) + 0x4f5a28) = bl;
        *(A8 * 4 + 0x4f0bc4) = 1;
        eax = 0;
    }
}

/*    Procedure: 0x004467D4 - 0x0044686C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447D3F()
 *        L00470183()
 */

L004467D4()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx < 8) {
        if(*(ebx * 4 + 0x4f0c24) != -1) {
            L0044E1D7( *(ebx * 4 + 0x4f0c24));
        }
        *( *(ebx * 4 + 0x4f0c24) + 0x4f5a28) = 0xff;
        *(ebx * 4 + 0x4f0c24) = -1;
        if(*(ebx * 4 + 0x4f0bc4) != 0) {
            *(ebp - 8) = *(ebx * 4 + 0x4f0c04);
            *(ebp - 4) = *( *(ebx * 4 + 0x4f0c04) + 0x380);
            L00449717(ebx);
            *(ebx * 4 + 0x4f0bc4) = 0;
            *(ebx * 4 + 0x4f0c04) = 0;
            L0044686D(ebx, ebp - 8);
        }
    } else {
        eax = 0xa;
        goto L00446868;
    }
    eax = 0;
L00446868:
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044686D - 0x004469B3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004467D4()
 *        L00449BBD()
 */

L0044686D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    ebx = Ac;
    edi = 0;
    *(A8 * 4 + 0x4f0c04) = L00447E0D( *ebx);
    *(ebp - 4) = *(A8 * 4 + 0x4f0c04) + 0x388;
    *(A8 * 4 + 0x4f093c) = *( *(A8 * 4 + 0x4f0c04) + 0x30);
    *(A8 * 4 + 0x4f095c) = *(A8 * 4 + 0x4f093c);
    eax = *(ebx + 4);
    *( *(A8 * 4 + 0x4f0c04) + 0x380) = eax;
    for(ebx = 0; ebx < *(A8 * 4 + 0x4f093c); ebx = ebx + 1) {
        eax = (A8 << 7) + 0x4f051c;
        *(eax + ebx * 4) = 0;
        eax = L00447E0D( *(ebp - 4) + edi);
        *((A8 << 7) + 0x4f2214 + ebx * 4) = eax;
        eax = L00447E0D(edi + 0xc + *(ebp - 4));
        *((A8 << 7) + 0x4efd1c + ebx * 4) = eax;
        eax = A8 << 7;
        edx = L004469B4( *((A8 << 7) + 0x4efd1c + ebx * 4), eax + (ebx << 2) + 0x4f011c);
        eax = *((A8 << 7) + 0x4efd1c + ebx * 4) + edx;
        *((A8 << 7) + 0x4efd1c + ebx * 4) = eax;
        edi = edi + *(L00447E0D( *(ebp - 4) + edi) + 4);
    }
    for(ebx = 0; ebx < *(A8 * 4 + 0x4f095c); ebx = ebx + 1) {
        if(*( *(A8 * 4 + 0x4f091c) + ebx * 4) == 0xff) {
            eax = (A8 << 7) + 0x4efd1c;
            *(eax + ebx * 4) = 0;
            *(A8 * 4 + 0x4f093c) = *(A8 * 4 + 0x4f093c) - 1;
        }
    }
    return 0;
}

/*    Procedure: 0x004469B4 - 0x004469FA
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00446399()
 *        L0044686D()
 *        L00446BAD()
 *        L00449BBD()
 */

L004469B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    *(ebp - 4) = 0;
    edx = 0;
    ebx = 0;
    esi = 0;
    do {
        esi = esi + 1;
        eax = A8;
        al = *eax;
        A8 = A8 + 1;
        if(!(al & 0x80)) {
            *(ebp - 4) = 1;
        }
        al = al & 0x7f;
        ecx = edx;
        ebx = ebx | (eax & 0xff) << cl;
        edx = edx + 7;
    } while(*(ebp - 4) == 0);
    *Ac = ebx;
    return esi;
}

/*    Procedure: 0x004469FB - 0x00446A2E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0046FECF()
 */

L004469FB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    M004f335c = A8;
    ebx = 0;
    do {
        if(*(ebx * 4 + 0x4f0bc4) != 0) {
            eax = L00447C7C(ebx, *(ebx * 4 + 0x4f3360));
        }
        ebx = ebx + 1;
    } while(ebx < 8);
    return 0;
}

/*    Procedure: 0x00446A2F - 0x00446A42
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00446A2F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *(A8 * 4 + 0x4f3a10) = Ac;
    return 0;
}

/*    Procedure: 0x00446A43 - 0x00446A56
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00446A43(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *(A8 * 4 + 0x4f39f0) = Ac;
    return 0;
}

/*    Procedure: 0x00446A57 - 0x00446A79
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00446A57(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = A8;
    ecx = edx;
    edx = ((edx << 7) - ecx) * 4 + 0x4f3a30;
    *(edx + (Ac & 0xff) * 4) = A10;
    return 0;
}

/*    Procedure: 0x00446A7A - 0x00446BAC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 */

L00446A7A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    eax = A10;
    for(edi = 0; 1; edi = edi + 1) {
        edx = bl & 0xff;
        edx = *((A8 << 7) + 0x4f35f0 + edx * 4);
        if(al == *(edx + (edi + edi * 2) * 8 + 4)) {
            break;
        }
    }
    eax = bl & 0xff;
    eax = *((A8 << 7) + 0x4f35f0 + eax * 4);
    eax = *(eax + (edi + edi * 2) * 8) + 0xc;
    edx = bl & 0xff;
    edx = *((A8 << 7) + 0x4f2214 + edx * 4) + eax;
    eax = bl & 0xff;
    *((A8 << 7) + 0x4efd1c + eax * 4) = edx;
    eax = bl & 0xff;
    M004f3244 = *( *((A8 << 7) + 0x4f2214 + eax * 4) + 8) | 0xb0;
    for(*(ebp - 1) = 0; 1; *(ebp - 1) = *(ebp - 1) + 2) {
        eax = bl & 0xff;
        eax = *((A8 << 7) + 0x4f35f0 + eax * 4);
        if(*(eax + (edi + edi * 2) * 8 + 7) <= *(ebp - 1)) {
            break;
        }
        eax = bl & 0xff;
        eax = *((A8 << 7) + 0x4f35f0 + eax * 4);
        eax = *(eax + (edi + edi * 2) * 8 + 8);
        M004f3245 = *(eax + ( *(ebp - 1) & 0xff));
        eax = bl & 0xff;
        eax = *((A8 << 7) + 0x4f35f0 + eax * 4);
        eax = *(eax + (edi + edi * 2) * 8 + 8);
        M004f3246 = *(eax + ( *(ebp - 1) & 0xff) + 1);
        eax = bl & 0xff;
        L00448BC5(A8, 0x4f3244, *( *(A8 * 4 + 0x4f091c) + eax * 4), 3);
    }
    M004f4a10 = 0;
    return 0;
}

/*    Procedure: 0x00446BAD - 0x00446CC9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 */

L00446BAD(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    Ac = Ac | 0x80;
    for(bl = 1; (bl & 0xff) < *(A8 * 4 + 0x4f095c); ebx = ebx + 1) {
        eax = bl & 0xff;
        if(*((A8 << 7) + 0x4efd1c + eax * 4) != 0) {
            for(edi = 0; 1; edi = edi + 1) {
                eax = bl & 0xff;
                eax = *((A8 << 7) + 0x4f35f0 + eax * 4);
                if(*(eax + (edi + edi * 2) * 8 + 4) == Ac) {
                    break;
                }
            }
            eax = bl & 0xff;
            eax = *((A8 << 7) + 0x4f35f0 + eax * 4);
            eax = *(eax + (edi + edi * 2) * 8) + 0xc;
            edx = bl & 0xff;
            edx = *((A8 << 7) + 0x4f2214 + edx * 4) + eax;
            eax = bl & 0xff;
            *((A8 << 7) + 0x4efd1c + eax * 4) = edx;
            eax = A8 << 7;
            eax = bl & 0xff;
            *(ebp - 4) = L004469B4( *((A8 << 7) + 0x4efd1c + eax * 4), eax + ((bl & 0xff) << 2) + 0x4f011c);
            eax = bl & 0xff;
            edx = (A8 << 7) + 0x4efd1c;
            *(edx + eax * 4) = *(edx + eax * 4) + *(ebp - 4);
            eax = bl & 0xff;
            edx = (A8 << 7) + 0x4f051c;
            *(edx + eax * 4) = 0;
            L0044A9A1(A8, bl & 0xff, edi);
        }
    }
    M004f4a10 = 0;
    return 0;
}

/*    Procedure: 0x00446CCA - 0x00446CCA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446CCA()
{



}

/*    Procedure: 0x00446CCB - 0x00446CCC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446CCB()
{



    bl = bl + al;
}

/*    Procedure: 0x00446CCD - 0x00446CE2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447E19()
 *        L00470A94()
 */

L00446CCD(A8)
/* unknown */ void  A8;
{



    eax = *(A8 * 4 + 0x4f0bc4);
    eax :: 1;
    asm("sbb eax,eax");
    return ~eax;
}

/*    Procedure: 0x00446CE3 - 0x00446CE3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446CE3()
{



}

/*    Procedure: 0x00446CE4 - 0x00446CE4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00446CE4()
{



}

/*    Procedure: 0x00446CE5 - 0x00446F07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410CA8()
 *        L0044712B()
 */

L00446CE5()
{



    if(L0044AE51(0x446348, 0x49) != 0) {
        return 5;
    }
    if(L0044AE51(0x448a64, 0x50) != 0) {
        return 5;
    }
    if(L0044AE51(0x4efc34, 20460) != 0) {
        return 5;
    }
    if(L0044AE51(0x447e90, 0x574) != 0) {
        return 5;
    }
    if(L0044AE51(0x446ccc, 0x17) != 0) {
        return 5;
    }
    if(L0044AE51(0x448408, 0x659) != 0) {
        return 5;
    }
    if(L0044AE51(0x446ce4, 0xa24) != 0) {
        return 5;
    }
    if(L0044AE51(0x448ab8, 0x10b) != 0) {
        return 5;
    }
    if(L0044AE51(0x44770c, 0x27d) != 0) {
        return 5;
    }
    if(L0044AE51(0x44798c, 0x47d) != 0) {
        return 5;
    }
    if(L0044AE51(0x447e0c, 9) != 0) {
        return 5;
    }
    if(L0044AE51(0x446398, 0x932) != 0) {
        return 5;
    }
    if(L0044AE51(0x448bc4, 0xff5) != 0) {
        return 5;
    }
    if(L0044AE51(0x447e18, 0x74) != 0) {
        return 5;
    }
    if(L0044AE51(0x449bbc, 0xeff) != 0) {
        return 5;
    }
    return 0;
}

/*    Procedure: 0x00446F08 - 0x0044712A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410F2C()
 *        L00447214()
 */

L00446F08()
{



    if(L0044AE92(0x446348, 0x49) != 0) {
        return 5;
    }
    if(L0044AE92(0x448a64, 0x50) != 0) {
        return 5;
    }
    if(L0044AE92(0x4efc34, 20460) != 0) {
        return 5;
    }
    if(L0044AE92(0x447e90, 0x574) != 0) {
        return 5;
    }
    if(L0044AE92(0x446ccc, 0x17) != 0) {
        return 5;
    }
    if(L0044AE92(0x448408, 0x659) != 0) {
        return 5;
    }
    if(L0044AE92(0x446ce4, 0xa24) != 0) {
        return 5;
    }
    if(L0044AE92(0x448ab8, 0x10b) != 0) {
        return 5;
    }
    if(L0044AE92(0x44770c, 0x27d) != 0) {
        return 5;
    }
    if(L0044AE92(0x44798c, 0x47d) != 0) {
        return 5;
    }
    if(L0044AE92(0x447e0c, 9) != 0) {
        return 5;
    }
    if(L0044AE92(0x446398, 0x932) != 0) {
        return 5;
    }
    if(L0044AE92(0x448bc4, 0xff5) != 0) {
        return 5;
    }
    if(L0044AE92(0x447e18, 0x74) != 0) {
        return 5;
    }
    if(L0044AE92(0x449bbc, 0xeff) != 0) {
        return 5;
    }
    return 0;
}

/*    Procedure: 0x0044712B - 0x00447213
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00410CA8()
 */

L0044712B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 0x4f0cb0;
    esi = 0x4f1768;
    eax = L00446CE5();
    *(ebp - 4) = eax;
    if(*(ebp - 4) != 0) {
        eax = *(ebp - 4);
    } else {
        if(A8 != 0) {
            L00471258(0x4f33e0, A8);
        } else {
            M004f33e0 = 0;
        }
        *ebx = 0x44abb2;
        *(ebx + 8) = 0x44abd7;
        *(ebx + 0x10) = 0x44ac06;
        *(ebx + 0x18) = 0x44ac35;
        *(ebx + 0x20) = 0x44ac64;
        *(ebx + 4) = L0044B7D0();
        *(ebx + 0xc) = L0044B7D0();
        *(ebx + 0x14) = L0044B7D0();
        *(ebx + 0x1c) = L0044B7D0();
        *(ebx + 0x24) = L0044B7D0();
        *esi = 0x44ac93;
        *(esi + 8) = 0x44acc2;
        *(esi + 0x10) = 0x44acf1;
        *(esi + 0x18) = 0x44ad20;
        *(esi + 0x20) = 0x44ad4f;
        *(esi + 4) = L0044B7D0();
        *(esi + 0xc) = L0044B7D0();
        *(esi + 0x14) = L0044B7D0();
        *(esi + 0x1c) = L0044B7D0();
        *(esi + 0x24) = L0044B7D0();
        M004f0cac = 1;
        eax = 0;
    }
}

/*    Procedure: 0x00447214 - 0x00447236
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410CA8()
 *        L00410F2C()
 */

L00447214()
{
    /* unknown */ void  ebx;



    if(L00446F08() != 0) {
        return 5;
    }
    M004f0cac = 0;
    return 0;
}

/*    Procedure: 0x00447237 - 0x0044755D
 *    Argument size: 16
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L00410CA8()
 */

L00447237(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 6;
    eax = 0;
    do {
        if(*(eax * 4 + 0x4efcec) == 0) {
            goto L00447254;
        }
        eax = eax + 1;
    } while(eax < 5);
    goto L0044725e;
L00447254:
    ebx = eax;
L0044725e:
    if(ebx == 6) {
        eax = 0xb;
    } else {
        *(ebx * 4 + 0x4efcec) = A8;
        eax = 0;
        do {
            dl = *((A8 - 40960 << 4) + 0x4f325c + eax);
            *((ebx << 4) + 0x4f330c + eax) = dl;
            eax = eax + 1;
        } while(eax < 0x10);
        if(!(eax = *(ebx * 4 + 0x4efcec) - 40963)) {
            if(eax = eax - 2) {
                goto L004473ab;
            }
            L00447E91( & Vffffffe0);
            eax = 0;
            do {
                edx = ebx * 0xd * 8 + 0x4f097c;
                *(edx + eax * 8) = *(eax * 8 + 0x4f1768);
                *(edx + eax * 8 + 4) = *(eax * 8 + 0x4f176c);
                eax = eax + 1;
            } while(eax < 0xd);
            M004f35e0 = *(A10 + 0x14);
            eax = ebx * 0xd;
            edi = L0044AABC( *(eax * 8 + 0x4f0984), *(eax * 8 + 0x4f0988), M004f35e0, M004f35e4, ebx, M004f35e8);
            if(edi == 0) {
                goto L00447508;
            }
            eax = edi;
        } else {
            L00448A65( & Vffffffe0);
            eax = 0;
            do {
                edx = ebx * 0xd * 8 + 0x4f097c;
                *(edx + eax * 8) = *(eax * 8 + 0x4f0cb0);
                *(edx + eax * 8 + 4) = *(eax * 8 + 0x4f0cb4);
                eax = eax + 1;
            } while(eax < 0xd);
            M004f35e0 = *(A10 + 0x14);
            eax = ebx * 0xd;
            edi = L0044AABC( *(eax * 8 + 0x4f0984), *(eax * 8 + 0x4f0988), M004f35e0, M004f35e4, ebx, M004f35e8);
            if(edi != 0) {
                eax = edi;
                goto L00447557;
L004473ab:
                if(*(A10 + 8) != 0) {
                    eax = A10;
                    Vfffffff8 = *(eax + 4);
                    Vfffffffc = *(eax + 8);
                    eax = A10;
                    Vfffffff0 = *(eax + 0xc);
                    Vfffffff4 = *(eax + 0x10);
                    *(ebx * 8 + 0x4efc38) = Vfffffff8;
                    *(ebx * 8 + 0x4efc3c) = Vfffffffc;
                    *(ebx * 8 + 0x4efc88) = Vfffffff0;
                    *(ebx * 8 + 0x4efc8c) = Vfffffff4;
                } else {
                    edi = L0044770D(A8, ebx, & Vfffffff0, & Vfffffff8, (ebx << 2) + 0x4efcd8, (ebx << 2) + 0x4efc74, (ebx << 2) + 0x4efc60);
                    if(edi != 0) {
                        eax = edi;
                        goto L00447557;
                    }
                    eax = A10;
                    *(eax + 4) = Vfffffff8;
                    *(eax + 8) = Vfffffffc;
                    eax = A10;
                    *(eax + 0xc) = Vfffffff0;
                    *(eax + 0x10) = Vfffffff4;
                    *(ebx * 8 + 0x4efc38) = Vfffffff8;
                    *(ebx * 8 + 0x4efc3c) = Vfffffffc;
                    *(ebx * 8 + 0x4efc88) = Vfffffff0;
                    *(ebx * 8 + 0x4efc8c) = Vfffffff4;
                }
                (save)(ebx << 2) + 0x4efd04;
                (save)ebx;
                L00446349();
                L0044AB1E(Vfffffff0, Vfffffff4, Vfffffff8, Vfffffffc, ebx * 0x68 + 0x4f097c);
                *(ebx * 4 + 0x4efcb0) = 1;
                *A14 = ebx;
                Vffffffe8 = *(A10 + 0x18);
                eax = ebx * 0xd;
                edi = L0044AABC( *(eax * 8 + 0x4f0984), *(eax * 8 + 0x4f0988), Vffffffe8, Vffffffec, *(Ac + 4), *Ac);
                if(edi == 0) {
                    goto L00447508;
                }
                eax = edi;
            } else {
L00447508:
                if(!(eax = *(ebx * 4 + 0x4efcec) - 40970)) {
                    L0044AB66(Vfffffff0, Vfffffff4, Vfffffff8, Vfffffffc, 2, 0x4f4c18);
                    L0044DF6E(0x78, 0x4476ef, 0x4f35ec);
                }
                *(ebx * 4 + 0x4efcb0) = 1;
                *A14 = ebx;
                eax = 0;
            }
        }
    }
L00447557:
}

/*    Procedure: 0x0044755E - 0x00447611
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410F2C()
 */

L0044755E()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    if(*(ebx * 4 + 0x4efcb0) == 0) {
        eax = 1;
    } else {
        eax = ebx * 0xd;
        L0044AABC( *(eax * 8 + 0x4f098c), *(eax * 8 + 0x4f0990), M004f35e0, M004f35e4, ebx, M004f35e8);
        if(*(ebp + 0xc) != 0 && !(eax = *(ebx * 4 + 0x4efcec) - 40963) && !(eax = eax - 2) && !(eax = eax - 2)) {
            L0044790A(ebx);
        }
        if(!(eax = *(ebx * 4 + 0x4efcec) - 40970)) {
            L0044E1D7(M004f35ec);
        }
        *(ebx * 8 + 0x4efc3c) = 0;
        *(ebx * 8 + 0x4efc8c) = 0;
        *(ebx * 4 + 0x4efcec) = 0;
        *(ebx * 4 + 0x4efcb0) = 0;
        eax = 0;
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00447612 - 0x004476EE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00447612(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 0;
    do {
        M004f3244 = edi | 0xb0;
        M004f3245 = 0x79;
        M004f3246 = 0;
        esi = 3;
        M004f35e4 = L0044B7CC();
        M004f35e0 = 0x4f3244;
        eax = A8 * 0xd;
        L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, A8);
        M004f3244 = edi | 0xb0;
        M004f3245 = 0x7b;
        M004f3246 = 0;
        esi = 3;
        eax = A8 * 0xd;
        L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, 3, A8);
        edi = edi + 1;
    } while(edi < 0x10);
    eax = A8 * 0xd;
    L0044AABC( *(eax * 8 + 0x4f0994), *(eax * 8 + 0x4f0998), M004f35e0, M004f35e4, esi, A8);
    return 0;
}

/*    Procedure: 0x004476EF - 0x00447707
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004476EF()
{



    return L0044AB90(M004f4c18, M004f4c1c);
}

/*    Procedure: 0x00447708 - 0x00447708
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447708()
{



}

/*    Procedure: 0x00447709 - 0x0044770C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447709()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044770D - 0x00447909
 *    Argument size: 28
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L00447237()
 */

L0044770D(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 0x2c;
    Vfffffffc = 0x30;
    Vfffffff8 = 0;
    edi = 0;
    if(Ac > 5) {
        eax = 0xa;
    } else {
        if(*(Ac * 4 + 0x4efcb0) != 0) {
            eax = 9;
        } else {
            if(A8 < 40960 || A8 > 41472) {
                eax = 6;
            } else {
                L00471258(0x4f34df, 0x4f33e0);
                L004711C8(0x4f34df, "hmimdrv.386");
                esi = L00473114(0x4f34df, 32768);
                if(esi == -1) {
                    eax = 0xf;
                } else {
                    L0047311C(esi, 0x4f0c50, ebx);
                    goto L004478bd;
L0044780c:
                    eax = 5;
                    goto L00447903;
L0044784a:
                    eax = 5;
                    goto L00447903;
L004478bd:
                    while(edi <= M004f0c70 && Vfffffff8 == 0) {
                        L0047311C(esi, 0x4f0c7c, Vfffffffc);
                        ebx = M004f0ca0;
                        if(M004f0ca4 != A8) {
                            L0047310C(esi, ebx, 1);
                        } else {
                            Vfffffff8 = 1;
                            if(L0044AF37(ebx, A18, & Vffffffe4, & Vfffffff0) == -1) {
                                goto L0044780c;
                            }
                            L0044B07B(Vfffffff0, Vfffffff4, & Vffffffe8);
                            L0044AED3(Vffffffe4, ebx);
                            eax = L0047777C(ebx + 0x100);
                            M004f5cc0 = eax;
                            if(M004f5cc0 == 0) {
                                goto L0044784a;
                            }
                            L0047311C(esi, M004f5cc0, ebx);
                            L0044B85D(Vfffffff0, Vfffffff4, M004f5cc0, ebx);
                            L00477640(M004f5cc0);
                            eax = A10;
                            *eax = Vffffffe8;
                            *(eax + 4) = Vffffffec;
                            eax = A14;
                            *eax = Vfffffff0;
                            *(eax + 4) = Vfffffff4;
                            *A1c = bl;
                            *A20 = Vffffffe4;
                        }
                        edi = edi + 1;
                    }
                    L004730FC(esi);
                    *(Ac * 4 + 0x4efcc4) = M004f0ca4;
                    *(Ac * 4 + 0x4efcb0) = 1;
                    eax = Vfffffff8 == 0 ? 7 : 0;
                }
            }
        }
    }
L00447903:
}

/*    Procedure: 0x0044790A - 0x00447988
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044755E()
 */

L0044790A(A8)
/* unknown */ void  A8;
{



    if(A8 > 5) {
        return 0xa;
    }
    if(*(A8 * 4 + 0x4efcb0) == 0) {
        return 0xa;
    }
    *(A8 * 4 + 0x4efcb0) = 0;
    L0044AE92( *(A8 * 4 + 0x4efc60), *(A8 * 4 + 0x4efc74));
    L0044B03B( *(A8 * 8 + 0x4efc38), *(A8 * 8 + 0x4efc3c), *(A8 * 4 + 0x4efcd8));
    L0044B03B( *(A8 * 8 + 0x4efc88), *(A8 * 8 + 0x4efc8c), 0);
    return 0;
}

/*    Procedure: 0x00447989 - 0x00447989
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447989()
{



}

/*    Procedure: 0x0044798A - 0x0044798C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044798A()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0044798D - 0x00447A71
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 */

L0044798D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    *(A8 * 4 + 0x4f0b84) = 1;
    if(Ac != 0) {
        *(A8 * 4 + 0x4f0ba4) = 1;
        ebx = 0;
        do {
            if(*((A8 << 7) + 0x4efd1c + ebx * 4) != 0) {
                al = *( *((A8 << 7) + 0x4f2214 + ebx * 4) + 8);
                edi = *( *(A8 * 4 + 0x4f091c) + ebx * 4);
                if(M004f3258 == 0) {
                    *(ebp - 1) = al;
                } else {
                    edx = A8 << 4;
                    (save)(edi << 7) + 0x4f2614 + edx;
                    edx = al & 0xff;
                    (restore)ecx;
                    *(ebp - 1) = *(ecx + edx);
                }
                M004f324e = al | 0xb0;
                M004f324f = 7;
                eax = *(ebp - 1) & 0xff;
                M004f3250 = *((edi << 4) + 0x4f3380 + eax);
                L00448BC5(A8, 0x4f324e, edi, 3);
                eax = *(ebp - 1) & 0xff;
                *((edi << 6) + 0x4f4ad8 + eax * 4) = 1;
            }
            ebx = ebx + 1;
        } while(ebx < 0x20);
    }
    return 0;
}

/*    Procedure: 0x00447A72 - 0x00447B54
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00447A72(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    *(A8 * 4 + 0x4f0b84) = 0;
    if(*(A8 * 4 + 0x4f0ba4) != 0) {
        *(A8 * 4 + 0x4f0ba4) = 0;
        esi = 0;
        do {
            if(*((A8 << 7) + 0x4efd1c + esi * 4) != 0) {
                edi = *( *(A8 * 4 + 0x4f091c) + esi * 4);
                al = *( *((A8 << 7) + 0x4f2214 + esi * 4) + 8);
                if(M004f3258 == 0) {
                    *(ebp - 1) = al;
                } else {
                    edx = A8 << 4;
                    (save)(edi << 7) + 0x4f2614 + edx;
                    edx = al & 0xff;
                    (restore)ecx;
                    *(ebp - 1) = *(ecx + edx);
                }
                M004f324e = al | 0xb0;
                M004f324f = 7;
                eax = *(ebp - 1) & 0xff;
                M004f3250 = *((edi << 4) + 0x4f3380 + eax);
                L00448BC5(A8, 0x4f324e, edi, 3);
                eax = *(ebp - 1) & 0xff;
                edx = (edi << 6) + 0x4f4ad8;
                *(edx + eax * 4) = 0;
            }
            esi = esi + 1;
        } while(esi < 0x20);
    }
    return 0;
}

/*    Procedure: 0x00447B55 - 0x00447BBE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00447B55(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 0x4f324e;
    ebx = 0;
    do {
        if(*((A8 << 7) + 0x4efd1c + ebx * 4) != 0) {
            *edi = *( *((A8 << 7) + 0x4f2214 + ebx * 4) + 8) | 0xb0;
            *(edi + 1) = 7;
            *(edi + 2) = 0;
            L00448BC5(A8, edi, *( *(A8 * 4 + 0x4f091c) + ebx * 4), 3);
        }
        ebx = ebx + 1;
    } while(ebx < 0x20);
    *(A8 * 4 + 0x4f0ba4) = 1;
    return 0;
}

/*    Procedure: 0x00447BBF - 0x00447C7B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00447BBF(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    *(A8 * 4 + 0x4f0ba4) = 0;
    ebx = 0;
    do {
        if(*((A8 << 7) + 0x4efd1c + ebx * 4) != 0) {
            eax = *( *(A8 * 4 + 0x4f091c) + ebx * 4);
            dl = *( *((A8 << 7) + 0x4f2214 + ebx * 4) + 8);
            if(M004f3258 == 0) {
                *(ebp - 1) = dl;
            } else {
                ecx = A8 << 4;
                (save)(eax << 7) + 0x4f2614 + ecx;
                ecx = dl & 0xff;
                (restore)edi;
                *(ebp - 1) = *(edi + ecx);
            }
            M004f324e = dl | 0xb0;
            M004f324f = 7;
            edx = *(ebp - 1) & 0xff;
            M004f3250 = *((eax << 4) + 0x4f3380 + edx);
            L00448BC5(A8, 0x4f324e, eax, 3);
        }
        ebx = ebx + 1;
    } while(ebx < 0x20);
    return 0;
}

/*    Procedure: 0x00447C7C - 0x00447D3E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004469FB()
 *        L00447D3F()
 *        L00449BBD()
 *        L004700B4()
 */

L00447C7C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    *(A8 * 4 + 0x4f3360) = Ac & 0xff;
    ebx = 0;
    do {
        if(*((A8 << 7) + 0x4efd1c + ebx * 4) != 0) {
            al = *( *((A8 << 7) + 0x4f2214 + ebx * 4) + 8);
            edx = *( *(A8 * 4 + 0x4f091c) + ebx * 4);
            if(M004f3258 == 0) {
                *(ebp - 1) = al;
            } else {
                ecx = A8 << 4;
                (save)(edx << 7) + 0x4f2614 + ecx;
                ecx = al & 0xff;
                (restore)edi;
                *(ebp - 1) = *(edi + ecx);
            }
            M004f324e = al | 0xb0;
            M004f324f = 7;
            eax = *(ebp - 1) & 0xff;
            M004f3250 = *((edx << 4) + 0x4f3380 + eax);
            L00448BC5(A8, 0x4f324e, *( *(A8 * 4 + 0x4f091c) + ebx * 4), 3);
        }
        ebx = ebx + 1;
    } while(ebx < 0x20);
    return 0;
}

/*    Procedure: 0x00447D3F - 0x00447E08
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 16
 */

L00447D3F(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;



    if(!(Ac & 1)) {
        *(ebp - 4) = (A18 & 0xff) - (bl & 0xff);
    } else {
        eax = bl & 0xff;
        *(ebp - 4) = eax - (A18 & 0xff);
    }
    ecx = L0044E2D2( *(A8 * 4 + 0x4f0c24));
    edx = 0;
    edx = ecx / ecx % ecx / ecx;
    edx = 0;
    edx = 6553600 / 6553600 % 6553600 / 6553600;
    eax = A10 << 0x10;
    edx = 0;
    edx = A1c / A1c % A1c / A1c;
    esi = eax;
    if(esi == 0) {
        if(!(Ac & 4)) {
            L004467D4(A8);
            eax = 0;
        } else {
            L00447C7C(A8, A18);
            eax = 0;
        }
    } else {
        L00447C7C(A8, A14);
        eax = *(ebp - 4) << 0x10;
        edx = 0;
        esi = esi / esi;
        edx = esi % esi;
        *(A8 * 4 + 0x4f4a14) = Ac;
        *(A8 * 4 + 0x4f4a34) = eax;
        *(A8 * 4 + 0x4f4a54) = (bl & 0xff) << 0x10;
        *(A8 * 4 + 0x4f4a74) = esi;
        eax = 0;
    }
}

/*    Procedure: 0x00447E09 - 0x00447E09
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E09()
{



}

/*    Procedure: 0x00447E0A - 0x00447E0C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E0A()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00447E0D - 0x00447E14
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00446399()
 *        L0044686D()
 *        L004482EA()
 */

L00447E0D(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x00447E15 - 0x00447E15
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E15()
{



}

/*    Procedure: 0x00447E16 - 0x00447E18
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E16()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00447E19 - 0x00447E79
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00447E19(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(L00446CCD(A8) != 0) {
        return 0;
    }
    edx = 0;
    edx = 0x64 / 0x64 % 0x64 / 0x64;
    edx = *( *(A8 * 4 + 0x4f0c04) + 0x38);
    eax = (Ac << 0x10) * (Ac << 0x10) >> 0x10;
    if(eax == 0) {
        eax = 1;
    }
    L0044E0CE( *(A8 * 4 + 0x4f0c24), eax);
    return L0044E2D2( *(A8 * 4 + 0x4f0c24));
}

/*    Procedure: 0x00447E7A - 0x00447E8B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E7A(A8)
/* unknown */ void  A8;
{



    return *( *(A8 * 4 + 0x4f0c04) + 0x3c);
}

/*    Procedure: 0x00447E8C - 0x00447E8C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E8C()
{



}

/*    Procedure: 0x00447E8D - 0x00447E90
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00447E8D()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x00447E91 - 0x00447E9F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447237()
 */

L00447E91(A8)
/* unknown */ void  A8;
{



    *A8 = 0x4f1768;
    return 0x4f1768;
}

/*    Procedure: 0x00447EA0 - 0x00448199
 *    Argument size: 16
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0044AC93()
 */

L00447EA0(A8, A14)
/* unknown */ void  A8;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    edx = *eax;
    esi = *(eax + 1);
    Vfffffff0 = *(eax + 2);
    Vfffffff4 = edx & 0xf;
    if(!(edx = (edx & 0xf0) - 0x80)) {
        if(!(edx = edx - 0x10)) {
            if(edx = edx - 0x20) {
                goto L0044808e;
            }
        } else {
            Vfffffff8 = Vfffffff0;
            eax = *((A14 << 9) + 0x4f1790 + esi * 4);
            Vfffffffc = eax;
            if(Vfffffffc != 0) {
                if(Vfffffff8 == 0) {
                    goto L00447ffa;
                }
                if(*(Vfffffffc + 0x24) != -32768) {
                    edi = L00448616(A14, esi, Vfffffff4);
                    if(edi != -1) {
                        L0044C0FB( *(A14 * 4 + 0x4f21a4), edi);
                    }
                }
                if(*(A14 * 4 + 0x4f1754) >= *(A14 * 4 + 0x4f1740)) {
                    edi = L00448507(A14, Vfffffff4);
                    if(edi != -1) {
                        L0044C0FB( *(A14 * 4 + 0x4f21a4), edi);
                    }
                }
                if(*(A14 * 4 + 0x4f21f4) != 0) {
                    eax = *((A14 + A14 * 2) * 4 + 0x4f0cdc);
                    asm("imul dword [ebp-0x8]");
                    eax = eax >> 7;
                    *(Vfffffffc + 0x14) = eax;
                    *(Vfffffffc + 0x14) = *(Vfffffffc + 0x14) << 8;
                }
                *(Vfffffffc + 0x18) = esi;
                if(!( *((A14 + A14 * 2) * 4 + 0x4f0ce0) & 0x80)) {
                    eax = *((A14 + A14 * 2) * 4 + 0x4f0ce0) << 9;
                    *(Vfffffffc + 0x40) = eax;
                }
                edi = L0044BF25( *(A14 * 4 + 0x4f21a4), Vfffffffc);
                if(edi != -1) {
                    L0044849F(A14, edi, *(Vfffffffc + 0x18), Vfffffff8, Vfffffff4);
                    goto L00448191;
L00447ffa:
                    if(*(Vfffffffc + 0x24) != -32768) {
                        edi = L00448616(A14, esi, Vfffffff4);
                        if(edi != -1) {
                            L0044C0FB( *(A14 * 4 + 0x4f21a4), edi);
                        }
                    }
                }
            }
        }
    } else {
        Vfffffffc = *((A14 << 9) + 0x4f1790 + esi * 4);
        if(Vfffffffc != 0 && *(Vfffffffc + 0x24) != -32768) {
            edi = L00448616(A14, esi, Vfffffff4);
            if(edi != -1) {
                L0044C0FB( *(A14 * 4 + 0x4f21a4), edi);
                goto L00448191;
L0044808e:
                if(esi = esi - 7) {
                    goto L004480cf;
                }
                if(esi = esi - 3) {
                    goto L00448145;
                }
                if(!(esi = esi - 0x71)) {
                    while(1) {
                        edi = L00448507(A14, Vfffffff4);
                        if(edi == -1) {
                            break;
                        }
                        L0044C0FB( *(A14 * 4 + 0x4f21a4), edi);
                    }
                    goto L00448191;
L004480cf:
                    eax = A14 + A14 * 2;
                    *(eax * 4 + 0x4f0cdc) = Vfffffff0;
                    for(esi = *(A14 * 4 + 0x4f172c); esi != *(A14 * 4 + 0x4f1718); esi = esi + 1 & 0x1f) {
                        eax = esi << 4;
                        if(*((A14 << 9) + 0x4f0d18 + eax) != -1) {
                            eax = esi << 4;
                            eax = *((A14 << 9) + 0x4f0d20 + eax);
                            asm("imul dword [ebp-0x10]");
                            eax = esi << 4;
                            L0044DB48( *(A14 * 4 + 0x4f21a4), *((A14 << 9) + 0x4f0d18 + eax), eax + eax);
                        }
                    }
                    goto L00448191;
L00448145:
                    eax = A14 + A14 * 2;
                    *(eax * 4 + 0x4f0ce0) = Vfffffff0;
                    for(esi = *(A14 * 4 + 0x4f172c); 1; esi = esi + 1 & 0x1f) {
                        if(esi == *(A14 * 4 + 0x4f1718)) {
                            goto L00448191;
                        }
                        eax = esi << 4;
                        L0044DC95( *(A14 * 4 + 0x4f21a4), *((A14 << 9) + 0x4f0d18 + eax), Vfffffff0 << 9);
                    }
                }
            }
        }
    }
L00448191:
    return 0;
}

/*    Procedure: 0x0044819A - 0x0044827F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044ACC2()
 */

L0044819A(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    eax = 0;
    do {
        if(*((eax + eax + (eax + eax) * 4) * 8 + 0x4f57a4) == *A8) {
            goto L004481bb;
        }
        eax = eax + 1;
    } while(eax < 5);
    goto L004481cd;
L004481bb:
    *(A10 * 4 + 0x4f21a4) = eax;
    *(ebp - 4) = eax;
L004481cd:
    if(eax == 5) {
        *(A10 * 4 + 0x4f21e0) = 1;
        edi = L0044C4E4( *A8, *(A8 + 0x18), *(A8 + 0x14), ebp - 4);
        if(edi != 0) {
            eax = edi;
            goto L0044827a;
        }
        *(A10 * 4 + 0x4f21a4) = *(ebp - 4);
        edi = L0044DF6E( *(A8 + 4), *( *(A8 + 0x14) + 0x44), (A10 << 2) + 0x4f21cc);
        if(edi != 0) {
            eax = edi;
            goto L0044827a;
        }
        *(A10 * 4 + 0x4f21b8) = 1;
    } else {
        *(A10 * 4 + 0x4f21e0) = 0;
    }
    *(A10 * 4 + 0x4f21f4) = *(A8 + 0x10);
    L00448409(A10, *(A8 + 0xc));
    *( *(ebp - 4) * 4 + 0x4f4a9c) = A10;
    eax = 0;
    do {
        *((eax + eax * 2) * 4 + 0x4f0ce0) = *((eax + eax * 2) * 4 + 0x4f0ce0) | 0x80;
        eax = eax + 1;
    } while(eax < 5);
    eax = 0;
L0044827a:
}

/*    Procedure: 0x00448280 - 0x004482CF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044ACF1()
 */

L00448280(A10)
/* unknown */ void  A10;
{



    if(*(A10 * 4 + 0x4f21b8) != 0) {
        *(A10 * 4 + 0x4f21b8) = 0;
        if(*(A10 * 4 + 0x4f21e0) != 0) {
            L0044E1D7( *(A10 * 4 + 0x4f21cc));
            L0044CB86( *(A10 * 4 + 0x4f21a4), 1, 1);
        }
    }
    L0044849A(A10);
    return 0;
}

/*    Procedure: 0x004482D0 - 0x004482E9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044AD20()
 */

L004482D0(A10)
/* unknown */ void  A10;
{



    L00448409(A10, *(A10 * 4 + 0x4f1740));
    return 0;
}

/*    Procedure: 0x004482EA - 0x004483D9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044AD4F()
 */

L004482EA(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    *(A10 * 4 + 0x4f2190) = A8;
    eax = 0;
    do {
        edx = (A10 << 9) + 0x4f1790;
        *(edx + eax * 4) = 0;
        eax = eax + 1;
    } while(eax < 0x80);
    ebx = 0;
    goto L00448337;
L0044832c:
    eax = 0xe;
    goto L004483d4;
L00448337:
    while(*(ebx + "HMIDIGIP") != 0) {
        eax = *(ebx + "HMIDIGIP") & 0xff;
        if(eax != *(A8 + ebx)) {
            goto L0044832c;
        }
        ebx = ebx + 1;
    }
    ebx = 0x28;
    do {
        *(ebp - 4) = *(L00447E0D(ebx + A8) + 0x18);
        eax = L00447E0D(ebx + A8);
        edx = (A10 << 9) + 0x4f1790;
        *(edx + *(ebp - 4) * 4) = eax;
        eax = L00447E0D(ebx + A8 + 0x74);
        edx = (A10 << 9) + 0x4f1790;
        *( *(edx + *(ebp - 4) * 4)) = eax;
        eax = (A10 << 9) + 0x4f1790;
        *( *(eax + *(ebp - 4) * 4) + 0x1c) = 0x4483da;
        eax = (A10 << 9) + 0x4f1790;
        ebx = ebx + *( *(eax + *(ebp - 4) * 4) + 8) + 0x74;
    } while(ebx < *( *(A10 * 4 + 0x4f2190) + 0x24));
    eax = 0;
L004483d4:
}

/*    Procedure: 0x004483DA - 0x00448403
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L004483DA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0044DB02();
    if(Ac == 2) {
        L0044872D( *(A8 * 4 + 0x4f4a9c), A10);
    }
    return L0044B89F();
}

/*    Procedure: 0x00448404 - 0x00448404
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448404()
{



}

/*    Procedure: 0x00448405 - 0x00448408
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448405()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x00448409 - 0x00448499
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0044819A()
 *        L004482D0()
 */

L00448409(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ecx = 0x4f0d18;
    Ac = 0;
    do {
        ebx = Ac << 4;
        *(ecx + (A8 << 9) + ebx) = -1;
        ebx = Ac << 4;
        *(ecx + (A8 << 9) + 4 + ebx) = -1;
        ebx = Ac << 4;
        *(ecx + (A8 << 9) + 0xc + ebx) = -1;
        ebx = Ac << 4;
        *(ecx + (A8 << 9) + 8 + ebx) = -1;
        Ac = Ac + 1;
    } while(Ac < 0x20);
    *(A8 * 4 + 0x4f1718) = 0;
    *(A8 * 4 + 0x4f172c) = 0;
    *(A8 * 4 + 0x4f1754) = 0;
    *(A8 * 4 + 0x4f1740) = Ac;
    return *(A8 * 4 + 0x4f1740);
}

/*    Procedure: 0x0044849A - 0x0044849E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00448280()
 */

L0044849A()
{



}

/*    Procedure: 0x0044849F - 0x00448506
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00447EA0()
 */

L0044849F(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    if(*(A8 * 4 + 0x4f1754) >= *(A8 * 4 + 0x4f1740)) {
        return A8 | -1;
    }
    ecx = *(A8 * 4 + 0x4f1718);
    edx = A8 << 9;
    edx = edx + (ecx << 4) + 0x4f0d18;
    *edx = Ac;
    *(edx + 4) = A10;
    *(edx + 8) = A14;
    *(edx + 0xc) = A18;
    *(A8 * 4 + 0x4f1754) = *(A8 * 4 + 0x4f1754) + 1;
    *(A8 * 4 + 0x4f1718) = *(A8 * 4 + 0x4f1718) + 1;
    *(A8 * 4 + 0x4f1718) = *(A8 * 4 + 0x4f1718) & 0x1f;
    return ecx;
}

/*    Procedure: 0x00448507 - 0x00448615
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00447EA0()
 */

L00448507(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    if(*(A8 * 4 + 0x4f1754) != 0) {
        eax = 0;
        do {
            ecx = A8 << 9;
            ecx = ecx + (eax << 4) + 0x4f0d18;
            if(Ac == *(ecx + 0xc) && *ecx != -1) {
                break;
            }
            eax = eax + 1;
        } while(eax < 0x20);
        if(eax == 0x20) {
            eax = eax | -1;
        } else {
            for(*(ebp - 4) = *ecx; eax != *(A8 * 4 + 0x4f172c); eax = ebx) {
                ebx = eax - 1 & 0x1f;
                ecx = ebx << 4;
                (save)(A8 << 9) + 0x4f0d18 + ecx;
                eax = eax << 4;
                ecx = (A8 << 9) + 0x4f0d18;
                (restore)Ac;
                edi = ecx + eax;
                ecx = 4;
                asm("rep movsd");
            }
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d18 + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d1c + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d24 + ecx) = -1;
            eax = eax << 4;
            *((A8 << 9) + 0x4f0d20 + eax) = -1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) + 1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) & 0x1f;
            *(A8 * 4 + 0x4f1754) = *(A8 * 4 + 0x4f1754) - 1;
            eax = *(ebp - 4);
        }
    } else {
        eax = eax | -1;
    }
}

/*    Procedure: 0x00448616 - 0x0044872C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00447EA0()
 */

L00448616(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    if(*(A8 * 4 + 0x4f1754) != 0) {
        eax = 0;
        do {
            ecx = A8 << 9;
            ecx = ecx + (eax << 4) + 0x4f0d18;
            if(Ac == *(ecx + 4) && *(ecx + 0xc) == A10 && *ecx != -1) {
                break;
            }
            eax = eax + 1;
        } while(eax < 0x20);
        if(eax == 0x20) {
            eax = eax | -1;
        } else {
            for(*(ebp - 4) = *ecx; eax != *(A8 * 4 + 0x4f172c); eax = ebx) {
                ebx = eax - 1 & 0x1f;
                ecx = ebx << 4;
                (save)(A8 << 9) + 0x4f0d18 + ecx;
                eax = eax << 4;
                ecx = (A8 << 9) + 0x4f0d18;
                (restore)Ac;
                edi = ecx + eax;
                ecx = 4;
                asm("rep movsd");
            }
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d18 + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d1c + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d24 + ecx) = -1;
            eax = eax << 4;
            *((A8 << 9) + 0x4f0d20 + eax) = -1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) + 1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) & 0x1f;
            *(A8 * 4 + 0x4f1754) = *(A8 * 4 + 0x4f1754) - 1;
            eax = *(ebp - 4);
        }
    } else {
        eax = eax | -1;
    }
}

/*    Procedure: 0x0044872D - 0x0044882C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004483DA()
 */

L0044872D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(*(A8 * 4 + 0x4f1754) != 0) {
        eax = 0;
        do {
            ecx = A8 << 9;
            if(*(ecx + (eax << 4) + 0x4f0d18) == Ac) {
                break;
            }
            eax = eax + 1;
        } while(eax < 0x20);
        if(eax == 0x20) {
            eax = eax | -1;
        } else {
            while(eax != *(A8 * 4 + 0x4f172c)) {
                ebx = eax - 1 & 0x1f;
                ecx = ebx << 4;
                (save)(A8 << 9) + 0x4f0d18 + ecx;
                eax = eax << 4;
                ecx = (A8 << 9) + 0x4f0d18;
                (restore)esi;
                edi = ecx + eax;
                ecx = 4;
                asm("rep movsd");
                eax = ebx;
            }
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d18 + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d1c + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d24 + ecx) = -1;
            eax = eax << 4;
            *((A8 << 9) + 0x4f0d20 + eax) = -1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) + 1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) & 0x1f;
            *(A8 * 4 + 0x4f1754) = *(A8 * 4 + 0x4f1754) - 1;
            eax = Ac;
        }
    } else {
        eax = eax | -1;
    }
}

/*    Procedure: 0x0044882D - 0x00448882
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0044882D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    if(*(A8 * 4 + 0x4f1754) != 0) {
        edx = 0;
        do {
            eax = A8 << 9;
            eax = eax + (edx << 4) + 0x4f0d18;
            if(Ac == *(eax + 4) && *(eax + 0xc) == A10 && *eax != -1) {
                break;
            }
            edx = edx + 1;
        } while(edx < 0x20);
        eax = edx == 0x20 ? eax | -1 : *eax;
    } else {
        eax = eax | -1;
    }
}

/*    Procedure: 0x00448883 - 0x00448989
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00448883(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(*(A8 * 4 + 0x4f1754) != 0) {
        eax = 0;
        do {
            ecx = A8 << 9;
            ecx = ecx + (eax << 4) + 0x4f0d18;
            if(*ecx != -1) {
                break;
            }
            eax = eax + 1;
        } while(eax < 0x20);
        if(eax == 0x20) {
            eax = eax | -1;
        } else {
            for(*(ebp - 4) = *ecx; eax != *(A8 * 4 + 0x4f172c); eax = ebx) {
                ebx = eax - 1 & 0x1f;
                ecx = ebx << 4;
                (save)(A8 << 9) + 0x4f0d18 + ecx;
                eax = eax << 4;
                ecx = (A8 << 9) + 0x4f0d18;
                (restore)esi;
                edi = ecx + eax;
                ecx = 4;
                asm("rep movsd");
            }
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d18 + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d1c + ecx) = -1;
            ecx = eax << 4;
            *((A8 << 9) + 0x4f0d24 + ecx) = -1;
            eax = eax << 4;
            *((A8 << 9) + 0x4f0d20 + eax) = -1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) + 1;
            *(A8 * 4 + 0x4f172c) = *(A8 * 4 + 0x4f172c) & 0x1f;
            *(A8 * 4 + 0x4f1754) = *(A8 * 4 + 0x4f1754) - 1;
            eax = *(ebp - 4);
        }
    } else {
        eax = eax | -1;
    }
}

/*    Procedure: 0x0044898A - 0x00448A60
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L0044898A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edx = Ac;
    eax = A8;
    if(*(eax * 4 + 0x4f1754) != 0) {
        while(edx != *(eax * 4 + 0x4f172c)) {
            ebx = edx - 1 & 0x1f;
            ecx = ebx << 4;
            (save)(eax << 9) + 0x4f0d18 + ecx;
            edx = edx << 4;
            ecx = (eax << 9) + 0x4f0d18;
            (restore)esi;
            edi = ecx + edx;
            ecx = 4;
            asm("rep movsd");
            edx = ebx;
        }
        ecx = edx << 4;
        *((eax << 9) + 0x4f0d18 + ecx) = -1;
        ecx = edx << 4;
        *((eax << 9) + 0x4f0d1c + ecx) = -1;
        ecx = edx << 4;
        *((eax << 9) + 0x4f0d24 + ecx) = -1;
        edx = edx << 4;
        *((eax << 9) + 0x4f0d20 + edx) = -1;
        *(eax * 4 + 0x4f172c) = *(eax * 4 + 0x4f172c) + 1;
        *(eax * 4 + 0x4f172c) = *(eax * 4 + 0x4f172c) & 0x1f;
        *(eax * 4 + 0x4f1754) = *(eax * 4 + 0x4f1754) - 1;
        eax = eax | -1;
    } else {
        eax = eax | -1;
    }
}

/*    Procedure: 0x00448A61 - 0x00448A61
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448A61()
{



}

/*    Procedure: 0x00448A62 - 0x00448A64
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448A62()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00448A65 - 0x00448A73
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447237()
 */

L00448A65(A8)
/* unknown */ void  A8;
{



    *A8 = 0x4f0cb0;
    return 0x4f0cb0;
}

/*    Procedure: 0x00448A74 - 0x00448A8F
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044ABB2()
 */

L00448A74(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    *L004f0cd8(A8, Ac, A10, A14);
    return 0;
}

/*    Procedure: 0x00448A90 - 0x00448A96
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044ABD7()
 */

L00448A90()
{



    return 0;
}

/*    Procedure: 0x00448A97 - 0x00448A9D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044AC06()
 */

L00448A97()
{



    return 0;
}

/*    Procedure: 0x00448A9E - 0x00448AA4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044AC35()
 */

L00448A9E()
{



    return 0;
}

/*    Procedure: 0x00448AA5 - 0x00448AB3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044AC64()
 */

L00448AA5(A8)
/* unknown */ void  A8;
{



    M004f0cd8 = A8;
    return 0;
}

/*    Procedure: 0x00448AB4 - 0x00448AB4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448AB4()
{



}

/*    Procedure: 0x00448AB5 - 0x00448AB8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448AB5()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x00448AB9 - 0x00448AFD
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410CA8()
 */

L00448AB9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M004f35e0 = Ac;
    M004f35e4 = L0044B7CC();
    eax = A8 * 0xd;
    return L0044AABC( *(eax * 8 + 0x4f099c), *(eax * 8 + 0x4f09a0), M004f35e0, M004f35e4, A8, A10);
}

/*    Procedure: 0x00448AFE - 0x00448BBA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 */

L00448AFE(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    M004f35e0 = Ac;
    M004f35e4 = L0044B7CC();
    if(A10 != 0) {
        ebx = 0;
        do {
            ebx = ebx + 1;
        } while(ebx < 65535);
        ebx = L0044DF6E(0x5dc, 0x448bbb, ebp - 4);
        if(ebx != 0) {
            eax = ebx;
            goto L00448bb5;
        }
        ebx = 0;
        if(0 < A10) {
L00448b56:
            do {
                if(M004f33d0 == 0) {
                    goto L00448b56;
                }
                M004f33d0 = 0;
                esi = M004f35e0;
                M004f35e0 = M004f35e0 + ebx;
                eax = A8 * 0xd;
                L0044AABC( *(eax * 8 + 0x4f099c), *(eax * 8 + 0x4f09a0), M004f35e0, M004f35e4, 1, A8);
                M004f35e0 = esi;
                ebx = ebx + 1;
            } while(ebx < A10);
        }
        L0044E1D7( *(ebp - 4));
    }
    eax = 0;
L00448bb5:
}

/*    Procedure: 0x00448BBB - 0x00448BC2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448BBB()
{



    M004f33d0 = 1;
}

/*    Procedure: 0x00448BC3 - 0x00448BC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448BC3()
{



}

/*    Procedure: 0x00448BC4 - 0x00448BC4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00448BC4()
{



}

/*    Procedure: 0x00448BC5 - 0x00449716
 *    Argument size: 16
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00446A7A()
 *        L0044798D()
 *        L00447A72()
 *        L00447B55()
 *        L00447BBF()
 *        L00447C7C()
 *        L00449BBD()
 *        L0044A9A1()
 */

L00448BC5(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;
    /* unknown */ void  Vffffffff;



    Vfffffffc = 0;
    Vfffffffb = 0xff;
    Vfffffff4 = -1;
    Vfffffffd = *Ac;
    Vffffffff = Vfffffffd & 0xf;
    if(M004f3258 == 0) {
        eax = Ac;
        if(!(eax = ( *eax & 0xf0) - 0xb0)) {
            if(!(al = *(Ac + 1) - 7)) {
                M004f3244 = *Ac;
                M004f3245 = 7;
                eax = *(Ac + 2);
                edx = A8;
                asm("imul dword [edx*4+0x4f3360]");
                eax = eax >> 7;
                edx = M004f335c & 0xff;
                M004f3246 = eax * eax >> 7;
                edx = (A10 << 4) + 0x4f3380;
                *(edx + (Vffffffff & 0xff)) = *(Ac + 2);
                if(*(A8 * 4 + 0x4f0ba4) != 0) {
                    M004f3246 = 0;
                }
            } else {
                M004f3244 = *Ac;
                M004f3245 = *(Ac + 1);
                M004f3246 = *(Ac + 2);
                M004f3247 = *(Ac + 3);
            }
            M004f35e4 = L0044B7CC();
            M004f35e0 = 0x4f3244;
            eax = A10 * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, A14, A10);
        } else {
            M004f35e4 = L0044B7CC();
            M004f35e0 = Ac;
            eax = A10 * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, A14, A10);
        }
        eax = 1;
    } else {
        eax = (A10 << 7) + 0x4f2614 + (A8 << 4);
        al = *(eax + (Vffffffff & 0xff));
        for(Vfffffffe = al; Vfffffffe == 0xff; Vfffffffe = 9) {
            if(Vffffffff != 9) {
                eax = 0;
                do {
                    if(*((A10 << 4) + 0x4f330c + eax) == 0 && eax < 0x10) {
                        eax = eax + 1;
                        continue;
                    }
                    if(eax < 0x10 && *((A10 << 4) + 0x4f28e4 + eax) == 0xff) {
                        goto L00448ddd;
                    }
                    eax = eax + 1;
                } while(eax < 0x10);
                eax = 0;
                do {
                    if(*((A10 << 4) + 0x4f330c + eax) == 0 && eax < 0x10) {
                        eax = eax + 1;
                        continue;
                    }
                    if(eax < 0x10 && *((A10 << 4) + 0x4f2894 + eax) > Vfffffffc && *((A10 << 4) + 0x4f2894 + eax) != 0xff) {
                        Vfffffffc = *((A10 << 4) + 0x4f2894 + eax);
                        Vfffffffb = al;
                    }
                    eax = eax + 1;
                } while(eax < 0x10);
                if(Vfffffffb == 0xff) {
                    goto L004494cc;
                }
                if(*( *(A8 * 4 + 0x4f0c04) + (Vffffffff & 0xff) * 4 + 0x40) >= (Vfffffffc & 0xff)) {
                    goto L00449441;
                }
                eax = (A10 << 7) + 0x4f2614 + (A8 << 4);
                *(eax + (Vffffffff & 0xff)) = Vfffffffb;
                eax = *((A10 << 4) + 0x4f28e4 + (Vfffffffb & 0xff)) & 0xff;
                edx = ( *((A10 << 4) + 0x4f2934 + (Vfffffffb & 0xff)) & 0xff) << 4;
                *((A10 << 7) + 0x4f2614 + edx + eax) = 0xff;
                edx = (A10 << 4) + 0x4f28e4;
                *(edx + (Vfffffffb & 0xff)) = Vffffffff;
                edx = (A10 << 4) + 0x4f2934;
                *(edx + (Vfffffffb & 0xff)) = A8;
                Vfffffffe = Vfffffffb;
                *((A10 << 4) + 0x4f2894 + (Vfffffffb & 0xff)) = *( *(A8 * 4 + 0x4f0c04) + (Vffffffff & 0xff) * 4 + 0x40);
                *((A10 << 4) + 0x4f3380 + (Vfffffffe & 0xff)) = 0x7f;
                M004f3244 = Vfffffffe | 0xb0;
                M004f3245 = 0x7b;
                M004f3246 = 0;
                edi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = 0x4f3244;
                eax = A10 * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                M004f3244 = Vfffffffe | 0xb0;
                M004f3245 = 0x79;
                M004f3246 = 0;
                edi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = 0x4f3244;
                eax = A10 * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                if(*(eax + (Vffffffff & 0xff)) != 0xff) {
                    continue;
                }
                esi = 0;
                do {
                    eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2984 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    if(*(eax + esi + esi * 4) == 0xff) {
                        goto L00449409;
                    }
                    esi = esi + 1;
                } while(esi < 4);
                continue;
L00449409:
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2984 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                *(eax + esi + esi * 4) = 1;
                eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                ecx = esi;
                *(eax + (Vffffffff & 0xff)) = cl;
                continue;
L00448ddd:
                edx = (A10 << 7) + 0x4f2614 + (A8 << 4);
                *(edx + (Vffffffff & 0xff)) = al;
                Vfffffffe = al;
                edx = (A10 << 4) + 0x4f28e4;
                cl = Vffffffff;
                *(edx + eax) = cl;
                *((A10 << 4) + 0x4f2934 + eax) = A8;
                *((A10 << 4) + 0x4f2894 + eax) = *( *(A8 * 4 + 0x4f0c04) + (Vffffffff & 0xff) * 4 + 0x40);
                eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                esi = *(eax + (Vffffffff & 0xff)) & 0xff;
                if(esi == 0xff) {
                    esi = 0;
                    do {
                        eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2984 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                        if(*(eax + esi + esi * 4) == 0xff) {
                            goto L00449168;
                        }
                        esi = esi + 1;
                    } while(esi < 4);
                    continue;
L00449168:
                    eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2984 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    *(eax + esi + esi * 4) = 1;
                    eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                    ecx = esi;
                    *(eax + (Vffffffff & 0xff)) = cl;
                    continue;
                }
                *((A10 << 4) + 0x4f3380 + (Vfffffffe & 0xff)) = 0x7f;
                M004f3244 = Vfffffffe | 0xb0;
                M004f3245 = 0x79;
                M004f3246 = 0;
                edi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = 0x4f3244;
                eax = A10 * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2987 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                if(*(eax + esi + esi * 4) != 0xff) {
                    M004f3244 = Vfffffffe | 0xc0;
                    eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2987 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    M004f3245 = *(eax + esi + esi * 4);
                    edi = 2;
                    M004f35e4 = L0044B7CC();
                    M004f35e0 = 0x4f3244;
                    eax = A10 * 0xd;
                    L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                }
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2985 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                if(*(eax + esi + esi * 4) != 0xff) {
                    M004f3244 = Vfffffffe | 0xe0;
                    M004f3245 = 0;
                    eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2985 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    M004f3246 = *(eax + esi + esi * 4);
                    edi = 2;
                    M004f35e4 = L0044B7CC();
                    M004f35e0 = 0x4f3244;
                    eax = A10 * 0xd;
                    L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                }
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2986 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                if(*(eax + esi + esi * 4) != 0xff) {
                    M004f3244 = Vfffffffe | 0xb0;
                    M004f3245 = 7;
                    eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2986 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    M004f3246 = *(eax + esi + esi * 4);
                    edi = 3;
                    M004f35e4 = L0044B7CC();
                    M004f35e0 = 0x4f3244;
                    eax = A10 * 0xd;
                    L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                }
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2988 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                if(*(eax + esi + esi * 4) == 0xff) {
                    continue;
                }
                M004f3244 = Vfffffffe | 0xb0;
                M004f3245 = 0x40;
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2988 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                M004f3246 = *(eax + esi + esi * 4);
                edi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = 0x4f3244;
                eax = A10 * 0xd;
                eax = L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, edi, A10);
                continue;
            }
            eax = (A10 << 7) + 0x4f2614 + (A8 << 4);
            *(eax + (Vffffffff & 0xff)) = 9;
        }
        *Ac = Vfffffffd & 0xf0 | Vfffffffe;
        goto L004494cc;
L00449441:
        eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
        if(*(eax + (Vffffffff & 0xff)) == 0xff) {
            esi = 0;
            do {
                eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2984 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                if(*(eax + esi + esi * 4) == 0xff) {
                    goto L0044949c;
                }
                esi = esi + 1;
            } while(esi < 4);
            goto L004494cc;
L0044949c:
            eax = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2984 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
            *(eax + esi + esi * 4) = 1;
            eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
            *(eax + (Vffffffff & 0xff)) = esi;
        }
L004494cc:
        if(Vffffffff != 9) {
            if(!(al = (Vfffffffd & 0xf0) - 0xb0)) {
                if(al = al - 0x10) {
                    goto L004495b7;
                }
                if(al = al - 0x20) {
                    goto L004495fc;
                }
            } else {
                eax = Ac;
                if(!(al = *(eax + 1) - 7)) {
                    if(al = al - 0x39) {
                        goto L0044956f;
                    }
                } else {
                    eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                    eax = ( *(eax + (Vffffffff & 0xff)) & 0xff) + ( *(eax + (Vffffffff & 0xff)) & 0xff) * 4;
                    edx = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2986 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    *(edx + eax) = *(Ac + 2);
                    Vfffffff4 = *(Ac + 2) & 0xff;
                    eax = Vfffffffe & 0xff;
                    edx = (A10 << 4) + 0x4f3380;
                    *(edx + eax) = Vfffffff4;
                    goto L00449668;
L0044956f:
                    eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                    eax = ( *(eax + (Vffffffff & 0xff)) & 0xff) + ( *(eax + (Vffffffff & 0xff)) & 0xff) * 4;
                    edx = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2988 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    *(edx + eax) = *(Ac + 2);
                    goto L00449668;
L004495b7:
                    eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                    eax = ( *(eax + (Vffffffff & 0xff)) & 0xff) + ( *(eax + (Vffffffff & 0xff)) & 0xff) * 4;
                    edx = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2987 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    *(edx + eax) = *(Ac + 1);
                    goto L00449668;
L004495fc:
                    eax = (A10 << 7) + 0x4f2fc4 + (A8 << 4);
                    eax = ( *(eax + (Vffffffff & 0xff)) & 0xff) + ( *(eax + (Vffffffff & 0xff)) & 0xff) * 4;
                    edx = ((A10 << 3) + (A10 << 3) * 4) * 8 + 0x4f2985 + ((Vffffffff & 0xff) + (Vffffffff & 0xff) * 4) * 4;
                    *(edx + eax) = *(Ac + 2);
                }
            }
        } else {
            if(Vfffffffd == 0xb9) {
                eax = Ac;
                if(*(eax + 1) == 7) {
                    eax = *(Ac + 2) & 0xff;
                    Vfffffff4 = eax;
                    *((A10 << 4) + 0x4f3389) = Vfffffff4;
                }
            }
        }
L00449668:
        if(Vfffffffe != 0xff) {
            if(Vfffffff4 != -1) {
                if(*(A8 * 4 + 0x4f0ba4) != 0) {
                    *(Ac + 2) = 0;
                } else {
                    eax = *(A8 * 4 + 0x4f3360);
                    asm("imul dword [ebp-0xc]");
                    eax = eax >> 7;
                    edx = M004f335c & 0xff;
                    edx = eax * eax >> 7;
                    *(Ac + 2) = dl;
                }
            }
            M004f35e4 = L0044B7CC();
            M004f35e0 = Ac;
            eax = A10 * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, A14, A10);
            *Ac = Vfffffffd & 0xf0 | Vffffffff;
            if(Vfffffff4 != -1) {
                *(Ac + 2) = Vfffffff4;
            }
            eax = 0;
        } else {
            eax = eax | -1;
        }
    }
}

/*    Procedure: 0x00449717 - 0x00449B5E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004467D4()
 *        L00449BBD()
 */

L00449717()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = 0x4f3244;
    for(*(ebp - 4) = 1; *( *(ebp + 8) * 4 + 0x4f095c) > *(ebp - 4); *(ebp - 4) = *(ebp - 4) + 1) {
        eax = *( *(ebp + 8) * 4 + 0x4f091c);
        ebx = *(eax + *(ebp - 4) * 4);
        if(ebx != -1 && ebx != 0xff) {
            eax = ( *(ebp + 8) << 7) + 0x4f2214;
            *(ebp - 5) = *( *(eax + *(ebp - 4) * 4) + 8);
            if(M004f3258 == 0) {
                goto L0044977f;
            }
            eax = *(ebp + 8) << 4;
            eax = (ebx << 7) + 0x4f2614 + eax;
            *(ebp - 6) = *(eax + ( *(ebp - 5) & 0xff));
            eax = *(ebp + 8) << 4;
            eax = (ebx << 7) + 0x4f2614 + eax;
            *(eax + ( *(ebp - 5) & 0xff)) = 0xff;
            eax = *(ebp + 8) << 4;
            eax = (ebx << 7) + 0x4f2fc4 + eax;
            *(ebp - 7) = *(eax + ( *(ebp - 5) & 0xff));
            eax = *(ebp - 6) & 0xff;
            *((ebx << 4) + 0x4f28e4 + eax) = 0xff;
            eax = *(ebp - 6) & 0xff;
            *((ebx << 4) + 0x4f2934 + eax) = 0xff;
            *edi = *(ebp - 6) | 0xb0;
            *(edi + 1) = 0x7b;
            *(edi + 2) = 0;
            esi = 3;
            M004f35e4 = L0044B7CC();
            M004f35e0 = edi;
            eax = ebx * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
            *edi = *(ebp - 6) | 0xb0;
            *(edi + 1) = 0x79;
            *(edi + 2) = 0;
            esi = 3;
            M004f35e4 = L0044B7CC();
            M004f35e0 = edi;
            eax = ebx * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
            *edi = *(ebp - 6) | 0xe0;
            *(edi + 1) = 0x40;
            *(edi + 2) = 0x40;
            esi = 3;
            M004f35e4 = L0044B7CC();
            M004f35e0 = edi;
            eax = ebx * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
            *edi = *(ebp - 6) | 0xb0;
            *(edi + 1) = 7;
            *(edi + 2) = 0;
            esi = 3;
            M004f35e4 = L0044B7CC();
            M004f35e0 = edi;
            eax = ebx * 0xd;
            L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
            if(*(ebp - 7) != 0xff) {
                eax = ( *(ebp - 5) & 0xff) + ( *(ebp - 5) & 0xff) * 4;
                eax = ((ebx << 3) + (ebx << 3) * 4) * 8 + 0x4f2987 + eax * 4;
                *(eax + ( *(ebp - 7) & 0xff) + ( *(ebp - 7) & 0xff) * 4) = 0xff;
                eax = ( *(ebp - 5) & 0xff) + ( *(ebp - 5) & 0xff) * 4;
                eax = ((ebx << 3) + (ebx << 3) * 4) * 8 + 0x4f2985 + eax * 4;
                *(eax + ( *(ebp - 7) & 0xff) + ( *(ebp - 7) & 0xff) * 4) = 0xff;
                eax = ( *(ebp - 5) & 0xff) + ( *(ebp - 5) & 0xff) * 4;
                eax = ((ebx << 3) + (ebx << 3) * 4) * 8 + 0x4f2986 + eax * 4;
                *(eax + ( *(ebp - 7) & 0xff) + ( *(ebp - 7) & 0xff) * 4) = 0xff;
                eax = ( *(ebp - 5) & 0xff) + ( *(ebp - 5) & 0xff) * 4;
                eax = ((ebx << 3) + (ebx << 3) * 4) * 8 + 0x4f2988 + eax * 4;
                *(eax + ( *(ebp - 7) & 0xff) + ( *(ebp - 7) & 0xff) * 4) = 0xff;
                eax = ( *(ebp - 5) & 0xff) + ( *(ebp - 5) & 0xff) * 4;
                eax = ((ebx << 3) + (ebx << 3) * 4) * 8 + 0x4f2984 + eax * 4;
                *(eax + ( *(ebp - 7) & 0xff) + ( *(ebp - 7) & 0xff) * 4) = 0xff;
                eax = *(ebp + 8) << 4;
                eax = (ebx << 7) + 0x4f2fc4 + eax;
                *(eax + ( *(ebp - 5) & 0xff)) = 0xff;
                goto L00449b3d;
L0044977f:
                *edi = *(ebp - 5) | 0xb0;
                *(edi + 1) = 0x7b;
                *(edi + 2) = 0;
                esi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = edi;
                eax = ebx * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
                *edi = *(ebp - 5) | 0xb0;
                *(edi + 1) = 0x79;
                *(edi + 2) = 0;
                esi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = edi;
                eax = ebx * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
                *edi = *(ebp - 5) | 0xe0;
                *(edi + 1) = 0x40;
                *(edi + 2) = 0x40;
                esi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = edi;
                eax = ebx * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
                *edi = *(ebp - 5) | 0xb0;
                *(edi + 1) = 7;
                *(edi + 2) = 0;
                esi = 3;
                M004f35e4 = L0044B7CC();
                M004f35e0 = edi;
                eax = ebx * 0xd;
                L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, esi, ebx);
            }
        }
L00449b3d:
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
    return 1;
}

/*    Procedure: 0x00449B5F - 0x00449BA5
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00449B5F(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M004f35e4 = L0044B7CC();
    M004f35e0 = Ac;
    eax = A8 * 0xd;
    L0044AABC( *(eax * 8 + 0x4f097c), *(eax * 8 + 0x4f0980), M004f35e0, M004f35e4, A10, A8);
    return 0;
}

/*    Procedure: 0x00449BA6 - 0x00449BB8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00449BA6(A8)
/* unknown */ void  A8;
{



    M004f3258 = A8;
    return M004f3258;
}

/*    Procedure: 0x00449BB9 - 0x00449BB9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00449BB9()
{



}

/*    Procedure: 0x00449BBA - 0x00449BBC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00449BBA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00449BBD - 0x0044A9A0
 *    Argument size: 0
 *    Local size: 28
 *    Save regs size: 12
 */

L00449BBD()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = 0x4f5a38;
    eax = *L004F5A38 & 0xff;
    if(*(eax * 4 + 0x4f0bc4) != 0) {
        eax = *L004F5A38 & 0xff;
        if(*(eax * 4 + 0x4f0b84) == 0) {
            if(*(( *L004F5A38 & 0xff) * 4 + 0x4f4a74) == 0) {
                goto L00449d84;
            }
            eax = *L004F5A38 & 0xff;
            dl = *(eax + 0x4f4a94);
            *(eax + 0x4f4a94) = *(eax + 0x4f4a94) + 0xff;
            if(dl != 0) {
                goto L00449d84;
            }
            *(( *L004F5A38 & 0xff) + 0x4f4a94) = 3;
            *(( *esi & 0xff) * 4 + 0x4f4a74) = *(( *esi & 0xff) * 4 + 0x4f4a74) - 1;
            if(eax = *(( *esi & 0xff) * 4 + 0x4f4a14) - 1) {
                goto L00449d52;
            }
            if(!(eax = eax - 1) && !(eax = eax - 2)) {
                goto L00449d84;
            }
            eax = *(( *esi & 0xff) * 4 + 0x4f4a34);
            *(( *esi & 0xff) * 4 + 0x4f4a54) = *(( *esi & 0xff) * 4 + 0x4f4a54) - eax;
            L00447C7C( *esi & 0xff, *(( *esi & 0xff) * 4 + 0x4f4a54) >> 0x10);
            if(*(( *esi & 0xff) * 4 + 0x4f4a14) & 4 || *(( *esi & 0xff) * 4 + 0x4f4a74) != 0) {
                goto L00449d84;
            }
            eax = *esi & 0xff;
            *(eax * 4 + 0x4f0bc4) = 0;
            L00449717( *esi & 0xff);
            if(*(( *esi & 0xff) * 4 + 0x4f0c24) != -1) {
                L0044E1D7( *(( *esi & 0xff) * 4 + 0x4f0c24));
            }
            *( *(( *esi & 0xff) * 4 + 0x4f0c24) + 0x4f5a28) = 0xff;
            *(( *esi & 0xff) * 4 + 0x4f0c24) = -1;
            ebx = *( *(( *esi & 0xff) * 4 + 0x4f0c04) + 0x380);
            Vfffffff4 = *(( *esi & 0xff) * 4 + 0x4f0c04);
            Vfffffff8 = ebx;
            eax = *esi & 0xff;
            *(eax * 4 + 0x4f0c04) = 0;
            eax = L0044686D( *esi & 0xff, & Vfffffff4);
            if(ebx != 0) {
                eax = *ebx( *esi & 0xff);
                goto L0044a99a;
L00449d52:
                eax = *(( *esi & 0xff) * 4 + 0x4f4a34);
                *(( *esi & 0xff) * 4 + 0x4f4a54) = *(( *esi & 0xff) * 4 + 0x4f4a54) + eax;
                L00447C7C( *esi & 0xff, *(( *esi & 0xff) * 4 + 0x4f4a54) >> 0x10);
L00449d84:
                ebx = 0;
                goto L0044a985;
L00449d8b:
                eax = bl & 0xff;
                *((( *esi & 0xff) << 7) + 0x4f051c + eax * 4) = *((( *esi & 0xff) << 7) + 0x4f051c + eax * 4) + 1;
                eax = bl & 0xff;
                if(*((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) == 0) {
                    goto L0044a984;
                }
                eax = bl & 0xff;
                eax = *((( *esi & 0xff) << 7) + 0x4f011c + eax * 4);
                edx = bl & 0xff;
                if(eax > *((( *esi & 0xff) << 7) + 0x4f051c + edx * 4)) {
                    goto L0044a984;
                }
L00449de8:
                M004f4a10 = 0;
                Vffffffe4 = 1;
                eax = bl & 0xff;
                if(*( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4)) < 0xf0) {
                    eax = bl & 0xff;
                    Vfffffffc = *((( *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4)) & 0xff) >> 4) + 0x4f0be4) & 0xff;
                } else {
                    eax = bl & 0xff;
                    eax = *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4);
                    Vfffffffc = *(( *eax & 0xf) + 0x4f0bf4) & 0xff;
                }
                eax = bl & 0xff;
                if(*( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4)) != 0xff) {
                    goto L00449fc4;
                }
                eax = bl & 0xff;
                if(!(al = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 1) - 0x2f)) {
                    if(al = al - 0x22) {
                        goto L00449fb8;
                    }
                    goto L0044a89d;
                }
                eax = bl & 0xff;
                edx = (( *esi & 0xff) << 7) + 0x4efd1c;
                *(edx + eax * 4) = 0;
                if(*(( *esi & 0xff) * 4 + 0x4f093c) - 1 == 1 && *((( *esi & 0xff) << 7) + 0x4efd1c) != 0) {
                    *(( *esi & 0xff) * 4 + 0x4f093c) = *(( *esi & 0xff) * 4 + 0x4f093c) - 1;
                    eax = ( *esi & 0xff) << 7;
                    *(eax + 0x4efd1c) = 0;
                }
                if(*(( *esi & 0xff) * 4 + 0x4f093c) = *(( *esi & 0xff) * 4 + 0x4f093c) - 1) {
                    goto L00449fac;
                }
                eax = *esi & 0xff;
                *(eax * 4 + 0x4f0bc4) = 0;
                L00449717( *esi & 0xff);
                if(*(( *esi & 0xff) * 4 + 0x4f0c24) != -1) {
                    L0044E1D7( *(( *esi & 0xff) * 4 + 0x4f0c24));
                }
                *( *(( *esi & 0xff) * 4 + 0x4f0c24) + 0x4f5a28) = 0xff;
                *(( *esi & 0xff) * 4 + 0x4f0c24) = -1;
                ebx = *( *(( *esi & 0xff) * 4 + 0x4f0c04) + 0x380);
                Vfffffff4 = *(( *esi & 0xff) * 4 + 0x4f0c04);
                Vfffffff8 = ebx;
                eax = *esi & 0xff;
                *(eax * 4 + 0x4f0c04) = 0;
                eax = L0044686D( *esi & 0xff, & Vfffffff4);
                if(ebx != 0) {
                    eax = *ebx( *esi & 0xff);
                    goto L0044a99a;
L00449fac:
                    Vfffffffc = 3;
                    goto L0044a89d;
L00449fb8:
                    Vfffffffc = 5;
                    goto L0044a89d;
L00449fc4:
                    eax = bl & 0xff;
                    eax = *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4);
                    if(( *eax & 0xf0) == 0xb0) {
                        eax = bl & 0xff;
                        eax = ( *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 1) & 0xff) - 0x67;
                        if(eax > 0x12) {
                            goto L0044a863;
                        }
                        switch(eax) {
                            case 0:
L0044a061:
                                eax = bl & 0xff;
                                eax = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                *( *(( *esi & 0xff) * 4 + 0x4f0c04) + eax + 0x300) = 0;
                                goto L0044a89d;
                            case 1:
                                eax = bl & 0xff;
                                eax = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                *( *(( *esi & 0xff) * 4 + 0x4f0c04) + eax + 0x300) = 1;
                                goto L0044a89d;
                            case 2:
                                goto L0044a863;
                            case 3:
                                goto L0044a863;
                            case 4:
                                goto L0044a863;
                            case 5:
                                goto L0044a89d;
                            case 6:
                                eax = bl & 0xff;
                                Vfffffff0 = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                edi = 0;
                                goto L0044a0de;
                            case 7:
                                goto L0044a89d;
                            case 8:
L0044a139:
                                eax = bl & 0xff;
                                Vfffffff0 = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                edi = 0;
                                goto L0044a156;
                            case 9:
                                goto L0044a139;
                            case 0xa:
                                goto L0044a89d;
                            case 0xb:
                                eax = bl & 0xff;
                                Vfffffff0 = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff | 0x80;
                                edi = 0;
                                goto L0044a368;
                            case 0xc:
                                eax = bl & 0xff;
                                Vfffffff0 = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                edi = 0;
                                goto L0044a52c;
                            case 0xd:
                                goto L0044a89d;
                            case 0xe:
L0044a587:
                                eax = bl & 0xff;
                                Vfffffff0 = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                edi = 0;
                                goto L0044a5a4;
                            case 0xf:
                                goto L0044a587;
                            case 0x10:
                                goto L0044a6d5;
                            case 0x11:
                                goto L0044a89d;
                            case 0x12:
                                eax = bl & 0xff;
                                Vfffffff0 = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                edi = 0;
                                goto L0044a77e;
                        }
                        goto L0044a061;
L0044a0de:
                        eax = bl & 0xff;
                        eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                        if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                            edi = edi + 1;
                            goto L0044a0de;
                        }
                        eax = bl & 0xff;
                        al = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 6);
                        edx = bl & 0xff;
                        edx = *((( *esi & 0xff) << 7) + 0x4f35f0 + edx * 4);
                        *(edx + (edi + edi * 2) * 8 + 6) = al;
                        goto L0044a89d;
L0044a156:
                        eax = bl & 0xff;
                        eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                        if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                            edi = edi + 1;
                            goto L0044a156;
                        }
                        eax = bl & 0xff;
                        eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                        Vffffffec = *(eax + (edi + edi * 2) * 8 + 6) & 0xff;
                        if(Vffffffec != 0xff && Vffffffec != 0) {
                            eax = bl & 0xff;
                            eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                            *(eax + (edi + edi * 2) * 8 + 6) = *(eax + (edi + edi * 2) * 8 + 6) - 1;
                            Vffffffec = Vffffffec - 1;
                        }
                        eax = *esi & 0xff;
                        if(*(eax * 4 + 0x4f3a10) != 0) {
                            M004f4a10 = 1;
                            al = Vffffffec;
                            if(*( *(( *esi & 0xff) * 4 + 0x4f3a10))( *esi & 0xff, ebx, Vfffffff0, eax) == 0) {
                                Vffffffec = 0;
                            }
                            if(M004f4a10 == 0) {
                                Vffffffe4 = 0;
                                Vfffffffc = 0;
                            } else {
                                M004f4a10 = 0;
                            }
                        }
                        if(Vffffffec != 0) {
                            Vffffffe8 = 1;
                            goto L0044a328;
L0044a234:
                            eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                            if(*(eax + Vffffffe8 * 4) != 0) {
                                edi = 0;
L0044a24f:
                                eax = (( *esi & 0xff) << 7) + 0x4f35f0;
                                eax = *(eax + Vffffffe8 * 4);
                                if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                                    edi = edi + 1;
                                    goto L0044a24f;
                                }
                                eax = (( *esi & 0xff) << 7) + 0x4f35f0;
                                eax = *(eax + Vffffffe8 * 4);
                                eax = *(eax + (edi + edi * 2) * 8) + 0xc;
                                edx = (( *esi & 0xff) << 7) + 0x4f2214;
                                edx = *(edx + Vffffffe8 * 4) + eax;
                                eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                *(eax + Vffffffe8 * 4) = edx;
                                eax = ( *esi & 0xff) << 7;
                                eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                Vfffffffc = L004469B4( *(eax + Vffffffe8 * 4), eax + (Vffffffe8 << 2) + 0x4f011c);
                                eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                *(eax + Vffffffe8 * 4) = *(eax + Vffffffe8 * 4) + Vfffffffc;
                                eax = (( *esi & 0xff) << 7) + 0x4f051c;
                                *(eax + Vffffffe8 * 4) = 0;
                                Vffffffe4 = 0;
                                L0044A9A1( *esi & 0xff, Vffffffe8, edi);
                            }
                            Vffffffe8 = Vffffffe8 + 1;
L0044a328:
                            if(*(( *esi & 0xff) * 4 + 0x4f095c) > Vffffffe8) {
                                goto L0044a234;
                            }
                            Vfffffffc = 0;
                            goto L0044a89d;
L0044a368:
                            eax = bl & 0xff;
                            eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                            if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                                edi = edi + 1;
                                goto L0044a368;
                            }
                            Vffffffec = 1;
                            eax = *esi & 0xff;
                            if(*(eax * 4 + 0x4f39f0) != 0) {
                                M004f4a10 = 1;
                                if(*( *(( *esi & 0xff) * 4 + 0x4f39f0))( *esi & 0xff, ebx, Vfffffff0) == 0) {
                                    Vffffffec = 0;
                                }
                                if(M004f4a10 == 0) {
                                    Vffffffe4 = 0;
                                    Vfffffffc = 0;
                                } else {
                                    M004f4a10 = 0;
                                }
                            }
                            if(Vffffffec != 0) {
                                Vffffffe8 = 1;
                                goto L0044a4f1;
L0044a3fd:
                                eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                if(*(eax + Vffffffe8 * 4) != 0) {
                                    edi = 0;
L0044a418:
                                    eax = (( *esi & 0xff) << 7) + 0x4f35f0;
                                    eax = *(eax + Vffffffe8 * 4);
                                    if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                                        edi = edi + 1;
                                        goto L0044a418;
                                    }
                                    eax = (( *esi & 0xff) << 7) + 0x4f35f0;
                                    eax = *(eax + Vffffffe8 * 4);
                                    eax = *(eax + (edi + edi * 2) * 8) + 0xc;
                                    edx = (( *esi & 0xff) << 7) + 0x4f2214;
                                    edx = *(edx + Vffffffe8 * 4) + eax;
                                    eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                    *(eax + Vffffffe8 * 4) = edx;
                                    eax = ( *esi & 0xff) << 7;
                                    eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                    Vfffffffc = L004469B4( *(eax + Vffffffe8 * 4), eax + (Vffffffe8 << 2) + 0x4f011c);
                                    eax = (( *esi & 0xff) << 7) + 0x4efd1c;
                                    *(eax + Vffffffe8 * 4) = *(eax + Vffffffe8 * 4) + Vfffffffc;
                                    eax = (( *esi & 0xff) << 7) + 0x4f051c;
                                    *(eax + Vffffffe8 * 4) = 0;
                                    Vffffffe4 = 0;
                                    L0044A9A1( *esi & 0xff, Vffffffe8, edi);
                                }
                                Vffffffe8 = Vffffffe8 + 1;
L0044a4f1:
                                if(*(( *esi & 0xff) * 4 + 0x4f095c) > Vffffffe8) {
                                    goto L0044a3fd;
                                }
                                Vfffffffc = 0;
                                goto L0044a89d;
L0044a52c:
                                eax = bl & 0xff;
                                eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                                    edi = edi + 1;
                                    goto L0044a52c;
                                }
                                eax = bl & 0xff;
                                al = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 6);
                                edx = bl & 0xff;
                                edx = *((( *esi & 0xff) << 7) + 0x4f35f0 + edx * 4);
                                *(edx + (edi + edi * 2) * 8 + 6) = al;
                                goto L0044a89d;
L0044a5a4:
                                eax = bl & 0xff;
                                eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                                    edi = edi + 1;
                                    goto L0044a5a4;
                                }
                                eax = bl & 0xff;
                                eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                Vffffffec = *(eax + (edi + edi * 2) * 8 + 6) & 0xff;
                                if(Vffffffec != 0xff && Vffffffec != 0) {
                                    eax = bl & 0xff;
                                    eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                    *(eax + (edi + edi * 2) * 8 + 6) = *(eax + (edi + edi * 2) * 8 + 6) - 1;
                                    Vffffffec = Vffffffec - 1;
                                }
                                eax = *esi & 0xff;
                                if(*(eax * 4 + 0x4f3a10) != 0) {
                                    M004f4a10 = 1;
                                    al = Vffffffec;
                                    if(*( *(( *esi & 0xff) * 4 + 0x4f3a10))( *esi & 0xff, ebx, Vfffffff0, eax) == 0) {
                                        Vffffffec = 0;
                                    }
                                    if(M004f4a10 == 0) {
                                        Vfffffffc = 0;
                                    } else {
                                        M004f4a10 = 0;
                                    }
                                }
                                if(Vffffffec != 0) {
                                    eax = bl & 0xff;
                                    eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                    eax = *(eax + (edi + edi * 2) * 8) + 0xc;
                                    edx = bl & 0xff;
                                    edx = *((( *esi & 0xff) << 7) + 0x4f2214 + edx * 4) + eax;
                                    eax = bl & 0xff;
                                    *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) = edx;
                                    L0044A9A1( *esi & 0xff, bl & 0xff, edi);
                                    Vfffffffc = 0;
                                    goto L0044a89d;
L0044a6d5:
                                    eax = bl & 0xff;
                                    Vffffffec = *( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + 2) & 0xff;
                                    eax = *esi & 0xff;
                                    edx = eax;
                                    eax = ((eax << 7) - edx) * 4 + 0x4f3a30;
                                    if(*(eax + Vffffffec * 4) != 0) {
                                        M004f4a10 = 1;
                                        eax = *esi & 0xff;
                                        edx = eax;
                                        eax = ((eax << 7) - edx) * 4 + 0x4f3a30;
                                        *( *(eax + Vffffffec * 4))( *esi & 0xff, ebx, Vffffffec);
                                        if(M004f4a10 == 0) {
                                            Vffffffe4 = 0;
                                            Vfffffffc = 0;
                                        } else {
                                            M004f4a10 = 0;
                                            goto L0044a89d;
L0044a77e:
                                            eax = bl & 0xff;
                                            eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                            if(( *(eax + (edi + edi * 2) * 8 + 4) & 0xff) != Vfffffff0) {
                                                edi = edi + 1;
                                                goto L0044a77e;
                                            }
                                            Vffffffec = 1;
                                            eax = *esi & 0xff;
                                            if(*(eax * 4 + 0x4f39f0) != 0) {
                                                M004f4a10 = 1;
                                                if(*( *(( *esi & 0xff) * 4 + 0x4f39f0))( *esi & 0xff, ebx, Vfffffff0) == 0) {
                                                    Vffffffec = 0;
                                                }
                                                if(M004f4a10 == 0) {
                                                    Vfffffffc = 0;
                                                } else {
                                                    M004f4a10 = 0;
                                                }
                                            }
                                            if(Vffffffec != 0) {
                                                eax = bl & 0xff;
                                                eax = *((( *esi & 0xff) << 7) + 0x4f35f0 + eax * 4);
                                                eax = *(eax + (edi + edi * 2) * 8) + 0xc;
                                                edx = bl & 0xff;
                                                edx = *((( *esi & 0xff) << 7) + 0x4f2214 + edx * 4) + eax;
                                                eax = bl & 0xff;
                                                *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) = edx;
                                                L0044A9A1( *esi & 0xff, bl & 0xff, edi);
                                                Vfffffffc = 0;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else {
L0044a863:
                        if(bl != 0) {
                            eax = bl & 0xff;
                            eax = bl & 0xff;
                            L00448BC5( *esi & 0xff, *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4), *( *(( *esi & 0xff) * 4 + 0x4f091c) + eax * 4), Vfffffffc);
                        }
                    }
L0044a89d:
                    if(M004f4a10 == 0) {
                        eax = bl & 0xff;
                        edx = (( *esi & 0xff) << 7) + 0x4f051c;
                        *(edx + eax * 4) = 0;
                    }
                    eax = bl & 0xff;
                    if(*((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) != 0) {
                        eax = bl & 0xff;
                        eax = *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + Vfffffffc;
                        edx = bl & 0xff;
                        *((( *esi & 0xff) << 7) + 0x4efd1c + edx * 4) = eax;
                        if(Vffffffe4 != 0) {
                            eax = ( *esi & 0xff) << 7;
                            eax = bl & 0xff;
                            Vfffffffc = L004469B4( *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4), eax + ((bl & 0xff) << 2) + 0x4f011c);
                            eax = bl & 0xff;
                            eax = *((( *esi & 0xff) << 7) + 0x4efd1c + eax * 4) + Vfffffffc;
                            edx = bl & 0xff;
                            *((( *esi & 0xff) << 7) + 0x4efd1c + edx * 4) = eax;
                        }
                        eax = bl & 0xff;
                        if(*((( *esi & 0xff) << 7) + 0x4f011c + eax * 4) == 0) {
                            goto L00449de8;
                        }
                    }
L0044a984:
                    ebx = ebx + 1;
L0044a985:
                    eax = bl & 0xff;
                    if(eax < *(( *esi & 0xff) * 4 + 0x4f095c)) {
                        goto L00449d8b;
                    }
                }
            }
        }
    }
L0044a99a:
}

/*    Procedure: 0x0044A9A1 - 0x0044AABA
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00446BAD()
 *        L00449BBD()
 */

L0044A9A1(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff5;
    /* unknown */ void  Vfffffff6;



    if(*( *(A8 * 4 + 0x4f0c04) + 0x36c) != 0) {
        Vfffffff4 = *( *((A8 << 7) + 0x4efd1c + Ac * 4)) & 0xf | 0xc0;
        Vfffffff5 = *( *((A8 << 7) + 0x4f35f0 + Ac * 4) + (A10 + A10 * 2) * 8 + 5);
        L00448BC5(A8, & Vfffffff4, *( *(A8 * 4 + 0x4f091c) + Ac * 4), 2);
    }
    Vfffffff4 = *( *((A8 << 7) + 0x4efd1c + Ac * 4)) & 0xf | 0xb0;
    for(esi = 0; 1; esi = esi + 2) {
        eax = *( *((A8 << 7) + 0x4f35f0 + Ac * 4) + (A10 + A10 * 2) * 8 + 7) & 0xff;
        if(esi >= eax) {
            break;
        }
        Vfffffff5 = *( *( *((A8 << 7) + 0x4f35f0 + Ac * 4) + (A10 + A10 * 2) * 8 + 8) + esi);
        Vfffffff6 = *( *( *((A8 << 7) + 0x4f35f0 + Ac * 4) + (A10 + A10 * 2) * 8 + 8) + esi + 1);
        if(*( *(A8 * 4 + 0x4f0c04) + (Vfffffff5 & 0xff) + 0x300) != 0) {
            L00448BC5(A8, & Vfffffff4, *( *(A8 * 4 + 0x4f091c) + Ac * 4), 3);
        }
    }
}

/*    Procedure: 0x0044AABB - 0x0044AABB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AABB()
{



}

/*    Procedure: 0x0044AABC - 0x0044AAE8
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00447237()
 *        L0044755E()
 *        L00447612()
 *        L00448AB9()
 *        L00448AFE()
 *        L00448BC5()
 *        L00449717()
 *        L00449B5F()
 */

L0044AABC(A8, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8(A10, A14, A18, A1c);
}

/*    Procedure: 0x0044AAE9 - 0x0044AB1D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L0044AAE9(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 0;
    asm("lfs edi,[ebp+0x10]");
    eax = A8();
    (save)ds;
    asm("les edi,[ebp+0x18]");
    asm("lds esi,[ebp+0x10]");
    esi = edx;
    ecx = 0x40;
    asm("cld");
    asm("rep movsb");
    (restore)ds;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044AB1E - 0x0044AB65
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00447237()
 */

L0044AB1E(A8, Ac, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 1;
    asm("lfs edi,[ebp+0x10]");
    A8();
    esi = edi;
    es = ds;
    edi = A18;
    ecx = 0xd;
    eax = *fs:esi];
    *( *(es + edi)) = eax;
    edi = edi + 4;
    *( *(es + edi)) = Ac;
    edi = edi + 4;
    esi = esi + 8;
    asm("loop 0x44ab42");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044AB66 - 0x0044AB8F
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00447237()
 */

L0044AB66(A8, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = A18;
    asm("lfs edi,[ebp+0x10]");
    eax = A8();
    *A1c = eax;
    *(A1c + 4) = dx;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return *A1c;
}

/*    Procedure: 0x0044AB90 - 0x0044ABA9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004476EF()
 */

L0044AB90(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8(es, gs, fs);
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044ABAA - 0x0044ABAB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ABAA()
{



    asm("int3");
}

/*    Procedure: 0x0044ABAC - 0x0044ABB1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ABAC()
{



    es = ds;
    return ds;
}

/*    Procedure: 0x0044ABB2 - 0x0044ABD6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ABB2()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    L00448A74( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18));
    asm("retf");
}

/*    Procedure: 0x0044ABD7 - 0x0044AC05
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ABD7()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    L00448A90( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AC06 - 0x0044AC34
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AC06()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    L00448A97( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AC35 - 0x0044AC63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AC35()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    L00448A9E( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AC64 - 0x0044AC92
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AC64()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    L00448AA5( *(ebp + 0xc));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AC93 - 0x0044ACC1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AC93()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    L00447EA0( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044ACC2 - 0x0044ACF0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ACC2()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    L0044819A( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044ACF1 - 0x0044AD1F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ACF1()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    L00448280( *(ebp + 0xc));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AD20 - 0x0044AD4E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AD20()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    L004482D0( *(ebp + 0xc));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AD4F - 0x0044AD7D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AD4F()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    L004482EA( *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14));
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AD7E - 0x0044ADA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AD7E()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    (save) *(ebp + 0xc);
    esp = esp + 0x10;
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044ADA8 - 0x0044ADD1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ADA8()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    (save) *(ebp + 0xc);
    esp = esp + 0x10;
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044ADD2 - 0x0044ADFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ADD2()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    (save) *(ebp + 0xc);
    esp = esp + 0x10;
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044ADFC - 0x0044AE25
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ADFC()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    (save) *(ebp + 0xc);
    esp = esp + 0x10;
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AE26 - 0x0044AE4F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AE26()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    (save) *(ebp + 0x18);
    (save) *(ebp + 0x14);
    (save) *(ebp + 0x10);
    (save) *(ebp + 0xc);
    esp = esp + 0x10;
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044AE50 - 0x0044AE50
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044AE50()
{



}

/*    Procedure: 0x0044AE51 - 0x0044AE91
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00410CA8()
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L00446CE5()
 *        L0044C199()
 *        L0044F9A0()
 *        L0044FCE0()
 *        L00459C38()
 *        L0046FDF3()
 *        L00470837()
 */

L0044AE51(A8, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    bx = ds;
    ax = 6;
    asm("int 0x31");
    ecx = ecx << 0x10;
    ebx = dx + A8 >> 0x10;
    ax = 0x600;
    asm("int 0x31");
    eax = 0;
    asm("setc al");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044AE92 - 0x0044AED2
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00411348()
 *        L00446F08()
 *        L0044790A()
 *        L0044BBF0()
 *        L0044BE3C()
 *        L0044C31A()
 *        L0044D064()
 *        L0044FA8C()
 */

L0044AE92(A8, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    bx = ds;
    ax = 6;
    asm("int 0x31");
    ecx = ecx << 0x10;
    ebx = dx + A8 >> 0x10;
    ax = 0x601;
    asm("int 0x31");
    eax = 0;
    asm("setc al");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044AED3 - 0x0044AF04
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 */

L0044AED3(A8, Aa, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Aa;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x600;
    asm("int 0x31");
    eax = 0;
    asm("setc al");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044AF05 - 0x0044AF36
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 16
 */

L0044AF05(A8, Aa, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Aa;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x601;
    asm("int 0x31");
    eax = 0;
    asm("setc al");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044AF37 - 0x0044B03A
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 */

L0044AF37(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x500;
    es = ds;
    edi = 0x4f4d32;
    asm("int 0x31");
    ax = 0;
    cx = 1;
    asm("int 0x31");
    >= ? L0044af70 : ;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return -1;
    (save)eax;
    M004f4d14 = ax;
    (save)eax;
    bx = ax;
    ax = 8;
    cx = 0;
    edx = A8;
    asm("int 0x31");
    (restore)eax;
    >= ? L0044af9f : ;
    (restore)eax;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return -1;
    ax = 0x501;
    Ac = 0;
    asm("int 0x31");
    if(!(cx = A8 + 0x50)) {
        (restore)eax;
        (restore)es;
        (restore)gs;
        (restore)fs;
        return -1;
    }
    (save)Ac;
    *Ac = si;
    *(Ac + 2) = di;
    (restore)Ac;
    eax = si << 0x10;
    L0044B809(di, A8);
    (restore)eax;
    (save)eax;
    A14 = A10;
    *A14 = cx;
    *(A14 + 2) = bx;
    dx = cx;
    cx = bx;
    bx = ax;
    ax = 7;
    asm("int 0x31");
    ecx = M004f4d14 & 65535;
    asm("lar ecx,ecx");
    cx = ecx >> 8 | 16384;
    bx = M004f4d14;
    ax = 9;
    asm("int 0x31");
    (restore)eax;
    edx = ax & 65535;
    *A14 = 0;
    *(A14 + 4) = edx;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return 0;
}

/*    Procedure: 0x0044B03B - 0x0044B07A
 *    Argument size: 0
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L0044790A()
 *        L0044BBF0()
 *        L0044BE3C()
 *        L0044D064()
 */

L0044B03B()
{



    ax = ds;
    gs = eax;
    (restore)eax;
    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    if(*(ebp + 0x10) != 0) {
        si = *(ebp + 0x10);
        di = *(ebp + 0x12);
        ax = 0x502;
        asm("int 0x31");
    }
    ax = 1;
    bx = *(ebp + 0xc);
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
}

/*    Procedure: 0x0044B07B - 0x0044B0DF
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 */

L0044B07B(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0;
    cx = 1;
    asm("int 0x31");
    (save)eax;
    (save)eax;
    (save)eax;
    (save)eax;
    bx = Ac;
    ax = 6;
    asm("int 0x31");
    (restore)ebx;
    ax = 7;
    asm("int 0x31");
    edx = edx << (Ac & 65535);
    ax = 8;
    (restore)ebx;
    ecx = 0;
    asm("int 0x31");
    ax = 9;
    (restore)ebx;
    asm("lar ecx,ebx");
    cx = ecx >> 8 | 16392;
    asm("int 0x31");
    (restore)edx;
    *A10 = 0;
    *(A10 + 4) = edx;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return 0;
}

/*    Procedure: 0x0044B0E0 - 0x0044B10E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B0E0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    esi = A8;
    asm("les edi,[ebp+0xc]");
    ecx = 0x20;
    *esi = edi;
    *(esi + 4) = es;
    edi = edi + 0x6c;
    esi = esi + 8;
    asm("loop 0x44b0f7");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B10F - 0x0044B144
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CCB8()
 */

L0044B10F(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 0x100 & 65535;
    ebx = A8 + 0x100;
    asm("int 0x31");
    eax = eax << 4;
    *Ac = eax;
    *A10 = dx;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return *Ac;
}

/*    Procedure: 0x0044B145 - 0x0044B16D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044CB86()
 */

L0044B145()
{



    ax = ds;
    gs = eax;
    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)gs;
    eax = 0x101 & 65535;
    edx = *(ebp + 8);
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
}

/*    Procedure: 0x0044B16E - 0x0044B1A9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L0044B16E(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 8;
    asm("lfs edi,[ebp+0x10]");
    dx = M004f4d20;
    eax = A8();
    (save)ds;
    asm("les edi,[ebp+0x18]");
    asm("lds esi,[ebp+0x10]");
    esi = edx;
    ecx = 0x6a;
    asm("cld");
    asm("rep movsb");
    (restore)ds;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B1AA - 0x0044B1FC
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CEF5()
 */

L0044B1AA(A8, A18)
/* unknown */ void  A8;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 8;
    asm("lfs edi,[ebp+0x10]");
    dx = M004f4d20;
    eax = A8();
    (save)ds;
    (save)es;
    es = ds;
    edi = A18;
    asm("lds esi,[ebp+0x10]");
    esi = edx;
    ecx = 0x6a;
    asm("cld");
    asm("rep movsb");
    edi = A18;
    *( *(es + edi + 0x44)) = ds;
    *( *(es + edi + 0x4c)) = ds;
    *( *(es + edi + 0x54)) = ds;
    *( *(es + edi + 0x5c)) = ds;
    (restore)es;
    (restore)ds;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B1FD - 0x0044B21F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CB86()
 */

L0044B1FD(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 5;
    asm("lfs edi,[ebp+0x10]");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B220 - 0x0044B242
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D0D8()
 *        L0044D43E()
 *        L0044D609()
 */

L0044B220(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 0;
    asm("lfs edi,[ebp+0x10]");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B243 - 0x0044B286
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D7A6()
 */

L0044B243(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 1;
    asm("lfs edi,[ebp+0x10]");
    eax = A8();
    M004f4d22 = ax;
    al = ch;
    asm("cbw");
    M004f4d2a = ax;
    al = cl;
    asm("cbw");
    M004f4d26 = ax;
    M004f4d2e = dx;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B287 - 0x0044B2D2
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D0D8()
 *        L0044D2E1()
 *        L0044D43E()
 *        L0044D609()
 */

L0044B287(A8, A18)
/* unknown */ void  A8;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)es;
    eax = 2;
    asm("lfs edi,[ebp+0x10]");
    eax = A8();
    (save)ds;
    edi = A18;
    es = ds;
    asm("lds esi,[ebp+0x10]");
    esi = edx;
    ecx = 0x6a;
    asm("cld");
    asm("rep movsb");
    edi = A18;
    *( *(es + edi + 0x44)) = ds;
    *( *(es + edi + 0x4c)) = ds;
    *( *(es + edi + 0x54)) = ds;
    *( *(es + edi + 0x5c)) = ds;
    (restore)ds;
    (restore)es;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B2D3 - 0x0044B302
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D83B()
 */

L0044B2D3(A8, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = A14;
    ch = al;
    eax = 3;
    asm("lfs edi,[ebp+0x1c]");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B303 - 0x0044B325
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CB86()
 */

L0044B303(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = 1;
    asm("lfs edi,[ebp+0x10]");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B326 - 0x0044B378
 *    Argument size: 40
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B326(A8, Ac, A14, A20, A24, A28, A2c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("lfs edi,[ebp+0x10]");
    eax = 0xa;
    asm("les edi,[ebp+0x18]");
    A2c = A28;
    gs = ds;
    eax = A8();
    asm("cli");
    *A2c = edi;
    *(A2c + 8) = A20;
    *(A2c + 0x10) = esi;
    *(A2c + 4) = Ac;
    *(A2c + 0xc) = A14;
    *(A2c + 0x14) = *(A2c + 0xc);
    asm("sti");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B379 - 0x0044B3AD
 *    Argument size: 40
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B379(A8, A18, A1c, A20, A2c)
/* unknown */ void  A8;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A2c;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("lfs edi,[ebp+0x10]");
    eax = 0;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B3AE - 0x0044B3D6
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B3AE(A8, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("lfs edi,[ebp+0x10]");
    eax = 4;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B3D7 - 0x0044B3FC
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B3D7(A8, A18)
/* unknown */ void  A8;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("lfs edi,[ebp+0x10]");
    eax = 2;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B3FD - 0x0044B423
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B3FD(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("lfs edi,[ebp+0x10]");
    eax = 3;
    bx = 8;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B424 - 0x0044B44D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L0044B424(A14)
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x1600;
    asm("int 0x2f");
    if(ax == 0xa03) {
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B44E - 0x0044B482
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 *        L0044D83B()
 */

L0044B44E(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x1600;
    asm("int 0x2f");
    if(al == 3) {
        ah = 0x81;
        al = 0xb;
        dx = 0;
        asm("int 0x4b");
        ax = 0;
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B483 - 0x0044B4B7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CB86()
 *        L0044D83B()
 */

L0044B483(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x1600;
    asm("int 0x2f");
    if(al == 3) {
        ah = 0x81;
        al = 0xc;
        dx = 0;
        asm("int 0x4b");
        ax = 0;
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B4B8 - 0x0044B4F6
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D0D8()
 *        L0044D43E()
 *        L0044D609()
 */

L0044B4B8(A8, A14)
/* unknown */ void  A8;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("lfs edi,[ebp+0x10]");
    eax = 4;
    eax = A8();
    M004f4c78 = esi;
    M004f4c80 = edi;
    M004f4c7c = A14;
    M004f4c84 = M004f4c7c;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return M004f4c84;
}

/*    Procedure: 0x0044B4F7 - 0x0044B540
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D0D8()
 *        L0044D43E()
 *        L0044D609()
 */

L0044B4F7(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)ds;
    es = ds;
    edi = 0x4f4c28;
    asm("lds esi,[0x4f4c78]");
    esi = *(esi + A8 * 4);
    if(esi == -1) {
        eax = 0;
        (restore)ds;
    } else {
        ecx = 0x50;
        asm("cld");
        asm("repne movsb");
        (restore)ds;
        eax = 0x4f4c28;
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B541 - 0x0044B575
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044D0D8()
 *        L0044D43E()
 *        L0044D609()
 */

L0044B541(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("les esi,[0x4f4c80]");
    Ac = A8;
    ebx = Ac;
    Ac = Ac << 1;
    ebx = (ebx << 2) + Ac;
    *( *(es + esi + ebx)) = Ac;
    *( *(es + esi + ebx + 4)) = ds;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B576 - 0x0044B5AA
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B576(A8, A18)
/* unknown */ void  A8;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)esi;
    (save)es;
    ax = 0xb;
    asm("lfs edi,[ebp+0x20]");
    esi = A18();
    es = edx;
    ax = 0xc;
    asm("lfs edi,[ebp+0x10]");
    (restore)es;
    (restore)esi;
    (restore)es;
    (restore)gs;
    (restore)fs;
    return A8();
}

/*    Procedure: 0x0044B5AB - 0x0044B5D5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 */

L0044B5AB()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x500;
    asm("int 0x31");
    es = ds;
    edi = 0x4f4c88;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return M004f4c88;
}

/*    Procedure: 0x0044B5D6 - 0x0044B5F2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CB86()
 *        L0044CCB8()
 */

L0044B5D6()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x1600;
    asm("int 0x2f");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B5F3 - 0x0044B633
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CD6A()
 *        L0044CE25()
 */

L0044B5F3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x100;
    asm("int 0x31");
    >= ? L0044b618 : ;
    eax = 1;
    goto L0044b629;
    *Ac = dx;
    *A10 = ax;
    eax = 0;
L0044b629:
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B634 - 0x0044B658
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CD6A()
 *        L0044CE25()
 */

L0044B634(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x101;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return 0;
}

/*    Procedure: 0x0044B659 - 0x0044B6C4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CD6A()
 */

L0044B659(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    esi = 0x4f4cc4;
    *L004F4CE0 = 33031;
    *L004F4CD8 = 0;
    *L004F4CE6 = A8;
    *L004F4CC4 = 0;
    ax = 0x300;
    bl = 0x4b;
    bh = 0;
    cx = 0;
    edi = 0x4f4cc4;
    es = ds;
    asm("int 0x31");
    eax = !( *L004F4CE4 = *L004F4CE4 & 1) ? 0 : 1;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B6C5 - 0x0044B711
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CE25()
 */

L0044B6C5(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    *L004F4CE0 = 33032;
    *L004F4CD8 = 0;
    *L004F4CE6 = A8;
    *L004F4CC4 = 0;
    ax = 0x300;
    bl = 0x4b;
    bh = 0;
    cx = 0;
    edi = 0x4f4cc4;
    es = ds;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B712 - 0x0044B7AA
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CD6A()
 */

L0044B712(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0x800;
    bx = Aa;
    cx = A8;
    si = 0;
    di = 16384;
    asm("int 0x31");
    M004f4d1c = cx;
    M004f4d1e = bx;
    ax = 0;
    cx = 1;
    asm("int 0x31");
    M004f4d18 = ax;
    ax = 7;
    bx = M004f4d18;
    cx = M004f4d1e;
    dx = M004f4d1c;
    asm("int 0x31");
    ax = 8;
    bx = M004f4d18;
    cx = 65535;
    dx = 65535;
    asm("int 0x31");
    ax = 9;
    ecx = ds & 65535;
    asm("lar ecx,ecx");
    ecx = ecx >> 8;
    bx = M004f4d18;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
    return M004f4d18;
}

/*    Procedure: 0x0044B7AB - 0x0044B7CB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CE25()
 */

L0044B7AB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 1;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B7CC - 0x0044B7CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447612()
 *        L00448AB9()
 *        L00448AFE()
 *        L00448BC5()
 *        L00449717()
 *        L00449B5F()
 */

L0044B7CC()
{



    return ds;
}

/*    Procedure: 0x0044B7D0 - 0x0044B7D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044712B()
 */

L0044B7D0()
{



    return cs;
}

/*    Procedure: 0x0044B7D4 - 0x0044B808
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 */

L0044B7D4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)ds;
    ax = A10;
    ds = eax;
    ax = 16128;
    asm("clc");
    asm("int 0x21");
    (restore)ds;
    *A18 = eax;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B809 - 0x0044B85C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044AF37()
 */

L0044B809(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    eax = (Ac >> 0xd) + 1;
    ecx = eax;
    ebx = 0;
    edx = 0x4f4d62;
    es = ds;
    (save)ecx;
    ax = 0x506;
    ecx = 1;
    asm("int 0x31");
    M004f4d62 = M004f4d62 | 8;
    ax = 0x507;
    ecx = 1;
    asm("int 0x31");
    ebx = ebx + 0x1000;
    (restore)ecx;
    asm("loop 0x44b82a");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B85D - 0x0044B87F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044D0D8()
 *        L0044D2E1()
 *        L0044D43E()
 *        L0044D609()
 */

L0044B85D(A10, A14)
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("les edi,[ebp+0x8]");
    asm("cld");
    asm("rep movsb");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B880 - 0x0044B899
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CE73()
 *        L0044CE8C()
 *        L0044CEA5()
 *        L0044CEBE()
 *        L0044CED7()
 */

L0044B880(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8(es, gs, fs);
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B89A - 0x0044B89E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044B89A()
{



    eax = *(ebp + 8);
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044B89F - 0x0044B8A1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004483DA()
 *        L0046FD72()
 */

L0044B89F()
{



    (restore)ebp;
    (restore)ebp;
    asm("retf");
}

/*    Procedure: 0x0044B8A2 - 0x0044B8C4
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C4E4()
 */

L0044B8A2(A10, A14)
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    asm("les edi,[ebp+0x8]");
    asm("cld");
    asm("rep stosb");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B8C5 - 0x0044B8F1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CD6A()
 */

L0044B8C5(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)es;
    (save)edi;
    es = A8;
    *( *es) = Ac;
    (restore)edi;
    (restore)es;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B8F2 - 0x0044B922
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CD6A()
 */

L0044B8F2(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)ds;
    (save)es;
    Ac = ds;
    es = eax;
    ds = eax;
    esi = 0;
    asm("cld");
    asm("rep movsb");
    (restore)es;
    (restore)ds;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B923 - 0x0044B94E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044CE25()
 */

L0044B923(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    (save)ds;
    (save)es;
    es = eax;
    edi = 0;
    asm("cld");
    asm("rep movsb");
    (restore)es;
    (restore)ds;
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B94F - 0x0044B9C0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044C199()
 */

L0044B94F()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    ax = 0;
    cx = 1;
    asm("int 0x31");
    M004f4d20 = ax;
    ecx = M004f4d20 & 65535;
    asm("lar ecx,ecx");
    cx = ecx >> 8 | 16384;
    bx = M004f4d20;
    ax = 9;
    asm("int 0x31");
    bx = M004f4d20;
    ax = 8;
    cx = 0x1f;
    dx = 65535;
    asm("int 0x31");
    bx = M004f4d20;
    dx = 0;
    cx = 0;
    ax = 7;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044B9C1 - 0x0044B9EB
 *    Argument size: 0
 *    Local size: 4
 *    Save regs size: 0
 *    Called by:
 *        L0044C31A()
 */

L0044B9C1()
{



    gs = ds;
    (restore)eax;
    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    (save)ebx;
    (save)ecx;
    (save)fs;
    (save)gs;
    (save)es;
    ax = 1;
    bx = M004f4d20;
    asm("int 0x31");
    (restore)es;
    (restore)gs;
    (restore)fs;
    (restore)ecx;
    (restore)ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebp;
}

/*    Procedure: 0x0044B9EC - 0x0044B9EC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044B9EC()
{



}

/*    Procedure: 0x0044B9ED - 0x0044B9F4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044B9ED()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044B9F5 - 0x0044BBEF
 *    Argument size: 28
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L0044C4E4()
 */

L0044B9F5(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 0x2c;
    Vfffffffc = 0x30;
    Vfffffff8 = 0;
    edi = 0;
    if(Ac > 5) {
        eax = 0xa;
    } else {
        if(*(Ac * 4 + 0x4f4e84) != 0) {
            eax = 9;
        } else {
            if(A8 < 57344 || A8 > 57856) {
                eax = 6;
            } else {
                L00471258(0x4f5b38, 0x4f5a39);
                L004711C8(0x4f5b38, "hmidrv.386");
                esi = L00473114(0x4f5b38, 32768);
                if(esi == -1) {
                    eax = 0xf;
                } else {
                    L0047311C(esi, 0x4f5dcc, ebx);
                    goto L0044bbb0;
L0044bb01:
                    eax = 5;
                    goto L0044bbe9;
L0044bb3d:
                    eax = 5;
                    goto L0044bbe9;
L0044bbb0:
                    while(edi <= M004f5dec && Vfffffff8 == 0) {
                        L0047311C(esi, 0x4f5df8, Vfffffffc);
                        ebx = M004f5e1c;
                        if(M004f5e20 != A8 || M004f5e25 & 0x80) {
                            L0047310C(esi, ebx, 1);
                        } else {
                            Vfffffff8 = 1;
                            if(L0044AF37(ebx, A18, & Vffffffe4, & Vfffffff0) == -1) {
                                goto L0044bb01;
                            }
                            (save) & Vffffffe8;
                            L0044B07B(Vfffffff0, Vfffffff4);
                            L0044AED3(Vffffffe4, ebx);
                            eax = L0047777C(40960);
                            M004f5cc0 = eax;
                            if(M004f5cc0 == 0) {
                                goto L0044bb3d;
                            }
                            L0047311C(esi, M004f5cc0, ebx);
                            (save)ebx;
                            (save)M004f5cc0;
                            L0044B85D(Vfffffff0, Vfffffff4);
                            L00477640(M004f5cc0);
                            eax = A10;
                            *eax = Vffffffe8;
                            *(eax + 4) = Vffffffec;
                            eax = A14;
                            *eax = Vfffffff0;
                            *(eax + 4) = Vfffffff4;
                            *A1c = bl;
                            *A20 = Vffffffe4;
                        }
                        edi = edi + 1;
                    }
                    L004730FC(esi);
                    *(Ac * 4 + 0x4f4f38) = M004f5e20;
                    *(Ac * 4 + 0x4f4e84) = 1;
                    eax = 0;
                }
            }
        }
    }
L0044bbe9:
}

/*    Procedure: 0x0044BBF0 - 0x0044BC7F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044C4E4()
 *        L0044CB86()
 */

L0044BBF0()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx > 5) {
        eax = 0xa;
    } else {
        if(*(ebx * 4 + 0x4f4e84) == 0) {
            eax = 0xa;
        } else {
            *(ebx * 4 + 0x4f4e84) = 0;
            L0044AE92( *(ebx * 4 + 0x4f4d6c), *(ebx * 4 + 0x4f4de4));
            L0044B03B( *(ebx * 8 + 0x4f4d94), *(ebx * 8 + 0x4f4d98), *(ebx * 4 + 0x4f4e5c));
            *(ebx * 4 + 0x4f4e5c) = 0;
            L0044B03B( *(ebx * 8 + 0x4f4dbc), *(ebx * 8 + 0x4f4dc0), *(ebx * 4 + 0x4f4e5c));
            eax = 0;
        }
    }
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044BC80 - 0x0044BE3B
 *    Argument size: 24
 *    Local size: 28
 *    Save regs size: 12
 *    Called by:
 *        L0044C4E4()
 */

L0044BC80(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = 0x2c;
    Vfffffffc = 0x30;
    Vfffffff8 = 0;
    edi = 0;
    if(A8 < 0x1000 || A8 > 0x1023) {
        eax = 6;
    } else {
        L00471258(0x4f5b38, 0x4f5a39);
        L004711C8(0x4f5b38, "hmidrv.386");
        esi = L00473114(0x4f5b38, 32768);
        if(esi == -1) {
            eax = 0xf;
        } else {
            L0047311C(esi, 0x4f5dcc, ebx);
            goto L0044be1a;
L0044bd6b:
            eax = 5;
            goto L0044be35;
L0044bda7:
            eax = 5;
            goto L0044be35;
L0044be1a:
            while(edi <= M004f5dec && Vfffffff8 == 0) {
                L0047311C(esi, 0x4f5df8, Vfffffffc);
                ebx = M004f5e1c;
                if(M004f5e20 != A8 || M004f5e25 & 0x40) {
                    L0047310C(esi, ebx, 1);
                } else {
                    Vfffffff8 = 1;
                    ebx = ebx + 16384;
                    if(L0044AF37(ebx, A14, & Vffffffe4, & Vfffffff0) == -1) {
                        goto L0044bd6b;
                    }
                    (save) & Vffffffe8;
                    L0044B07B(Vfffffff0, Vfffffff4);
                    L0044AED3(Vffffffe4, ebx);
                    eax = L0047777C(40960);
                    M004f5cc0 = eax;
                    if(M004f5cc0 == 0) {
                        goto L0044bda7;
                    }
                    L0047311C(esi, M004f5cc0, ebx);
                    (save)ebx;
                    (save)M004f5cc0;
                    L0044B85D(Vfffffff0, Vfffffff4);
                    L00477640(M004f5cc0);
                    eax = Ac;
                    *eax = Vffffffe8;
                    *(eax + 4) = Vffffffec;
                    eax = A10;
                    *eax = Vfffffff0;
                    *(eax + 4) = Vfffffff4;
                    *A18 = bl;
                    *A1c = Vffffffe4;
                }
                edi = edi + 1;
            }
            L004730FC(esi);
            eax = 0;
        }
    }
L0044be35:
}

/*    Procedure: 0x0044BE3C - 0x0044BEA0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044CB86()
 */

L0044BE3C(A8)
/* unknown */ void  A8;
{



    L0044AE92( *(A8 * 4 + 0x4f4d80), *(A8 * 4 + 0x4f4df8));
    L0044B03B( *(A8 * 8 + 0x4f4e0c), *(A8 * 8 + 0x4f4e10), *(A8 * 4 + 0x4f4e70));
    *(A8 * 4 + 0x4f4e70) = 0;
    L0044B03B( *(A8 * 8 + 0x4f4e34), *(A8 * 8 + 0x4f4e38), *(A8 * 4 + 0x4f4e70));
    return 0;
}

/*    Procedure: 0x0044BEA1 - 0x0044BEA1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044BEA1()
{



}

/*    Procedure: 0x0044BEA2 - 0x0044BEA4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044BEA2()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0044BEA5 - 0x0044BEDE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00417FC0()
 *        L004701BE()
 *        L004703C0()
 *        L00470592()
 *        L00470711()
 */

L0044BEA5()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    eax = 0;
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = 1;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044BEDF - 0x0044BF21
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044BEDF()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    eax = 0;
    if(!( *( *(es + ebx + 0x30)) & 0x1000) && !( *( *(es + ebx + 0x30)) & 32768)) {
        eax = 1;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044BF22 - 0x0044BF22
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044BF22()
{



}

/*    Procedure: 0x0044BF23 - 0x0044BF24
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044BF23()
{



    bl = bl + al;
}

/*    Procedure: 0x0044BF25 - 0x0044C058
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00417FC0()
 *        L00447EA0()
 *        L004701BE()
 *        L004703C0()
 *        L00470592()
 *        L00470711()
 */

L0044BF25()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = ( *(ebp + 8) << 7) + 0x4f4f74;
    asm("les ebx,[eax]");
    esi = *(ebp + 0xc);
    ecx = 0;
    do {
        if(*( *(es + ebx + 0x30)) & 32768) {
            goto L0044bf5d;
        }
        ebx = ebx + 0x6c;
        ecx = ecx + 1;
    } while(ecx != 0x20);
    eax = -1;
    goto L0044c051;
L0044bf5d:
    eax = *esi;
    *( *(es + ebx)) = eax;
    *( *(es + ebx + 8)) = eax;
    *( *(es + ebx + 4)) = ds;
    *( *(es + ebx + 0xc)) = ds;
    *( *(es + ebx + 0x10)) = *( *(es + ebx + 8)) + *(esi + 0x30);
    *( *(es + ebx + 0x14)) = ds;
    if(!( *(esi + 0x28) & 0x40)) {
        eax = *(esi + 0x30);
        *( *(es + ebx + 0x18)) = eax;
        *( *(es + ebx + 0x1c)) = *( *(es + ebx + 0x18));
        *( *(es + ebx + 0x20)) = *(esi + 0x34);
    } else {
        eax = *(esi + 8);
        *( *(es + ebx + 0x18)) = eax;
        *( *(es + ebx + 0x1c)) = *( *(es + ebx + 0x18));
    }
    eax = *(esi + 0x14);
    *( *(es + ebx + 0x32)) = ax;
    eax = *(esi + 0x18);
    *( *(es + ebx + 0x34)) = ax;
    eax = 40960 | *(esi + 0x28);
    *( *(es + ebx + 0x30)) = ax;
    eax = *(esi + 0x10);
    *( *(es + ebx + 0x36)) = ax;
    eax = *(esi + 0x1c);
    *( *(es + ebx + 0x3c)) = eax;
    *( *(es + ebx + 4)) = 0;
    if(*( *(es + ebx + 0x3c)) != 0) {
        *( *(es + ebx + 0x40)) = cs;
    }
    eax = *(esi + 0xc);
    *( *(es + ebx + 0x38)) = ax;
    eax = *(esi + 0x24);
    *( *(es + ebx + 0x4a)) = ax;
    *( *(es + ebx + 0x3a)) = 0;
    *( *(es + ebx + 0x44)) = *(esi + 0x38);
    *( *(es + ebx + 0x48)) = 0;
    *( *(es + ebx + 0x4c)) = 0;
    eax = *(esi + 0x40);
    *( *(es + ebx + 0x54)) = ax;
    eax = *(esi + 0x44);
    *( *(es + ebx + 0x56)) = ax;
    eax = *(esi + 0x48);
    *( *(es + ebx + 0x58)) = ax;
    eax = *(esi + 0x4c);
    *( *(es + ebx + 0x5a)) = ax;
    eax = *(esi + 0x50);
    *( *(es + ebx + 0x5c)) = ax;
    eax = *(esi + 0x54);
    *( *(es + ebx + 0x5e)) = ax;
    *( *(es + ebx + 0x60)) = *(esi + 0x58);
    *( *(es + ebx + 0x62)) = 0;
    *( *(es + ebx + 0x66)) = 0;
    eax = ecx;
L0044c051:
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044C059 - 0x0044C0FA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046FD72()
 */

L0044C059()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    esi = *(ebp + 0x10);
    eax = *esi;
    *( *(es + ebx)) = eax;
    *( *(es + ebx + 8)) = eax;
    *( *(es + ebx + 4)) = ds;
    *( *(es + ebx + 0xc)) = ds;
    *( *(es + ebx + 0x10)) = *( *(es + ebx + 8)) + *(esi + 0x30);
    *( *(es + ebx + 0x14)) = ds;
    if(!( *(esi + 0x28) & 0x40)) {
        eax = *(esi + 0x30);
        *( *(es + ebx + 0x18)) = eax;
        *( *(es + ebx + 0x1c)) = *( *(es + ebx + 0x18));
        *( *(es + ebx + 0x20)) = *(esi + 0x34);
    } else {
        eax = *(esi + 8);
        *( *(es + ebx + 0x18)) = eax;
        *( *(es + ebx + 0x1c)) = *( *(es + ebx + 0x18));
    }
    eax = *(esi + 0x14);
    *( *(es + ebx + 0x32)) = ax;
    eax = 34816 | *(esi + 0x28);
    *( *(es + ebx + 0x30)) = ax;
    eax = *(esi + 0x1c);
    *( *(es + ebx + 0x3c)) = eax;
    *( *(es + ebx + 4)) = 0;
    if(*( *(es + ebx + 0x3c)) != 0) {
        *( *(es + ebx + 0x40)) = cs;
    }
    *( *(es + ebx + 0x38)) = *(esi + 0xc);
    eax = ecx;
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044C0FB - 0x0044C157
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00417FC0()
 *        L00447EA0()
 *        L004701BE()
 *        L004703C0()
 *        L00470592()
 *        L004706D4()
 *        L00470711()
 */

L0044C0FB()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    eax = 0xa;
    ecx = *(ebp + 0xc);
    if(ecx <= 0x20) {
        eax = 0;
        if(!( *( *(es + ebx + 0x30)) & 0x1000) && !( *( *(es + ebx + 0x30)) & 32768)) {
            *( *(es + ebx + 0x30)) = *( *(es + ebx + 0x30)) & 32767;
            *( *(es + ebx + 0x34)) = 0;
        }
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044C158 - 0x0044C158
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044C158()
{



}

/*    Procedure: 0x0044C159 - 0x0044C15C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044C159()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044C15D - 0x0044C194
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044C15D()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = ( *(ebp + 8) << 7) + 0x4f4f74;
    asm("les ebx,[eax]");
    ecx = 0;
    edx = 0;
    do {
        if(!( *( *(es + ebx + 0x30)) & 32768)) {
            edx = edx + 1;
        }
        ebx = ebx + 0x6c;
        ecx = ecx + 1;
    } while(ecx != 0x20);
    eax = edx;
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044C195 - 0x0044C195
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044C195()
{



}

/*    Procedure: 0x0044C196 - 0x0044C198
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044C196()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0044C199 - 0x0044C319
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410CA8()
 *        L0044C49B()
 */

L0044C199()
{



    L0044AE51(0x44db10, 0x10);
    L0044AE51(0x44cef4, 0x56);
    L0044AE51(0x44bea4, 0x7e);
    L0044AE51(0x44c198, 0xd58);
    L0044AE51(0x44b9f4, 0x4ad);
    L0044AE51(0x44c15c, 0x39);
    L0044AE51(0x44bf24, 0x234);
    L0044AE51(0x44de90, 0x4f0);
    L0044AE51(0x44db24, 0x368);
    L0044AE51(0x44cf4c, 0x96a);
    L0044AE51(0x44d8b8, 0x254);
    L0044AE51(0x44ae50, 0xb9c);
    L0044AE51(0x4f4d68, 0x10d8);
    L0044AE51(0x4f605c, 8256);
    L0044AE51(0x4f4c24, 0x140);
    return L0044B94F();
}

/*    Procedure: 0x0044C31A - 0x0044C49A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410F2C()
 *        L0044C4D1()
 */

L0044C31A()
{



    L0044AE92(0x44db10, 0x10);
    L0044AE92(0x44cef4, 0x56);
    L0044AE92(0x44bea4, 0x7e);
    L0044AE92(0x44c198, 0xd58);
    L0044AE92(0x44b9f4, 0x4ad);
    L0044AE92(0x44c15c, 0x39);
    L0044AE92(0x44bf24, 0x234);
    L0044AE92(0x44de90, 0x4f0);
    L0044AE92(0x44db24, 0x368);
    L0044AE92(0x44cf4c, 0x96a);
    L0044AE92(0x44d8b8, 0x254);
    L0044AE92(0x44ae50, 0xb9c);
    L0044AE92(0x4f4d68, 0x10d8);
    L0044AE92(0x4f605c, 8256);
    L0044AE92(0x4f4c24, 0x140);
    return L0044B9C1();
}

/*    Procedure: 0x0044C49B - 0x0044C4D0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410CA8()
 */

L0044C49B(A8)
/* unknown */ void  A8;
{



    L0044C199();
    M004f5d98 = 1;
    if(A8 != 0) {
        L00471258(0x4f5a39, A8);
    } else {
        M004f5a39 = 0;
    }
    return 0;
}

/*    Procedure: 0x0044C4D1 - 0x0044C4E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410CA8()
 *        L00410F2C()
 */

L0044C4D1()
{



    L0044C31A();
    M004f5d98 = 0;
    return 0;
}

/*    Procedure: 0x0044C4E4 - 0x0044CB85
 *    Argument size: 16
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L00410CA8()
 *        L0044819A()
 */

L0044C4E4(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = *A10;
    Vfffffff8 = *(A10 + 0xc);
    Vfffffff4 = *(A10 + 0x10);
    Vfffffff0 = *(A10 + 0x14);
    Vffffffec = *(A10 + 0x18);
    ebx = 6;
    eax = 0;
    do {
        if(*(eax * 4 + 0x4f54c8) == 0) {
            goto L0044c51e;
        }
        eax = eax + 1;
    } while(eax < 5);
    goto L0044c528;
L0044c51e:
    ebx = eax;
L0044c528:
    if(ebx == 6) {
        eax = 0xb;
    } else {
        *(ebx * 4 + 0x4f54c8) = A8;
        if(*(A10 + 0x28) != 0) {
            *(ebx * 8 + 0x4f4d94) = *(A10 + 0x24);
            *(ebx * 8 + 0x4f4d98) = *(A10 + 0x28);
            *(ebx * 8 + 0x4f4dbc) = *(A10 + 0x2c);
            *(ebx * 8 + 0x4f4dc0) = *(A10 + 0x30);
        } else {
            edi = L0044B9F5(A8, ebx, (ebx << 3) + 0x4f4dbc, (ebx << 3) + 0x4f4d94, (ebx << 2) + 0x4f4e5c, (ebx << 2) + 0x4f4de4, (ebx << 2) + 0x4f4d6c);
            if(edi != 0) {
                eax = edi;
                goto L0044cb7f;
            }
            *(A10 + 0x24) = *(ebx * 8 + 0x4f4d94);
            *(A10 + 0x28) = *(ebx * 8 + 0x4f4d98);
            *(A10 + 0x2c) = *(ebx * 8 + 0x4f4dbc);
            *(A10 + 0x30) = *(ebx * 8 + 0x4f4dc0);
        }
        edi = L0044CEF5(ebx, ebx * 0x6c + 0x4f54e0);
        if(edi != 0) {
            eax = edi;
        } else {
            if(*(ebx * 4 + 0x4f54c8) < 57606) {
                *(ebx * 4 + 0x4f4ed4) = Vfffffffc;
                if(Vfffffff8 != 0) {
                    *(ebx * 4 + 0x4f5d84) = 1;
                    if(L0044CCB8(Vfffffffc, & Vffffffe8, (ebx << 2) + 0x4f4f24, (ebx << 3) + 0x4f4ee8) != 0) {
                        L0044BBF0(ebx);
                        *(ebx * 4 + 0x4f54c8) = 0;
                        eax = 5;
                        goto L0044cb7f;
                    }
                    *(A10 + 4) = *(ebx * 8 + 0x4f4ee8);
                    *(A10 + 8) = *(ebx * 8 + 0x4f4eec);
                    if(*((ebx + ebx * 2 + (ebx + ebx * 2) * 8) * 4 + 0x4f5504) == 8) {
                        if(!( *((ebx + ebx * 2 + (ebx + ebx * 2) * 8) * 4 + 0x4f551d) & 0x80)) {
                            (save)0;
                            (save)Vfffffffc;
                            L0044B8A2( *(ebx * 8 + 0x4f4ee8), *(ebx * 8 + 0x4f4eec));
                        } else {
                            (save)0x80;
                            (save)Vfffffffc;
                            L0044B8A2( *(ebx * 8 + 0x4f4ee8), *(ebx * 8 + 0x4f4eec));
                        }
                    } else {
                        (save)0;
                        (save)Vfffffffc;
                        L0044B8A2( *(ebx * 8 + 0x4f4ee8), *(ebx * 8 + 0x4f4eec));
                    }
                } else {
                    *(ebx * 8 + 0x4f4ee8) = *(A10 + 4);
                    *(ebx * 8 + 0x4f4eec) = *(A10 + 8);
                    Vffffffe8 = *(A10 + 0x4c);
                }
                if(*(A10 + 0x38) == 0) {
                    if(*(A10 + 0x48) != 0) {
                        edi = L0044BC80( *(A10 + 0x48), (ebx << 3) + 0x4f4e34, (ebx << 3) + 0x4f4e0c, (ebx << 2) + 0x4f4e70, (ebx << 2) + 0x4f4df8, (ebx << 2) + 0x4f4d80);
                        if(edi == 0) {
                            goto L0044c7ed;
                        }
                        eax = edi;
                        goto L0044cb7f;
                    }
                    edi = L0044BC80( *((ebx + ebx * 2 + (ebx + ebx * 2) * 8) * 4 + 0x4f5548), (ebx << 3) + 0x4f4e34, (ebx << 3) + 0x4f4e0c, (ebx << 2) + 0x4f4e70, (ebx << 2) + 0x4f4df8, (ebx << 2) + 0x4f4d80);
                    if(edi != 0) {
                        eax = edi;
                        goto L0044cb7f;
                    }
L0044c7ed:
                    *(A10 + 0x34) = *(ebx * 8 + 0x4f4e0c);
                    *(A10 + 0x38) = *(ebx * 8 + 0x4f4e10);
                    *(A10 + 0x3c) = *(ebx * 8 + 0x4f4e34);
                    *(A10 + 0x40) = *(ebx * 8 + 0x4f4e38);
                } else {
                    *(ebx * 8 + 0x4f4e0c) = *(A10 + 0x34);
                    *(ebx * 8 + 0x4f4e10) = *(A10 + 0x38);
                    *(ebx * 8 + 0x4f4e34) = *(A10 + 0x3c);
                    *(ebx * 8 + 0x4f4e38) = *(A10 + 0x40);
                }
                if(!( *((ebx + ebx * 2 + (ebx + ebx * 2) * 8) * 4 + 0x4f551d) & 2)) {
                    (save) *(ebx * 8 + 0x4f4d98);
                    (save) *(ebx * 8 + 0x4f4d94);
                    (save) *(ebx * 8 + 0x4f4dc0);
                    L0044B576( *(ebx * 8 + 0x4f4e34), *(ebx * 8 + 0x4f4e38), *(ebx * 8 + 0x4f4e0c), *(ebx * 8 + 0x4f4e10), *(ebx * 8 + 0x4f4dbc));
                }
                *(ebx * 4 + 0x4f4e98) = 1;
                L0044B326( *(ebx * 8 + 0x4f4e34), *(ebx * 8 + 0x4f4e38), *(ebx * 8 + 0x4f4e0c), *(ebx * 8 + 0x4f4e10), *(ebx * 8 + 0x4f4ee8), *(ebx * 8 + 0x4f4eec), Vfffffffc, *( *(Ac + 8) * 4 + 0x4f5768), ebx, 0x4f5dac);
                *(ebx * 8 + 0x4f4f4c) = M004f5dac;
                *(ebx * 8 + 0x4f4f50) = M004f5db0;
                *(ebx * 8 + 0x4f549c) = M004f5db4;
                *(ebx * 8 + 0x4f54a0) = M004f5db8;
                (save)M004f5dc0;
                (save)M004f5dbc;
                L0044B0E0((ebx << 8) + 0x4f4f74);
            } else {
                *(ebx * 8 + 0x4f4f50) = 0;
            }
            *(A10 + 0x1c) = *(ebx * 8 + 0x4f4f4c);
            *(A10 + 0x20) = *(ebx * 8 + 0x4f4f50);
            L0044B44E( *(Ac + 8));
            *(ebx * 4 + 0x4f4f10) = Vffffffe8;
            Vffffffe4 = *(Ac + 4);
            Vffffffe0 = *(Ac + 0xc);
            *(ebx + 0x4f5788) = *(Ac + 8);
            L0044B379( *(ebx * 8 + 0x4f4dbc), *(ebx * 8 + 0x4f4dc0), *(ebx * 8 + 0x4f4d94), *(ebx * 8 + 0x4f4d98), *Ac, Vffffffe4, *(ebx + 0x4f5788), Vfffffff0, Vffffffec, Vffffffe0);
            (save) *(ebx * 8 + 0x4f4d98);
            (save) *(ebx * 8 + 0x4f4d94);
            (save) *(ebx * 8 + 0x4f4dc0);
            L0044B3FD( *(ebx * 8 + 0x4f4dbc));
            L0044B3D7( *(ebx * 8 + 0x4f4dbc), *(ebx * 8 + 0x4f4dc0), *(ebx * 8 + 0x4f4d94), *(ebx * 8 + 0x4f4d98), Vfffffff4);
            Vffffffe8 = *(ebx * 4 + 0x4f4f10);
            L0044B3AE( *(ebx * 8 + 0x4f4dbc), *(ebx * 8 + 0x4f4dc0), *(ebx * 8 + 0x4f4d94), *(ebx * 8 + 0x4f4d98), Vffffffe8, Vfffffffc);
            *(ebx * 4 + 0x4f4e84) = 1;
            *(ebx * 4 + 0x4f4eac) = 1;
            *(A10 + 0x44) = *(ebx * 4 + 0x4f5e2c);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f5790) = *A10;
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f5794) = *(A10 + 4);
            *(eax * 8 + 0x4f5798) = *(A10 + 8);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f579c) = *(A10 + 0xc);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57a0) = *(A10 + 0x10);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57a4) = A8;
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57a8) = *(A10 + 0x18);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57ac) = *(A10 + 0x1c);
            *(eax * 8 + 0x4f57b0) = *(A10 + 0x20);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57b4) = *(A10 + 0x24);
            *(eax * 8 + 0x4f57b8) = *(A10 + 0x28);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57c4) = *(A10 + 0x34);
            *(eax * 8 + 0x4f57c8) = *(A10 + 0x38);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57bc) = *(A10 + 0x2c);
            *(eax * 8 + 0x4f57c0) = *(A10 + 0x30);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57cc) = *(A10 + 0x3c);
            *(eax * 8 + 0x4f57d0) = *(A10 + 0x40);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57d4) = *(A10 + 0x44);
            eax = ebx + ebx + (ebx + ebx) * 4;
            *(eax * 8 + 0x4f57d8) = *(A10 + 0x48);
            *A14 = ebx;
            eax = 0;
        }
    }
L0044cb7f:
}

/*    Procedure: 0x0044CB86 - 0x0044CCB7
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410CA8()
 *        L00410F2C()
 *        L00448280()
 */

L0044CB86(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(*(A8 * 4 + 0x4f4e84) == 0) {
        return 1;
    }
    *(A8 * 4 + 0x4f4eac) = 0;
    if(*(A8 * 4 + 0x4f4f38) < 57606 && *(A8 * 4 + 0x4f5d84) != 0 && Ac != 0) {
        if((L0044B5D6() & 0xff) == 3) {
            L0044CE25( *(A8 * 8 + 0x4f4eec), *(A8 * 4 + 0x4f4f24), *(A8 * 4 + 0x4f4f10));
        } else {
            L0044B145( *(A8 * 8 + 0x4f4eec));
        }
        *(A8 * 4 + 0x4f5d84) = 0;
    }
    (save) *(A8 * 8 + 0x4f4d98);
    (save) *(A8 * 8 + 0x4f4d94);
    (save) *(A8 * 8 + 0x4f4dc0);
    L0044B1FD( *(A8 * 8 + 0x4f4dbc));
    (save) *(A8 * 8 + 0x4f4d98);
    (save) *(A8 * 8 + 0x4f4d94);
    (save) *(A8 * 8 + 0x4f4dc0);
    L0044B303( *(A8 * 8 + 0x4f4dbc));
    L0044B483( *(A8 + 0x4f5788) & 0xff);
    if(A10 != 0) {
        L0044BBF0(A8);
        L0044BE3C(A8);
    }
    *(A8 * 8 + 0x4f4d98) = 0;
    *(A8 * 8 + 0x4f4dc0) = 0;
    *(A8 * 8 + 0x4f4f50) = 0;
    *(A8 * 8 + 0x4f4e10) = 0;
    *(A8 * 8 + 0x4f4e38) = 0;
    *(A8 * 4 + 0x4f54c8) = 0;
    *(A8 * 4 + 0x4f4e84) = 0;
    return 0;
}

/*    Procedure: 0x0044CCB8 - 0x0044CD69
 *    Argument size: 16
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0044C4E4()
 */

L0044CCB8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if((L0044B5D6() & 0xff) == 3) {
        if(L0044CD6A(A14, & Vfffffff4, & Vfffffff0) != 0) {
            eax = 1;
        } else {
            *Ac = Vfffffff0;
            *A10 = Vfffffff4;
            eax = 0;
        }
    } else {
        L0044B10F((A8 >> 4) + 4, & Vfffffffc, & Vfffffff8);
        for(*Ac = Vfffffffc; (Vfffffffc & 65535) > 65535 - A8; *Ac = Vfffffffc) {
            L0044B10F((A8 >> 4) + 4, & Vfffffffc, & Vfffffff8);
        }
        *(A14 + 4) = Vfffffff8;
        *A14 = 0;
        eax = 0;
    }
}

/*    Procedure: 0x0044CD6A - 0x0044CE24
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044CCB8()
 */

L0044CD6A()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0x10);
    ebx = *(ebp + 8);
    *(ebx + 4) = 0;
    *ebx = 0;
    eax = *(ebp + 0xc);
    *eax = 0;
    *edi = 0;
    *(ebp - 4) = 0;
    if(L0044B5F3(0x20, ebp - 8, ebp - 4) != 0) {
        eax = 0;
    } else {
        L0044B8C5( *(ebp - 8), 0x1000);
        esi = L0044B659( *(ebp - 4));
        L0044B8F2(0x4f5d9c, *(ebp - 8), 0x10);
        (save) *(ebp - 4);
        L0044B634( *(ebp - 8));
        if(esi == 0) {
            M004f5da8 = M004f5da8 & -4096;
            *(ebp - 8) = L0044B712(M004f5da8);
            *(ebx + 4) = *(ebp - 8);
            *ebx = 0;
            *edi = M004f5da8;
            eax = 0;
        } else {
            eax = 5;
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044CE25 - 0x0044CE72
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044CB86()
 */

L0044CE25()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    L0044B7AB( *(ebp + 8));
    L0044B5F3(0x20, ebp - 4, ebp - 8);
    L0044B923(0x4f5d9c, *(ebp - 4), 0x10);
    L0044B6C5( *(ebp - 8));
    (save) *(ebp - 8);
    eax = L0044B634( *(ebp - 4));
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044CE73 - 0x0044CE8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CE73()
{



    (save)M004f57b0;
    return L0044B880(M004f57ac);
}

/*    Procedure: 0x0044CE8C - 0x0044CEA4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CE8C()
{



    (save)M004f5800;
    return L0044B880(M004f57fc);
}

/*    Procedure: 0x0044CEA5 - 0x0044CEBD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CEA5()
{



    (save)M004f5850;
    return L0044B880(M004f584c);
}

/*    Procedure: 0x0044CEBE - 0x0044CED6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CEBE()
{



    (save)M004f58a0;
    return L0044B880(M004f589c);
}

/*    Procedure: 0x0044CED7 - 0x0044CEEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CED7()
{



    (save)M004f58f0;
    return L0044B880(M004f58ec);
}

/*    Procedure: 0x0044CEF0 - 0x0044CEF0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CEF0()
{



}

/*    Procedure: 0x0044CEF1 - 0x0044CEF4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CEF1()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044CEF5 - 0x0044CF49
 *    Argument size: -8
 *    Local size: 16
 *    Save regs size: 0
 *    Called by:
 *        L0044C4E4()
 */

L0044CEF5(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    if(*(eax * 8 + 0x4f4d98) == 0) {
        eax = 1;
    } else {
        if(Ac != 0) {
            L0044B1AA( *(eax * 8 + 0x4f4dbc), *(eax * 8 + 0x4f4dc0), *(eax * 8 + 0x4f4d94), *(eax * 8 + 0x4f4d98), Ac);
        } else {
            eax = 2;
            goto L0044cf46;
        }
        eax = 0;
    }
L0044cf46:
}

/*    Procedure: 0x0044CF4A - 0x0044CF4A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CF4A()
{



}

/*    Procedure: 0x0044CF4B - 0x0044D063
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044CF4B()
{



    bl = bl + al;
    (save)ebp;
    (save)ebx;
    (save)esi;
    esi = *(esp + 8);
    if(M004f5c98 != 0) {
        eax = 3;
    } else {
        eax = L0047777C(32768);
        M004f5cc0 = eax;
        if(M004f5cc0 == 0) {
            eax = 5;
        } else {
            ebx = 0x2c;
            if(esi != 0) {
                L00471258(0x4f5b38, esi);
                L004711C8(0x4f5b38, "hmidet.386");
            } else {
                L00471258(0x4f5b38, "hmidet.386");
            }
            eax = L00473114(0x4f5b38, 32768);
            M004f5cac = eax;
            if(M004f5cac != -1) {
                goto L019471c8;
            }
            eax = 0xf;
            goto L0044d060;
            L0047311C(M004f5cac, 0x4f5c3c, ebx);
            L0044AF37(0x1000, 0x4f5cb8, 0x4f5cbc, 0x4f5c9c);
            (save)0x4f5ca4;
            L0044B07B(M004f5c9c, M004f5ca0);
            L0044AED3(M004f5cbc, 0x1000);
            L0047310C(M004f5cac, 0, 0);
            M004f5c98 = 1;
            eax = 0;
        }
    }
L0044d060:
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x0044D064 - 0x0044D0D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044D064()
{



    M004f5c98 = 0;
    L00477640(M004f5cc0);
    L004730FC(M004f5cac);
    L0044AE92(M004f5cbc, 0x1000);
    L0044B03B(M004f5c9c, M004f5ca0, M004f5cb8);
    M004f5cb8 = 0;
    L0044B03B(M004f5ca4, M004f5ca8, M004f5cb8);
    return 0;
}

/*    Procedure: 0x0044D0D8 - 0x0044D2E0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044D0D8()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 8);
    *(ebp - 4) = 0x30;
    if(*(ebp + 0xc) == 0) {
        eax = 2;
    } else {
        if(edi < 57344 || edi > 57856) {
            eax = 6;
        } else {
            esi = 0;
            M004f5cb4 = 0;
            L0047310C(M004f5cac, 0, 0);
            for(L0047311C(M004f5cac, 0x4f5c3c, 0x2c); M004f5cb4 <= M004f5c5c && esi == 0; M004f5cb4 = M004f5cb4 + 1) {
                *(ebp - 8) = L0047310C(M004f5cac, 0, 1);
                L0047311C(M004f5cac, 0x4f5c68, *(ebp - 4));
                ebx = M004f5c8c;
                if(edi != M004f5c90 || M004f5c95 & 0x80) {
                    L0047310C(M004f5cac, ebx, 1);
                } else {
                    esi = 1;
                    L0047311C(M004f5cac, M004f5cc0, ebx);
                    (save)ebx;
                    (save)M004f5cc0;
                    L0044B85D(M004f5c9c, M004f5ca0);
                }
            }
            if(!(esi = esi - 1)) {
                L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, 0x4f5cc8);
                if(!(M004f5d05 & 1)) {
                    L0044B4B8(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0);
                    for(ebx = 0; L0044B4F7(ebx) != 0; ebx = ebx + 1) {
                        L0044B541(ebx, L00477EB0(L0044B4F7(ebx)));
                    }
                }
                (save)M004f5ca0;
                (save)M004f5c9c;
                (save)M004f5ca8;
                ebx = L0044B220(M004f5ca4);
                if(ebx != 0) {
                    L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, *(ebp + 0xc));
                    M004f5cc4 = *(ebp + 0xc);
                    *( *(ebp + 0x10)) = ebx;
                    M004f5cb0 = *(ebp - 8);
                    eax = 0;
                } else {
                    eax = 8;
                }
            } else {
                eax = 7;
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044D2E1 - 0x0044D43D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044D2E1()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 8);
    *(ebp - 4) = 0x30;
    if(*(ebp + 0xc) == 0) {
        eax = 2;
    } else {
        if(edi < 57344 || edi > 57856) {
            eax = 6;
        } else {
            esi = 0;
            M004f5cb4 = 0;
            L0047310C(M004f5cac, 0, 0);
            for(L0047311C(M004f5cac, 0x4f5c3c, 0x2c); M004f5cb4 <= M004f5c5c && esi == 0; M004f5cb4 = M004f5cb4 + 1) {
                *(ebp - 8) = L0047310C(M004f5cac, 0, 1);
                L0047311C(M004f5cac, 0x4f5c68, *(ebp - 4));
                ebx = M004f5c8c;
                if(edi != M004f5c90 || M004f5c95 & 0x80) {
                    L0047310C(M004f5cac, ebx, 1);
                } else {
                    esi = 1;
                    L0047311C(M004f5cac, M004f5cc0, ebx);
                    (save)ebx;
                    (save)M004f5cc0;
                    L0044B85D(M004f5c9c, M004f5ca0);
                }
            }
            if(!(esi = esi - 1)) {
                L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, *(ebp + 0xc));
                M004f5cc4 = *(ebp + 0xc);
                M004f5cb0 = *(ebp - 8);
                eax = 0;
            } else {
                eax = 7;
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044D43E - 0x0044D608
 *    Argument size: 8
 *    Local size: 56
 *    Save regs size: 12
 */

L0044D43E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff5;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff8 = 0x30;
    if(A8 == 0) {
        eax = 2;
    } else {
        Vfffffffc = 0;
        M004f5cb4 = 0;
        L0047310C(M004f5cac, 0, 0);
        L0047311C(M004f5cac, 0x4f5c3c, 0x2c);
        goto L0044d5e6;
L0044d599:
        M004f5cb0 = edi;
        L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, A8);
        M004f5cc4 = A8;
        *Ac = ebx;
        eax = 0;
        goto L0044d602;
L0044d5e6:
        while(M004f5cb4 <= M004f5c5c && Vfffffffc == 0) {
            edi = L0047310C(M004f5cac, 0, 1);
            L0047311C(M004f5cac, & Vffffffc8, Vfffffff8);
            ebx = Vffffffec;
            if(Vfffffff5 & 0x80) {
                L0047310C(M004f5cac, ebx, 1);
            } else {
                L0047311C(M004f5cac, M004f5cc0, ebx);
                (save)ebx;
                (save)M004f5cc0;
                L0044B85D(M004f5c9c, M004f5ca0);
                L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, 0x4f5cc8);
                if(!(M004f5d05 & 1)) {
                    L0044B4B8(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0);
                    for(ebx = 0; L0044B4F7(ebx) != 0; ebx = ebx + 1) {
                        L0044B541(ebx, L00477EB0(L0044B4F7(ebx)));
                    }
                }
                (save)M004f5ca0;
                (save)M004f5c9c;
                (save)M004f5ca8;
                ebx = L0044B220(M004f5ca4);
                if(ebx != 0) {
                    goto L0044d599;
                }
            }
            M004f5cb4 = M004f5cb4 + 1;
        }
        eax = 7;
    }
L0044d602:
}

/*    Procedure: 0x0044D609 - 0x0044D7A5
 *    Argument size: 8
 *    Local size: 56
 *    Save regs size: 12
 */

L0044D609(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff5;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff8 = 0x30;
    if(A8 == 0) {
        eax = 2;
    } else {
        Vfffffffc = 0;
        goto L0044d783;
L0044d736:
        M004f5cb0 = edi;
        L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, A8);
        M004f5cc4 = A8;
        *Ac = ebx;
        eax = 0;
        goto L0044d79f;
L0044d783:
        while(M004f5cb4 <= M004f5c5c && Vfffffffc == 0) {
            edi = L0047310C(M004f5cac, 0, 1);
            L0047311C(M004f5cac, & Vffffffc8, Vfffffff8);
            ebx = Vffffffec;
            if(Vfffffff5 & 0x80) {
                L0047310C(M004f5cac, ebx, 1);
            } else {
                L0047311C(M004f5cac, M004f5cc0, ebx);
                (save)ebx;
                (save)M004f5cc0;
                L0044B85D(M004f5c9c, M004f5ca0);
                L0044B287(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0, 0x4f5cc8);
                if(!(M004f5d05 & 1)) {
                    L0044B4B8(M004f5ca4, M004f5ca8, M004f5c9c, M004f5ca0);
                    for(ebx = 0; L0044B4F7(ebx) != 0; ebx = ebx + 1) {
                        L0044B541(ebx, L00477EB0(L0044B4F7(ebx)));
                    }
                }
                (save)M004f5ca0;
                (save)M004f5c9c;
                (save)M004f5ca8;
                ebx = L0044B220(M004f5ca4);
                if(ebx != 0) {
                    goto L0044d736;
                }
            }
            M004f5cb4 = M004f5cb4 + 1;
        }
        eax = 7;
    }
L0044d79f:
}

/*    Procedure: 0x0044D7A6 - 0x0044D83A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0044D7A6(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return 2;
    }
    L0047310C(M004f5cac, M004f5cb0, 0);
    (save)M004f5ca0;
    (save)M004f5c9c;
    (save)M004f5ca8;
    L0044B243(M004f5ca4);
    *A8 = M004f4d22;
    *(A8 + 8) = M004f4d26;
    *(A8 + 4) = M004f4d2a;
    *(A8 + 0xc) = M004f4d2e;
    if(!(M004f5d04 & 1)) {
        if(M004f4d2a > 1 && M004f4d2a < 0x10) {
            return 0;
        }
        return 0x11;
    }
    return 0;
}

/*    Procedure: 0x0044D83B - 0x0044D8B5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L0044D83B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(A8 == 0) {
        eax = 2;
    } else {
        edi = *A8;
        *(ebp - 4) = *(A8 + 8);
        esi = *(A8 + 4);
        if(!(M004f5d04 & 1)) {
            if(esi >= 2 && esi <= 0xf) {
                goto L0044d875;
            }
            eax = 0x11;
        } else {
L0044d875:
            L0044B44E( *(A8 + 8));
            (save)M004f5ca0;
            (save)M004f5c9c;
            esi = L0044B2D3(M004f5ca4, M004f5ca8, edi, esi, *(ebp - 4));
            L0044B483( *(A8 + 8));
            eax = esi;
        }
    }
}

/*    Procedure: 0x0044D8B6 - 0x0044D8B6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044D8B6()
{



}

/*    Procedure: 0x0044D8B7 - 0x0044D922
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044D8B7()
{



    bl = bl + al;
    (save)ds;
    (save)eax;
    ax = *( *(cs + 0x4f6070));
    ds = eax;
    (restore)eax;
    if(M004f808a != 1) {
        M004f808a = 1;
        M004f607a = esp;
        M004f607e = ss;
        asm("lss esp,[0x4f6072]");
        asm("pusha");
        (save)es;
        (save)fs;
        (save)gs;
        es = ds;
        M004f8082 = esp;
        eax = *L004f606c();
        (restore)gs;
        (restore)fs;
        (restore)es;
        asm("popa");
        asm("lss esp,[0x4f607a]");
        M004f808a = 0;
    }
    (restore)ds;
    (save)eax;
    ax = 0x20;
    asm("out 0x20,al");
    (restore)eax;
    asm("iret");
}

/*    Procedure: 0x0044D923 - 0x0044D937
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044D923()
{



    asm("pusha");
    eax = *L004f606c(gs, fs, es, ds);
    (restore)gs;
    (restore)fs;
    (restore)es;
    (restore)ds;
    asm("popa");
}

/*    Procedure: 0x0044D938 - 0x0044D97D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044E2E1()
 */

L0044D938(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    if(M004f8094 != 0) {
        dx = 0x21;
        asm("in al,dx");
        al = al | 1;
        asm("out dx,al");
        dx = 0x43;
        al = 0x36;
        asm("out dx,al");
        dx = 0x40;
        asm("out dx,al");
        al = ah;
        asm("out dx,al");
        dx = 0x21;
        asm("in al,dx");
        al = al & 0xfe;
        asm("out dx,al");
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044D97E - 0x0044D9FD
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044DE91()
 */

L0044D97E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    M004f606c = Ac;
    M004f6070 = ds;
    M004f6076 = ds;
    if(M004f8094 != 0) {
        dx = 0x21;
        asm("in al,dx");
        al = al | 1;
        asm("out dx,al");
        ax = 0x204;
        bl = 8;
        asm("int 0x31");
        M004f6060 = edx;
        M004f6064 = cx;
        ax = 0x205;
        bl = 8;
        edx = 0x44d8b9;
        cx = cs;
        asm("int 0x31");
        dx = 0x43;
        al = 0x36;
        asm("out dx,al");
        dx = 0x40;
        asm("out dx,al");
        al = ah;
        asm("out dx,al");
        dx = 0x21;
        asm("in al,dx");
        al = al & 0xfe;
        asm("out dx,al");
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044D9FE - 0x0044DA29
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044DE91()
 *        L0044DF4F()
 *        L0044DF6E()
 *        L0044E0CE()
 *        L0044E1D7()
 */

L0044D9FE()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    if(M004f8094 != 0) {
        dx = 0x21;
        asm("in al,dx");
        al = al | 1;
        asm("out dx,al");
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044DA2A - 0x0044DA55
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044DE91()
 *        L0044DF4F()
 *        L0044DF6E()
 *        L0044E0CE()
 *        L0044E1D7()
 */

L0044DA2A()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    if(M004f8094 != 0) {
        dx = 0x21;
        asm("in al,dx");
        al = al & 0xfe;
        asm("out dx,al");
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044DA56 - 0x0044DAA8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0044DF4F()
 */

L0044DA56()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    (save)fs;
    (save)gs;
    (save)es;
    if(M004f8094 != 0) {
        dx = 0x21;
        asm("in al,dx");
        al = al | 1;
        asm("out dx,al");
        ax = 0x205;
        bl = 8;
        cx = M004f6064;
        edx = M004f6060;
        asm("int 0x31");
        dx = 0x40;
        ax = 0;
        asm("out dx,al");
        asm("out dx,al");
        dx = 0x21;
        asm("in al,dx");
        al = al & 0xfe;
        asm("out dx,al");
    }
    (restore)es;
    (restore)gs;
    (restore)fs;
}

/*    Procedure: 0x0044DAA9 - 0x0044DB01
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044E376()
 */

L0044DAA9(Ac)
/* unknown */ void  Ac;
{



    if(M004f8094 != 0) {
        M004f808a = 0;
        esp = M004f8082;
        (restore)gs;
        (restore)fs;
        (restore)es;
        asm("popa");
        asm("lss esp,[0x4f607a]");
        M004f8086 = eax;
        (restore)eax;
        M004f8082 = ax;
        (save)eax;
        (save)eax;
        *esp = M004f6060;
        Ac = M004f6064;
        eax = M004f8086;
        (save)eax;
        ds = M004f8082;
        (restore)eax;
        asm("retf");
    }
}

/*    Procedure: 0x0044DB02 - 0x0044DB0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004483DA()
 */

L0044DB02()
{



    ax = M004f6070;
    ds = eax;
}

/*    Procedure: 0x0044DB0B - 0x0044DB0C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB0B()
{



    asm("int3");
}

/*    Procedure: 0x0044DB0D - 0x0044DB10
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB0D()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044DB11 - 0x0044DB1F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB11(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 0x4f5d34);
}

/*    Procedure: 0x0044DB20 - 0x0044DB20
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB20()
{



}

/*    Procedure: 0x0044DB21 - 0x0044DB24
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB21()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044DB25 - 0x0044DB47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB25()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = ( *(ebp + 8) << 3) + 0x4f549c;
    asm("les ebx,[eax]");
    eax = *( *(es + ebx)) & 65535;
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DB48 - 0x0044DB84
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447EA0()
 *        L004701BE()
 *        L004703C0()
 *        L00470592()
 *        L00470711()
 */

L0044DB48()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x32)) & 65535;
        *( *(es + ebx + 0x32)) = *(ebp + 0x10);
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DB85 - 0x0044DBB9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DB85()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x32)) & 65535;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DBBA - 0x0044DBF6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DBBA()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x36)) & 65535;
        *( *(es + ebx + 0x36)) = *(ebp + 0x10);
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DBF7 - 0x0044DC2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DBF7()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x36)) & 65535;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DC2C - 0x0044DC5F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DC2C()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x4c));
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DC60 - 0x0044DC94
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DC60()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x38)) & 65535;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DC95 - 0x0044DCD1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447EA0()
 */

L0044DC95()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x54)) & 65535;
        *( *(es + ebx + 0x54)) = *(ebp + 0x10);
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DCD2 - 0x0044DD06
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DCD2()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x54)) & 65535;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DD07 - 0x0044DD43
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DD07()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x56)) & 65535;
        *( *(es + ebx + 0x56)) = *(ebp + 0x10);
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DD44 - 0x0044DD78
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DD44()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x56)) & 65535;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DD79 - 0x0044DDB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004701BE()
 *        L00470711()
 */

L0044DD79()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x44));
        *( *(es + ebx + 0x44)) = *(ebp + 0x10);
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DDB4 - 0x0044DDE7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DDB4()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x44));
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DDE8 - 0x0044DE1C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DDE8()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = *(ebp + 8) << 7;
    ebx = *(ebp + 0xc) << 3;
    eax = eax + ebx + 0x4f4f74;
    asm("les ebx,[eax]");
    if(!( *( *(es + ebx + 0x30)) & 32768)) {
        eax = *( *(es + ebx + 0x34)) & 65535;
    }
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DE1D - 0x0044DE62
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DE1D()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = ( *(ebp + 8) << 7) + 0x4f4f74;
    asm("les ebx,[eax]");
    ecx = 0;
    edi = *(ebp + 0xc);
    do {
        if(!( *( *(es + ebx + 0x30)) & 32768) && di == *( *(es + ebx + 0x34))) {
            goto L0044de59;
        }
        ebx = ebx + 0x6c;
        ecx = ecx + 1;
    } while(ecx != 0x20);
    eax = -1;
    goto L0044de5b;
L0044de59:
    eax = ecx;
L0044de5b:
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DE63 - 0x0044DE8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DE63()
{



    asm("enter 0x0,0x0");
    (save)ebx;
    (save)ecx;
    (save)edx;
    (save)esi;
    (save)edi;
    (save)es;
    eax = ( *(ebp + 8) << 3) + 0x4f549c;
    asm("les ebx,[eax]");
    ebx = ebx + 2;
    *( *(es + ebx)) = *(ebp + 0xc);
    (restore)es;
    (restore)edi;
    (restore)esi;
    (restore)edx;
    (restore)ecx;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0044DE8C - 0x0044DE8C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DE8C()
{



}

/*    Procedure: 0x0044DE8D - 0x0044DE90
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044DE8D()
{



    *eax = *eax + al;
    bl = bl + al;
}

/*    Procedure: 0x0044DE91 - 0x0044DF4E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00410CA8()
 */

L0044DE91(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = A8;
    M004f8098 = !(Ac & 2) ? 1 : 0;
    if(!(Ac & 1)) {
        M004f8094 = 1;
        L0044D9FE();
        L0044D97E(65535, 0x44e2f7);
        L0044DA2A();
    } else {
        M004f8094 = 0;
    }
    if(ebx != 0) {
        if(Ac & 1) {
            goto L0044df3f;
        }
        if(ebx == 65280) {
            L0044E2E1(65535);
            M004f59a4 = 65280;
        } else {
            edx = 0;
            ebx = ebx / ebx;
            edx = ebx % ebx;
            L0044E2E1(1193180);
            M004f59a4 = ebx;
        }
        M004f5964 = 0x44e376;
        M004f59e4 = 65536;
    } else {
L0044df3f:
        M004f5924 = 65535;
    }
    return 0;
}

/*    Procedure: 0x0044DF4F - 0x0044DF6D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410F2C()
 */

L0044DF4F()
{



    if(M004f8094 != 0) {
        L0044D9FE();
        L0044DA56();
        L0044DA2A();
    }
    return 0;
}

/*    Procedure: 0x0044DF6E - 0x0044E0CD
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00410CA8()
 *        L00446781()
 *        L00447237()
 *        L0044819A()
 *        L00448AFE()
 */

L0044DF6E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A8;
    esi = 0;
    ebx = 0;
    do {
        if(*(ebx * 4 + 0x4f5928) == 0) {
            break;
        }
        ebx = ebx + 1;
    } while(ebx < 0x10);
    if(ebx >= 0x10) {
        eax = 0xb;
    } else {
        if(M004f8094 != 0) {
            L0044D9FE();
        }
        *(ebp - 4) = ebx;
        *(ebx * 4 + 0x4f5928) = Ac;
        *(ebx * 4 + 0x4f5968) = edi;
        edx = 0;
        edi = edi / edi;
        edx = edi % edi;
        if(1193180 < M004f5924) {
            edx = 0;
            edi = edi / edi;
            edx = edi % edi;
            L0044E2E1(1193180);
            edx = 0;
            edx = edi / edi % edi / edi;
            (save)1193180;
            (restore)edx;
            ecx = edx;
            edx = 0;
            edx = ecx / ecx % ecx / ecx;
            esi = M004f5924 << 0x10;
        }
        ebx = 0;
        do {
            if(*(ebx * 4 + 0x4f5928) != 0) {
                if(*(ebx * 4 + 0x4f5968) != 65280) {
                    edx = 0;
                    M004f5924 = M004f5924 / M004f5924;
                    edx = M004f5924 % M004f5924;
                    (save)1193180;
                    eax = *(ebx * 4 + 0x4f5968) << 0x10;
                    (restore)edx;
                    ecx = edx;
                    edx = 0;
                    edx = ecx / ecx % ecx / ecx;
                    *(ebx * 4 + 0x4f59a8) = eax;
                } else {
                    if(M004f5924 != 65535) {
                        edx = 0;
                        M004f5924 = M004f5924 / M004f5924;
                        edx = M004f5924 % M004f5924;
                        (save)1193180;
                        (restore)edx;
                        ecx = edx;
                        edx = 0;
                        edx = ecx / ecx % ecx / ecx;
                        *(ebx * 4 + 0x4f59a8) = 1192755;
                    } else {
                        *(ebx * 4 + 0x4f59a8) = 65536;
                    }
                }
                if(esi != 0) {
                    eax = esi & 65535;
                    asm("imul dword [ebx*4+0x4f59e8]");
                    eax = eax >> 0x10;
                    edx = esi >> 0x10;
                    *(ebx * 4 + 0x4f59e8) = eax + ( *(ebx * 4 + 0x4f59e8) * *(ebx * 4 + 0x4f59e8) >> 0x10);
                }
            }
            ebx = ebx + 1;
        } while(ebx < 0x10);
        if(M004f8094 != 0) {
            L0044DA2A();
        }
        *A10 = *(ebp - 4);
        eax = 0;
    }
}

/*    Procedure: 0x0044E0CE - 0x0044E1D6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00447E19()
 */

L0044E0CE(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = Ac;
    ebx = A8;
    if(ebx >= 0x10) {
        eax = 0xa;
    } else {
        if(*(ebx * 4 + 0x4f5928) != 0) {
            if(M004f8094 != 0) {
                L0044D9FE();
            }
            *(ebx * 4 + 0x4f5968) = esi;
            edx = 0;
            esi = esi / esi;
            edx = esi % esi;
            if(1193180 < M004f5924) {
                edx = 0;
                edx = esi / esi % esi / esi;
                L0044E2E1(1193180);
            }
            ecx = 0;
            do {
                if(*(ecx * 4 + 0x4f5928) != 0) {
                    if(*(ecx * 4 + 0x4f5968) != 65280) {
                        edx = 0;
                        M004f5924 = M004f5924 / M004f5924;
                        edx = M004f5924 % M004f5924;
                        (save)1193180;
                        eax = *(ecx * 4 + 0x4f5968) << 0x10;
                        (restore)edx;
                        ebx = edx;
                        edx = 0;
                        edx = ebx / ebx % ebx / ebx;
                        *(ecx * 4 + 0x4f59a8) = eax;
                    } else {
                        if(M004f5924 != 65535) {
                            edx = 0;
                            M004f5924 = M004f5924 / M004f5924;
                            edx = M004f5924 % M004f5924;
                            (save)1193180;
                            (restore)edx;
                            ebx = edx;
                            edx = 0;
                            edx = ebx / ebx % ebx / ebx;
                            *(ecx * 4 + 0x4f59a8) = 1192755;
                        } else {
                            *(ecx * 4 + 0x4f59a8) = 65536;
                        }
                    }
                    *(ecx * 4 + 0x4f59e8) = 0;
                }
                ecx = ecx + 1;
            } while(ecx < 0x10);
            if(M004f8094 != 0) {
                L0044DA2A();
            }
        } else {
            eax = 0xa;
            goto L0044e1d3;
        }
        eax = 0;
    }
L0044e1d3:
}

/*    Procedure: 0x0044E1D7 - 0x0044E2D1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00410F2C()
 *        L004467D4()
 *        L0044755E()
 *        L00448280()
 *        L00448AFE()
 *        L00449BBD()
 */

L0044E1D7(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 0x4f5968;
    edi = 0x4f5928;
    ebx = 0;
    *(0x4f5928 + A8 * 4) = 0;
    ecx = 0;
    do {
        if(*(edi + ecx * 4) != 0 && ebx < *(esi + ecx * 4) && *(esi + ecx * 4) != 65280) {
            ebx = *(esi + ecx * 4);
        }
        ecx = ecx + 1;
    } while(ecx < 0x10);
    if(ebx != 0) {
        edx = 0;
        edx = ebx / ebx % ebx / ebx;
        L0044E2E1(1193180);
    } else {
        L0044E2E1(65535);
    }
    if(M004f8094 != 0) {
        L0044D9FE();
    }
    ecx = 0;
    do {
        if(*(edi + ecx * 4) != 0) {
            if(*(esi + ecx * 4) != 65280) {
                edx = 0;
                M004f5924 = M004f5924 / M004f5924;
                edx = M004f5924 % M004f5924;
                (save)1193180;
                eax = *(esi + ecx * 4) << 0x10;
                (restore)edx;
                ebx = edx;
                edx = 0;
                edx = ebx / ebx % ebx / ebx;
                *(ecx * 4 + 0x4f59a8) = eax;
            } else {
                if(M004f5924 != 65535) {
                    edx = 0;
                    M004f5924 = M004f5924 / M004f5924;
                    edx = M004f5924 % M004f5924;
                    (save)1193180;
                    (restore)edx;
                    ebx = edx;
                    edx = 0;
                    edx = ebx / ebx % ebx / ebx;
                    *(ecx * 4 + 0x4f59a8) = 1192755;
                } else {
                    *(ecx * 4 + 0x4f59a8) = 65536;
                }
            }
            *(ecx * 4 + 0x4f59e8) = 0;
        }
        ecx = ecx + 1;
    } while(ecx < 0x10);
    if(M004f8094 != 0) {
        L0044DA2A();
    }
    return 0;
}

/*    Procedure: 0x0044E2D2 - 0x0044E2E0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00447D3F()
 *        L00447E19()
 */

L0044E2D2(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 0x4f5968);
}

/*    Procedure: 0x0044E2E1 - 0x0044E2F6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044DE91()
 *        L0044DF6E()
 *        L0044E0CE()
 *        L0044E1D7()
 */

L0044E2E1(A8)
/* unknown */ void  A8;
{



    M004f5924 = A8;
    L0044D938(M004f5924);
    return 0;
}

/*    Procedure: 0x0044E2F7 - 0x0044E375
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044FFA9()
 */

L0044E2F7()
{
    /* unknown */ void  ebx;



    ebx = 0x4f5e28;
    M004f5c38 = M004f5c38 + 1;
    eax = 0;
    for(*L004F5E28 = 0; *ebx < 0x10; *ebx = *ebx + 1) {
        eax = *ebx;
        if(*(eax * 4 + 0x4f5928) != 0) {
            eax = *( *ebx * 4 + 0x4f59a8);
            *( *ebx * 4 + 0x4f59e8) = *( *ebx * 4 + 0x4f59e8) + eax;
            eax = *ebx;
            if(!( *(eax * 4 + 0x4f59ea) & 1)) {
                *( *ebx * 4 + 0x4f59e8) = *( *ebx * 4 + 0x4f59e8) & 65535;
                if(*( *ebx + 0x4f5a28) != 0xff) {
                    M004f5a38 = *( *ebx + 0x4f5a28);
                }
                eax = *( *( *ebx * 4 + 0x4f5928))();
            }
        }
    }
    M004f5c38 = M004f5c38 - 1;
}

/*    Procedure: 0x0044E376 - 0x0044E37F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044E376()
{



    return L0044DAA9();
}

/*    Procedure: 0x0044E380 - 0x0044E380
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044E380()
{



}

/*    Procedure: 0x0044E381 - 0x0044E3B6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044E381()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    eax = ( *(ebp + 8) & 0xff) << 8;
    edx = ( *(ebp + 9) & 0xff) << 4;
    ax = ax + dx;
    edx = ax + ( *(ebp + 0xa) & 0xff) & 65535;
    if(*(edx + 0x501e64) == 0) {
        *(edx + 6634528) = 1;
    }
    (restore)ebp;
}

/*    Procedure: 0x0044E3B7 - 0x0044E3E2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044E3B7(A8)
/* unknown */ void  A8;
{



    edx = A8 & 65535;
    ecx = *(edx + 0x501e64) & 0xff;
    if(ecx != 0) {
        return ecx - 1;
    }
    return *(( *(edx + 6634528) & 0xff) + 6638624) & 0xff;
}

/*    Procedure: 0x0044E3E3 - 0x0044E3FF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044E3E3(A8)
/* unknown */ void  A8;
{



    return L00471198(6634528, 0, 0x1000);
}

/*    Procedure: 0x0044E400 - 0x0044E567
 *    Argument size: 4
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L0044E568()
 */

L0044E400(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edx = *A8;
    Vfffffff8 = *(A8 + 2);
    Vfffffff4 = *(A8 + 4);
    Vfffffff0 = *(A8 + 6);
    Vffffffec = *(A8 + 8);
    Vffffffe8 = *(A8 + 0xa);
    cx = 0x10;
    *(A8 + 8) = 0x10;
    *(A8 + 4) = 0x10;
    *A8 = 0x10;
    *(A8 + 0xa) = 0;
    *(A8 + 6) = 0;
    *(A8 + 2) = 0;
    Vffffffe4 = 0;
    Vfffffffc = edx;
    Vffffffe0 = (Vfffffffc << 5) * 8 + 6634528;
    do {
        ebx = Vfffffff4;
        edx = ebx + ebx;
        esi = Vffffffe0 + edx * 8;
        do {
            edx = Vffffffec;
            ecx = esi + edx;
            do {
                if(*ecx != 0) {
                    Vffffffe4 = Vffffffe4 + 1;
                    if(*A8 > Vfffffffc) {
                        di = Vfffffffc;
                        *A8 = di;
                    }
                    edi = *(A8 + 2);
                    if(edi <= Vfffffffc) {
                        edi = Vfffffffc + 1;
                        *(A8 + 2) = di;
                    }
                    if(ebx < *(A8 + 4)) {
                        *(A8 + 4) = bx;
                    }
                    if(ebx >= *(A8 + 6)) {
                        edi = ebx + 1;
                        *(A8 + 6) = di;
                    }
                    if(edx < *(A8 + 8)) {
                        *(A8 + 8) = dx;
                    }
                    if(edx >= *(A8 + 0xa)) {
                        edi = edx + 1;
                        *(A8 + 0xa) = di;
                    }
                }
                edx = edx + 1;
                ecx = ecx + 1;
            } while(edx < Vffffffe8);
            ebx = ebx + 1;
            esi = esi + 0x10;
        } while(ebx < Vfffffff0);
        Vfffffffc = Vfffffffc + 1;
        Vffffffe0 = Vffffffe0 + 0x100;
    } while(Vfffffffc < Vfffffff8);
    dx = *(A8 + 2) - *A8;
    *(A8 + 0xc) = dx;
    *(A8 + 0xe) = 0;
    edx = *(A8 + 6);
    edx = edx - *(A8 + 4);
    if(edx > *(A8 + 0xc)) {
        *(A8 + 0xc) = dx;
        *(A8 + 0xe) = 1;
    }
    edx = *(A8 + 0xa);
    edx = edx - *(A8 + 8);
    if(edx > *(A8 + 0xc)) {
        *(A8 + 0xc) = dx;
        *(A8 + 0xe) = 2;
    }
    return Vffffffe4;
}

/*    Procedure: 0x0044E568 - 0x0044EA89
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 16
 */

L0044E568(A14, A30, A34)
/* unknown */ void  A14;
/* unknown */ void  A30;
/* unknown */ void  A34;
{
    /* unknown */ void  ebx;
    /* unknown */ void  ebp;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffa98;
    /* unknown */ void  Vfffffa9c;
    /* unknown */ void  Vfffffaa0;
    /* unknown */ void  Vfffffaa4;
    /* unknown */ void  Vfffffaa5;
    /* unknown */ void  Vfffffaa6;
    /* unknown */ void  Vfffffaa8;
    /* unknown */ void  Vfffffaac;
    /* unknown */ void  Vfffffab0;
    /* unknown */ void  Vfffffab4;
    /* unknown */ void  Vfffffab8;
    /* unknown */ void  Vfffffabc;
    /* unknown */ void  Vfffffabe;
    /* unknown */ void  Vfffffac0;
    /* unknown */ void  Vfffffac2;
    /* unknown */ void  Vfffffac4;
    /* unknown */ void  Vfffffac6;
    /* unknown */ void  Vffffface;
    /* unknown */ void  Vfffffebc;
    /* unknown */ void  Vffffffc0;



    esp = esp + -1388;
    edi = & Vfffffebc;
    *L004f80a0(M0065764c);
    M00657658 = ax & 65535;
    Vfffffabc = 0;
    Vfffffabe = 0x10;
    Vfffffac0 = 0;
    Vfffffac2 = 0x10;
    Vfffffac4 = 0;
    Vfffffac6 = 0x10;
    Vfffffa9c = L0044E400( & Vfffffabc);
    if(Vfffffa9c > 0x40) {
        *(edi + 4) = & Vfffffabc;
        ebp = 1;
        ebx = & Vffffface;
        do {
            Vfffffaa0 = *(edi + 4);
            for(esi = 1; ebp >= esi + esi; esi = esi + esi) {
                eax = esi + esi;
                if(ebp > eax) {
                    dx = *( *(edi + eax * 4) + 0xc);
                    if(dx < *( *(edi + eax * 4 + 4) + 0xc)) {
                        eax = esi + esi;
                        *(edi + esi * 4) = *(edi + eax * 4 + 4);
                        esi = eax + 1;
                        continue;
                    }
                }
                *(edi + esi * 4) = *(edi + eax * 4);
            }
            *ebx = *(Vfffffaa0 + 2);
            *(ebx + 4) = *(Vfffffaa0 + 6);
            ax = *(Vfffffaa0 + 0xa);
            *(ebx + 8) = ax;
            if(eax = *(Vfffffaa0 + 0xe) - 1) {
                eax = *Vfffffaa0 + *(Vfffffaa0 + 2) >> 1;
                *(ebx - 2) = ax;
                *(Vfffffaa0 + 2) = ax;
                *(ebx + 2) = *(Vfffffaa0 + 4);
                *(ebx + 6) = *(Vfffffaa0 + 8);
            } else {
                == ? L0044e69c : ;
                if(eax = eax - 1) {
                    *(ebx - 2) = *Vfffffaa0;
                    ax = *(Vfffffaa0 + 4);
                    *(ebx + 2) = ax;
                    eax = *(Vfffffaa0 + 8) + *(Vfffffaa0 + 0xa) >> 1;
                    *(ebx + 6) = ax;
                    *(Vfffffaa0 + 0xa) = ax;
                }
            }
L0044e70c:
            L0044E400(Vfffffaa0);
            eax = ebp << 4;
            L0044E400(eax + & Vfffffabc);
            for(*(edi + esi * 4) = Vfffffaa0; esi > 1; esi = esi >> 1) {
                ax = *( *(edi + (esi >> 1) * 4) + 0xc);
                if(ax >= *( *(edi + esi * 4) + 0xc)) {
                    break;
                }
                eax = *(edi + (esi >> 1) * 4);
                edx = *(edi + esi * 4);
                *(edi + (esi >> 1) * 4) = edx;
                *(edi + esi * 4) = eax;
            }
            esi = ebp + 1;
            eax = ebp << 4;
            for(*(edi + esi * 4) = eax + & Vfffffabc; esi > 1; esi = esi >> 1) {
                ax = *( *(edi + (esi >> 1) * 4) + 0xc);
                if(ax >= *( *(edi + esi * 4) + 0xc)) {
                    break;
                }
                eax = *(edi + (esi >> 1) * 4);
                edx = *(edi + esi * 4);
                *(edi + (esi >> 1) * 4) = edx;
                *(edi + esi * 4) = eax;
            }
            ebp = ebp + 1;
            ebx = ebx + 0x10;
        } while(ebp < 0x40);
        goto L0044e7b0;
        ax = *Vfffffaa0;
        *(ebx - 2) = ax;
        eax = *(Vfffffaa0 + 4) + *(Vfffffaa0 + 6) >> 1;
        *(ebx + 2) = ax;
        *(Vfffffaa0 + 6) = ax;
        *(ebx + 6) = *(Vfffffaa0 + 8);
        goto L0044e70c;
L0044e7b0:
        esi = 0;
        Vfffffaac = & Vfffffabc;
        Vfffffaa8 = 6638625;
        do {
            *Vfffffaa8 = 0;
            Vfffffa98 = *Vfffffaac;
            Vfffffab8 = (Vfffffa98 << 5) * 8 + 6634528;
            for(Vfffffab0 = Vfffffaac + 2; *Vfffffab0 > Vfffffa98; A34 = A34 + 0x100) {
                edi = *(Vfffffab0 + 2);
                eax = edi + edi;
                Vfffffab4 = Vfffffab8 + eax * 8;
                for(ebp = Vfffffab0 + 4; edi < *ebp; A30 = A30 + 0x10) {
                    eax = *(ebp + 2);
                    edx = A30 + eax;
                    for(ecx = ebp + 4; eax < *ecx; edx = edx + 1) {
                        ebx = esi + 1;
                        *edx = bl;
                        eax = eax + 1;
                    }
                    edi = edi + 1;
                }
                A14 = A14 + 1;
            }
            esi = esi + 1;
            Vfffffaac = Vfffffaac + 0x10;
            Vfffffaa8 = Vfffffaa8 + 1;
        } while(esi < 0x40);
        *esp = 0x40;
    } else {
        *esp = 0;
        esi = 0;
        ebx = 6638625;
        Vfffffaa8 = & Vfffffabc;
        Vfffffaac = 6634528;
        do {
            eax = Vfffffaac;
            if(*eax != 0) {
                eax = *esp + 1;
                *Vfffffaac = al;
                eax = esi >> 8;
                *Vfffffaa8 = ax;
                eax = eax + 1;
                *(Vfffffaa8 + 2) = ax;
                ax = esi >> 4 & 0xf;
                *(Vfffffaa8 + 4) = ax;
                eax = eax + 1;
                *(Vfffffaa8 + 6) = ax;
                ax = esi & 0xf;
                *(Vfffffaa8 + 8) = ax;
                eax = Vfffffaa8;
                eax = *(eax + 8) + 1;
                *(Vfffffaa8 + 0xa) = ax;
                *ebx = 0;
                *esp = *esp + 1;
                ebx = ebx + 1;
                Vfffffaa8 = Vfffffaa8 + 0x10;
            }
            esi = esi + 1;
            Vfffffaac = Vfffffaac + 1;
        } while(esi < 0x1000);
    }
    edx = 0;
    esi = 0;
    ebx = & Vffffffc0;
    do {
        eax = M004f80b4 + esi + (M004f80b4 + esi) * 2;
        ecx = ( *(eax + 6638761) & 0xff) >> 2 << 4;
        ecx = (( *(eax + 6638760) & 0xff) >> 2 << 8) + 6634528 + ecx;
        eax = *(ecx + (( *(eax + 6638762) & 0xff) >> 2)) & 0xff;
        if(eax == 0 || *(eax + 6638624) != 0) {
            eax = esi;
            *ebx = al;
            edx = edx + 1;
            ebx = ebx + 1;
        } else {
            *(eax + 6638624) = esi + M004f80b4 + 0x80;
        }
        esi = esi + 1;
    } while(esi < 0x40);
    M00654ca4 = 0;
    esi = 0;
    Vfffffaac = & Vfffffabe;
    eax = esp + edx + 0x52c;
    Vfffffaa8 = eax;
    ebx = 6638625;
    if(0 < *esp) {
        do {
            if(*ebx == 0) {
                Vfffffaa8 = Vfffffaa8 - 1;
                *ebx = *Vfffffaa8 + M004f80b4 + 0x80;
            }
            eax = Vfffffaac;
            al = *eax;
            Vfffffaa4 = al + *(Vfffffaac - 2) + 0xff + al + *(Vfffffaac - 2) + 0xff + 1;
            eax = Vfffffaac;
            al = *(eax + 4);
            Vfffffaa5 = al + *(Vfffffaac + 2) + 0xff + al + *(Vfffffaac + 2) + 0xff + 1;
            eax = Vfffffaac;
            al = *(eax + 8);
            Vfffffaa6 = al + *(Vfffffaac + 6) + 0xff + al + *(Vfffffaac + 6) + 0xff + 1;
            eax = ( *ebx & 0xff) - 0x80;
            edx = eax + eax * 2;
            if(*(edx + 6638760) != Vfffffaa4 || *(edx + 6638761) != Vfffffaa5 || *(edx + 6638762) != Vfffffaa6) {
                *(M00654ca4 + 6638689) = al;
                M00654ca4 = M00654ca4 + 1;
                *(edx + 6638760) = Vfffffaa4;
                *(edx + 6638762) = Vfffffaa6;
            }
            esi = esi + 1;
            Vfffffaac = Vfffffaac + 0x10;
            ebx = ebx + 1;
        } while(esi < *esp);
    }
    eax = *L004f80a8(M00657658);
    M00657658 = eax;
    esp = esp + 0x56c;
    return M00657658;
}

/*    Procedure: 0x0044EA8A - 0x0044EB17
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 */

L0044EA8A()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 6638760;
    asm("cli");
    esi = 0;
    for(ebx = 6638689; esi < M00654ca4; ebx = ebx + 1) {
        L004710DD(0x3c8, ( *ebx & 0xff) + 0x80);
        L004710DD(0x3c9, *(edi + ( *ebx & 0xff) + ( *ebx & 0xff) * 2) & 0xff);
        L004710DD(0x3c9, *(edi + ( *ebx & 0xff) + ( *ebx & 0xff) * 2 + 1) & 0xff);
        eax = L004710DD(0x3c9, *(edi + ( *ebx & 0xff) + ( *ebx & 0xff) * 2 + 2) & 0xff);
        esi = esi + 1;
    }
    asm("sti");
    M004f80b4 = M004f80b4 ^ 0x40;
}

/*    Procedure: 0x0044EB18 - 0x0044EB4D
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045A154()
 */

L0044EB18(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A10 < 0) {
        return L0044EB80(A8, M004f80b8, M004f80bc, Ac, A10);
    }
    *A8 = Ac;
    *(A8 + 4) = A10;
}

/*    Procedure: 0x0044EB4E - 0x0044EB66
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00412C5C()
 *        L00427898()
 *        L00428244()
 *        L00429C28()
 *        L0042A968()
 *        L0042ECAE()
 *        L00431D4C()
 *        L004325FC()
 *        L00433BA4()
 *        L00437250()
 *        L0043F170()
 *        L004426FC()
 *        L00453121()
 *        L0045A044()
 */

L0044EB4E(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    *A8 = Ac + A14;
    asm("adc eax,[ebp+0x18]");
    *(A8 + 4) = A10;
}

/*    Procedure: 0x0044EB67 - 0x0044EB7F
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00423EE4()
 *        L00428070()
 *        L0042CEA4()
 *        L0043FC74()
 *        L00441700()
 */

L0044EB67(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{



    eax = A14;
    asm("cdq");
    eax = eax + Ac;
    *A8 = eax;
    asm("adc edx,[ebp+0x10]");
    *(A8 + 4) = edx;
}

/*    Procedure: 0x0044EB80 - 0x0044EB98
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00427898()
 *        L0042AA00()
 *        L0042ADEB()
 *        L00431BEE()
 *        L0043FDD8()
 *        L0044EB18()
 *        L0045A098()
 *        L0045A0EC()
 *        L0046D5F0()
 */

L0044EB80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    *A8 = Ac - A14;
    asm("sbb eax,[ebp+0x18]");
    *(A8 + 4) = A10;
}

/*    Procedure: 0x0044EB99 - 0x0044EBB5
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00423EE4()
 */

L0044EB99(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    A8 = A14;
    asm("cdq");
    A10 = Ac - A8;
    *A8 = A10;
    asm("sbb ecx,edx");
    *(A8 + 4) = A10;
}

/*    Procedure: 0x0044EBB6 - 0x0044EBDC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00431D4C()
 */

L0044EBB6(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = Ac;
    asm("mul dword [ebp+0x14]");
    *A8 = eax;
    *(A8 + 4) = edx;
    eax = A10;
    asm("mul dword [ebp+0x14]");
    *(A8 + 4) = *(A8 + 4) + eax;
    eax = Ac;
    asm("mul dword [ebp+0x18]");
    *(A8 + 4) = *(A8 + 4) + eax;
}

/*    Procedure: 0x0044EBDD - 0x0044EBFA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00439D78()
 *        L004531C8()
 *        L00453264()
 */

L0044EBDD(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    A10 = Ac;
    asm("mul dword [ebp+0x14]");
    *A8 = A10;
    *(A8 + 4) = edx;
    asm("mul dword [ebp+0x14]");
    *(A8 + 4) = *(A8 + 4) + A10;
}

/*    Procedure: 0x0044EBFB - 0x0044EC0F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0046D5F0()
 */

L0044EBFB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    asm("imul dword [ebp+0x10]");
    *A8 = Ac;
    *(A8 + 4) = edx;
}

/*    Procedure: 0x0044EC10 - 0x0044EC8F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043F26E()
 */

L0044EC10(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    if(eax != 0) {
        if(eax < 0) {
            eax = ~eax;
            if(eax < 0x20) {
                ecx = eax;
                ebx = *A8 >> cl;
                ecx = 0x20 - eax;
                *A8 = ebx | *(A8 + 4) << cl;
                *(A8 + 4) = *(A8 + 4) >> eax;
            } else {
                ecx = eax - 0x20;
                *A8 = *(A8 + 4) >> cl;
                eax = 0;
                *(A8 + 4) = 0;
            }
        } else {
            if(eax > 0) {
                if(eax < 0x20) {
                    ecx = eax;
                    ebx = *(A8 + 4) << cl;
                    ecx = 0x20 - eax;
                    *(A8 + 4) = ebx | *A8 >> cl;
                    *A8 = *A8 << eax;
                } else {
                    ecx = eax - 0x20;
                    *(A8 + 4) = *A8 << cl;
                    eax = 0;
                    *A8 = 0;
                }
            }
        }
    }
}

/*    Procedure: 0x0044EC90 - 0x0044ED0E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00427898()
 *        L00428244()
 *        L004287E4()
 *        L0042ADEB()
 *        L00431BEE()
 *        L00431D4C()
 *        L004325FC()
 *        L00433318()
 *        L00433BA4()
 *        L00439D78()
 *        L00452D02()
 */

L0044EC90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    if(eax != 0) {
        if(eax < 0) {
            eax = ~eax;
            if(eax < 0x20) {
                ecx = eax;
                ebx = *A8 >> cl;
                ecx = 0x20 - eax;
                *A8 = ebx | *(A8 + 4) << cl;
                *(A8 + 4) = *(A8 + 4) >> eax;
            } else {
                ecx = eax - 0x20;
                eax = *(A8 + 4) >> cl;
                *A8 = eax;
                *(A8 + 4) = *(A8 + 4) >> 0x1f;
            }
        } else {
            if(eax > 0) {
                if(eax < 0x20) {
                    ecx = eax;
                    ebx = *(A8 + 4) << cl;
                    ecx = 0x20 - eax;
                    *(A8 + 4) = ebx | *A8 >> cl;
                    *A8 = *A8 << eax;
                } else {
                    ecx = eax - 0x20;
                    *(A8 + 4) = *A8 << cl;
                    eax = 0;
                    *A8 = 0;
                }
            }
        }
    }
}

/*    Procedure: 0x0044ED0F - 0x0044ED3B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044ED0F()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    (save)ebx;
    ebx = *(ebp + 0x10);
    L00471258(ebx, "MODULE STRING");
    eax = ebx + L00471288("MODULE STRING") + 1;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x0044ED3C - 0x0044EE0F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044EE10()
 *        L0044EEA2()
 *        L0044F530()
 *        L0044F548()
 *        L0044F560()
 *        L0044F578()
 *        L0044F590()
 *        L0044F67E()
 */

L0044ED3C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -2048;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = Ac;
    ebx = A8;
    esi = ebx;
    if(eax >= 32768) {
        *( *((eax >> 9 & 0x3f) * 4 + 0x5001ec))(eax & 0x1ff, M00655628, ebx);
    } else {
        if(eax >= 16384) {
            *L005000c4(ebx, eax);
        } else {
            if(eax >= 12288) {
                *( *(eax * 4 + 0x4f4280))(ebx);
            }
        }
    }
    edi = L0041757C(0);
    if(M00655628 != 0) {
        L00417568(0, *M00655628);
    }
    ebx = L004164E4(ebp + -2048, 0x800, esi);
    ebx = ebx - ebp + -2048 + esi + 1;
    L00471128(esi, ebp + -2048, ebx - esi);
    L00417568(0, edi);
    eax = ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0044EE10 - 0x0044EE2A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EE10(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M00655628 = A10;
    return L0044ED3C(A8, Ac);
}

/*    Procedure: 0x0044EE2B - 0x0044EE4A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EE2B(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return *L005000d0(A8, *((Ac & 16383) * 4 + 0x4d15b0));
}

/*    Procedure: 0x0044EE4B - 0x0044EE7F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EE4B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M00655628 = A10;
    return *( *((Ac >> 9 & 0x3f) * 4 + 0x5001ec))(Ac & 0x1ff, M00655628, A8);
}

/*    Procedure: 0x0044EE80 - 0x0044EEA1
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EE80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    M00655628 = A10;
    return *L005000d0(A8, *(A14 + Ac * 4));
}

/*    Procedure: 0x0044EEA2 - 0x0044EF0B
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L0044EEA2(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = Ac;
    for(eax = A8; 1; eax = eax + 1) {
        dl = *ebx;
        ebx = ebx + 1;
        eax = eax + 1;
        *(eax - 1) = dl;
        if(dl == 0) {
            break;
        }
        if(dl & 0x80) {
            continue;
        }
        eax = eax - 1;
        if(dl = dl - 0xfd) {
            *eax = 0x1e;
            eax = eax + 1;
            *eax = *ebx;
            ebx = ebx + 1;
            eax = eax + 1;
            continue;
        }
        if(dl = dl - 1) {
            *eax = 0x1f;
            eax = eax + 1;
            *eax = *ebx;
            ebx = ebx + 1;
            eax = eax + 1;
            *eax = *ebx;
            ebx = ebx + 1;
            eax = eax + 1;
            continue;
        }
        if(dl = dl - 1) {
            edx = ( *ebx & 0xff) << 8;
            ebx = ebx + 1;
            edx = edx + ( *ebx & 0xff);
            ebx = ebx + 1;
            eax = L0044ED3C(eax, edx) - 1;
            continue;
        }
    }
}

/*    Procedure: 0x0044EF0C - 0x0044EF13
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF0C(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x0044EF14 - 0x0044EF1B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF14(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x0044EF1C - 0x0044EF34
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF1C(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, *M00655628, 0);
}

/*    Procedure: 0x0044EF35 - 0x0044EF4E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF35(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, *(M00655628 + 4), 0);
}

/*    Procedure: 0x0044EF4F - 0x0044EF68
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF4F(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, *(M00655628 + 8), 0);
}

/*    Procedure: 0x0044EF69 - 0x0044EF81
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF69(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, *M00655628, 1);
}

/*    Procedure: 0x0044EF82 - 0x0044EF9B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF82(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, *(M00655628 + 4), 1);
}

/*    Procedure: 0x0044EF9C - 0x0044EFB5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EF9C(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, *(M00655628 + 8), 1);
}

/*    Procedure: 0x0044EFB6 - 0x0044EFCD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044EFB6(A8)
/* unknown */ void  A8;
{



    return L0044F097(A8, M00644ba8, 1);
}

/*    Procedure: 0x0044EFCE - 0x0044F096
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044F097()
 */

L0044EFCE()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    *(ebp - 2) = 0x16d;
    *(ebp - 4) = *(ebp - 2) + 1;
    eax = *(ebp - 2);
    bx = eax + eax * 2 + *(ebp - 4);
    *(ebp - 5) = 0x1c;
    *(ebp - 6) = *(ebp - 5) + 1;
    (save)bx;
    eax = edi;
    (restore)edx;
    ecx = edx;
    edx = 0;
    edx = ecx / ecx % ecx / ecx;
    eax = eax << 2;
    *( *(ebp + 0x14)) = eax;
    eax = bx;
    asm("imul ecx");
    (save)eax;
    eax = edi;
    (restore)edx;
    eax = eax - edx;
    edx = 0x500241;
    ecx = eax;
    if(!(eax = eax - *(ebp - 4))) {
        ecx = eax;
        *( *(ebp + 0x14)) = *( *(ebp + 0x14)) + 1;
        *L00500241 = *(ebp - 5);
        if(!(eax = eax - *(ebp - 2))) {
            ecx = eax;
            *( *(ebp + 0x14)) = *( *(ebp + 0x14)) + 1;
            if(!(eax = eax - *(ebp - 2))) {
                *( *(ebp + 0x14)) = *( *(ebp + 0x14)) + 1;
            } else {
                eax = ecx;
            }
        } else {
            eax = ecx;
        }
    } else {
        *edx = *(ebp - 6);
        eax = ecx;
    }
    edx = 0x500240;
    do {
        *esi = eax;
        eax = eax - *edx;
        edx = edx + 1;
    } while(eax >= 0);
    *esi = *esi + 1;
    edx = edx - 0x500240;
    eax = *(ebp + 0x10);
    *eax = edx;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0044F097 - 0x0044F108
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 4
 *    Called by:
 *        L00415010()
 *        L0041D8B4()
 *        L0044EF1C()
 *        L0044EF35()
 *        L0044EF4F()
 *        L0044EF69()
 *        L0044EF82()
 *        L0044EF9C()
 *        L0044EFB6()
 */

L0044F097(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L0044EFCE(Ac, & Vfffffff4, & Vfffffff8, & Vfffffffc);
    ebx = L00454088(A8, Vfffffff4);
    *(ebx - 1) = 0x2d;
    eax = L0044F109(Vfffffff8);
    *ebx = *eax;
    eax = eax + 1;
    ebx = ebx + 1;
    *ebx = *eax;
    eax = eax + 1;
    ebx = ebx + 1;
    *ebx = *eax;
    ebx = ebx + 1;
    if(A10 == 0) {
        *ebx = 0;
        ebx = ebx + 1;
    } else {
        *ebx = 0x2d;
        ebx = L00454088(ebx + 1, Vfffffffc);
    }
    return ebx;
}

/*    Procedure: 0x0044F109 - 0x0044F12B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044F097()
 */

L0044F109(A8)
/* unknown */ void  A8;
{



    if(A8 < 1 || A8 > 0xc) {
        edx = M0050024c;
        return edx;
    }
    edx = *(A8 * 4 + 0x50024c);
    return edx;
}

/*    Procedure: 0x0044F12C - 0x0044F143
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F12C(A8)
/* unknown */ void  A8;
{



    return L0044F173(A8, *(M00655628 + 8));
}

/*    Procedure: 0x0044F144 - 0x0044F15B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F144(A8)
/* unknown */ void  A8;
{



    return L0044F173(A8, *(M00655628 + 4));
}

/*    Procedure: 0x0044F15C - 0x0044F172
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F15C(A8)
/* unknown */ void  A8;
{



    return L0044F173(A8, *M00655628);
}

/*    Procedure: 0x0044F173 - 0x0044F1E0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041D8B4()
 *        L0044F12C()
 *        L0044F144()
 *        L0044F15C()
 */

L0044F173(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edx = 0;
    edx = 49710 / 49710 % 49710 / 49710;
    ebx = Ac;
    eax = ebx;
    edx = 0;
    edx = 0xe10 / 0xe10 % 0xe10 / 0xe10;
    ecx = eax;
    eax = ebx;
    edx = 0;
    ebx = 0xe10 / 0xe10 % 0xe10 / 0xe10;
    eax = ebx;
    edx = 0;
    edx = 0x3c / 0x3c % 0x3c / 0x3c;
    edi = eax;
    eax = ebx;
    edx = 0;
    L00474830(A8, "%02i:%02i:%02i", ecx, edi, 0x3c / 0x3c % 0x3c / 0x3c);
    return A8 + L00471288(A8);
}

/*    Procedure: 0x0044F1E1 - 0x0044F1F9
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044F5A7()
 */

L0044F1E1(A8)
/* unknown */ void  A8;
{



    return *L005000d0(A8, *(M00655628 + 0xc));
}

/*    Procedure: 0x0044F1FA - 0x0044F212
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F1FA(A8)
/* unknown */ void  A8;
{



    return *L005000d0(A8, *(M00655628 + 0x10));
}

/*    Procedure: 0x0044F213 - 0x0044F22A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F213(A8)
/* unknown */ void  A8;
{



    return L00453FF0(A8, *(M00655628 + 8));
}

/*    Procedure: 0x0044F22B - 0x0044F242
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F22B(A8)
/* unknown */ void  A8;
{



    return L00453FF0(A8, *(M00655628 + 4));
}

/*    Procedure: 0x0044F243 - 0x0044F259
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F243(A8)
/* unknown */ void  A8;
{



    return L00453FF0(A8, *M00655628);
}

/*    Procedure: 0x0044F25A - 0x0044F292
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0044F25A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A8;
    esi = *(M00655628 + 8);
    if(esi != 0) {
        ebx = L00454088(ebx, esi) - 1;
        *ebx = 0x74;
        ebx = ebx + 1;
        *ebx = 0;
        ebx = ebx + 1;
    } else {
        *ebx = 0x2d;
        ebx = ebx + 1;
        *ebx = 0;
        ebx = ebx + 1;
    }
    return ebx;
}

/*    Procedure: 0x0044F293 - 0x0044F2CB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0044F293(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A8;
    esi = *(M00655628 + 4);
    if(esi != 0) {
        ebx = L00454088(ebx, esi) - 1;
        *ebx = 0x74;
        ebx = ebx + 1;
        *ebx = 0;
        ebx = ebx + 1;
    } else {
        *ebx = 0x2d;
        ebx = ebx + 1;
        *ebx = 0;
        ebx = ebx + 1;
    }
    return ebx;
}

/*    Procedure: 0x0044F2CC - 0x0044F303
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0044F2CC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A8;
    esi = *M00655628;
    if(esi != 0) {
        ebx = L00454088(ebx, esi) - 1;
        *ebx = 0x74;
        ebx = ebx + 1;
        *ebx = 0;
        ebx = ebx + 1;
    } else {
        *ebx = 0x2d;
        ebx = ebx + 1;
        *ebx = 0;
        ebx = ebx + 1;
    }
    return ebx;
}

/*    Procedure: 0x0044F304 - 0x0044F31B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F304(A8)
/* unknown */ void  A8;
{



    return L00454088(A8, *(M00655628 + 0xc));
}

/*    Procedure: 0x0044F31C - 0x0044F333
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F31C(A8)
/* unknown */ void  A8;
{



    return L00454088(A8, *(M00655628 + 0x10));
}

/*    Procedure: 0x0044F334 - 0x0044F34B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F334(A8)
/* unknown */ void  A8;
{



    return L00454088(A8, *(M00655628 + 8));
}

/*    Procedure: 0x0044F34C - 0x0044F363
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F34C(A8)
/* unknown */ void  A8;
{



    return L00454088(A8, *(M00655628 + 4));
}

/*    Procedure: 0x0044F364 - 0x0044F37A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F364(A8)
/* unknown */ void  A8;
{



    return L00454088(A8, *M00655628);
}

/*    Procedure: 0x0044F37B - 0x0044F3FB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00415010()
 *        L0044F3FC()
 *        L0044F415()
 *        L0044F42F()
 *        L0044F449()
 *        L0044F462()
 *        L0044F47C()
 *        L0044F496()
 *        L0044F4AF()
 *        L0044F4C9()
 *        L0044F4E3()
 *        L0044F4FC()
 *        L0044F516()
 *        L0044F5C4()
 */

L0044F37B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    ebx = A8;
    edi = ebx;
    ebx = L004540A0(ebx, 0, Ac);
    eax = L00471288(edi);
    if(A10 >= eax) {
        edx = A10 + 1 - eax;
        ebx = ebx + edx;
        *(ebp - 4) = ebx;
        ebx = *(ebp - 4) - 1;
        eax = eax + 1;
        do {
            *ebx = *(ebx - edx);
            eax = eax - 1;
            ebx = ebx - 1;
        } while(eax > 0);
        ebx = edi;
        eax = edx;
        do {
            *ebx = 0x30;
            ebx = ebx + 1;
            eax = eax - 1;
        } while(eax > 0);
        ebx = *(ebp - 4);
    }
    *ebx = 0;
    ebx = ebx - 1;
    eax = 1;
    if(A10 >= 1) {
        do {
            *ebx = *(ebx - 1);
            ebx = ebx - 1;
            eax = eax + 1;
        } while(A10 >= eax);
    }
    *ebx = 0x2e;
    return A10 + ebx + 2;
}

/*    Procedure: 0x0044F3FC - 0x0044F414
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F3FC(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *M00655628, 1);
}

/*    Procedure: 0x0044F415 - 0x0044F42E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F415(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 4), 1);
}

/*    Procedure: 0x0044F42F - 0x0044F448
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F42F(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 8), 1);
}

/*    Procedure: 0x0044F449 - 0x0044F461
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F449(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *M00655628, 2);
}

/*    Procedure: 0x0044F462 - 0x0044F47B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F462(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 4), 2);
}

/*    Procedure: 0x0044F47C - 0x0044F495
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F47C(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 8), 2);
}

/*    Procedure: 0x0044F496 - 0x0044F4AE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F496(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *M00655628, 3);
}

/*    Procedure: 0x0044F4AF - 0x0044F4C8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F4AF(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 4), 3);
}

/*    Procedure: 0x0044F4C9 - 0x0044F4E2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F4C9(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 8), 3);
}

/*    Procedure: 0x0044F4E3 - 0x0044F4FB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F4E3(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *M00655628, 1);
}

/*    Procedure: 0x0044F4FC - 0x0044F515
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F4FC(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 4), 2);
}

/*    Procedure: 0x0044F516 - 0x0044F52F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F516(A8)
/* unknown */ void  A8;
{



    return L0044F37B(A8, *(M00655628 + 8), 3);
}

/*    Procedure: 0x0044F530 - 0x0044F547
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F530(A8)
/* unknown */ void  A8;
{



    return L0044ED3C(A8, *(M00655628 + 0x10));
}

/*    Procedure: 0x0044F548 - 0x0044F55F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F548(A8)
/* unknown */ void  A8;
{



    return L0044ED3C(A8, *(M00655628 + 0xc));
}

/*    Procedure: 0x0044F560 - 0x0044F577
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F560(A8)
/* unknown */ void  A8;
{



    return L0044ED3C(A8, *(M00655628 + 8));
}

/*    Procedure: 0x0044F578 - 0x0044F58F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F578(A8)
/* unknown */ void  A8;
{



    return L0044ED3C(A8, *(M00655628 + 4));
}

/*    Procedure: 0x0044F590 - 0x0044F5A6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F590(A8)
/* unknown */ void  A8;
{



    return L0044ED3C(A8, *M00655628);
}

/*    Procedure: 0x0044F5A7 - 0x0044F5C3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0044F5A7(A8)
/* unknown */ void  A8;
{



    L0044F1E1(A8);
    return *L005000d4(A8, 0x23);
}

/*    Procedure: 0x0044F5C4 - 0x0044F636
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044F637()
 *        L0044F64F()
 *        L0044F667()
 */

L0044F5C4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = Ac;
    ecx = A8;
    if(ebx <= 290909) {
        (save)1;
        eax = ebx * 0x156;
        ebx = 0x64;
        asm("cdq");
        edx = ebx / ebx % ebx / ebx;
        (save)eax;
        (save)ecx;
        esp = esp + 0xc;
        ecx = *L005000d0(L0044F37B() - 1, M005000e4);
    } else {
        (save)2;
        eax = ebx;
        ebx = 0x69;
        asm("cdq");
        edx = ebx / ebx % ebx / ebx;
        (save)eax;
        (save)ecx;
        esp = esp + 0xc;
        ecx = *L005000d0(L0044F37B() - 1, M005000e8);
    }
    return ecx;
}

/*    Procedure: 0x0044F637 - 0x0044F64E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F637(A8)
/* unknown */ void  A8;
{



    return L0044F5C4(A8, *(M00655628 + 8));
}

/*    Procedure: 0x0044F64F - 0x0044F666
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F64F(A8)
/* unknown */ void  A8;
{



    return L0044F5C4(A8, *(M00655628 + 4));
}

/*    Procedure: 0x0044F667 - 0x0044F67D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F667(A8)
/* unknown */ void  A8;
{



    return L0044F5C4(A8, *M00655628);
}

/*    Procedure: 0x0044F67E - 0x0044F6AB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0044F7B7()
 *        L0044F80E()
 *        L0044F860()
 */

L0044F67E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = A8;
    L0044ED3C(ebx, Ac);
    if(A10 != 0) {
        ebx = *L005000d4(ebx, A10);
    }
    return ebx;
}

/*    Procedure: 0x0044F6AC - 0x0044F7B6
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 12
 */

L0044F6AC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    edx = 0;
    Vfffffff4 = 0;
    edi = ebx;
    esi = Ac;
    goto L0044f7a3;
L0044f74f:
    eax = ebx;
    goto L0044f7b0;
L0044f784:
    eax = ebx;
    goto L0044f7b0;
L0044f7a3:
    while(1) {
        al = *ebx;
        ebx = ebx + 1;
        if(al == 0) {
            break;
        }
        if(al != 1) {
            if(al != 2) {
                if(al == 3) {
                    continue;
                }
                if(*((al & 0xff) + 0x5000ec) >= 0) {
                    esi = esi - *((al & 0xff) + 0x5000ec);
                    if(esi <= Vfffffffc && Vfffffff4 != 0 && edx > 0) {
                        do {
                            ebx = ebx - 1;
                            if(*ebx == 0x20) {
                                goto L0044f759;
                            }
                        } while(edi != ebx);
                        goto L0044f74f;
L0044f759:
                        *ebx = 3;
                        ebx = ebx + 1;
                        esi = Vfffffff8;
                        Vfffffff4 = 0;
                    }
                    if(esi > 0 || al == 0xd) {
                        continue;
                    }
                    do {
                        ebx = ebx - 1;
                        if(*ebx == 0x20) {
                            goto L0044f78e;
                        }
                        if(edi != ebx) {
                            continue;
                        }
                        do {
                            al = *ebx;
                            ebx = ebx + 1;
                        } while(al != 0x20 && *ebx != 0);
                    } while(*ebx != 0);
                    goto L0044f784;
L0044f78e:
                    *ebx = 0xd;
                    ebx = ebx + 1;
                    esi = Ac;
                    if(edx > 0) {
                        edx = edx - 0xa;
                    }
                    Vfffffff4 = 1;
                    continue;
                }
                esi = Ac;
                Vfffffff4 = 1;
                if(edx <= 0) {
                    continue;
                }
                edx = edx - 0xa;
                continue;
            }
            al = *ebx;
            ebx = ebx + 1;
            eax = L00457DBC(al);
            edx = *(eax + 1) & 0xff;
            Vfffffffc = esi;
            Vfffffff8 = esi - *(eax + 2) + 0xa;
            esi = Vfffffff8;
            Vfffffff4 = 0;
            continue;
        }
        ebx = ebx + 1;
    }
    eax = ebx;
L0044f7b0:
}

/*    Procedure: 0x0044F7B7 - 0x0044F80D
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 8
 */

L0044F7B7(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6639144;
    M00655628 = Ac;
    L0044F67E(6639144, A8, A1c);
    ebx = 1;
    for(eax = 0; *(esi + eax) != 0; eax = eax + 1) {
        if(*(esi + eax) == 0xd && *(esi + eax + 1) != 0) {
            ebx = ebx + 1;
        }
    }
    L004557C8(esi, A14, A18, A10);
    return ebx;
}

/*    Procedure: 0x0044F80E - 0x0044F83B
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044F83C()
 */

L0044F80E(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    L0044F67E(6639144, A8, A18);
    return L00455564(6639144, A10, A14, Ac);
}

/*    Procedure: 0x0044F83C - 0x0044F85F
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F83C(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    M00655628 = Ac;
    return L0044F80E(A8, A10, A14, A18, A1c);
}

/*    Procedure: 0x0044F860 - 0x0044F895
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F860(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    M00655628 = Ac;
    L0044F67E(6639144, A8, A1c);
    return L004554A4(6639144, A14, A18, A10);
}

/*    Procedure: 0x0044F896 - 0x0044F897
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F896()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0044F898 - 0x0044F8CF
 *    Argument size: -24
 *    Local size: 32
 *    Save regs size: 0
 *    Called by:
 *        L0044F8D0()
 *        L0044FA8C()
 *        L0044FF28()
 */

L0044F898(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    Vffffffe0 = 0x205;
    Vffffffe4 = A8;
    Vffffffe8 = *(Ac + 4) & 65535;
    Vffffffec = *Ac;
    return L00470FE8(0x31, & Vffffffe0, & Vffffffe0);
}

/*    Procedure: 0x0044F8D0 - 0x0044F936
 *    Argument size: 8
 *    Local size: 52
 *    Save regs size: 4
 *    Called by:
 *        L0044F9A0()
 *        L0044FCE0()
 */

L0044F8D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffce;
    /* unknown */ void  Vffffffd2;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vffffffd8 = 0x204;
    Vffffffdc = A8;
    L00470FE8(0x31, & Vffffffd8, & Vffffffd8);
    L004710EC( & Vffffffcc);
    eax = Vffffffe4;
    ax = Vffffffe0;
    eax = L00459C38(Ac, Vffffffd2, eax, eax);
    Vfffffffc = Vffffffce;
    Vfffffff8 = eax;
    (save) & Vfffffff8;
    (save)A8;
    return L0044F898();
}

/*    Procedure: 0x0044F937 - 0x0044F937
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F937()
{



}

/*    Procedure: 0x0044F938 - 0x0044F972
 *    Argument size: 8
 *    Local size: 32
 *    Save regs size: 4
 *    Called by:
 *        L0044F9A0()
 *        L0044FCE0()
 */

L0044F938(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;



    Vffffffe0 = 0x204;
    Vffffffe4 = Ac;
    L00470FE8(0x31, & Vffffffe0, & Vffffffe0);
    *(A8 + 4) = Vffffffe8;
    eax = Vffffffec;
    *A8 = eax;
    return *A8;
}

/*    Procedure: 0x0044F973 - 0x0044F973
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F973()
{



}

/*    Procedure: 0x0044F974 - 0x0044F99E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C5F2()
 */

L0044F974(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax * 4 + 0x500fc4) < 0) {
        return 0;
    }
    eax = *( *(eax * 4 + 0x500fc4) + 0x5014cc) & 0xff;
    eax :: 1;
    asm("sbb eax,eax");
    return ~eax;
}

/*    Procedure: 0x0044F99F - 0x0044F99F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044F99F()
{



}

/*    Procedure: 0x0044F9A0 - 0x0044FA88
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L0044F9A0()
{



    L0044F938(0x500fbe, 9);
    L0044AE51(0x44fb74, 0x118);
    L0044AE51(6642092, 4);
    L0044AE51(6642088, 1);
    L0044AE51(0x5014cc, 0x100);
    L0044AE51(0x5014c8, 4);
    L0044AE51(6642089, 1);
    L0044AE51(6642096, 4);
    L0044AE51(0x5013c4, 0x100);
    L0044AE51(0x5014c4, 1);
    L0044AE51(6641280, 1);
    L0044AE51(0x470fdc, 0xc8);
    L0044AE51(0x4710dd, 0xc8);
    return L0044F8D0(9, 0x44fb78);
}

/*    Procedure: 0x0044FA89 - 0x0044FA8B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FA89()
{



}

/*    Procedure: 0x0044FA8C - 0x0044FB41
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00419838()
 *        L0045397C()
 */

L0044FA8C()
{



    L0044AE92(6641280, 1);
    L0044AE92(0x5014c4, 1);
    L0044AE92(0x5013c4, 0x100);
    L0044AE92(6642096, 4);
    L0044AE92(6642089, 1);
    L0044AE92(0x5014c8, 4);
    L0044AE92(0x5014cc, 0x100);
    L0044AE92(6642088, 1);
    L0044AE92(6642092, 4);
    L0044AE92(0x44fb74, 0x118);
    (save)0x500fbe;
    (save)9;
    return L0044F898();
}

/*    Procedure: 0x0044FB42 - 0x0044FB43
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FB42()
{



}

/*    Procedure: 0x0044FB44 - 0x0044FB49
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044FC8D()
 */

L0044FB44()
{



    return M00655680;
}

/*    Procedure: 0x0044FB4A - 0x0044FB4B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FB4A()
{



}

/*    Procedure: 0x0044FB4C - 0x0044FB58
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044FC8D()
 *        L0044FCBF()
 *        L004504D2()
 */

L0044FB4C(A8)
/* unknown */ void  A8;
{



    M00655680 = A8;
    return M00655680;
}

/*    Procedure: 0x0044FB59 - 0x0044FB61
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FB59()
{



    return M005014c4;
}

/*    Procedure: 0x0044FB62 - 0x0044FB70
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FB62(A8)
/* unknown */ void  A8;
{



    M005014c4 = A8;
    return M005014c4;
}

/*    Procedure: 0x0044FB71 - 0x0044FB74
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FB71()
{



}

/*    Procedure: 0x0044FB75 - 0x0044FC89
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L0044FB75()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    L00470FDC(0x60);
    ebx = al & 0xff;
    esi = L00470FDC(0x61) & 0xff | 0x80;
    L004710DD(0x61, esi);
    L004710DD(0x61, esi & 0x7f);
    M006559ac = ebx;
    if(ebx == 0xe0) {
        M006559a8 = M006559a8 | 1;
    } else {
        eax = ebx & 0x7f;
        if(!(M006559a8 & 1)) {
            M006559a8 = M006559a8 & 0xfe;
            esi = 0x80;
        } else {
            esi = 0;
        }
        edx = eax + 0x5014cc;
        *(edx + esi) = ebx & 0x80;
        if(!(bl & 0x80)) {
            edx = esi | eax;
            if(edx != (M006559a9 & 0xff)) {
                M005014c8 = 1;
                edx = eax;
                M006559a9 = dl | esi;
            }
            edx = M005014f6 & M00501502 & 0xff | eax;
            M006559b0 = edx;
            if(( *((eax | M005014f6 & M00501502 & 0xff) + 0x5013c4) & 0xff & 0xff) != 0xff && M005014c4 == 0) {
                M00655680 = al;
            }
        }
    }
    L004710DD(0x20, 0x20);
    return 0;
}

/*    Procedure: 0x0044FC8A - 0x0044FC8C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FC8A()
{



}

/*    Procedure: 0x0044FC8D - 0x0044FCBE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L0044FC8D()
{
    /* unknown */ void  ebx;



    L0044FB44();
    if(al == 0xfd) {
        L00450B54();
        L0044FB4C(0);
    }
    L0045811C();
    ebx = L0044FB44();
    L0044FB4C(0);
    return ebx;
}

/*    Procedure: 0x0044FCBF - 0x0044FCCE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FCBF(A8)
/* unknown */ void  A8;
{



    return L0044FB4C(A8);
}

/*    Procedure: 0x0044FCCF - 0x0044FCD7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FCCF()
{



    asm("sti");
    return *L00655670();
}

/*    Procedure: 0x0044FCD8 - 0x0044FCD8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FCD8()
{



}

/*    Procedure: 0x0044FCD9 - 0x0044FCDC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FCD9()
{



}

/*    Procedure: 0x0044FCDD - 0x0044FCDF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FCDD()
{



}

/*    Procedure: 0x0044FCE0 - 0x0044FF24
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L0044FCE0()
{



    L0044F938(0x500fb8, 8);
    L004710DD(0x21, L00470FDC(0x21) | 1);
    L0044AE51(0x44ffa8, 0xe4);
    L0044AE51(6642100, 4);
    L0044AE51(0x506374, 4);
    L0044AE51(6649400, 4);
    L0044AE51(0x5015dc, 4);
    L0044AE51(0x5015d8, 1);
    L0044AE51(0x5015d4, 4);
    L0044AE51(0x5015cc, 1);
    L0044AE51(0x502e68, 4);
    L0044AE51(0x5015e0, 4);
    L0044AE51(0x503078, 4);
    L0044AE51(0x5015d0, 4);
    L0044AE51(0x4500f8, 0xe8);
    L0044AE51(0x5015fc, 4);
    L0044AE51(0x5015f8, 1);
    L0044AE51(6642104, 4);
    L0044AE51(0x501604, 4);
    L0044AE51(0x501601, 1);
    L0044AE51(6642108, 4);
    L0044AE51(0x5015f4, 4);
    L0044AE51(6641272, 4);
    L0044AE51(0x5015f0, 4);
    L0044AE51(6641276, 4);
    L0044AE51(0x5015ec, 4);
    L0044AE51(6641281, 4);
    L0044AE51(0x5015e4, 4);
    L0044AE51(0x5015e8, 4);
    L0044AE51(0x450090, 0x64);
    L0044AE51(0x4710dd, 0xc8);
    L0044F8D0(8, 0x44ffac);
    L004710DD(0x43, 0x3e);
    L004710DD(0x40, 0xb);
    L004710DD(0x40, 0x17);
    return L004710DD(0x21, L00470FDC(0x21) & 0xfe);
}

/*    Procedure: 0x0044FF25 - 0x0044FF27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FF25()
{



}

/*    Procedure: 0x0044FF28 - 0x0044FFA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045397C()
 */

L0044FF28()
{



    L004710DD(0x21, L00470FDC(0x21) | 1);
    (save)0x500fb8;
    (save)8;
    L0044F898();
    L004710DD(0x43, 0x3e);
    L004710DD(0x40, 0xff);
    L004710DD(0x40, 0xff);
    L004710DD(0x21, L00470FDC(0x21) & 0xfe);
    return L004710DD(0x61, L00470FDC(0x61) & 0xfe);
}

/*    Procedure: 0x0044FFA8 - 0x0044FFA8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FFA8()
{



}

/*    Procedure: 0x0044FFA9 - 0x00450088
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0044FFA9()
{



    M006559b4 = M006559b4 + 0x78;
    if(M006559b4 > 0 && M00506374 != 0) {
        M006559b4 = M006559b4 - 0xc8;
        L0044E2F7();
    }
    asm("sti");
    M00657638 = M00657638 + 1;
    M005015dc = M005015dc + 1;
    if(!(M005015d8 & 2)) {
        M005015d8 = M005015d8 | 2;
        M005015d4 = M005015d4 + 1;
        M005015cc = M005015cc - 1;
        if(M005015cc == 0) {
            M005015cc = 4;
            L004500FC();
        }
        M005015d8 = M005015d8 & 0xfd;
    }
    if(!(M005015d8 & 1)) {
        M005015d8 = M005015d8 | 1;
        if(!(M00502e68 & 2) && !(M005015e0 = M005015e0 - 1)) {
            M005015e0 = M005015e0 + 1;
            if(M00503078 != 0) {
                M00502e68 = M00502e68 | 4;
            }
        }
        M005015d8 = M005015d8 & 0xfe;
    }
    M005015d0 = M005015d0 - 0x170c;
    if(M005015d0 < 0) {
        M005015d0 = M005015d0 + 65536;
        return 1;
    }
    L004710DD(0x20, 0x20);
    return 0;
}

/*    Procedure: 0x00450089 - 0x0045008C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450089()
{



}

/*    Procedure: 0x0045008D - 0x00450090
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045008D()
{



}

/*    Procedure: 0x00450091 - 0x00450093
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450091()
{



}

/*    Procedure: 0x00450094 - 0x004500F3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004500FC()
 */

L00450094(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A8;
    if(eax != 0) {
        if(eax <= 0) {
            goto L004500ad;
        }
        eax = eax - 6;
        if(eax < 0) {
            eax = 0;
            goto L004500b6;
L004500ad:
            eax = eax + 6;
            if(eax > 0) {
                eax = 0;
            }
        }
    }
L004500b6:
    if(*(Ac + 0x5014cc) == 0) {
        if(eax < 0) {
            eax = 0;
        }
        eax = eax + 0xa;
        if(eax < 0) {
            eax = 32767;
        }
    }
    if(*(A10 + 0x5014cc) == 0) {
        if(eax > 0) {
            eax = 0;
        }
        eax = eax - 0xa;
        if(eax > 0) {
            eax = -32767;
        }
    }
}

/*    Procedure: 0x004500F4 - 0x004500F4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004500F4()
{



}

/*    Procedure: 0x004500F5 - 0x004500F8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004500F5()
{



}

/*    Procedure: 0x004500F9 - 0x004500FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004500F9()
{



}

/*    Procedure: 0x004500FC - 0x004501DF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044FFA9()
 */

L004500FC()
{



    if(M005015fc != 0) {
        M005015fc = M005015fc + 1;
        if(M005015f8 == 0) {
            M005015fc = 0;
            M006559b8 = 0;
        }
    }
    if(M00501604 != 0) {
        M00501604 = M00501604 + 1;
        if(M00501601 == 0) {
            M00501604 = 0;
            M006559bc = 0;
        }
    }
    if(M005015f4 != 0) {
        M005015f4 = M005015f4 - 1;
    }
    M00655678 = M00655678 + M005015f0;
    M0065567c = M0065567c + 0x3e2;
    if(M005015ec != 0) {
        M005015ec = M005015ec + 1;
    }
    if(M00655682 != 0xff) {
        M00655682 = M00655682 + 1;
    }
    M005015e4 = L00450094(M005015e4, 0x34, 0x33);
    M005015e8 = L00450094(M005015e8, 0x1e, 0x2c);
    if(M005014c8 != 0) {
        eax = M006559a9 & 0xff;
        if(*(eax + 0x5014cc) != 0) {
            M005014c8 = 0;
            return 0;
        }
        M005014c8 = M005014c8 + 1;
    }
}

/*    Procedure: 0x004501E0 - 0x004501E0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004501E0()
{



}

/*    Procedure: 0x004501E1 - 0x004501E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004501E1()
{



}

/*    Procedure: 0x004501E4 - 0x0045029C
 *    Argument size: 0
 *    Local size: 32
 *    Save regs size: 4
 *    Called by:
 *        L00455A28()
 */

L004501E4()
{
    /* unknown */ void  ebx;



    ebx = esp;
    *ebx = 0;
    eax = L00470FE8(0x33, ebx, ebx);
    if(*ebx == 65535) {
        M00501609 = 1;
        *ebx = 4;
        *(ebx + 8) = 0xa0;
        *(ebx + 0xc) = 0x64;
        L00470FE8(0x33, ebx, ebx);
        *ebx = 7;
        *(ebx + 8) = 0;
        *(ebx + 0xc) = 0x13f;
        L00470FE8(0x33, ebx, ebx);
        *ebx = 8;
        *(ebx + 8) = 0;
        *(ebx + 0xc) = 0xc6;
        eax = L00470FE8(0x33, ebx, ebx);
    }
    M00657640 = 0xa0;
    M00657642 = 0x64;
    if(!(M00501609 & 1)) {
        *ebx = 4;
        *(ebx + 8) = 0xa0;
        *(ebx + 0xc) = 0x64;
        eax = L00470FE8(0x33, ebx, ebx);
    }
}

/*    Procedure: 0x0045029D - 0x004502CE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045029D()
{



    eax = M0050160a + 1;
    if(!(dl = M005014f6 & M00501502)) {
        eax = eax - 2;
        if(eax < 0) {
            eax = 0;
        }
    }
    if(eax > 6) {
        eax = 6;
    }
    M0050160a = al;
}

/*    Procedure: 0x004502CF - 0x004502CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004502CF()
{



}

/*    Procedure: 0x004502D0 - 0x00450359
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045035C()
 */

L004502D0()
{
    /* unknown */ void  V2;
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = 6641196;
    asm("cli");
    *ebx = 0xb;
    L00470FE8(0x33, ebx, ebx);
    *(ebx + 8) = *(ebx + 8) + M006559c0;
    *(ebx + 0xc) = *(ebx + 0xc) + M006559c8;
    eax = (1 << M0050160a) - 1;
    M006559c0 = *(ebx + 8) & 65535 & eax;
    *esp = *(ebx + 8);
    M006559c8 = eax & *(ebx + 0xc) & 65535;
    V2 = *(ebx + 0xc);
    *esp = *esp >> M0050160a;
    V2 = V2 >> M0050160a;
    asm("sti");
    eax = *esp & 65535;
    return eax | V2 << 0x10;
}

/*    Procedure: 0x0045035A - 0x0045035B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045035A()
{



}

/*    Procedure: 0x0045035C - 0x004504A2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004504D2()
 */

L0045035C()
{
    /* unknown */ void  V2;
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = 0x5014cc;
    esi = 0;
    edi = 0;
    if(!(M00501609 & 1)) {
        asm("cli");
        M0065564c = 3;
        L00470FE8(0x33, 6641228, 6641228);
        esi = esi | -1;
        if(!(M00655650 & 1)) {
            esi = esi + 1;
        }
        edi = edi | -1;
        if(!(M00655650 & 2)) {
            edi = edi + 1;
        }
        asm("sti");
        if(*(ebx + 0x7e) == 0) {
            esi = esi | -1;
        }
        if(*(ebx + 0x7d) == 0) {
            edi = edi | -1;
        }
        eax = L004502D0();
        *esp = ax;
        V2 = *esp >> 0x10;
    }
    L00450944();
    if(!(al = *(ebx + 0xb8) & *(ebx + 0x38))) {
        if(!(al = *(ebx + 0x29) & *(ebx + 0x48) & *(ebx + 0xa9) & *(ebx + 0xc8))) {
            V2 = V2 - 4;
        }
        if(!(al = *(ebx + 0x4a) & *(ebx + 0x50) & *(ebx + 0xca) & *(ebx + 0xd0))) {
            V2 = V2 + 4;
        }
        if(!(al = *(ebx + 0x2b) & *(ebx + 0x4b) & *(ebx + 0xab) & *(ebx + 0xcb))) {
            *esp = *esp - 4;
        }
        if(!(al = *(ebx + 0x4e) & *(ebx + 0x4d) & *(ebx + 0xce) & *(ebx + 0xcd))) {
            *esp = *esp + 4;
        }
    }
    if(!(al = *(ebx + 0x55) & *(ebx + 0x52) & *(ebx + 0xd5) & *(ebx + 0xd2))) {
        esi = esi | -1;
    }
    if(!(al = *(ebx + 0x58) & *(ebx + 0x47) & *(ebx + 0xd8) & *(ebx + 0xc7))) {
        edi = edi | -1;
    }
    eax = esi;
    M005015f8 = al;
    eax = edi;
    M00501601 = al;
    eax = esi;
    M00501600 = M00501600 & al;
    M00501608 = M00501608 & edi;
    eax = *esp & 65535;
    return eax | V2 << 0x10;
}

/*    Procedure: 0x004504A3 - 0x004504B9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004504A3()
{



    M005015f8 = M005015f8 & al;
    M00501600 = M00501600 | al;
    return !M00501600;
}

/*    Procedure: 0x004504BA - 0x004504D1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004504BA()
{



    M00501601 = M00501601 & al;
    M00501608 = M00501608 | al;
    return !M00501608;
}

/*    Procedure: 0x004504D2 - 0x00450677
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 */

L004504D2()
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = esp;
    eax = L0045035C();
    *esi = ax;
    *(esi + 2) = *esi >> 0x10;
    M006559c4 = M006559c4 + M006559cc;
    ax = M006559ce;
    M006559c6 = M006559c6 + ax;
    eax = M005015e4 >> 5;
    M006559c4 = M006559c4 + ax;
    M006559c6 = M006559c6 - (M005015e8 >> 5);
    if(M00501601 != 0) {
        M006559c4 = M006559c4 + *esi;
        M006559c6 = M006559c6 + *(esi + 2);
        eax = M00657640 & 65535 | M00657642 << 0x10;
    } else {
        *esi = *esi + M00657640;
        *(esi + 2) = *(esi + 2) + M00657642;
        if(*esi < 0) {
            *esi = 0;
        }
        if(*esi > 0x13f) {
            *esi = 0x13f;
        }
        if(*(esi + 2) < 0) {
            *(esi + 2) = 0;
        }
        if(*(esi + 2) > 0xc6) {
            *(esi + 2) = 0xc6;
        }
        if(M005015f8 != 0) {
            M00644c10 = *esi;
            M00644c12 = *(esi + 2);
            ebx = *(esi + 2) < 0x9e ? 0xff : 0;
            for(eax = 0x5003cc; *eax != -1; eax = eax + 0x14) {
                if(*esi >= *eax && *esi <= *(eax + 8) && *(esi + 2) >= *(eax + 4) && *(esi + 2) <= *(eax + 0xc)) {
                    ebx = *(eax + 0x10);
                }
            }
            M00501600 = M00501600 | !M00501600 & M005015f8;
            if(( !M00501600 & M005015f8) != 0) {
                L0044FB4C(ebx);
                M00655682 = M00655681;
                M00655681 = bl;
                M00655684 = M00655683;
                M00655683 = 0;
                M005015ec = 1;
            } else {
                if(M005015ec >= 0x1a) {
                    L0044FB4C(ebx);
                }
            }
        } else {
            M005015ec = 0;
        }
        eax = *esi & 65535;
        eax = eax | *(esi + 2) << 0x10;
    }
}

/*    Procedure: 0x00450678 - 0x0045067E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450678()
{



    return 0;
}

/*    Procedure: 0x0045067F - 0x004506DE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L0045067F()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 6641260;
    ebx = 32768;
    for(*esi = L0047777C(32768); *esi != 0; *esi = L0047777C(ebx)) {
        L00477640( *esi);
        ebx = ebx + ebx;
    }
    L00477640( *esi);
    eax = ebx + ebx;
    ecx = 3;
    asm("cdq");
    edx = ecx / ecx % ecx / ecx;
    M0050160c = eax;
    eax = L0047777C(M0050160c);
    *esi = eax;
    return *esi;
}

/*    Procedure: 0x004506DF - 0x004506EC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004506DF()
{



    return L00477640(M0065566c);
}

/*    Procedure: 0x004506ED - 0x004506EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004506ED()
{



}

/*    Procedure: 0x004506F0 - 0x0045084B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004508B0()
 *        L00450944()
 */

L004506F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A10;
    esi = 4;
    if(eax == 0) {
        esi = 1;
    }
    ebx = 8;
    if(eax == 0) {
        ebx = 2;
    }
    edi = 32000;
    do {
    } while(!(edi = edi - 1) && (eax = L00470FDC(0x201) & (ebx | esi)));
    if(edi == 0) {
        eax = A8;
        *eax = 0;
    } else {
        L00470FDC(0x201);
        L00470FDC(0x201);
        L00470FDC(0x201);
        asm("cli");
        L004710DD(0x201, 0);
        edi = 32000;
        do {
        } while(!(edi = edi - 1) && L00470FDC(0x201) & esi);
        asm("sti");
        if(edi == 0) {
            eax = A8;
            *eax = 0;
        } else {
            do {
            } while(L00470FDC(0x201) & ebx);
            L00470FDC(0x201);
            L00470FDC(0x201);
            L00470FDC(0x201);
            asm("cli");
            L004710DD(0x201, 0);
            esi = 32000;
            do {
            } while(!(esi = esi - 1) && L00470FDC(0x201) & ebx);
            asm("sti");
            if(esi == 0) {
                eax = A8;
                *eax = 0;
            } else {
                eax = L00470FDC(0x201);
                edx = 0;
                if(M00655998 == 0) {
                    edx = 0x30;
                }
                al = al | dl;
                edx = 0;
                if(M006559a0 == 0) {
                    edx = -64;
                }
                M00655685 = al | dl;
                ax = 32000 - di;
                *A8 = ax;
                ax = 32000 - si;
                *Ac = ax;
            }
        }
    }
}

/*    Procedure: 0x0045084C - 0x00450866
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004508B0()
 */

L0045084C(A8)
/* unknown */ void  A8;
{



    if(A8 != 0) {
        eax = 1392640;
        asm("cdq");
        edx = A8 / A8 % A8 / A8;
        return;
    }
    return 16384;
}

/*    Procedure: 0x00450867 - 0x00450867
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450867()
{



}

/*    Procedure: 0x00450868 - 0x004508AC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450944()
 */

L00450868(A8)
/* unknown */ void  A8;
{



    eax = A8;
    asm("imul dword [ebp+0xc]");
    eax = (eax >> 0xd) + -170;
    if(eax <= -138) {
        return -127;
    }
    if(eax <= -11) {
        return eax + 0xa;
    }
    if(eax <= 0xa) {
        return 0;
    }
    if(eax <= 0x89) {
        return eax - 0xa;
    }
    return 0x7f;
}

/*    Procedure: 0x004508AD - 0x004508AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004508AD()
{



}

/*    Procedure: 0x004508B0 - 0x00450940
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045381C()
 */

L004508B0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    L004506F0(ebp - 2, ebp - 4, A8);
    if(A8 != 0) {
        if(*(ebp - 2) == 0) {
            M006559a0 = 0;
            eax = 0;
        } else {
            M006559a0 = L0045084C( *(ebp - 2));
            M006559a4 = L0045084C( *(ebp - 4));
            eax = 1;
        }
    } else {
        if(*(ebp - 2) == 0) {
            M00655998 = 0;
            eax = 0;
        } else {
            M00655998 = L0045084C( *(ebp - 2));
            M0065599c = L0045084C( *(ebp - 4));
            eax = 1;
        }
    }
}

/*    Procedure: 0x00450941 - 0x00450943
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450941()
{



}

/*    Procedure: 0x00450944 - 0x004509E0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045035C()
 */

L00450944()
{
    /* unknown */ void  ebx;



    ebx = 6642124;
    if(M005015d4 >= 2) {
        if(M00655998 == 0) {
            *L006559CC = 0;
            *(ebx + 2) = 0;
            M00655685 = M00655685 | 0x30;
        } else {
            L004506F0(ebx, ebx + 2, 0);
            (save)M00655998;
            L00450868( *ebx);
            *ebx = ax;
            (save)M0065599c;
            L00450868( *(ebx + 2));
            *(ebx + 2) = ax;
            eax = M005015d4;
            if(eax > 0x16) {
                eax = 0x16;
            }
            edx = *ebx;
            edx = eax * eax >> 7;
            *ebx = dx;
            edx = *(ebx + 2);
            *(ebx + 2) = eax * eax >> 7;
        }
        eax = 0;
        M005015d4 = 0;
    }
}

/*    Procedure: 0x004509E1 - 0x004509EE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004509E1()
{



    M005003cc = -1;
}

/*    Procedure: 0x004509EF - 0x00450A2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004509EF()
{
    /* unknown */ void  ebx;



    M005003cc = -1;
    L00450A2C(0x500de0);
    ebx = 0xb;
    do {
        L0041D49C(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0xe);
    ebx = 0x26;
    do {
        eax = L0041D49C(ebx);
        ebx = ebx + 1;
    } while(ebx <= 0x2b);
}

/*    Procedure: 0x00450A2C - 0x00450A67
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004509EF()
 */

L00450A2C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edx = A8;
    for(eax = 0x5003cc; *eax != -1; eax = eax + 0x14) {
    }
    while(*edx != -1) {
        *(eax + 0x14) = -1;
        asm("cli");
        esi = edx;
        edi = eax;
        ecx = 5;
        asm("rep movsd");
        asm("sti");
        edx = edx + 0x14;
        eax = eax + 0x14;
    }
}

/*    Procedure: 0x00450A68 - 0x00450AC7
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00450AC8()
 */

L00450A68(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  edi;



    edx = A8;
    for(eax = 0x5003cc; *eax != -1; eax = eax + 0x14) {
    }
    *(eax + 0x14) = -1;
    asm("cli");
    *(eax + 0x10) = A18;
    edi = !(edi = edx - A10) ? 0 : edx - A10;
    *eax = edi;
    *(eax + 8) = A10 + edx;
    edx = !(edx = Ac - A14) ? 0 : Ac - A14;
    *(eax + 4) = edx;
    *(eax + 0xc) = A14 + Ac;
    asm("sti");
}

/*    Procedure: 0x00450AC8 - 0x00450AE5
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 */

L00450AC8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L00450A68(A8, Ac, A10, A10, A14);
}

/*    Procedure: 0x00450AE6 - 0x00450B1F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00450AE6(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    for(eax = 0x5003cc; *eax != -1 && A8 != *(eax + 0x10); eax = eax + 0x14) {
    }
    while(*eax != -1) {
        asm("cli");
        esi = eax + 0x14;
        edi = eax;
        ecx = 5;
        asm("rep movsd");
        asm("sti");
        eax = eax + 0x14;
    }
}

/*    Procedure: 0x00450B20 - 0x00450B2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450B20()
{



    return L00450B30(0, 0x200);
}

/*    Procedure: 0x00450B30 - 0x00450B48
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450B20()
 */

L00450B30(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    M006559c4 = A8;
    M006559c6 = Ac;
    return M006559c6;
}

/*    Procedure: 0x00450B49 - 0x00450B51
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450B49()
{



    return M006559c4;
}

/*    Procedure: 0x00450B52 - 0x00450B53
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450B52()
{



}

/*    Procedure: 0x00450B54 - 0x00450BD0
 *    Argument size: 0
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L0044FC8D()
 */

L00450B54()
{
    /* unknown */ void  V0;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = "pic%03d.bmp";
    esi = 0;
    do {
        L00474830( & V0, edi, esi);
        ebx = L00473538( & V0, edi + 0xc);
        if(ebx == 0) {
            break;
        }
        L004731B8(ebx);
        esi = esi + 1;
    } while(esi < 0x3e8);
    eax = L00473538( & V0, edi + 0xe);
    ebx = eax;
    if(ebx != 0) {
        L00450BD4(ebx);
        L00450BF0(ebx);
        L00450C8C(ebx);
        eax = L004731B8(ebx);
    }
}

/*    Procedure: 0x00450BD1 - 0x00450BD3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450BD1()
{



}

/*    Procedure: 0x00450BD4 - 0x00450BED
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450B54()
 */

L00450BD4(A8)
/* unknown */ void  A8;
{



    return L0047397C(0x501610, 1, 0x36, A8);
}

/*    Procedure: 0x00450BEE - 0x00450BEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450BEE()
{



}

/*    Procedure: 0x00450BF0 - 0x00450C8B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00450B54()
 */

L00450BF0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    L004710DD(0x3c7, 0);
    *(ebp - 4) = 0;
    do {
        esi = L00470FDC(0x3c9);
        edi = L00470FDC(0x3c9);
        eax = L00470FDC(0x3c9);
        edx = eax << 2;
        L00473B24(edx + (eax >> 4), A8);
        eax = edi << 2;
        L00473B24(eax + (edi >> 4), A8);
        eax = esi << 2;
        L00473B24(eax + (esi >> 4), A8);
        eax = L00473B24(0, A8);
        *(ebp - 4) = *(ebp - 4) + 1;
    } while(*(ebp - 4) < 0x100);
}

/*    Procedure: 0x00450C8C - 0x00450CC0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00450B54()
 */

L00450C8C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = 0xc7;
    do {
        eax = L0047397C((ebx << 6) + (ebx << 6) * 4 + M00502e9c, 1, 0x140, A8);
        ebx = ebx - 1;
    } while(ebx >= 0);
}

/*    Procedure: 0x00450CC1 - 0x00450CC3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450CC1()
{



}

/*    Procedure: 0x00450CC4 - 0x00450D12
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00450D14()
 */

L00450CC4(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A14;
    ecx = A10;
    eax = A8;
    edx = Ac - 1 + eax;
    if(ecx != 0) {
        goto L00450ced;
L00450ce7:
        *edx = 0;
        goto L00450d0f;
L00450ced:
        while(*ecx != 0) {
            *eax = *ecx;
            eax = eax + 1;
            if(edx <= eax) {
                goto L00450ce7;
            }
            ecx = ecx + 1;
        }
    }
    if(esi != 0) {
        goto L00450d07;
L00450d01:
        *edx = 0;
        goto L00450d0f;
L00450d07:
        while(*esi != 0) {
            *eax = *esi;
            eax = eax + 1;
            if(edx <= eax) {
                goto L00450d01;
            }
            esi = esi + 1;
        }
    }
    *eax = 0;
L00450d0f:
}

/*    Procedure: 0x00450D13 - 0x00450D13
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450D13()
{



}

/*    Procedure: 0x00450D14 - 0x00450D44
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450D48()
 *        L00450DCC()
 */

L00450D14(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x10) = M00655ae0;
    *(A8 + 0x14) = M006559d4;
    return L00450CC4(A8, 0xf, M00655ae8, 6642144);
}

/*    Procedure: 0x00450D45 - 0x00450D47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450D45()
{



}

/*    Procedure: 0x00450D48 - 0x00450DC9
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041AA3C()
 */

L00450D48(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    M00655ae8 = A14;
    if(!(A10 & 2)) {
        M00655ae0 = 2;
        M00655ae4 = 0x10;
    } else {
        M00655ae0 = 0;
        M00655ae4 = 0x20;
    }
    if(L004732F4(Ac, 6642128, M00655ae4) != 0) {
        return 0;
    }
    if(!(eax = M006559d8 & M00655ae4)) {
        L00450D14(A8);
        return 1;
    }
    return L00450DCC(A8);
}

/*    Procedure: 0x00450DCA - 0x00450DCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450DCA()
{



}

/*    Procedure: 0x00450DCC - 0x00450DFF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041AA3C()
 *        L00450D48()
 */

L00450DCC(A8)
/* unknown */ void  A8;
{



    do {
        if(L00473318(6642128) != 0) {
            goto L00450de1;
        }
    } while(eax = M006559d8 & M00655ae4);
    goto L00450df3;
L00450de1:
    return 0;
L00450df3:
    L00450D14(A8);
    return 1;
}

/*    Procedure: 0x00450E00 - 0x00450E2F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041B7DE()
 */

L00450E00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = L004759F0(L00476380(A8) - 0x40, Ac, A10);
    return 0;
}

/*    Procedure: 0x00450E30 - 0x00450E7C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041B7DE()
 */

L00450E30(A8)
/* unknown */ void  A8;
{



    esp = esp + -272;
    if(L004732F4(A8, ebp + -272, 0x10) != 0) {
        eax = 0;
        goto L00450e79;
L00450e67:
        eax = 0;
    } else {
        do {
            if(!( *(ebp + -264) & 0x10)) {
                goto L00450e74;
            }
        } while(L00473318(ebp + -272) == 0);
        goto L00450e67;
L00450e74:
        eax = 1;
    }
L00450e79:
}

/*    Procedure: 0x00450E7D - 0x00450F34
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450E7D()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0x18);
    edi = 0;
    *ebx = L00475834( *(ebp + 8), 0, ebp - 4);
    eax = *(ebp + 0x14);
    *eax = 0;
    if(*ebx != 0) {
        eax = 0;
    } else {
        do {
            if(*(ebp + 0x10) <= 0x1000) {
                edi = 1;
                esi = *(ebp + 0x10);
            } else {
                esi = 0x1000;
                *(ebp + 0x10) = *(ebp + 0x10) - 0x1000;
            }
            *ebx = L0047586C( *(ebp - 4), *(ebp + 0xc), esi, ebp - 8);
            if(*ebx != 0) {
                goto L00450ef1;
            }
            eax = *(ebp + 0x14);
            *eax = *eax + *(ebp - 8);
            if(esi == *(ebp - 8)) {
                *(ebp + 0xc) = *(ebp + 0xc) + *(ebp - 8);
            } else {
                edi = 1;
            }
        } while(edi == 0);
        goto L00450f1d;
L00450ef1:
        L004754DC( *(ebp - 4));
        eax = 0;
        goto L00450f2e;
L00450f1d:
        eax = L004754DC( *(ebp - 4));
        *ebx = eax;
        eax = 0;
    }
L00450f2e:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00450F35 - 0x00450F37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450F35()
{



}

/*    Procedure: 0x00450F38 - 0x00450F64
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00419F48()
 */

L00450F38(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(L00473124(A8) == 0) {
        *Ac = 0;
        return 1;
    }
    *Ac = M0060beac;
    return 0;
}

/*    Procedure: 0x00450F65 - 0x0045102C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00450F65()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0x18);
    edi = 0;
    *ebx = L004755BC( *(ebp + 8), 0, ebp - 4);
    eax = *(ebp + 0x14);
    *eax = 0;
    if(*ebx != 0) {
        eax = 0;
    } else {
        do {
            if(*(ebp + 0x10) <= 0x1000) {
                edi = 1;
                esi = *(ebp + 0x10);
            } else {
                esi = 0x1000;
                *(ebp + 0x10) = *(ebp + 0x10) - 0x1000;
            }
            *ebx = L004758C0( *(ebp - 4), *(ebp + 0xc), esi, ebp - 8);
            if(*ebx != 0) {
                goto L00450fdc;
            }
            eax = *(ebp + 0x14);
            *eax = *eax + *(ebp - 8);
            if(esi != *(ebp - 8)) {
                goto L00450ff3;
            }
            *(ebp + 0xc) = *(ebp + 0xc) + *(ebp - 8);
        } while(edi == 0);
        goto L00451015;
L00450fdc:
        L004754DC( *(ebp - 4));
        eax = 0;
        goto L00451026;
L00450ff3:
        *ebx = 0xe;
        L004754DC( *(ebp - 4));
        eax = 0;
        goto L00451026;
L00451015:
        eax = L004754DC( *(ebp - 4));
        *ebx = eax;
        eax = 0;
    }
L00451026:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045102D - 0x0045102F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045102D()
{



}

/*    Procedure: 0x00451030 - 0x00451035
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451038()
 */

L00451030()
{



    return L00475BBC();
}

/*    Procedure: 0x00451036 - 0x00451037
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00451036()
{



}

/*    Procedure: 0x00451038 - 0x0045103F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041BC68()
 */

L00451038()
{



    return L00451030() + 0x41;
}

/*    Procedure: 0x00451040 - 0x00451062
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451064()
 */

L00451040()
{
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esp = esp - 8;
    L00475748(esp);
    eax = L0047578C(Vfffffff8, & Vfffffffc);
    (restore)ecx;
    (restore)ecx;
    return Vfffffffc;
}

/*    Procedure: 0x00451063 - 0x00451063
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00451063()
{



}

/*    Procedure: 0x00451064 - 0x004510C3
 *    Argument size: 8
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L0041BC68()
 */

L00451064(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vffffffff;



    esi = A8;
    edi = Ac - 1 + esi;
    eax = L00451040();
    Vffffffff = al;
    bl = 1;
    if(1 <= Vffffffff) {
        do {
            if(bl != 1) {
                if(bl != 2) {
                    eax = L00475B50(ebx, & Vffffffec);
                    if(Vfffffff8 != -1) {
                        eax = ebx + 0x40;
                        *esi = al;
                        esi = esi + 1;
                    }
                }
            } else {
                eax = ebx + 0x40;
                *esi = al;
                esi = esi + 1;
            }
            if(edi <= esi) {
                break;
            }
            ebx = ebx + 1;
        } while(bl <= Vffffffff);
    }
    *esi = 0;
}

/*    Procedure: 0x004510C4 - 0x004510FF
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 */

L004510C4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    for(eax = 0x5003cc; *eax != -1; eax = eax + 0x14) {
    }
    *(eax + 0x14) = -1;
    asm("cli");
    *(eax + 0x10) = A18;
    *eax = A8;
    *(eax + 8) = A8 + A10;
    *(eax + 4) = Ac;
    *(eax + 0xc) = Ac + A14;
    asm("sti");
}

/*    Procedure: 0x00451100 - 0x00451193
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043C5F2()
 */

L00451100(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = 0;
    edi = 0;
    eax = L00475954(0, A8, 0x100);
    ebx = eax;
    if(ebx != 0) {
        L004747E4(ebx, 6641808, 6641812, edi, esi);
        esi = 6641286;
        edi = 6641808;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        esi = 6641290;
        edi = 6641812;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        eax = L00477640(ebx);
    }
}

/*    Procedure: 0x00451194 - 0x004511C8
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 4
 */

L00451194(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{
    /* unknown */ void  ebx;



    ebx = A8 << 0x10;
    if(!(Aa & 1)) {
        Aa = Aa >> 1;
        Aa = Aa + 1;
    } else {
        Aa = Aa >> 1;
        ebx = ebx + ebx;
    }
    A8 = *L00501670(ebx) >> 1;
    return A8;
}

/*    Procedure: 0x004511C9 - 0x00451207
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L004511C9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = Ac;
    if(!(A8 & 1)) {
        A8 = A8 >> 1;
        A8 = A8 + 1;
    } else {
        A8 = A8 >> 1;
        ebx = ebx + ebx;
    }
    *(ebp - 4) = *L00501670(ebx) >> 1;
    *(ebp - 2) = A8;
    return *L00501664( *(ebp - 4));
}

/*    Procedure: 0x00451208 - 0x0045122E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00451208(A8)
/* unknown */ void  A8;
{



    eax = *A8;
    asm("imul dword [ebx]");
    edx = *(A8 + 4);
    eax = eax + *(A8 + 4) * *(A8 + 4);
    edx = *(A8 + 8);
    return L0045133F(eax + *(A8 + 8) * *(A8 + 8));
}

/*    Procedure: 0x0045122F - 0x0045133E
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L0041DFB0()
 *        L004287E4()
 *        L0042A718()
 *        L00433318()
 *        L00433BA4()
 *        L00444A88()
 *        L00445198()
 *        L0044581C()
 *        L004536D2()
 *        L0045EDE3()
 */

L0045122F(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;



    ebx = A8;
    esi = & Vfffffff4;
    *esi = L004765BC( *ebx);
    *(esi + 4) = L004765BC( *(ebx + 4));
    *(esi + 8) = L004765BC( *(ebx + 8));
    Vffffffe8 = *esi;
    Vffffffec = *(esi + 4);
    Vfffffff0 = *(esi + 8);
    eax = L00459CEC( *esi | *(esi + 4) | *(esi + 8));
    ebx = 0x1e - eax;
    ecx = ebx;
    *esi = *esi << cl;
    ecx = ebx;
    *(esi + 4) = *(esi + 4) << cl;
    *(esi + 8) = *(esi + 8) << ebx;
    if(ebx > 0) {
        edi = L004537B0( *esi, *esi) >> 2;
        edi = edi + (L004537B0( *(esi + 4), *(esi + 4)) >> 2);
        eax = *L005016d4(edi + (L004537B0( *(esi + 8), *(esi + 8)) >> 2));
        eax = eax >> ebx - 1;
    } else {
        ebx = L004537B0( *esi, *esi) >> 2;
        ebx = ebx + (L004537B0( *(esi + 4), *(esi + 4)) >> 2);
        eax = *L005016d4(ebx + (L004537B0( *(esi + 8), *(esi + 8)) >> 2)) + *L005016d4(ebx + (L004537B0( *(esi + 8), *(esi + 8)) >> 2));
    }
    if(eax < Vffffffe8) {
        eax = Vffffffe8;
    }
    if(eax < Vffffffec) {
        eax = Vffffffec;
    }
    if(eax < Vfffffff0) {
        eax = Vfffffff0;
    }
}

/*    Procedure: 0x0045133F - 0x004513F0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451208()
 */

L0045133F(A8)
/* unknown */ void  A8;
{



    if(A8 < 67108864) {
        if(A8 >= 4194304) {
            return ( *((A8 >> 0xf) * 2 + 0x5168e0) & 65535) >> 3;
        }
        if(A8 >= 262144) {
            return ( *((A8 >> 0xb) * 2 + 0x5168e0) & 65535) >> 5;
        }
        if(A8 >= 16384) {
            return ( *((A8 >> 7) * 2 + 0x5168e0) & 65535) >> 7;
        }
        if(A8 >= 0x400) {
            return ( *((A8 >> 3) * 2 + 0x5168e0) & 65535) >> 9;
        }
        return ( *((A8 + A8) * 2 + 0x5168e0) & 65535) >> 0xb;
    }
    if(A8 >= 1073741824) {
        return *((A8 >> 0x15) * 2 + 0x5168e0) & 65535;
    }
    if(A8 >= 268435456) {
        return ( *((A8 >> 0x13) * 2 + 0x5168e0) & 65535) >> 1;
    }
    return ( *((A8 >> 0x11) * 2 + 0x5168e0) & 65535) >> 2;
}

/*    Procedure: 0x004513F1 - 0x00451428
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L004513F1()
{
    /* unknown */ void  ebx;



    edx = 6642420;
    eax = 0;
    do {
        ecx = eax * 0xb;
        *(edx + ecx * 4) = 0;
        eax = eax + 1;
    } while(eax < 0x9e);
    *(edx + 6956) = 0x9e;
    *(edx + 6960) = -1;
    *(edx + 6952) = 0;
    return edx;
}

/*    Procedure: 0x00451429 - 0x00451467
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00451429()
{
    /* unknown */ void  ebx;



    edx = L0047777C(40528);
    eax = 0;
    do {
        ecx = (eax << 6) - eax;
        *(edx + ecx * 4 + 0x4c) = 0;
        *(edx + eax * 4 + 39892) = 0;
        eax = eax + 1;
    } while(eax < 0x9e);
    *edx = 0x9e;
    *(edx + 4) = -1;
    return edx;
}

/*    Procedure: 0x00451468 - 0x004514F2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L00451468(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    edi = 6642412;
    eax = bl + bl * 8;
    if(*( *L00655AEC + eax * 4 + 0x14) == 0) {
        L004515DB(A8, Ac);
    }
    eax = bl + bl * 8;
    eax = *( *edi + eax * 4 + 0x18) + *(A8 + 4);
    edx = bl + bl * 8;
    *( *edi + edx * 4 + 4) = eax;
    eax = bl + bl * 8;
    eax = *( *edi + eax * 4 + 0x1c) + *(A8 + 8);
    edx = bl + bl * 8;
    *( *edi + edx * 4 + 8) = eax;
    eax = bl + bl * 8;
    eax = *( *edi + eax * 4 + 0x20) + *(A8 + 0xc);
    edx = bl + bl * 8;
    *( *edi + edx * 4 + 0xc) = eax;
    return (bl << 2) + (bl << 2) * 8 + *edi;
}

/*    Procedure: 0x004514F3 - 0x004515DA
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 */

L004514F3(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    edi = 6642412;
    eax = bl + bl * 8;
    if(*( *L00655AEC + eax * 4 + 0x14) == 0) {
        eax = L00451BEC(A8, Ac, 1);
    } else {
        eax = bl + bl * 8;
        eax = *( *edi + eax * 4 + 0x18) + *(A8 + 4);
        edx = bl + bl * 8;
        *( *edi + edx * 4 + 4) = eax;
        eax = bl + bl * 8;
        eax = *( *edi + eax * 4 + 0x1c) + *(A8 + 8);
        edx = bl + bl * 8;
        *( *edi + edx * 4 + 8) = eax;
        eax = bl + bl * 8;
        eax = *( *edi + eax * 4 + 0x20) + *(A8 + 0xc);
        edx = bl + bl * 8;
        *( *edi + edx * 4 + 0xc) = eax;
        if(L00452681((bl << 2) + (bl << 2) * 8 + *edi, (bl << 2) + (bl << 2) * 8 + *edi + 4) != 0) {
            eax = bl + bl * 8;
            edx = *edi;
            *(edx + eax * 4 + 2) = 32770;
            eax = bl + bl * 8;
            *( *edi + eax * 4) = 32770;
        }
        eax = bl + bl * 8;
        edx = *edi;
        *(edx + eax * 4 + 0x14) = *(A8 + 0xf0);
        eax = (bl << 2) + (bl << 2) * 8 + *edi;
    }
}

/*    Procedure: 0x004515DB - 0x004515F0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451468()
 */

L004515DB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00451BEC(A8, Ac, 0);
}

/*    Procedure: 0x004515F1 - 0x0045164B
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451748()
 *        L0045FD96()
 *        L0045FDE4()
 *        L0045FE30()
 *        L004608F2()
 *        L00460E50()
 */

L004515F1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    if(!(edx = (eax & 0xc0) - 1)) {
        if(edx = edx - 0x3f) {
            goto L0045161a;
        }
        if(edx = edx - 0x40) {
            goto L00451626;
        }
        if(edx = edx - 0x40) {
            goto L0045163c;
        }
    } else {
        return eax & 0x3f;
L0045161a:
        return (ax & 0x3f) << 0xa;
L00451626:
        eax = eax & 0x3f;
        return *( *(A8 + 0x14c) + eax * 2 + 0x9c) & 65535;
L0045163c:
        eax = eax & 0x3f;
        return *(A8 + eax * 4 + 0x54);
    }
    return 0;
}

/*    Procedure: 0x0045164C - 0x004516AF
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451BEC()
 *        L0045BF8C()
 *        L0045F23C()
 *        L00460C2B()
 */

L0045164C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    if(!(edx = (eax & 0xc0) - 1)) {
        if(edx = edx - 0x3f) {
            goto L00451670;
        }
        if(edx = edx - 0x40) {
            goto L0045168a;
        }
        if(edx = edx - 0x40) {
            goto L004516a0;
        }
    } else {
L00451670:
        edx = (eax & 0x7f) << 9;
        return edx | eax >> 7 & 0x1ff;
L0045168a:
        eax = eax & 0x3f;
        return *( *(A8 + 0x14c) + eax * 2 + 0x9c) & 65535;
L004516a0:
        eax = eax & 0x3f;
        return *(A8 + eax * 4 + 0x54);
    }
    return 0;
}

/*    Procedure: 0x004516B0 - 0x00451720
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0042AD7E()
 *        L00444A88()
 *        L00454700()
 *        L0045B874()
 */

L004516B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = 0;
    eax = *Ac < 0 ? ~( *Ac) : *Ac;
    eax = *(Ac + 4) < 0 ? eax | ~( *(Ac + 4)) : eax | *(Ac + 4);
    eax = *(Ac + 8) < 0 ? eax | ~( *(Ac + 8)) : eax | *(Ac + 8);
    do {
        eax = eax >> 1;
        ebx = ebx + 1;
    } while(eax >= 16384);
    ecx = ebx;
    *A8 = *Ac >> cl;
    ecx = ebx;
    *(A8 + 4) = *(Ac + 4) >> cl;
    ecx = ebx;
    *(A8 + 8) = *(Ac + 8) >> cl;
    return ebx;
}

/*    Procedure: 0x00451721 - 0x00451747
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00411810()
 *        L00451BEC()
 */

L00451721()
{



    eax = M00644bc8;
    M00644bc8 = M00644bc8 + M00644bcc;
    edx = eax << 0x10;
    M00644bcc = edx | eax >> 0x10;
    return M00644bcc;
}

/*    Procedure: 0x00451748 - 0x00451BEB
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00451BEC()
 */

L00451748(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    ebx = *(A8 + 0x150) + (esi >> 1) + (esi >> 1) + ((esi >> 1) + (esi >> 1)) * 2;
    if(*ebx == 0x13 || *ebx == 0x14) {
        al = esi & 1 ^ *(ebx + 3);
        eax = al + al * 8;
        if(*(M00655aec + eax * 4 + 0x14) != 0) {
            al = esi & 1 ^ *(ebx + 3);
            edi = (al << 2) + (al << 2) * 8 + M00655aec;
        } else {
            edi = *L00501684(A8, esi & 1 ^ *(ebx + 3));
        }
        al = esi & 1 ^ *(ebx + 4);
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((esi & 1 ^ *(ebx + 4)) << 2) + ((esi & 1 ^ *(ebx + 4)) << 2) * 8 + M00655aec : *L00501684(A8, esi & 1 ^ *(ebx + 4));
        Vfffffffc = eax;
        ebx = L004515F1(A8, *(ebx + 2) & 0xff) + A14 << 0xe;
        Vffffffe8 = *(Vfffffffc + 0x18) + ~( *(edi + 0x18));
        Vffffffec = *(Vfffffffc + 0x1c) + ~( *(edi + 0x1c));
        Vfffffff0 = *(Vfffffffc + 0x20) + ~( *(edi + 0x20));
        eax = L004537B0(Vffffffe8, ebx) + L004537B0(Vffffffe8, ebx) + *(edi + 0x18);
        *(Ac + 0x18) = eax;
        eax = L004537B0(Vffffffec, ebx) + L004537B0(Vffffffec, ebx) + *(edi + 0x1c);
        *(Ac + 0x1c) = eax;
        eax = L004537B0(Vfffffff0, ebx) + L004537B0(Vfffffff0, ebx) + *(edi + 0x20);
        *(Ac + 0x20) = eax;
    } else {
        al = esi & 1 ^ *(ebx + 3);
        eax = al + al * 8;
        if(*(M00655aec + eax * 4 + 0x14) != 0) {
            al = esi & 1 ^ *(ebx + 3);
            edi = (al << 2) + (al << 2) * 8 + M00655aec;
        } else {
            edi = *L00501684(A8, esi & 1 ^ *(ebx + 3));
        }
        al = esi & 1 ^ *(ebx + 4);
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((esi & 1 ^ *(ebx + 4)) << 2) + ((esi & 1 ^ *(ebx + 4)) << 2) * 8 + M00655aec : *L00501684(A8, esi & 1 ^ *(ebx + 4));
        Vfffffffc = eax;
        al = *(ebx + 4) + 2;
        dl = esi & 1;
        eax = (al ^ dl) + (al ^ dl) * 8;
        if(*(M00655aec + eax * 4 + 0x14) != 0) {
            al = *(ebx + 4) + 2;
            dl = esi & 1;
            eax = ((al ^ dl) << 2) + ((al ^ dl) << 2) * 8 + M00655aec;
        } else {
            al = *(ebx + 4) + 2;
            eax = *L00501684(A8, al ^ esi & 1);
        }
        Vfffffff8 = eax;
        al = *(ebx + 3) + 2;
        dl = esi & 1;
        eax = (al ^ dl) + (al ^ dl) * 8;
        if(*(M00655aec + eax * 4 + 0x14) != 0) {
            al = *(ebx + 3) + 2;
            eax = ((al ^ esi & 1) << 2) + ((al ^ esi & 1) << 2) * 8 + M00655aec;
        } else {
            al = *(ebx + 3) + 2;
            eax = *L00501684(A8, al ^ esi & 1);
        }
        Vfffffff4 = eax;
        ebx = L004515F1(A8, *(ebx + 2) & 0xff) + A14 << 0xe;
        eax = Ac;
        *(eax + 0x18) = *(edi + 0x18);
        *(eax + 0x1c) = *(edi + 0x1c);
        *(eax + 0x20) = *(edi + 0x20);
        edx = *(edi + 0x18);
        ecx = edx;
        eax = L004537B0( *(Vfffffffc + 0x18) + *(Vfffffffc + 0x18) * 2 + ~edx + ~edx * 2, ebx) + L004537B0( *(Vfffffffc + 0x18) + *(Vfffffffc + 0x18) * 2 + ~edx + ~edx * 2, ebx);
        *(Ac + 0x18) = *(Ac + 0x18) + eax;
        edx = *(edi + 0x1c);
        ecx = edx;
        eax = L004537B0( *(Vfffffffc + 0x1c) + *(Vfffffffc + 0x1c) * 2 + ~edx + ~edx * 2, ebx) + L004537B0( *(Vfffffffc + 0x1c) + *(Vfffffffc + 0x1c) * 2 + ~edx + ~edx * 2, ebx);
        *(Ac + 0x1c) = *(Ac + 0x1c) + eax;
        edx = *(edi + 0x20);
        ecx = edx;
        eax = L004537B0( *(Vfffffffc + 0x20) + *(Vfffffffc + 0x20) * 2 + ~edx + ~edx * 2, ebx) + L004537B0( *(Vfffffffc + 0x20) + *(Vfffffffc + 0x20) * 2 + ~edx + ~edx * 2, ebx);
        *(Ac + 0x20) = *(Ac + 0x20) + eax;
        esi = L004537B0(ebx, ebx);
        eax = L004537B0( *(Vfffffff8 + 0x18) + *(Vfffffff8 + 0x18) * 2 + *(Vfffffffc + 0x18) * -6 + ( *(edi + 0x18) << 2), esi) << 2;
        *(Ac + 0x18) = *(Ac + 0x18) + eax;
        eax = L004537B0( *(Vfffffff8 + 0x1c) + *(Vfffffff8 + 0x1c) * 2 + *(Vfffffffc + 0x1c) * -6 + ( *(edi + 0x1c) << 2), esi) << 2;
        *(Ac + 0x1c) = *(Ac + 0x1c) + eax;
        eax = L004537B0( *(Vfffffff8 + 0x20) + *(Vfffffff8 + 0x20) * 2 + *(Vfffffffc + 0x20) * -6 + ( *(edi + 0x20) << 2), esi) << 2;
        *(Ac + 0x20) = *(Ac + 0x20) + eax;
        esi = L004537B0(esi, ebx);
        edx = *(Vfffffff8 + 0x18);
        ecx = edx;
        eax = *(Vfffffff4 + 0x18) + ~edx + ~edx * 2;
        eax = eax + *(Vfffffffc + 0x18) + *(Vfffffffc + 0x18) * 2;
        edx = *(edi + 0x18);
        ecx = edx;
        eax = L004537B0(eax + ~edx + ~edx, esi) << 3;
        *(Ac + 0x18) = *(Ac + 0x18) + eax;
        edx = *(Vfffffff8 + 0x1c);
        ecx = edx;
        eax = *(Vfffffff4 + 0x1c) + ~edx + ~edx * 2;
        eax = eax + *(Vfffffffc + 0x1c) + *(Vfffffffc + 0x1c) * 2;
        edx = *(edi + 0x1c);
        ecx = edx;
        eax = L004537B0(eax + ~edx + ~edx, esi) << 3;
        *(Ac + 0x1c) = *(Ac + 0x1c) + eax;
        edx = *(Vfffffff8 + 0x20);
        ecx = edx;
        eax = *(Vfffffff4 + 0x20) + ~edx + ~edx * 2;
        eax = eax + *(Vfffffffc + 0x20) + *(Vfffffffc + 0x20) * 2;
        edx = *(edi + 0x20);
        ecx = edx;
        eax = L004537B0(eax + ~edx + ~edx, esi) << 3;
        *(Ac + 0x20) = *(Ac + 0x20) + eax;
    }
    eax = Ac;
    *(eax + 0x14) = 1;
}

/*    Procedure: 0x00451BEC - 0x00452680
 *    Argument size: 19
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L004514F3()
 *        L004515DB()
 */

L00451BEC(A1, A8, Ac, A10)
/* unknown */ void  A1;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = ((Ac & -2) << 2) + ((Ac & -2) << 2) * 8 + M00655aec;
    ebx = (Ac << 2) + (Ac << 2) * 8 + M00655aec;
    edi = (Ac >> 1) + (Ac >> 1) + ((Ac >> 1) + (Ac >> 1)) * 2 + *(A8 + 0x150);
    if(Ac < 0) {
        Vfffffff8 = *(A8 + ~Ac * 4 + 0x6c);
        *ebx = *Vfffffff8;
        eax = Vfffffff8;
        *(ebx + 4) = *(eax + 4);
        *(ebx + 8) = *(eax + 8);
        *(ebx + 0xc) = *(eax + 0xc);
        *(ebx + 0x18) = ~( *(A8 + 4)) + *(ebx + 4);
        *(ebx + 0x1c) = ~( *(A8 + 8)) + *(ebx + 8);
        *(ebx + 0x20) = ~( *(A8 + 0xc)) + *(ebx + 0xc);
        *(ebx + 0x10) = *(Vfffffff8 + 0x10);
        *(ebx + 0x14) = *(A8 + 0xf0);
        eax = ebx;
    } else {
        eax = *edi & 0xff;
        if(eax > 0x18) {
            goto L004525f5;
        }
        switch(*(eax + 0x451cb6)) {
            case 0:
L004525f5:
                L00451748(A8, ebx, Ac, 0);
                goto L00452632;
            case 1:
                eax = *(edi + 3) & 0xff;
                L00451748(A8, ebx, *(edi + 2) & 0xff, L0045164C(A8, eax + (( *(edi + 4) & 0xff) << 8)));
                goto L00452632;
            case 2:
                goto L004525f5;
            case 3:
                L00451748(A8, ebx, Ac, 0);
                goto L00452632;
            case 4:
                goto L00452518;
            case 5:
                goto L004523fb;
            case 6:
                goto L004522f3;
            case 7:
                goto L00452211;
            case 8:
                *(Vfffffffc + 0x38) = A10;
                *(Vfffffffc + 0x14) = *(Vfffffffc + 0x38);
                ecx = *(A8 + 0x148);
                Vffffffdc = *(edi + 2) << cl;
                ecx = *(A8 + 0x148);
                Vffffffe0 = *(edi + 3) << cl;
                ecx = *(A8 + 0x148);
                Vffffffe4 = *(edi + 4) << cl;
                L0045AA3C(Vfffffffc + 0x18, & Vffffffd0, & Vffffffdc, A8 + 0x14);
                *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x18) + ~Vffffffd0;
                *(Vfffffffc + 0x40) = *(Vfffffffc + 0x1c) + ~Vffffffd4;
                *(Vfffffffc + 0x44) = *(Vfffffffc + 0x20) + ~Vffffffd8;
                *(Vfffffffc + 0x38) = 1;
                *(Vfffffffc + 0x14) = 1;
                goto L00452632;
            case 9:
                goto L0045205c;
            case 0xa:
                goto L00451f7a;
            case 0xb:
                goto L00451da6;
            case 0xc:
L00451d03:
                *(eax - 1) = *(eax - 1) + eax - 1;
                *edi = *edi + cl;
                Vffffffdc = eax;
                Vffffffe0 = *(edi + 3) << *LE0D3038F;
                Vffffffe4 = *(edi + 4) << *LE0D3038F;
                L0045AA3C(Vfffffffc + 0x18, & Vffffffd0, & Vffffffdc, -523042213);
                ecx = Vffffffd0;
                *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x18) + ~Vffffffd0 + ~Vffffffd0;
                ecx = Vffffffd4;
                *(Vfffffffc + 0x40) = *(Vfffffffc + 0x1c) + ~Vffffffd4 + ~Vffffffd4;
                ecx = Vffffffd8;
                *(Vfffffffc + 0x44) = *(Vfffffffc + 0x20) + ~Vffffffd8 + ~Vffffffd8;
                *(Vfffffffc + 0x38) = 1;
                *(Vfffffffc + 0x14) = 1;
                goto L00452632;
        }
        al = al | 0xc | 0xb;
        cl = ecx | *A10 | *ecx;
        *eax = *eax | ecx;
        *edi = *edi | al;
        (restore)es;
        (save)es;
        (save)es;
        al = eax + 50594821 + *A10 + *ecx;
        ebp = ebp + A8;
        eax = eax & 638058565;
        ebp = & A1;
        ch = ch + dh;
        eax = eax & 635568197;
        ebp = & A1;
        *eax = *eax + bl;
        eax = eax & 603652165;
        bl = bl + dh;
        al = al & *( & A1);
        asm("adc [edx],esp");
        ebp = & A1;
        *(ebx + 0x21) = *(ebx + 0x21) + ch;
        ebp = & A1;
        *(eax + 0x45) = *(eax + 0x45) + bl;
        *(A10 + 0x1f) = *(A10 + 0x1f) + bh;
        ebp = & A1;
        *(A8 + 50349341) = *(A8 + 50349341) + ah;
        asm("sbb eax,0x8e8b0045");
        goto L00451d03;
L00451da6:
        A10 = *(A8 + 0xf0);
        *(Vfffffffc + 0x38) = A10;
        *(Vfffffffc + 0x14) = *(Vfffffffc + 0x38);
        eax = *(edi + 3) + *(edi + 3) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(A8 + 0xf0) ? ( *(edi + 3) << 2) + ( *(edi + 3) << 2) * 8 + M00655aec : *L00501680(A8, *(edi + 3));
        Vfffffff8 = eax;
        eax = *(edi + 4) + *(edi + 4) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        if(eax == *(A8 + 0xf0)) {
        } else {
            eax = *L00501680(A8, *(edi + 4));
        }
        Vfffffff4 = eax;
        eax = *Vfffffff8 + *Vfffffff4 >> 1;
        if(!(eax = ( *(edi + 4) << 2) + ( *(edi + 4) << 2) * 8 + M00655aec)) {
            asm("adc eax,+0x0");
        }
        *Vfffffffc = ax;
        eax = *(Vfffffff8 + 2) + *(Vfffffff4 + 2) >> 1;
        >= ? 0x451e62 : ;
        asm("adc eax,+0x0");
        *(Vfffffffc + 2) = ax;
        eax = *(Vfffffff8 + 0xc) < *(Vfffffff4 + 0xc) ? *(Vfffffff8 + 0xc) : *(Vfffffff4 + 0xc);
        *(Vfffffffc + 0xc) = eax;
        eax = ( *(edi + 3) ^ 1) + ( *(edi + 3) ^ 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(A8 + 0xf0) ? (( *(edi + 3) ^ 1) << 2) + (( *(edi + 3) ^ 1) << 2) * 8 + M00655aec : *L00501680(A8, *(edi + 3) ^ 1);
        Vfffffff8 = eax;
        eax = ( *(edi + 4) ^ 1) + ( *(edi + 4) ^ 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        if(eax == *(A8 + 0xf0)) {
        } else {
            eax = *L00501680(A8, *(edi + 4) ^ 1);
        }
        Vfffffff4 = eax;
        eax = *Vfffffff8 + *Vfffffff4 >> 1;
        if(!(eax = (( *(edi + 4) ^ 1) << 2) + (( *(edi + 4) ^ 1) << 2) * 8 + M00655aec)) {
            asm("adc eax,+0x0");
        }
        *(Vfffffffc + 0x24) = ax;
        eax = *(Vfffffff8 + 2) + *(Vfffffff4 + 2) >> 1;
        >= ? 0x451f4a : ;
        asm("adc eax,+0x0");
        *(Vfffffffc + 0x26) = ax;
        eax = *(Vfffffff8 + 0xc) < *(Vfffffff4 + 0xc) ? *(Vfffffff8 + 0xc) : *(Vfffffff4 + 0xc);
        *(Vfffffffc + 0x30) = eax;
        eax = ebx;
        goto L0045267a;
L00451f7a:
        eax = *(edi + 4) + *(edi + 4) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(edi + 4) << 2) + ( *(edi + 4) << 2) * 8 + M00655aec : *L00501684(A8, *(edi + 4));
        Vfffffff8 = eax;
        *(Vfffffffc + 0x18) = ~( *(Vfffffff8 + 0x18));
        *(Vfffffffc + 0x1c) = ~( *(Vfffffff8 + 0x1c));
        *(Vfffffffc + 0x20) = ~( *(Vfffffff8 + 0x20));
        eax = ( *(edi + 4) ^ 1) + ( *(edi + 4) ^ 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? (( *(edi + 4) ^ 1) << 2) + (( *(edi + 4) ^ 1) << 2) * 8 + M00655aec : *L00501684(A8, *(edi + 4) ^ 1);
        Vfffffff8 = eax;
        *(Vfffffffc + 0x3c) = ~( *(Vfffffff8 + 0x18));
        *(Vfffffffc + 0x40) = ~( *(Vfffffff8 + 0x1c));
        *(Vfffffffc + 0x44) = ~( *(Vfffffff8 + 0x20));
        *(Vfffffffc + 0x38) = 1;
        *(Vfffffffc + 0x14) = 1;
        goto L00452632;
L0045205c:
        eax = *(edi + 4) + *(edi + 4) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(edi + 4) << 2) + ( *(edi + 4) << 2) * 8 + M00655aec : *L00501684(A8, *(edi + 4));
        Vfffffff8 = eax;
        Vfffffff0 = L00451721() >> *(edi + 2);
        *(Vfffffffc + 0x18) = *(Vfffffff8 + 0x18) + Vfffffff0;
        Vffffffec = L00451721() >> *(edi + 2);
        *(Vfffffffc + 0x1c) = *(Vfffffff8 + 0x1c) + Vffffffec;
        Vffffffe8 = L00451721() >> *(edi + 2);
        *(Vfffffffc + 0x20) = *(Vfffffff8 + 0x20) + Vffffffe8;
        eax = ( *(edi + 4) ^ 1) + ( *(edi + 4) ^ 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? (( *(edi + 4) ^ 1) << 2) + (( *(edi + 4) ^ 1) << 2) * 8 + M00655aec : *L00501684(A8, *(edi + 4) ^ 1);
        Vfffffff4 = eax;
        *(Vfffffffc + 0x3c) = *(Vfffffff4 + 0x18) + Vffffffe8;
        *(Vfffffffc + 0x40) = *(Vfffffff4 + 0x1c) + Vffffffec;
        *(Vfffffffc + 0x44) = *(Vfffffff4 + 0x20) + Vfffffff0;
        *(Vfffffffc + 0x38) = 1;
        *(Vfffffffc + 0x14) = 1;
        goto L00452632;
L00452211:
        *(ebx + 0x14) = 1;
        eax = (Ac & 1 ^ *(edi + 3)) + (Ac & 1 ^ *(edi + 3)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 3)) << 2) + ((Ac & 1 ^ *(edi + 3)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 3));
        Vfffffff8 = eax;
        eax = (Ac & 1 ^ *(edi + 4)) + (Ac & 1 ^ *(edi + 4)) * 8;
        if(*(M00655aec + eax * 4 + 0x14) != 0) {
        } else {
            eax = *L00501684(A8, Ac & 1 ^ *(edi + 4));
        }
        Vfffffff4 = eax;
        eax = *(Vfffffff8 + 0x18) + *(Vfffffff4 + 0x18) >> 1;
        if(!(eax = ((Ac & 1 ^ *(edi + 4)) << 2) + ((Ac & 1 ^ *(edi + 4)) << 2) * 8 + M00655aec)) {
            asm("adc eax,+0x0");
        }
        *(ebx + 0x18) = eax;
        eax = *(Vfffffff8 + 0x1c) + *(Vfffffff4 + 0x1c) >> 1;
        >= ? 0x4522d5 : ;
        asm("adc eax,+0x0");
        *(ebx + 0x1c) = eax;
        eax = *(Vfffffff8 + 0x20) + *(Vfffffff4 + 0x20) >> 1;
        >= ? 0x4522eb : ;
        asm("adc eax,+0x0");
        *(ebx + 0x20) = eax;
        goto L00452632;
L004522f3:
        eax = (Ac & 1 ^ *(edi + 3)) + (Ac & 1 ^ *(edi + 3)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 3)) << 2) + ((Ac & 1 ^ *(edi + 3)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 3));
        Vfffffff8 = eax;
        eax = (Ac & 1 ^ *(edi + 4)) + (Ac & 1 ^ *(edi + 4)) * 8;
        if(*(M00655aec + eax * 4 + 0x14) != 0) {
        } else {
            eax = *L00501684(A8, Ac & 1 ^ *(edi + 4));
        }
        Vfffffff4 = eax;
        eax = *Vfffffff8 + *Vfffffff4 >> 1;
        if(!(eax = ((Ac & 1 ^ *(edi + 4)) << 2) + ((Ac & 1 ^ *(edi + 4)) << 2) * 8 + M00655aec)) {
            asm("adc eax,+0x0");
        }
        *ebx = ax;
        eax = *(Vfffffff8 + 2) + *(Vfffffff4 + 2) >> 1;
        >= ? 0x4523b6 : ;
        asm("adc eax,+0x0");
        *(ebx + 2) = ax;
        eax = *(Vfffffff8 + 0xc) < *(Vfffffff4 + 0xc) ? *(Vfffffff8 + 0xc) : *(Vfffffff4 + 0xc);
        *(ebx + 0xc) = eax;
        *(ebx + 4) = *(Vfffffff8 + 4);
        *(ebx + 8) = *(Vfffffff8 + 8);
        *(ebx + 0x14) = *(A8 + 0xf0);
        eax = ebx;
        goto L0045267a;
L004523fb:
        *(ebx + 0x14) = 1;
        eax = (Ac & 1 ^ *(edi + 3)) + (Ac & 1 ^ *(edi + 3)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 3)) << 2) + ((Ac & 1 ^ *(edi + 3)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 3));
        Vfffffff8 = eax;
        eax = (Ac & 1 ^ *(edi + 4)) + (Ac & 1 ^ *(edi + 4)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 4)) << 2) + ((Ac & 1 ^ *(edi + 4)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 4));
        Vfffffff4 = eax;
        eax = (Ac & 1 ^ *(edi + 2)) + (Ac & 1 ^ *(edi + 2)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 2)) << 2) + ((Ac & 1 ^ *(edi + 2)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 2));
        *(ebx + 0x18) = *(Vfffffff8 + 0x18) - *(Vfffffff4 + 0x18) + *(eax + 0x18);
        *(ebx + 0x1c) = *(Vfffffff8 + 0x1c) - *(Vfffffff4 + 0x1c) + *(eax + 0x1c);
        *(ebx + 0x20) = *(Vfffffff8 + 0x20) - *(Vfffffff4 + 0x20) + *(eax + 0x20);
        goto L00452632;
L00452518:
        *(ebx + 0x14) = 1;
        eax = (Ac & 1 ^ *(edi + 3)) + (Ac & 1 ^ *(edi + 3)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 3)) << 2) + ((Ac & 1 ^ *(edi + 3)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 3));
        Vfffffff8 = eax;
        eax = (Ac & 1 ^ *(edi + 4)) + (Ac & 1 ^ *(edi + 4)) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ((Ac & 1 ^ *(edi + 4)) << 2) + ((Ac & 1 ^ *(edi + 4)) << 2) * 8 + M00655aec : *L00501684(A8, Ac & 1 ^ *(edi + 4));
        Vfffffff4 = eax;
        *(ebx + 0x18) = *(Vfffffff8 + 0x18) + *(Vfffffff4 + 0x18);
        *(ebx + 0x1c) = *(Vfffffff8 + 0x1c) + *(Vfffffff4 + 0x1c);
        *(ebx + 0x20) = *(Vfffffff8 + 0x20) + *(Vfffffff4 + 0x20);
L00452632:
        if(A10 != 0) {
            *(ebx + 4) = *(ebx + 0x18) + *(A8 + 4);
            *(ebx + 8) = *(ebx + 0x1c) + *(A8 + 8);
            *(ebx + 0xc) = *(ebx + 0x20) + *(A8 + 0xc);
            if(L00452681(ebx, ebx + 4) != 0) {
                *(ebx + 2) = 32770;
                *ebx = 32770;
            }
            *(ebx + 0x14) = *(A8 + 0xf0);
        }
        eax = ebx;
    }
L0045267a:
}

/*    Procedure: 0x00452681 - 0x00452732
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00444A88()
 *        L004514F3()
 *        L00451BEC()
 *        L0045B2CC()
 *        L00463048()
 *        L0046D648()
 *        L0046E898()
 */

L00452681(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = Ac;
    if(*(ebx + 8) < 0x40) {
        return 1;
    }
    if(*(ebx + 8) > 65536) {
        eax = *ebx;
        ecx = *(ebx + 8) >> 8;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        ecx = eax + 0xa0;
        eax = *(ebx + 4);
        ebx = *(ebx + 8) >> 8;
        asm("cdq");
        edx = ebx / ebx % ebx / ebx;
        (save)eax;
        (restore)edx;
        eax = 0x4f - edx;
    } else {
        eax = *ebx << 8;
        asm("cdq");
        *(ebx + 8) = *(ebx + 8) / *(ebx + 8);
        edx = *(ebx + 8) % *(ebx + 8);
        ecx = eax + 0xa0;
        eax = *(ebx + 4) << 8;
        asm("cdq");
        *(ebx + 8) = *(ebx + 8) / *(ebx + 8);
        edx = *(ebx + 8) % *(ebx + 8);
        (save)eax;
        (restore)edx;
        eax = 0x4f - edx;
    }
    edx = ecx < 0 ? ~ecx : ecx;
    ebx = eax < 0 ? ~eax : eax;
    edx = edx | ebx;
    do {
        ecx = ecx >> 1;
        eax = eax >> 1;
        edx = edx >> 1;
    } while(edx > 7936);
    *A8 = cx;
    *(A8 + 2) = ax;
    return 0;
}

/*    Procedure: 0x00452733 - 0x004527A8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00452733(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    eax = A8;
    edx = 6642416;
    esi = *L00655AF0;
    *esi = *(eax + 0x8d);
    *(esi + 2) = *(eax + 0x8f);
    *( *L00655AF0 + 3) = *( *L00655AF0 + 3) & 0xfe;
    *( *edx + 3) = *( *edx + 3) & 0xfd;
    esi = *edx + 8;
    *esi = *(eax + 0x90);
    *(esi + 2) = *(eax + 0x92);
    *( *edx + 0xb) = *( *edx + 0xb) & 0xfe;
    *( *edx + 0xb) = *( *edx + 0xb) & 0xfd;
    for(eax = 2; eax < *(Ac + 0x10); eax = eax + 1) {
        *( *edx + eax * 8 + 3) = *( *edx + eax * 8 + 3) | 1;
        *( *edx + eax * 8 + 3) = *( *edx + eax * 8 + 3) | 2;
    }
}

/*    Procedure: 0x004527A9 - 0x00452918
 *    Argument size: 8
 *    Local size: 24
 *    Save regs size: 12
 */

L004527A9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = Ac;
    eax = A8;
    esi = (ebx >> 1) + (ebx >> 1) + ((ebx >> 1) + (ebx >> 1)) * 2 + *(eax + 0x154) - 6;
    edx = (ebx << 3) + M00655af0;
    ecx = *esi & 0xff;
    Vfffffff4 = *(esi + 2) << 8;
    if(!(bl & 1)) {
        Vfffffff4 = ~Vfffffff4;
    }
    Vfffffff8 = *(esi + 3) << 8;
    Vfffffffc = *(esi + 4) << 8;
    esi = (ecx >> 1) + (ecx >> 1) * 2;
    Vffffffe8 = *( *(eax + 0x150) + esi * 2 + 2);
    if(!((ebx ^ ecx) & 1)) {
        Vffffffe8 = ~Vffffffe8;
    }
    ebx = (ecx >> 1) + (ecx >> 1) * 2;
    Vffffffec = *( *(eax + 0x150) + ebx * 2 + 3);
    ecx = (ecx >> 1) + (ecx >> 1) * 2;
    Vfffffff0 = *( *(eax + 0x150) + ecx * 2 + 4);
    ebx = *(eax + 0x148) - *(eax + 0x44);
    if(ebx < 0) {
        ecx = ~ebx;
        Vffffffe8 = Vffffffe8 >> cl;
        ecx = ~ebx;
        Vffffffec = Vffffffec >> cl;
        Vfffffff0 = Vfffffff0 >> ~ebx;
    } else {
        if(ebx > 0) {
            ecx = ebx;
            Vffffffe8 = Vffffffe8 << cl;
            ecx = ebx;
            Vffffffec = Vffffffec << cl;
            Vfffffff0 = Vfffffff0 << ebx;
        }
    }
    Vffffffe8 = Vffffffe8 + ~( *(eax + 0x48));
    Vffffffec = Vffffffec + ~( *(eax + 0x4c));
    Vfffffff0 = Vfffffff0 + ~( *(eax + 0x50));
    ebx = *(eax + 0x38);
    ecx = *(eax + 0x3c);
    ecx = *(eax + 0x40);
    ebx = Vfffffff4 * Vfffffff4 + Vfffffff8 * Vfffffff8 + Vfffffffc * Vfffffffc;
    if(ebx >= 0) {
        *edx = 0;
        *(edx + 1) = 0;
        *(edx + 2) = 0;
    } else {
        ecx = (ebx >> 0x1b & 7) + (ebx >> 0x1b & 7) * 2;
        *edx = *(eax + ecx + 0x84);
        *(edx + 2) = *(eax + ecx + 0x86);
    }
    eax = Vffffffe8;
    ecx = Vffffffec;
    ecx = Vfffffff0;
    if(Vfffffff4 * Vfffffff4 + Vfffffff8 * Vfffffff8 + Vfffffffc * Vfffffffc >= 0) {
        *(edx + 3) = *(edx + 3) & 0xfd;
        *(edx + 3) = *(edx + 3) | 1;
        eax = edx;
    } else {
        *(edx + 3) = *(edx + 3) & 0xfd;
        *(edx + 3) = *(edx + 3) & 0xfe;
        eax = edx;
    }
}

/*    Procedure: 0x00452919 - 0x0045293F
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042A718()
 *        L00435957()
 *        L0043980C()
 *        L00439FBC()
 *        L0043A5F4()
 *        L0043B2D8()
 *        L0043F26E()
 */

L00452919(A8, Aa, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Aa;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{
    /* unknown */ void  ecx;



    ax = Aa + Ae;
    *(ebp - 2) = ax;
    asm("imul edx");
    *(ebp - 4) = A8 >> 0xf;
    return *(ebp - 4);
}

/*    Procedure: 0x00452940 - 0x00452974
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00452940()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    eax = *(ebp + 8);
    edx = *(ebp + 0xe);
    *(ebp - 8) = edx + *(ebp + 0x12);
    edx = *(ebp + 0xc);
    *(ebp - 4) = *(ebp + 0x10) * *(ebp + 0x10) + *(ebp + 0x10) * *(ebp + 0x10);
    *eax = *(ebp - 8);
    *(eax + 4) = *(ebp - 4);
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00452975 - 0x004529D1
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 4
 */

L00452975(A8, Aa, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Aa;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{



    if(Ac == 0) {
        *(ebp - 2) = 0x7f;
        *(ebp - 4) = 32767;
        return *(ebp - 4);
    }
    ax = Aa - Ae;
    *(ebp - 2) = ax;
    eax = A8 << 0xe;
    asm("cdq");
    edx = Ac / Ac % Ac / Ac;
    *(ebp - 4) = ax;
    eax = *(ebp - 4);
    asm("cdq");
    if((eax ^ edx) - edx >= 16384) {
        *(ebp - 2) = *(ebp - 2) + 1;
    } else {
        *(ebp - 4) = *(ebp - 4) << 1;
    }
    return *(ebp - 4);
}

/*    Procedure: 0x004529D2 - 0x004529FC
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 0
 */

L004529D2(A8, Aa, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Aa;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{



    Aa = Aa - Ae;
    if(Ac != 0) {
        eax = A8 << 0xe;
        asm("cdq");
        A8 = Ac / Ac % Ac / Ac;
    }
    return A8;
}

/*    Procedure: 0x004529FD - 0x00452A13
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004529FD(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    Ac = ~Ac;
    return L00452A14(A8, Ac);
}

/*    Procedure: 0x00452A14 - 0x00452AD5
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004529FD()
 */

L00452A14(A8, Aa, Ac, Ae)
/* unknown */ void  A8;
/* unknown */ void  Aa;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = ebp - 4;
    if(Aa > Ae) {
        edx = Ae + 0x1f;
        if(Aa > edx) {
            eax = A8;
            goto L00452ad2;
        }
        *(ebx + 2) = Aa;
        ecx = (Ac >> Aa - Ae) + A8;
    } else {
        edx = Aa + 0x1f;
        if(Ae > edx) {
            eax = Ac;
            goto L00452ad2;
        }
        *(ebx + 2) = Ae;
        ecx = (A8 >> Ae - Aa) + Ac;
    }
    eax = ecx;
    asm("cdq");
    if((eax ^ edx) - edx > 32767) {
        *ebx = ecx >> 1;
        *(ebx + 2) = *(ebx + 2) + 1;
        eax = *ebx;
    } else {
        *ebx = cx;
        if(cx == 0) {
            eax = *ebx;
        } else {
            while(1) {
                eax = *ebx;
                asm("cdq");
                if((eax ^ edx) - edx >= 16383) {
                    break;
                }
                *ebx = *ebx << 1;
                *(ebx + 2) = *(ebx + 2) - 1;
            }
            eax = *ebx;
        }
    }
L00452ad2:
}

/*    Procedure: 0x00452AD6 - 0x00452B0C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00452AD6()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp + 0x18) = ~( *(ebp + 0x18));
    L00452B0D(ebp - 8, *(ebp + 0xc), *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18));
    *ebx = *(ebp - 8);
    *(ebx + 4) = *(ebp - 4);
    eax = ebx;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00452B0D - 0x00452BC9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00452AD6()
 */

L00452B0D()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 8);
    esi = ebp - 8;
    if(*(ebp + 0xc) > *(ebp + 0x14)) {
        if(*(ebp + 0x14) + 0x1f < *(ebp + 0xc)) {
            *ebx = *(ebp + 0xc);
            *(ebx + 4) = *(ebp + 0x10);
            eax = ebx;
            goto L00452bc4;
        }
        *esi = *(ebp + 0xc) + 1;
        ecx = *esi - *(ebp + 0x14);
        eax = *(ebp + 0x18) >> cl;
        edx = *(ebp + 0x10) >> 1;
        *(esi + 4) = eax + edx;
    } else {
        if(*(ebp + 0xc) + 0x1f < *(ebp + 0x14)) {
            *ebx = *(ebp + 0x14);
            *(ebx + 4) = *(ebp + 0x18);
            eax = ebx;
            goto L00452bc4;
        }
        *esi = *(ebp + 0x14) + 1;
        ecx = *esi - *(ebp + 0xc);
        eax = *(ebp + 0x10) >> cl;
        edx = *(ebp + 0x18) >> 1;
        *(esi + 4) = eax + edx;
    }
    if(*(esi + 4) == 0) {
        *ebx = *esi;
        *(ebx + 4) = *(esi + 4);
        eax = ebx;
    } else {
        while(1) {
            eax = *(esi + 4);
            asm("cdq");
            if((eax ^ edx) - edx >= 1073741824) {
                break;
            }
            *(esi + 4) = *(esi + 4) << 1;
            *esi = *esi - 1;
        }
        *ebx = *esi;
        *(ebx + 4) = *(esi + 4);
        eax = ebx;
    }
L00452bc4:
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00452BCA - 0x00452C07
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00452BCA(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    eax = A8;
    if(eax == 0) {
        *(ebp - 2) = 65529;
        *(ebp - 4) = 0;
        return *(ebp - 4);
    }
    *(ebp - 2) = 0x20;
    do {
        eax = eax + eax;
        *(ebp - 2) = *(ebp - 2) - 1;
    } while(eax > 0);
    *(ebp - 4) = eax >> 0x11;
    return *(ebp - 4);
}

/*    Procedure: 0x00452C08 - 0x00452C4D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00452C08(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    ecx = A8;
    if(ecx == 0) {
        *(ebp - 2) = 65529;
        *(ebp - 4) = 0;
        return *(ebp - 4);
    }
    for(*(ebp - 2) = 0x1f; 1; *(ebp - 2) = *(ebp - 2) - 1) {
        eax = ecx;
        asm("cdq");
        if((eax ^ edx) - edx >= 1073741824) {
            break;
        }
        ecx = ecx + ecx;
    }
    *(ebp - 4) = ecx >> 0x10;
    return *(ebp - 4);
}

/*    Procedure: 0x00452C4E - 0x00452C80
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452C4E(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    if(Aa <= 0x1f) {
        return A8 << 0x10 >> 0x1f - Aa;
    }
    eax = -2147483648;
    if(A8 >= 0) {
        eax = 0;
    }
}

/*    Procedure: 0x00452C81 - 0x00452C99
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452C81(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    return A8 << 0x10 >> 0x1f - Aa;
}

/*    Procedure: 0x00452C9A - 0x00452CC9
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452C9A(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    if(Aa <= 0xf) {
        return A8 >> 0xf - Aa;
    }
    eax = -2147483648;
    if(A8 >= 0) {
        eax = 0;
    }
}

/*    Procedure: 0x00452CCA - 0x00452D01
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452CCA(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    if(Aa <= 0xf) {
        ecx = 0xf - Aa;
        return A8 >> cl;
    }
    if(Aa <= 0x20) {
        return A8 << Aa - 0xf;
    }
    return eax | -1;
}

/*    Procedure: 0x00452D02 - 0x00452D42
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00452D02()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp - 8) = *(ebp + 0xc);
    *(ebp - 4) = *(ebp + 0xc) >> 0x1f;
    L0044EC90(ebp - 8, *(ebp + 0xe) - 0xf);
    *ebx = *(ebp - 8);
    *(ebx + 4) = *(ebp - 4);
    eax = ebx;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00452D43 - 0x00452D64
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452D43(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    if(A8 != 0) {
        while(ah & 0x40) {
            A8 = A8 << 1;
            Aa = Aa - 1;
        }
    }
    return A8;
}

/*    Procedure: 0x00452D65 - 0x00452D8B
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452D65(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    if(A8 != 0) {
        while(1) {
            eax = A8 ^ A8 + A8;
            if(!(Aa = Aa - 1)) {
                break;
            }
            A8 = A8 << 1;
        }
    }
    return A8;
}

/*    Procedure: 0x00452D8C - 0x00452DB6
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00452D8C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A10 != 0) {
        while(1) {
            edx = A10 + A10 ^ A10;
            if(!(Ac = Ac - 1)) {
                break;
            }
            A10 = A10 << 1;
        }
    }
    *A8 = Ac;
    *(A8 + 4) = A10;
}

/*    Procedure: 0x00452DB7 - 0x00452DD8
 *    Argument size: 6
 *    Local size: 0
 *    Save regs size: 0
 */

L00452DB7(A8, Aa)
/* unknown */ void  A8;
/* unknown */ void  Aa;
{



    if(A8 != 0) {
        while(ah & 0x80) {
            A8 = A8 << 1;
            Aa = Aa - 1;
        }
    }
    return A8;
}

/*    Procedure: 0x00452DD9 - 0x00452DF6
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00452DD9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = Ac;
    edx = 0;
    ebx = A10 / A10;
    edx = ebx % ebx;
    *A8 = edx;
    eax = Ac;
    edx = 0;
    edx = ebx / ebx % ebx / ebx;
}

/*    Procedure: 0x00452DF7 - 0x00452E36
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041DFB0()
 *        L00452EFE()
 */

L00452DF7(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = 1;
    edx = A8 < 0 ? ~A8 : A8;
    do {
        edx = edx + edx;
        eax = eax + eax;
        if(Ac <= edx) {
            edx = edx - Ac;
            eax = eax + 1;
        }
    } while(eax > 0);
    eax = eax & 2147483647;
    edx = A8 < 0 ? ~eax : eax;
    return edx;
}

/*    Procedure: 0x00452E37 - 0x00452EC1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00452E37(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = 0;
    edx = -2147483648;
    if(-2147483648 > A8) {
        do {
            eax = eax + 1;
            edx = edx >> 2;
        } while(edx > A8);
    }
    *(ebp - 4) = 0;
    edx = 0;
    do {
        ecx = eax - 1;
        ebx = ( *(ebp - 4) >> cl) + edx;
        ecx = eax + eax;
        ecx = ebx + (-2147483648 >> cl);
        if(ecx <= A8) {
            edx = ecx;
            ecx = eax;
            *(ebp - 4) = *(ebp - 4) + (-2147483648 >> cl);
        }
        eax = eax + 1;
    } while(eax <= 0xf);
    do {
        ecx = eax - 1;
        ecx = ( *(ebp - 4) >> cl) + edx;
        if(ecx <= A8) {
            edx = ecx;
            ecx = eax;
            *(ebp - 4) = *(ebp - 4) + (-2147483648 >> cl);
        }
        eax = eax + 1;
    } while(eax <= 0x1f);
    return *(ebp - 4);
}

/*    Procedure: 0x00452EC2 - 0x00452EFD
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00427898()
 */

L00452EC2(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    esi = *L005016d0( *A8);
    esi = esi + *L005016d0( *(A8 + 4));
    return L00452EFE(A8, Ac, esi + *L005016d0( *(A8 + 8)));
}

/*    Procedure: 0x00452EFE - 0x00452F66
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00427898()
 *        L00452EC2()
 */

L00452EFE(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    esi = *L005016d4(A10 + A10);
    *A8 = L004537B0(L00452DF7( *A8, esi), Ac);
    *(A8 + 4) = L004537B0(L00452DF7( *(A8 + 4), esi), Ac);
    eax = L004537B0(L00452DF7( *(A8 + 8), esi), Ac);
    *(A8 + 8) = eax;
    return *(A8 + 8);
}

/*    Procedure: 0x00452F67 - 0x00452FC3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L00452F67(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)L00470ADC(Ac + 16384);
    eax = L00470ADC(A10);
    (restore)edx;
    *A8 = ~(eax * eax) >> 0xf;
    (save)L00470ADC(Ac);
    eax = L00470ADC(A10);
    (restore)edx;
    *(A8 + 4) = eax * eax >> 0xf;
    eax = L00470ADC(A10 + 16384);
    *(A8 + 8) = eax;
    return *(A8 + 8);
}

/*    Procedure: 0x00452FC4 - 0x00453024
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L00452FC4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *A8 = ~(L004537B0(L00470B41(Ac + 16384), L00470B41(A10)));
    *(A8 + 4) = L004537B0(L00470B41(Ac), L00470B41(A10));
    eax = L00470B41(A10 + 16384);
    *(A8 + 8) = eax;
    return *(A8 + 8);
}

/*    Procedure: 0x00453025 - 0x00453120
 *    Argument size: 16
 *    Local size: 48
 *    Save regs size: 12
 */

L00453025(A8, Ac, Ae, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  Ae;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A14 >> 0x10;
    ebx = eax & -16;
    edi = eax - ebx;
    *L005016dc( & Vfffffff4, A10, ebx);
    *L005016dc( & Vffffffe8, A10, ebx + 0x10);
    Vffffffdc = ~Vfffffff4 + Vffffffe8;
    Vffffffe0 = ~Vfffffff8 + Vffffffec;
    Vffffffe4 = ~Vfffffffc + Vfffffff0;
    eax = Vffffffdc >> 0x10;
    *(A8 + 0xb4) = ax;
    eax = Vffffffe0 >> 0x10;
    *(A8 + 0xb6) = ax;
    *(A8 + 0xb8) = Vffffffe4 >> 0x10;
    (save)Ac;
    eax = Vffffffdc >> 4;
    asm("imul edi");
    (save)eax + Vfffffff4;
    esp = esp + 8;
    Vffffffd0 = L004537B0();
    (save)Ac;
    eax = Vffffffe0 >> 4;
    asm("imul edi");
    (save)eax + Vfffffff8;
    esp = esp + 8;
    Vffffffd4 = L004537B0();
    (save)Ac;
    eax = Vffffffe4 >> 4;
    asm("imul edi");
    (save)eax + Vfffffffc;
    esp = esp + 8;
    Vffffffd8 = L004537B0();
    return *L00501700(A8 + 0x3e, & Vffffffd0, Ae - 0xf);
}

/*    Procedure: 0x00453121 - 0x004531C7
 *    Argument size: 4
 *    Local size: 48
 *    Save regs size: 4
 */

L00453121(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(A8 + 0xb0);
    asm("imul dword [ebp+0xc]");
    eax = eax >> 0x10;
    edx = *(A8 + 0xb4);
    Vfffffff4 = eax * eax;
    edx = *(A8 + 0xb6);
    Vfffffff8 = eax * eax;
    edx = *(A8 + 0xb8);
    Vfffffffc = eax * eax;
    *L00501700( & Vffffffdc, & Vfffffff4, *(A8 + 0xb2) - 0x22);
    (save)Vffffffe0;
    L0044EB4E(A8 + 0x3e, *(A8 + 0x3e), *(A8 + 0x42), Vffffffdc);
    (save)Vffffffe8;
    L0044EB4E(A8 + 0x46, *(A8 + 0x46), *(A8 + 0x4a), Vffffffe4);
    (save)Vfffffff0;
    return L0044EB4E(A8 + 0x4e, *(A8 + 0x4e), *(A8 + 0x52), Vffffffec);
}

/*    Procedure: 0x004531C8 - 0x00453219
 *    Argument size: 16
 *    Local size: 16
 *    Save regs size: 4
 *    Called by:
 *        L0045321A()
 */

L004531C8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff8 = A10;
    Vfffffffc = Ac;
    (save)A14;
    L0044EBDD( & Vfffffff0, Vfffffff8, Vfffffffc);
    Vfffffff4 = Vfffffff4 << 3 | Vfffffff0 >> 0x1d;
    Vfffffff0 = Vfffffff0 << 3;
    *A8 = Vfffffff0;
    *(A8 + 4) = Vfffffff4;
    return A8;
}

/*    Procedure: 0x0045321A - 0x00453263
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045321A()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ecx = *(ebp + 0x1c);
    eax = *(ebp + 0x14);
    edx = *(ebp + 0x10);
    ebx = *(ebp + 8);
    eax = !eax;
    edx = !edx;
    eax = eax + 1;
    if(eax == 0) {
        edx = edx + 1;
    }
    eax = eax + ecx;
    edx = edx + *(ebp + 0x18);
    if(eax < ecx) {
        edx = edx + 1;
    }
    L004531C8(ebp - 8, edx, eax, *(ebp + 0xc));
    *ebx = *(ebp - 8);
    *(ebx + 4) = *(ebp - 4);
    eax = ebx;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00453264 - 0x0045345B
 *    Argument size: 16
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L0045345C()
 */

L00453264(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    edi = Ac;
    esi = 0;
    eax = 0;
    Vfffffffc = 0;
    if(Vfffffffc != 0) {
        ebx = !ebx + 1;
        edi = !edi;
        edi = edi;
    }
    ebx = ebx >> 7;
    ebx = ebx | edi << 0x19;
    edi = edi >> 7;
    if(edi != 0) {
        esi = L00459CEC(edi) + 1;
        ecx = esi;
        ebx = ebx >> cl;
        ebx = ebx | edi << 0x20 - esi;
    }
    eax = L00459CEC(ebx) - 0xe;
    if(eax < 0) {
        eax = 0;
    }
    esi = esi + eax;
    ebx = ebx >> eax;
    Vfffffff4 = *A14;
    Vfffffff8 = *A14 >> 0x1f;
    (save)ebx;
    L0044EBDD( & Vffffffdc, Vfffffff4, Vfffffff8);
    Vfffffff4 = *(A14 + 4);
    Vfffffff8 = *(A14 + 4) >> 0x1f;
    (save)ebx;
    L0044EBDD( & Vffffffe4, Vfffffff4, Vfffffff8);
    Vfffffff4 = *(A14 + 8);
    Vfffffff8 = *(A14 + 8) >> 0x1f;
    (save)ebx;
    L0044EBDD( & Vffffffec, Vfffffff4, Vfffffff8);
    Vffffffdc = Vffffffdc >> 2 | Vffffffe0 << 0x1e;
    Vffffffe0 = Vffffffe0 >> 2;
    Vffffffe4 = Vffffffe4 >> 2 | Vffffffe8 << 0x1e;
    Vffffffe8 = Vffffffe8 >> 2;
    edx = Vfffffff0 << 0x1e;
    Vffffffec = Vffffffec >> 2 | edx;
    Vfffffff0 = Vfffffff0 >> 2;
    if(esi != 0) {
        ecx = esi;
        eax = Vffffffe0 << cl;
        ecx = 0x20 - esi;
        Vffffffe0 = eax | Vffffffdc >> cl;
        ecx = esi;
        Vffffffdc = Vffffffdc << cl;
        ecx = esi;
        eax = Vffffffe8 << cl;
        ecx = 0x20 - esi;
        Vffffffe8 = eax | Vffffffe4 >> cl;
        ecx = esi;
        Vffffffe4 = Vffffffe4 << cl;
        ecx = esi;
        eax = Vfffffff0 << cl;
        ecx = 0x20 - esi;
        edx = Vffffffec >> cl;
        Vfffffff0 = eax | edx;
        Vffffffec = Vffffffec << esi;
    }
    if(Vfffffffc != 0) {
        Vffffffdc = !Vffffffdc + 1;
        Vffffffe0 = !Vffffffe0;
        Vffffffe4 = !Vffffffe4 + 1;
        Vffffffe8 = !Vffffffe8;
        Vffffffec = !Vffffffec + 1;
        Vfffffff0 = !Vfffffff0;
    }
    return L0045A044(A8, & Vffffffdc);
}

/*    Procedure: 0x0045345C - 0x0045347C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045345C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00453264(A8 + 0x3e, Ac, A10, A8 + 0x8c);
}

/*    Procedure: 0x0045347D - 0x00453590
 *    Argument size: 12
 *    Local size: 24
 *    Save regs size: 12
 */

L0045347D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    edi = A8;
    ebx = L00470B41(esi + 16384);
    esi = L00470B41(esi);
    Vfffffff4 = *edi;
    Vfffffff8 = *(edi + 4);
    Vfffffffc = *(edi + 8);
    eax = Ac;
    Vffffffe8 = *eax;
    Vffffffec = *(eax + 4);
    Vfffffff0 = *(eax + 8);
    (save)L004537B0(Vfffffff4, ebx);
    eax = L004537B0(Vffffffe8, esi);
    (restore)edx;
    *edi = edx + eax;
    (save)L004537B0(Vfffffff8, ebx);
    eax = L004537B0(Vffffffec, esi);
    (restore)edx;
    *(edi + 4) = edx + eax;
    (save)L004537B0(Vfffffffc, ebx);
    eax = L004537B0(Vfffffff0, esi);
    (restore)edx;
    *(edi + 8) = edx + eax;
    edi = L004537B0(Vffffffe8, ebx);
    edi = edi - L004537B0(Vfffffff4, esi);
    *Ac = edi;
    edi = L004537B0(Vffffffec, ebx);
    edi = edi - L004537B0(Vfffffff8, esi);
    *(Ac + 4) = edi;
    ebx = L004537B0(Vfffffff0, ebx);
    ebx = ebx - L004537B0(Vfffffffc, esi);
    eax = Ac;
    *(eax + 8) = ebx;
}

/*    Procedure: 0x00453591 - 0x004535F2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00453591(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = Ac;
    ecx = *(A8 + 0x3e);
    *(A8 + 0x3e) = *(A8 + 0x3e) + *edx;
    ebx = *edx >> 0x1f;
    *(A8 + 0x42) = *(A8 + 0x42) + ebx + (ecx :: *(A8 + 0x3e) > 0 & 1);
    ecx = *(A8 + 0x46);
    *(A8 + 0x46) = *(A8 + 0x46) + *(edx + 4);
    ebx = *(edx + 4) >> 0x1f;
    *(A8 + 0x4a) = *(A8 + 0x4a) + ebx + (ecx :: *(A8 + 0x46) > 0 & 1);
    ecx = *(A8 + 0x4e);
    *(A8 + 0x4e) = *(A8 + 0x4e) + *(edx + 8);
    edx = *(edx + 8) >> 0x1f;
    *(A8 + 0x52) = *(A8 + 0x52) + edx + (ecx :: *(A8 + 0x4e) > 0 & 1);
}

/*    Procedure: 0x004535F3 - 0x00453614
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004535F3(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    ecx = eax & 65535;
    ecx = Ac * Ac >> 0x10;
    eax = eax >> 0x10;
    asm("imul edx");
    return ecx + eax;
}

/*    Procedure: 0x00453615 - 0x00453647
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00453615(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac < 0 ? ~( *L005016f8(A8, ~Ac) + *L005016f8(A8, ~Ac)) : *L005016f8(A8, Ac) + *L005016f8(A8, Ac);
}

/*    Procedure: 0x00453648 - 0x004536B0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00453648(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A10;
    eax = A8;
    *eax = 0;
    *(eax + 8) = 0;
    *(eax + 0x10) = 0;
    if(ebx >= 0x20) {
        ebx = ebx - 0x20;
        ecx = ebx;
        *(eax + 4) = *Ac << cl;
        ecx = ebx;
        *(eax + 0xc) = *(Ac + 4) << cl;
        ecx = ebx;
        *(eax + 0x14) = *(Ac + 8) << cl;
    } else {
        *(eax + 4) = *Ac;
        *(eax + 0xc) = *(Ac + 4);
        *(eax + 0x14) = *(Ac + 8);
        eax = L00459F90(eax, 0x20 - ebx);
    }
}

/*    Procedure: 0x004536B1 - 0x004536D1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0042ADEB()
 *        L0042FE4D()
 *        L00433318()
 *        L00453CC8()
 */

L004536B1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *A8 = *A8 >> 0x10;
    *(A8 + 4) = *(A8 + 4) >> 0x10;
    *(A8 + 8) = *(A8 + 8) >> 0x10;
    return L004536D2(A8, Ac);
}

/*    Procedure: 0x004536D2 - 0x00453759
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00427898()
 *        L0042E38F()
 *        L00432588()
 *        L004536B1()
 *        L0045375A()
 */

L004536D2(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = L0045122F(Ac) + 1;
    eax = L00459CEC(ebx);
    esi = 0x1f - eax;
    ebx = L004537CD(1065353216, ebx << esi >> 1) >> 1;
    eax = L004537B0( *Ac, ebx - 1);
    eax = eax << esi + 1;
    *A8 = eax;
    eax = L004537B0( *(Ac + 4), ebx - 1);
    eax = eax << esi + 1;
    *(A8 + 4) = eax;
    eax = L004537B0( *(Ac + 8), ebx - 1);
    eax = eax << esi + 1;
    *(A8 + 8) = eax;
}

/*    Procedure: 0x0045375A - 0x004537AF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0045375A(A8)
/* unknown */ void  A8;
{



    L004536D2(A8, A8);
    L004536D2(A8 + 0x18, A8 + 0x18);
    L00454660(A8 + 0xc, A8 + 0x18, A8);
    L004536D2(A8 + 0xc, A8 + 0xc);
    return L00454660(A8, A8 + 0xc, A8 + 0x18);
}

/*    Procedure: 0x004537B0 - 0x004537C0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041DFB0()
 *        L0041EF5C()
 *        L00423EE4()
 *        L00427898()
 *        L004287E4()
 *        L0042A124()
 *        L0042ADEB()
 *        L0042CEA4()
 *        L0042E38F()
 *        L0042EAE6()
 *        L0042FF20()
 *        L00431BEE()
 *        L00432588()
 *        L004325FC()
 *        L00433318()
 *        L004339EC()
 *        L00433BA4()
 *        L0043BA88()
 *        L0043DA28()
 *        L0043FC74()
 *        L0043FDD8()
 *        L00440DAC()
 *        L0044237C()
 *        L0045122F()
 *        L00451748()
 *        L00452EFE()
 *        L00452FC4()
 *        L00453025()
 *        L0045347D()
 *        L004536D2()
 *        L00454660()
 *        L0045A6BC()
 *        L0045A7A8()
 *        L0045A879()
 *        L0045A968()
 *        L0045AA3C()
 *        L0045AB0C()
 *        L0045AD2C()
 *        L0045AF4C()
 *        L0045AFF0()
 *        L0045B08C()
 *        L0045E305()
 *        L0045EDE3()
 *        L0045F27C()
 *        L0045FE30()
 *        L00463048()
 *        L00463EBC()
 *        L00463FFE()
 *        L00464271()
 *        L004644CB()
 *        L00464731()
 *        L00464997()
 *        L00464C44()
 *        L00464EFD()
 *        L004651BB()
 *        L00465484()
 *        L00465786()
 *        L00465B8F()
 *        L00465FAA()
 *        L004663C3()
 *        L004667E8()
 *        L00466C51()
 *        L004670D0()
 *        L00467549()
 *        L004679CC()
 *        L00467C03()
 *        L00467E94()
 *        L0046881C()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 *        L0046D648()
 *        L0046E898()
 */

L004537B0(A8)
/* unknown */ void  A8;
{



    eax = A8;
    asm("imul dword [ebp+0xc]");
    eax = eax << 1;
    asm("rcl edx,1");
    return edx;
}

/*    Procedure: 0x004537C1 - 0x004537CC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004537C1(A8)
/* unknown */ void  A8;
{



    asm("imul eax");
    return edx;
}

/*    Procedure: 0x004537CD - 0x004537ED
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004287E4()
 *        L0042A124()
 *        L00433318()
 *        L004339EC()
 *        L004536D2()
 *        L0045EDE3()
 *        L0046101F()
 *        L00463048()
 */

L004537CD(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8 >> 1;
    if(eax >= Ac) {
        return eax | -1;
    }
    edx = A8;
    eax = edx;
    edx = edx >> 1;
    eax = eax << 0x1f;
    Ac = Ac / Ac;
    edx = Ac % Ac;
}

/*    Procedure: 0x004537EE - 0x004537F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004537EE()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
}

/*    Procedure: 0x004537F4 - 0x00453808
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C40C()
 *        L0043C5F2()
 */

L004537F4()
{



    if(!(M00644c18 & 0x20)) {
        return L004580FC();
    }
    return L004580D8();
}

/*    Procedure: 0x00453809 - 0x00453813
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453809()
{



    L004539E4();
    return 0;
}

/*    Procedure: 0x00453814 - 0x00453814
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L00453814()
{



}

/*    Procedure: 0x00453815 - 0x00453817
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453815()
{



}

/*    Procedure: 0x00453818 - 0x00453818
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L00453818()
{



}

/*    Procedure: 0x00453819 - 0x0045381B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453819()
{



}

/*    Procedure: 0x0045381C - 0x0045397A
 *    Argument size: 0
 *    Local size: 32
 *    Save regs size: 4
 *    Called by:
 *        L0043C5F2()
 */

L0045381C()
{
    /* unknown */ void  ebx;



    ebx = 0x500398;
    L00453814();
    if(L00478AFC(0x15, 0x453fb0) == -1) {
        L00473DA8("SIGBREAK signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    if(L00478AFC(0x16, 0x453fb0) == -1) {
        L00473DA8("SIGABRT signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    if(L00478AFC(8, 0x453fb0) == -1) {
        L00473DA8("SIGFPE signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    if(L00478AFC(4, 0x453fb0) == -1) {
        L00473DA8("SIGILL signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    if(L00478AFC(2, 0x453fb0) == -1) {
        L00473DA8("SIGINT signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    if(L00478AFC(0xb, 0x453fb0) == -1) {
        L00473DA8("SIGSEGV signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    if(L00478AFC(0xf, 0x453fb0) == -1) {
        L00473DA8("SIGTERM signal failed\n");
        do {
            *ebx();
        } while(al == 0);
        L004539E4();
    }
    L0044F9A0();
    L00453818();
    L00455A28();
    L00453FA8();
    L004508B0(0);
    L0046FECF();
    return L0044FCE0();
}

/*    Procedure: 0x0045397B - 0x0045397B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045397B()
{



}

/*    Procedure: 0x0045397C - 0x004539E1
 *    Argument size: 0
 *    Local size: 32
 *    Save regs size: 0
 *    Called by:
 *        L0043C98B()
 *        L004539E4()
 */

L0045397C()
{



    L00418168();
    L00470183();
    L0044FF28();
    L004701BD();
    L0044FA8C();
    if(!(M00657644 & 9)) {
        L004710DD(0x3ce, 65288);
        L004710DD(0x3ce, 5);
    }
    eax = L0046FCCE();
    if(M00506374 != 0 || M00506378 != 0) {
        eax = L00410F2C();
    }
}

/*    Procedure: 0x004539E2 - 0x004539E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004539E2()
{



}

/*    Procedure: 0x004539E4 - 0x004539F1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004110F4()
 *        L00411380()
 *        L00417C6C()
 *        L00417CA8()
 *        L00417D0C()
 *        L00417FC0()
 *        L00453809()
 *        L0045381C()
 *        L004614B8()
 *        L00461674()
 *        L0046FDF3()
 *        L00470837()
 */

L004539E4()
{



    L0045397C();
    return L00477E60(0);
}

/*    Procedure: 0x004539F2 - 0x00453A32
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004539F2()
{



    edx = M00644bc8;
    eax = M00644bcc ^ 305419903;
    ecx = eax << 0x19;
    M00644bc8 = M00644bc8 + (ecx | eax >> 7);
    eax = edx << 0xd;
    M00644bcc = eax | edx >> 0x13;
    return M00644bc8 & 65535;
}

/*    Procedure: 0x00453A33 - 0x00453A51
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00453A33(A8)
/* unknown */ void  A8;
{



    edx = A8;
    return edx + (edx + (edx + A8 * 4) * 4) * 8 + edx + (edx + (edx + A8 * 4) * 4) * 8 + M00501ba8 + 0x74;
}

/*    Procedure: 0x00453A52 - 0x00453A6E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00453A52(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    edx = A8;
    return edx + (edx + (edx + A8 * 4) * 4) * 8 + edx + (edx + (edx + A8 * 4) * 4) * 8 + Ac + 0x74;
}

/*    Procedure: 0x00453A6F - 0x00453A6F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453A6F()
{



}

/*    Procedure: 0x00453A70 - 0x00453C3E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00453D98()
 */

L00453A70(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A10;
    eax = Ac;
    edi = *(A8 + 0x86) & 0xff;
    if(eax != A8) {
        eax = L00471128(A8, eax, 0x152);
        *(A8 + 0x86) = esi != 0 ? edi : 0;
    }
    if(esi != 0) {
        *(A8 + 0xa8) = M00644ba4;
        *(A8 + 0xac) = M00644ba8;
        *(A8 + 0x82) = esi;
        esi = L00453F88(esi);
        *(ebp - 4) = *(esi + 0x2c);
        *(ebp - 2) = *(esi + 0x14) + *(esi + 0x18) + 7;
        *L005016bc(A8 + 0x138, *(ebp - 4));
        *(ebp - 4) = *(esi + 0x30);
        *(ebp - 2) = *(esi + 0x14) + *(esi + 0x18) + 7;
        *L005016bc(A8 + 0x140, *(ebp - 4));
        *(A8 + 0x151) = 0;
        *(A8 + 0x25) = 0;
        *(A8 + 0x124) = 0;
        dl = ( *(esi + 0x24) & 0xff) >> 4 & 7;
        eax = *(esi + 0x34);
        if(eax != 0) {
            if(*eax == 0) {
                goto L00453b61;
            }
            al = 0x80;
        } else {
L00453b61:
            eax = 0;
        }
        dl = dl | al;
        *(A8 + 0x14c) = dl;
        *(A8 + 0x88) = 0xff;
        eax = *(esi + 0x38);
        if(eax != 0) {
            *(A8 + 0xc4) = *eax;
            eax = *(esi + 0x38);
            ax = *(eax + 2);
            *(A8 + 0xc6) = ax;
            *(A8 + 0xc2) = ax;
            *(A8 + 0xbe) = ax;
            *(A8 + 0xc0) = ~( *(A8 + 0xbe));
            edx = *(A8 + 0xc0);
            *(A8 + 0xbc) = dx;
            *(A8 + 0x101) = *(A8 + 0xbc) >= 0x1329 ? 2 : *(A8 + 0xbc) >= 0xaa5 ? 1 : 0;
            *(A8 + 0xd1) = *( *(esi + 0x38) + 4);
            eax = *(esi + 0x38);
            eax = *(eax + 6) << 2;
            *(A8 + 0xe4) = ax;
            edx = *(esi + 0x38);
            eax = *(edx + 8);
            if(*(edx + 0x14) < 0) {
                edx = esi;
                *(A8 + 0xd0) = dl;
                eax = eax - *( *(A8 + 0xd0) * 4 + 0x4eed74);
            }
            *(A8 + 0x116) = ax;
            *(A8 + 0xe0) = 0;
            *(A8 + 0xe2) = 0;
        }
    }
}

/*    Procedure: 0x00453C3F - 0x00453C3F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453C3F()
{



}

/*    Procedure: 0x00453C40 - 0x00453CC4
 *    Argument size: 8
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00453D98()
 *        L00453F1E()
 */

L00453C40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;



    esi = M00644ba4 >> 0xa;
    M00501ba8 = A8;
    *L005030d8( & Vffffffe8, Ac);
    if(!(M00644bf4 = M00644bf4 - 1)) {
        L00453CC8(A8, Ac);
        M00644bf4 = 0;
    }
    L0045A968(6573008, 6573032, Ac);
    if(*(Ac + 0x57) != 0) {
        *L005030e0(Ac);
        L0045A968(6573020, 6573032, Ac + 0x5a);
    }
    return esi;
}

/*    Procedure: 0x00453CC5 - 0x00453CC7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453CC5()
{



}

/*    Procedure: 0x00453CC8 - 0x00453D97
 *    Argument size: 8
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00453C40()
 */

L00453CC8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;



    ebx = Ac;
    do {
        if(*(ebx + 0x56) == 0) {
            goto L00453ce8;
        }
        ebx = *L00501b94( *(ebx + 0x56) & 0xff, A8);
    } while(*(ebx + 0x14c) & 8);
    goto L00453d07;
L00453ce8:
    ebx = *L00501b90(0x72);
L00453d07:
    if(*(ebx + 0x82) == 0x17) {
        ebx = *L00501b94(( *(ebx + 0x86) & 0xff) - 1, A8);
    }
    *L005030d8( & Vffffffe8, Ac);
    L00459E08( & Vffffffe8, 0xd);
    M00644be8 = Vffffffe8;
    M00644bec = Vfffffff0;
    M00644bf0 = Vfffffff8;
    eax = L004536B1(6573032, 6573032);
    return L00471128(6573048, (( *(ebx + 0x14c) & 7) << 3) + (( *(ebx + 0x14c) & 7) << 3) * 2 + 0x501bac, 0x18);
}

/*    Procedure: 0x00453D98 - 0x00453F1D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00453D98(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -348;
    (save)ebx;
    (save)esi;
    (save)edi;
    M00644c18 = M00644c18 | 2;
    *(ebp - 4) = L00453C40(A8, Ac);
    esi = 0x72;
    eax = A8;
    edi = eax + 0x72;
    do {
        if(!( *edi & 8)) {
            eax = *L00501b94(esi, A8);
            ebx = eax;
            if(*(ebx + 0x8b) == 0) {
                *(ebx + 0x9c) = *(ebp - 4);
                if(*(ebx + 0x151) != 0) {
                    if(*(ebx + 0x14f) != 0) {
                        L00453A70(ebp + -348, ebx, 0);
                        *(ebp + -218) = 0xa1;
                        *(ebp + -190) = *(ebp - 0xb);
                        L0045AFF0(ebp + -348, *L00501b8c(), *L00501b8c());
                        *L005030e4(ebp + -348, Ac);
                    }
                    if(!( *(ebx + 0x151) & 2)) {
                        *(ebx + 0x151) = *(ebx + 0x151) & 0xfd;
                        *L005030f8(ebx, Ac);
                    }
                    if(!( *(ebx + 0x151) & 1)) {
                        *(ebp - 8) = *(ebx + 0x82);
                        *(ebx + 0x151) = *(ebx + 0x151) & 0xfe;
                        *(ebx + 0x7e) = *(L00453F88( *(ebx + 0x82)) + 0x14);
                        *(ebx + 0x82) = 0x9d;
                        *L005030e4(ebx, Ac);
                        *(ebx + 0x7e) = 0;
                        *(ebx + 0x82) = *(ebp - 8);
                    }
                }
                eax = M00644c22;
                if(eax != ( *(ebx + 0x86) & 0xff)) {
                    eax = *L005030e4(ebx, Ac);
                } else {
                    *(ebx + 0x9a) = 32768;
                    *(ebx + 0x98) = 32768;
                }
            }
        }
        esi = esi - 1;
        edi = edi - 1;
    } while(esi > 0);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00453F1E - 0x00453F87
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 */

L00453F1E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = L00453C40(A8, Ac);
    *(ebp - 4) = eax;
    ebx = 0x72;
    esi = A8 + 0x72;
    do {
        if(!( *esi & 8)) {
            eax = *L00501b94(ebx, A8);
            if(*(eax + 0x8b) == 0) {
                *(eax + 0x9c) = *(ebp - 4);
                eax = *L005030e4(eax, Ac);
            } else {
                *(eax + 0x8b) = *(eax + 0x8b) - 1;
            }
        }
        ebx = ebx - 1;
        esi = esi - 1;
    } while(ebx > 0);
}

/*    Procedure: 0x00453F88 - 0x00453F96
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00453A70()
 *        L00453D98()
 */

L00453F88(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 0x4d0e68);
}

/*    Procedure: 0x00453F97 - 0x00453FA6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00453F97(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 0x4d0e68);
}

/*    Procedure: 0x00453FA7 - 0x00453FA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453FA7()
{



}

/*    Procedure: 0x00453FA8 - 0x00453FAD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L00453FA8()
{



    return L0041BC68();
}

/*    Procedure: 0x00453FAE - 0x00453FB9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453FAE()
{



    return L0043C3F0();
}

/*    Procedure: 0x00453FBA - 0x00453FEE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453FBA()
{



    *eax = *eax + al;
    (save)ebp;
    ebp = esp;
    M0065762c = *(ebp + 0xc) >> 1;
    M0065762d = *(ebp + 0x10);
    L00453FF0(6649390, *(ebp + 8));
    (restore)ebp;
    return L00455524(6649388);
}

/*    Procedure: 0x00453FEF - 0x00453FEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00453FEF()
{



}

/*    Procedure: 0x00453FF0 - 0x00454027
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0044F213()
 *        L0044F22B()
 *        L0044F243()
 *        L00453FBA()
 */

L00453FF0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = Ac;
    edx = A8;
    ecx = 0;
    do {
        eax = esi & 0xf;
        bl = eax >= 0xa ? eax + 0x37 : eax + 0x30;
        *edx = bl;
        edx = edx + 1;
        esi = esi >> 4;
        ecx = ecx + 1;
    } while(ecx < 8);
    *edx = 0;
    return edx;
}

/*    Procedure: 0x00454028 - 0x0045405D
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00454028(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M0065762c = M0065762c + 0x14 - L00454060(A8, Ac, A10) - 6649390 + L00454060(A8, Ac, A10) - 6649390;
    return L00455524(6649388);
}

/*    Procedure: 0x0045405E - 0x0045405F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045405E()
{



}

/*    Procedure: 0x00454060 - 0x00454087
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00454028()
 */

L00454060(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M0065762c = Ac >> 1;
    M0065762d = A10;
    return L00454088(6649390, A8);
}

/*    Procedure: 0x00454088 - 0x0045409E
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044F097()
 *        L0044F25A()
 *        L0044F293()
 *        L0044F2CC()
 *        L0044F304()
 *        L0044F31C()
 *        L0044F334()
 *        L0044F34C()
 *        L0044F364()
 *        L00454060()
 */

L00454088(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L004540A0(A8, 0, Ac);
}

/*    Procedure: 0x0045409F - 0x0045409F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045409F()
{



}

/*    Procedure: 0x004540A0 - 0x00454123
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0044F37B()
 *        L00454088()
 */

L004540A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    ebx = A8;
    if(A10 < 0) {
        A10 = ~A10;
        Vfffffffc = 1;
    } else {
        Vfffffffc = 0;
    }
    edi = 0;
    do {
        eax = A10;
        ecx = 0xa;
        asm("cdq");
        dl = ecx / ecx % ecx / ecx + 0x30;
        *(ebp + edi - 0x10) = dl;
        edi = edi + 1;
        ecx = 0xa;
        eax = A10;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        A10 = eax;
    } while(A10 != 0);
    ebx = ebx + esi;
    if(Vfffffffc != 0) {
        *ebx = 0x2d;
        ebx = ebx + 1;
    }
    esi = esi - edi + 1;
    do {
        *ebx = 0x30;
        ebx = ebx + 1;
        esi = esi - 1;
    } while(esi > 0);
    do {
        edi = edi - 1;
        *ebx = *(ebp + edi - 0x10);
        ebx = ebx + 1;
    } while(edi > 0);
    *ebx = 0;
    return ebx + 1;
}

/*    Procedure: 0x00454124 - 0x0045423B
 *    Argument size: 20
 *    Local size: 52
 *    Save regs size: 8
 *    Called by:
 *        L0046209C()
 */

L00454124(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    esi = & Vffffffcc;
    L00454310(esi, A8, Ac, A10, A14);
    do {
        eax = *esi >> 0x10;
        Vfffffffc = ax;
        eax = *(esi + 4) >> 0x10;
        Vfffffffe = ax;
        *esi = *esi + *(esi + 8);
        *(esi + 4) = *(esi + 4) + *(esi + 0xc);
        *(esi + 8) = *(esi + 8) + *(esi + 0x10);
        *(esi + 0xc) = *(esi + 0xc) + *(esi + 0x14);
        *(esi + 0x10) = *(esi + 0x10) + *(esi + 0x18);
        *(esi + 0x14) = *(esi + 0x14) + *(esi + 0x1c);
        eax = *esi >> 0x10;
        Vfffffff8 = ax;
        eax = *(esi + 4) >> 0x10;
        Vfffffffa = ax;
        if(Vfffffffc < 0x140) {
            if(Vfffffffe >= 0x9e) {
                goto L004541aa;
            }
            if(Vfffffff8 < 0x140) {
                if(Vfffffffa >= 0x9e) {
                    goto L004541f9;
                }
                eax = L00457ABC( & Vfffffffc, & Vfffffff8, A18);
            } else {
L004541f9:
                L00454D20( & Vfffffff8, & Vfffffffc);
                eax = L00457ABC( & Vfffffffc, & Vfffffff8, A18);
            }
        } else {
L004541aa:
            eax = Vfffffff8;
            if(eax < 0x140) {
                eax = Vfffffffa;
                if(eax < 0x9e) {
                    L00454D20( & Vfffffffc, & Vfffffff8);
                    eax = L00457ABC( & Vfffffffc, & Vfffffff8, A18);
                }
            }
        }
    } while(*(esi + 0x24) = *(esi + 0x24) - 1);
}

/*    Procedure: 0x0045423C - 0x004542E5
 *    Argument size: 28
 *    Local size: 52
 *    Save regs size: 12
 *    Called by:
 *        L004542E8()
 *        L004550A4()
 */

L0045423C(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;



    L00454310( & Vffffffcc, Ac, A10, A14, A18);
    eax = Vffffffcc >> 0x10;
    Vfffffff8 = ax;
    eax = Vffffffd0 >> 0x10;
    Vfffffffa = ax;
    do {
        Vfffffffc = Vfffffff8;
        Vffffffcc = Vffffffcc + Vffffffd4;
        Vffffffd0 = Vffffffd0 + Vffffffd8;
        Vffffffd4 = Vffffffd4 + Vffffffdc;
        Vffffffd8 = Vffffffd8 + Vffffffe0;
        Vffffffdc = Vffffffdc + Vffffffe4;
        Vffffffe0 = Vffffffe0 + Vffffffe8;
        eax = Vffffffcc >> 0x10;
        Vfffffff8 = ax;
        Vfffffffa = Vffffffd0 >> 0x10;
        *A1c(A8, & Vfffffffc, & Vfffffff8, A20);
    } while(Vfffffff0 = Vfffffff0 - 1);
    return *A1c(A8, & Vfffffff8, A18, A20);
}

/*    Procedure: 0x004542E6 - 0x004542E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004542E6()
{



}

/*    Procedure: 0x004542E8 - 0x0045430F
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00461905()
 */

L004542E8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L0045423C(A8, Ac, A10, A14, A18, 0x454b9c, 0);
}

/*    Procedure: 0x00454310 - 0x00454541
 *    Argument size: 20
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00454124()
 *        L0045423C()
 *        L0046008C()
 */

L00454310(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *A8 = *Ac << 0x10;
    *(A8 + 4) = *(Ac + 2) << 0x10;
    ecx = *Ac;
    ebx = ecx;
    ebx = ebx + *A10;
    ebx = ebx + *A14;
    ebx = ebx + *A18;
    if(ebx < 0) {
        ebx = ebx + 3;
    }
    ecx = (ebx >> 2) - ecx;
    if(ecx < 0) {
        ecx = ~ecx;
    }
    ebx = *(Ac + 2);
    ebx = ebx + *(A10 + 2);
    ebx = ebx + *(A14 + 2);
    ebx = ebx + *(A18 + 2);
    if(ebx < 0) {
        ebx = ebx + 3;
    }
    ebx = ebx >> 2;
    ebx = ebx - *(Ac + 2);
    if(ebx < 0) {
        ebx = ~ebx;
    }
    *(A8 + 0x20) = ebx + ecx;
    ecx = *(A8 + 0x20);
    ebx = ecx < 4 ? 2 : ecx < 0x1e ? 3 : ecx < 25000 ? 4 : 5;
    (save)ebx + ebx * 2;
    (restore)esi;
    ecx = 0x10 - esi;
    esi = *A18 - *Ac;
    esi = esi + *A10 + *A10 * 2;
    Vfffffff8 = esi - *A14 + *A14 * 2 << cl;
    (save)ebx + ebx * 2;
    (restore)esi;
    ecx = 0x10 - esi;
    esi = *(A18 + 2) - *(Ac + 2);
    esi = esi + *(A10 + 2) + *(A10 + 2) * 2;
    Vfffffffc = esi - *(A14 + 2) + *(A14 + 2) * 2 << cl;
    ecx = 0x10 - ebx;
    Vfffffff0 = *A10 + *A10 * 2 - *Ac + *Ac * 2 << cl;
    ecx = 0x10 - ebx;
    Vfffffff4 = *(A10 + 2) + *(A10 + 2) * 2 - *(Ac + 2) + *(Ac + 2) * 2 << cl;
    (save)ebx + ebx;
    (restore)esi;
    ecx = 0x10 - esi;
    Vffffffe8 = *A14 + *A14 * 2 - *A10 + *A10 + ( *A10 + *A10) * 2 + *Ac + *Ac * 2 << cl;
    (save)ebx + ebx;
    (restore)esi;
    ecx = 0x10 - esi;
    Vffffffec = *(A14 + 2) + *(A14 + 2) * 2 - *(A10 + 2) + *(A10 + 2) + ( *(A10 + 2) + *(A10 + 2)) * 2 + *(Ac + 2) + *(Ac + 2) * 2 << cl;
    ecx = ebx;
    *(A8 + 0x24) = (1 << cl) - 1;
    *(A8 + 0x28) = 0x10 - ebx;
    *(A8 + 8) = Vfffffff8 + Vfffffff0 + Vffffffe8;
    *(A8 + 0xc) = Vfffffffc + Vfffffff4 + Vffffffec;
    *(A8 + 0x10) = Vffffffe8 + Vffffffe8 + Vfffffff8 + Vfffffff8 + (Vfffffff8 + Vfffffff8) * 2;
    *(A8 + 0x14) = Vffffffec + Vffffffec + Vfffffffc + Vfffffffc + (Vfffffffc + Vfffffffc) * 2;
    *(A8 + 0x18) = Vfffffff8 + Vfffffff8 + (Vfffffff8 + Vfffffff8) * 2;
    *(A8 + 0x1c) = Vfffffffc + Vfffffffc + (Vfffffffc + Vfffffffc) * 2;
}

/*    Procedure: 0x00454542 - 0x00454543
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454542()
{



}

/*    Procedure: 0x00454544 - 0x004545F1
 *    Argument size: -12
 *    Local size: 24
 *    Save regs size: 0
 *    Called by:
 *        L0046008C()
 */

L00454544(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edx = A8;
    if(*(Ac + 0x24) >= 0) {
        Vfffffff8 = *Ac;
        Vfffffffc = *(Ac + 4);
        Vfffffff0 = *(Ac + 8);
        Vfffffff4 = *(Ac + 0xc);
        Vffffffe8 = *(Ac + 0x10);
        Vffffffec = *(Ac + 0x14);
        do {
            Vfffffff8 = Vfffffff8 + Vfffffff0;
            Vfffffffc = Vfffffffc + Vfffffff4;
            Vfffffff0 = Vfffffff0 + Vffffffe8;
            Vfffffff4 = Vfffffff4 + Vffffffec;
            Vffffffe8 = Vffffffe8 + *(Ac + 0x18);
            Vffffffec = Vffffffec + *(Ac + 0x1c);
            *edx = 0x4618e0;
            ecx = Vfffffff8 >> 0x10;
            *(edx + 4) = cx;
            ecx = Vfffffffc >> 0x10;
            *(edx + 6) = cx;
            edx = edx + 8;
            *(Ac + 0x24) = *(Ac + 0x24) - 1;
        } while(*(Ac + 0x24) >= A10);
        *(Ac + 0x10) = Vffffffe8;
        *(Ac + 0x14) = Vffffffec;
        *(Ac + 8) = Vfffffff0;
        *(Ac + 0xc) = Vfffffff4;
        *Ac = Vfffffff8;
        *(Ac + 4) = Vfffffffc;
    }
    return edx;
}

/*    Procedure: 0x004545F2 - 0x004545F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004545F2()
{



}

/*    Procedure: 0x004545F4 - 0x0045465C
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00454700()
 *        L0046008C()
 */

L004545F4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ecx = A10;
    edx = Ac;
    ebx = *edx;
    Vfffffffc = *(edx + 4);
    edx = *(edx + 8);
    Vfffffff8 = *ecx;
    Vfffffff4 = *(ecx + 4);
    ecx = *(ecx + 8);
    esi = Vfffffffc;
    esi = ecx * ecx;
    edi = edx;
    *A8 = esi - Vfffffff4 * Vfffffff4 >> 0xf;
    esi = ebx;
    *(A8 + 4) = Vfffffff8 * Vfffffff8 - ecx * ecx >> 0xf;
    edx = Vfffffffc;
    *(A8 + 8) = Vfffffff4 * Vfffffff4 - Vfffffff8 * Vfffffff8 >> 0xf;
}

/*    Procedure: 0x0045465D - 0x0045465F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045465D()
{



}

/*    Procedure: 0x00454660 - 0x004546FC
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0045375A()
 */

L00454660(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = Ac;
    esi = *eax;
    edi = *(eax + 4);
    Vfffffffc = *(eax + 8);
    Vfffffff8 = *A10;
    Vfffffff4 = *(A10 + 4);
    Vfffffff0 = *(A10 + 8);
    (save)Vfffffff0;
    (save)L004537B0(edi);
    (save)Vfffffff4;
    (restore)A10;
    *A8 = A10 - L004537B0(Vfffffffc);
    (save)Vfffffff8;
    (save)L004537B0(Vfffffffc);
    (save)Vfffffff0;
    eax = L004537B0(esi);
    (restore)A10;
    *(A8 + 4) = A10 - eax;
    (save)Vfffffff4;
    (save)L004537B0(esi);
    (save)Vfffffff8;
    eax = L004537B0(edi);
    (restore)A10;
    *(A8 + 8) = A10 - eax;
}

/*    Procedure: 0x004546FD - 0x004546FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004546FD()
{



}

/*    Procedure: 0x00454700 - 0x004547EC
 *    Argument size: 16
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0046008C()
 */

L00454700(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;



    L004516B0( & Vfffffff4, Ac);
    eax = A10;
    *A8 = *eax;
    *(A8 + 4) = *(eax + 4);
    *(A8 + 8) = *(eax + 8);
    *(A8 + 0x10) = *Ac;
    *(A8 + 0x14) = *(Ac + 4);
    *(A8 + 0x18) = *(Ac + 8);
    *(A8 + 0x4c) = A14;
    esi = A8 + 0x1c;
    L004545F4(esi, & Vfffffff4, A10);
    ecx = *L00501674(esi);
    if(ecx == 0) {
        L00454A30(A8, A14);
    } else {
        *(A8 + 0xc) = ecx;
        eax = A14 << 0xf;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        edx = *(A8 + 0x1c);
        *(A8 + 0x1c) = eax * eax >> 0xf;
        edx = *(A8 + 0x20);
        *(A8 + 0x20) = eax * eax >> 0xf;
        edx = *(A8 + 0x24);
        *(A8 + 0x24) = eax * eax >> 0xf;
        L004545F4(A8 + 0x40, esi, A10);
        *(A8 + 0x40) = *(A8 + 0x40) * 43690 >> 0xf;
        *(A8 + 0x44) = *(A8 + 0x44) * 43690 >> 0xf;
        *(A8 + 0x48) = *(A8 + 0x48) * 43690 >> 0xf;
    }
    return L004548C8(A8);
}

/*    Procedure: 0x004547ED - 0x004547EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004547ED()
{



}

/*    Procedure: 0x004547F0 - 0x004548C5
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045E305()
 */

L004547F0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A10;
    eax = Ac;
    *(A8 + 0x10) = *eax;
    *(A8 + 0x14) = *(eax + 4);
    *(A8 + 0x18) = *(eax + 8);
    *A8 = *esi;
    *(A8 + 4) = *(esi + 4);
    *(A8 + 8) = *(esi + 8);
    eax = *esi;
    edi = eax;
    edi = eax * eax;
    eax = *(esi + 4);
    asm("imul edx");
    edi = edi + eax;
    if(edi < 9) {
        L00454A30(A8, A14);
    } else {
        eax = *L00501670(edi);
        *(A8 + 0xc) = eax;
        ecx = *(A8 + 0xc);
        eax = *(esi + 4) << 0xf;
        asm("cdq");
        ecx = ecx / ecx;
        edx = ecx % ecx;
        asm("imul dword [ebp+0x14]");
        *(A8 + 0x1c) = ~(eax >> 0xf);
        eax = *esi << 0xf;
        asm("cdq");
        ecx = ecx / ecx;
        edx = ecx % ecx;
        asm("imul dword [ebp+0x14]");
        *(A8 + 0x20) = eax >> 0xf;
        *(A8 + 0x24) = 0;
        eax = A14 << 2 << 8;
        esi = 3;
        asm("cdq");
        edx = esi / esi % esi / esi;
        esi = eax;
        eax = *A8;
        asm("imul dword [ebx+0x8]");
        asm("cdq");
        ecx = ecx / ecx;
        edx = ecx % ecx;
        asm("imul esi");
        *(A8 + 0x40) = eax >> 0xf;
        eax = *(A8 + 4);
        asm("imul dword [ebx+0x8]");
        asm("cdq");
        ecx = ecx / ecx;
        edx = ecx % ecx;
        asm("imul esi");
        *(A8 + 0x44) = eax >> 0xf;
        ecx = ~ecx;
        *(A8 + 0x48) = esi * esi >> 0xf;
    }
    return L004548C8(A8);
}

/*    Procedure: 0x004548C6 - 0x004548C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004548C6()
{



}

/*    Procedure: 0x004548C8 - 0x00454A2C
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 4
 *    Called by:
 *        L00454700()
 *        L004547F0()
 */

L004548C8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    *(A8 + 0x28) = *(A8 + 0x1c) + *(A8 + 0x10);
    *(A8 + 0x2c) = *(A8 + 0x20) + *(A8 + 0x14);
    *(A8 + 0x30) = *(A8 + 0x24) + *(A8 + 0x18);
    if(L00454A60(A8 + 0x6c, A8 + 0x28) != 0) {
        *(A8 + 0x7c) = *(A8 + 0x6c);
        Vfffffff4 = *(A8 + 0x40) + *(A8 + 0x28);
        Vfffffff8 = *(A8 + 0x44) + *(A8 + 0x2c);
        Vfffffffc = *(A8 + 0x48) + *(A8 + 0x30);
        if(L00454A60(A8 + 0x70, & Vfffffff4) == 0) {
            goto L00454a26;
        }
        Vfffffff4 = ~( *(A8 + 0x40)) + *(A8 + 0x28);
        Vfffffff8 = ~( *(A8 + 0x44)) + *(A8 + 0x2c);
        Vfffffffc = ~( *(A8 + 0x48)) + *(A8 + 0x30);
        if(L00454A60(A8 + 0x80, & Vfffffff4) == 0) {
            goto L00454a26;
        }
        *(A8 + 0x34) = ~( *(A8 + 0x1c)) + *(A8 + 0x10);
        *(A8 + 0x38) = ~( *(A8 + 0x20)) + *(A8 + 0x14);
        *(A8 + 0x3c) = ~( *(A8 + 0x24)) + *(A8 + 0x18);
        if(L00454A60(A8 + 0x78, A8 + 0x34) == 0) {
            goto L00454a26;
        }
        *(A8 + 0x88) = *(A8 + 0x78);
        Vfffffff4 = *(A8 + 0x40) + *(A8 + 0x34);
        Vfffffff8 = *(A8 + 0x44) + *(A8 + 0x38);
        Vfffffffc = *(A8 + 0x48) + *(A8 + 0x3c);
        if(L00454A60(A8 + 0x74, & Vfffffff4) == 0) {
            goto L00454a26;
        }
        Vfffffff4 = ~( *(A8 + 0x40)) + *(A8 + 0x34);
        Vfffffff8 = ~( *(A8 + 0x44)) + *(A8 + 0x38);
        Vfffffffc = ~( *(A8 + 0x48)) + *(A8 + 0x3c);
        if(L00454A60(A8 + 0x84, & Vfffffff4) == 0) {
            goto L00454a26;
        }
        eax = 1;
    } else {
L00454a26:
        eax = 0;
    }
}

/*    Procedure: 0x00454A2D - 0x00454A2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454A2D()
{



}

/*    Procedure: 0x00454A30 - 0x00454A5F
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00454700()
 *        L004547F0()
 */

L00454A30(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *(A8 + 0x1c) = Ac;
    *(A8 + 0x20) = 0;
    *(A8 + 0x24) = 0;
    *(A8 + 0x40) = 0;
    *(A8 + 0x44) = Ac * 43690 >> 0xf;
    *(A8 + 0x48) = 0;
    return 0;
}

/*    Procedure: 0x00454A60 - 0x00454B0D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004548C8()
 */

L00454A60(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = Ac;
    edx = *(eax + 8);
    if(edx < 0x40) {
        eax = 0;
    } else {
        ecx = *eax;
        esi = *(eax + 4);
        edi = edx;
        eax = ecx < 0 ? ~ecx : ecx;
        edx = esi < 0 ? ~esi : esi;
        eax = eax | edx;
        do {
            eax = eax >> 1;
            ecx = ecx >> 1;
            esi = esi >> 1;
            edi = edi >> 1;
        } while(eax > 8388608);
        if(edi == 0) {
            eax = 0;
        } else {
            eax = ecx << 8;
            asm("cdq");
            edi = edi / edi;
            edx = edi % edi;
            ecx = eax;
            eax = esi << 8;
            asm("cdq");
            for(edx = edi / edi % edi / edi; ecx >= 16384 || ecx <= -16384 || eax >= 16384 || eax <= -16384; eax = eax >> 1) {
                ecx = ecx >> 1;
            }
            cx = cx + 0xa0;
            *A8 = cx;
            dx = 0x4f - ax;
            *(A8 + 2) = dx;
            eax = 1;
        }
    }
}

/*    Procedure: 0x00454B0E - 0x00454B2A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00454B0E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*A8 < 0xa) {
        edx = *A8;
        *A8 = *A8 + 1;
        *(A8 + edx * 4 + 4) = Ac;
    }
    return A8 + 0x2c;
}

/*    Procedure: 0x00454B2B - 0x00454B2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454B2B()
{



}

/*    Procedure: 0x00454B2C - 0x00454B9A
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00454B9C()
 *        L00454FD8()
 */

L00454B2C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = Ac;
    ecx = A8;
    ebx = *(A10 + 2) - *(eax + 2);
    if(ebx != 0) {
        edi = *eax << 0x10;
        esi = *A10 - *eax;
        if(esi > 0) {
            eax = esi << 0x10;
            asm("cdq");
            ebx = ebx / ebx;
            edx = ebx % ebx;
            esi = eax;
        } else {
            eax = ~(esi << 0x10);
            asm("cdq");
            ebx = ebx / ebx;
            edx = ebx % ebx;
            eax = ~eax;
            esi = eax;
        }
        do {
            eax = A14(ecx, edi >> 0x10, A18);
            ecx = eax;
            edi = edi + esi;
            ebx = ebx - 1;
        } while(ebx > 0);
    }
}

/*    Procedure: 0x00454B9B - 0x00454B9B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454B9B()
{



}

/*    Procedure: 0x00454B9C - 0x00454C95
 *    Argument size: 16
 *    Local size: 12
 *    Save regs size: 4
 *    Called by:
 *        L004618B6()
 *        L004618DD()
 */

L00454B9C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = *Ac;
    eax = *A10;
    Vfffffff8 = eax;
    if(Vfffffffa < Vfffffffe) {
        Vfffffff4 = Vfffffffc;
        Vfffffffc = Vfffffff8;
        eax = Vfffffff4;
        Vfffffff8 = eax;
    }
    if(Vfffffffe < 0x9e && Vfffffffa > 0) {
        if(Vfffffffa > 0x9e) {
            L00454DD0( & Vfffffff8, & Vfffffffc, 0x9e);
        }
        if(Vfffffffe < 0) {
            L00454DD0( & Vfffffffc, & Vfffffff8, 0x9e);
        }
        if(Vfffffffc >= 0x140 || Vfffffff8 >= 0x140) {
            *(A8 + 6952) = 1;
        }
        eax = Vfffffffa;
        if(eax > *(A8 + 6960)) {
            *(A8 + 6960) = eax;
        }
        eax = Vfffffffe;
        if(eax < *(A8 + 6956)) {
            *(A8 + 6956) = eax;
        }
        eax = Vfffffffe;
        edx = eax;
        eax = L00454B2C(A8 + (edx + (edx + eax * 4) * 2 << 2), & Vfffffffc, & Vfffffff8, 0x454b10, A14);
    }
}

/*    Procedure: 0x00454C96 - 0x00454D1C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00454C96(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(*A8 < 0x140 && *(A8 + 2) < 0x9e) {
        goto L00454cd7;
    }
    L00454D20(A8, Ac);
    eax = *A8;
    if(eax < 0x140) {
        eax = *(A8 + 2);
        if(eax < 0x9e) {
L00454cd7:
            if(*Ac < 0x140 && *(Ac + 2) < 0x9e) {
                goto L00454d0b;
            }
            L00454D20(Ac, A8);
            eax = *Ac;
            if(eax < 0x140) {
                eax = *(Ac + 2);
                if(eax < 0x9e) {
L00454d0b:
                    eax = L00457ABC(A8, Ac, A10);
                }
            }
        }
    }
}

/*    Procedure: 0x00454D1D - 0x00454D1F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454D1D()
{



}

/*    Procedure: 0x00454D20 - 0x00454D4C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00454124()
 *        L00454C96()
 *        L0045C9C0()
 */

L00454D20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L00454D50(A8, Ac, 0x13f);
    return L00454DD0(A8, Ac, 0x9d);
}

/*    Procedure: 0x00454D4D - 0x00454D4F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454D4D()
{



}

/*    Procedure: 0x00454D50 - 0x00454DCD
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00454D20()
 */

L00454D50(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A10;
    dx = *A8;
    if(dx > eax) {
        if(dx < 0) {
            ax = *Ac;
            esi = ax < 0 ? ax : 0;
        } else {
            edx = *Ac;
            esi = eax < edx ? edx : eax;
        }
        eax = *(A8 + 2);
        eax = eax - *(Ac + 2);
        edx = *Ac;
        edi = esi - edx;
        asm("imul edi");
        *(ebp - 4) = eax;
        ax = *A8;
        if(ax != *Ac) {
            eax = *A8;
            (save)eax - *Ac;
            eax = *(ebp - 4);
            (restore)edx;
            edi = edx;
            asm("cdq");
            edx = edi / edi % edi / edi;
            *(A8 + 2) = ax + *(Ac + 2);
        }
        *A8 = si;
    }
}

/*    Procedure: 0x00454DCE - 0x00454DCF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454DCE()
{



}

/*    Procedure: 0x00454DD0 - 0x00454E52
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00454B9C()
 *        L00454D20()
 *        L00454FD8()
 */

L00454DD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A10;
    dx = *(A8 + 2);
    if(dx > eax) {
        if(dx < 0) {
            ax = *(Ac + 2);
            esi = ax < 0 ? ax : 0;
        } else {
            edx = *(Ac + 2);
            esi = eax < edx ? edx : eax;
        }
        eax = *A8;
        eax = eax - *Ac;
        edx = *(Ac + 2);
        edi = esi - edx;
        asm("imul edi");
        *(ebp - 4) = eax;
        ax = *(A8 + 2);
        if(ax != *(Ac + 2)) {
            eax = *(A8 + 2);
            (save)eax - *(Ac + 2);
            eax = *(ebp - 4);
            (restore)edx;
            edi = edx;
            asm("cdq");
            edx = edi / edi % edi / edi;
            *A8 = ax + *Ac;
        }
        *(A8 + 2) = si;
    }
}

/*    Procedure: 0x00454E53 - 0x00454E53
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454E53()
{



}

/*    Procedure: 0x00454E54 - 0x00454F78
 *    Argument size: 12
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L0045C9C0()
 *        L0045D808()
 *        L0045DE08()
 *        L0045DFD0()
 *        L0045E06C()
 */

L00454E54(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff4;



    A8 = & Vfffffff4;
    edx = & Vffffffe8;
    *A8 = *Ac;
    *(A8 + 4) = *(Ac + 4);
    *(A8 + 8) = *(Ac + 8);
    *edx = *A10 + ~( *Ac);
    *(edx + 4) = *(A10 + 4) + ~( *(Ac + 4));
    *(edx + 8) = *(A10 + 8) + ~( *(Ac + 8));
    *edx = *edx >> 1;
    *(edx + 4) = *(edx + 4) >> 1;
    for(*(edx + 8) = *(edx + 8) >> 1; 1; *(edx + 8) = *(edx + 8) >> 1) {
        ecx = *(edx + 8);
        if(ecx == 0) {
            break;
        }
        if(*(A8 + 8) > 0x40) {
            *A8 = *A8 + ~( *edx);
            *(A8 + 4) = *(A8 + 4) + ~( *(edx + 4));
            *(A8 + 8) = *(A8 + 8) + ~ecx;
        } else {
            *A8 = *A8 + *edx;
            *(A8 + 4) = *(A8 + 4) + *(edx + 4);
            *(A8 + 8) = *(A8 + 8) + ecx;
        }
        *edx = *edx >> 1;
        *(edx + 4) = *(edx + 4) >> 1;
    }
    edx = *A8 >> 0x1d;
    ecx = *(A8 + 4) >> 0x1d;
    if((edx == 0 || !(edx = edx + 1)) && (ecx == 0 || !(ecx = ecx + 1))) {
        *A8 = *A8 << 2;
        *(A8 + 4) = *(A8 + 4) << 2;
    }
    if(*A8 < 0) {
        while(*A8 <= -7936) {
            *A8 = *A8 >> 1;
            *(A8 + 4) = *(A8 + 4) >> 1;
        }
    } else {
        while(*A8 >= 7936) {
            *A8 = *A8 >> 1;
            *(A8 + 4) = *(A8 + 4) >> 1;
        }
    }
    if(*(A8 + 4) < 0) {
        while(*(A8 + 4) <= -7936) {
            *A8 = *A8 >> 1;
            *(A8 + 4) = *(A8 + 4) >> 1;
        }
    } else {
        while(*(A8 + 4) >= 7936) {
            *A8 = *A8 >> 1;
            *(A8 + 4) = *(A8 + 4) >> 1;
        }
    }
    dx = *A8 + 0xa0;
    *A8 = dx;
    dx = 0x4f - *(A8 + 4);
    *(A8 + 2) = dx;
}

/*    Procedure: 0x00454F79 - 0x00454F7B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454F79()
{



}

/*    Procedure: 0x00454F7C - 0x00454F90
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00461A4C()
 */

L00454F7C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A10 + A8 * 4 + 39892) = *(A10 + A8 * 4 + 39892) ^ Ac;
}

/*    Procedure: 0x00454F91 - 0x00454FD5
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L00454F91(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = *A8;
    if(eax < 0x1f) {
        while(eax > 0 && Ac < *(A8 + eax * 8)) {
            *(A8 + eax * 8 + 4) = *(A8 + eax * 8 - 4);
            *(A8 + eax * 8 + 8) = *(A8 + eax * 8);
            eax = eax - 1;
        }
        *(A8 + eax * 8 + 8) = Ac;
        *(A8 + eax * 8 + 4) = A10;
        *A8 = *A8 + 1;
    }
    return A8 + 0xfc;
}

/*    Procedure: 0x00454FD6 - 0x00454FD7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00454FD6()
{



}

/*    Procedure: 0x00454FD8 - 0x004550A1
 *    Argument size: 16
 *    Local size: 12
 *    Save regs size: 4
 *    Called by:
 *        L0046198A()
 */

L00454FD8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = *Ac;
    eax = *A10;
    Vfffffff8 = eax;
    if(Vfffffffe > Vfffffffa) {
        Vfffffff4 = Vfffffffc;
        Vfffffffc = Vfffffff8;
        eax = Vfffffff4;
        Vfffffff8 = eax;
    }
    ax = Vfffffffe;
    if(ax < 0x9e && Vfffffffa > 0) {
        if(ax < 0) {
            L00454DD0( & Vfffffffc, & Vfffffff8, 0x9e);
        }
        if(Vfffffffa > 0x9e) {
            L00454DD0( & Vfffffff8, & Vfffffffc, 0x9e);
        }
        eax = Vfffffffa;
        if(eax > *(A8 + 4)) {
            *(A8 + 4) = eax;
        }
        eax = Vfffffffe;
        if(eax < *A8) {
            *A8 = eax;
        }
        eax = Vfffffffe;
        edx = eax;
        eax = L00454B2C(A8 + ((eax << 6) - edx << 2) + 0x4c, & Vfffffffc, & Vfffffff8, 0x454f94, A14);
    }
}

/*    Procedure: 0x004550A2 - 0x004550A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004550A2()
{



}

/*    Procedure: 0x004550A4 - 0x004550CD
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004619D8()
 */

L004550A4(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    return L0045423C(A8, Ac, A10, A14, A18, 0x454fd8, A1c);
}

/*    Procedure: 0x004550CE - 0x004550CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004550CE()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004550D0 - 0x00455167
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041DFB0()
 */

L004550D0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(Ac >= 0) {
        edx = *(A8 + 2);
        eax = *A8;
        L00455168(eax - 1, edx - Ac - 1, eax, edx, A10, A14);
        edx = *(A8 + 2) - Ac;
        eax = *A8;
        eax = L00455168(eax + 1, edx - 1, eax + 2, edx, A10, A14);
    } else {
        edx = *(A8 + 2);
        eax = *A8;
        L004551AC(eax - 1, edx, eax, edx - Ac + 1, A10, A14);
        edx = *(A8 + 2) - Ac;
        eax = *A8;
        eax = L004551AC(eax + 1, edx, eax + 2, edx + 1, A10, A14);
    }
}

/*    Procedure: 0x00455168 - 0x004551AB
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004550D0()
 */

L00455168(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    edx = A14;
    eax = Ac;
    if(eax < 0x9e && A1c != 0) {
        eax = 0x9e;
    }
    if(edx > 0xc6) {
        edx = 0xc6;
    }
    if(eax <= edx) {
        eax = L00458010(A8, eax, A10, edx, A18);
    }
}

/*    Procedure: 0x004551AC - 0x004551EF
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004550D0()
 */

L004551AC(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    edx = A14;
    eax = Ac;
    if(eax < 0x9e && A1c != 0) {
        eax = 0x9e;
    }
    if(edx > 0xc6) {
        edx = 0xc6;
    }
    if(eax <= edx) {
        eax = L00458058(A8, eax, A10, edx, A18);
    }
}

/*    Procedure: 0x004551F0 - 0x00455235
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041BC00()
 *        L004219F8()
 *        L004267CC()
 *        L00426810()
 *        L00435860()
 *        L004361D9()
 */

L004551F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 != 0) {
        L00458480(A8);
    }
    M00657646 = *Ac;
    M00657648 = *(Ac + 2);
    M00657649 = *Ac;
    M0065764b = *(Ac + 2);
    M00644bb0 = 0;
    return L004552F4();
}

/*    Procedure: 0x00455236 - 0x00455237
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455236()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455238 - 0x00455242
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041BB50()
 *        L00421A51()
 *        L00435957()
 *        L0043623A()
 *        L0043716C()
 *        L0043C5F2()
 */

L00455238()
{



    L00457D88();
    return L00455244();
}

/*    Procedure: 0x00455243 - 0x00455243
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455243()
{



}

/*    Procedure: 0x00455244 - 0x00455279
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00427014()
 *        L0043ECB8()
 *        L00455238()
 */

L00455244()
{



    M00657646 = M0065765c;
    M00657648 = M0065765e;
    M00657649 = *L00657646;
    M0065764b = *L00657648;
    M00644bb0 = 0xff;
    return 6649414;
}

/*    Procedure: 0x0045527A - 0x0045527B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045527A()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0045527C - 0x004552CB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041E4BB()
 *        L0041EA0C()
 *        L00427014()
 *        L0043C5F2()
 *        L0043E7A4()
 *        L0043EF64()
 *        L00440194()
 *        L0044071C()
 *        L004407A8()
 *        L004426FC()
 *        L00443C33()
 *        L00444610()
 */

L0045527C(A8)
/* unknown */ void  A8;
{



    M0065765c = *A8;
    M0065765e = *(A8 + 2);
    M00657646 = *L0065765C;
    M00657648 = *L0065765E;
    M00657649 = *L00657646;
    M0065764b = *L00657648;
    return L004552F4();
}

/*    Procedure: 0x004552CC - 0x004552D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D263()
 *        L0041D378()
 */

L004552CC()
{



    M00644bb1 = 0xff;
}

/*    Procedure: 0x004552D4 - 0x004552F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00426810()
 *        L0043C3A8()
 *        L0043C5F2()
 *        L0043E7A4()
 *        L00445590()
 */

L004552D4()
{



    M00644bb1 = 0;
    return L00458010(0, 0, 0x13f, 0xc7, 0);
}

/*    Procedure: 0x004552F4 - 0x0045533C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004551F0()
 *        L0045527C()
 *        L00458384()
 */

L004552F4()
{



    if(M00657649 != M0065764c || M0065764a != M0065764d || M0065764b != M0065764e) {
        M0065764c = M00657649;
        M0065764e = M0065764b;
        eax = L00455340(6649420);
    }
}

/*    Procedure: 0x0045533D - 0x0045533F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045533D()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455340 - 0x0045535E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004552F4()
 */

L00455340()
{



    eax = *L004f80a8( *L004f80a0(M0065764c));
    M00657658 = eax;
    return M00657658;
}

/*    Procedure: 0x0045535F - 0x004553B3
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 12
 */

L0045535F(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    L004580FC();
    esi = 0x502e6c;
    edi = & Vffffffe8;
    ecx = 6;
    asm("rep movsd");
    esi = 0x502e9c;
    edi = 0x502e6c;
    ecx = 6;
    asm("rep movsd");
    esi = A8;
    *esi();
    (save)esi;
    esi = & Vffffffe8;
    edi = 0x502e6c;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    *esi();
    return L004580D8();
}

/*    Procedure: 0x004553B4 - 0x0045542C
 *    Argument size: 8
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L0043E88B()
 *        L00445FD9()
 */

L004553B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    L004580FC();
    (save)A8;
    esi = 0x502e6c;
    edi = & Vffffffe8;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    (save)esi;
    esi = 0x502e9c;
    edi = 0x502e6c;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    L00457DCC(esi, *Ac, *(Ac + 2));
    (save)esi;
    esi = & Vffffffe8;
    edi = 0x502e6c;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    L00457DCC(esi, *Ac, *(Ac + 2));
    return L004580D8();
}

/*    Procedure: 0x0045542D - 0x004554A1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045542D()
{



    asm("xchg ebx,ebx");
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0x10);
    esi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    eax = *ebx;
    L00458010(eax, *(ebx + 2), eax, *(esi + 2), edi);
    eax = *esi;
    L00458010(eax, *(ebx + 2), eax, *(esi + 2), edi);
    eax = *(ebx + 2);
    L00458010( *ebx, eax, *esi, eax, edi);
    eax = *(esi + 2);
    eax = L00458010( *ebx, eax, *esi, eax, edi);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x004554A2 - 0x004554A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004554A2()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004554A4 - 0x00455523
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00418F30()
 *        L00418F90()
 *        L00418FCC()
 *        L0043CC06()
 *        L0044F860()
 */

L004554A4(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;



    ebx = A8;
    L004580FC();
    (save)Ac;
    (save)A10;
    esi = 0x502e6c;
    edi = & Vffffffe8;
    ecx = 6;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    (save)esi;
    (save)edi;
    esi = 0x502e9c;
    edi = 0x502e6c;
    ecx = 6;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    L00455564(ebx, esi, edi, A14);
    (save)esi;
    (save)edi;
    esi = & Vffffffe8;
    edi = 0x502e6c;
    ecx = 6;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    ebx = L00455564(ebx, esi, edi, A14);
    L004580D8();
    return ebx;
}

/*    Procedure: 0x00455524 - 0x00455544
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00453FBA()
 *        L00454028()
 */

L00455524(A8)
/* unknown */ void  A8;
{



    return L00455548(A8 + 2, ( *A8 & 0xff) + ( *A8 & 0xff), *(A8 + 1) & 0xff);
}

/*    Procedure: 0x00455545 - 0x00455547
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455545()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455548 - 0x00455562
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00455524()
 *        L0046211D()
 */

L00455548(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00455564(A8, Ac, A10, 0xf);
}

/*    Procedure: 0x00455563 - 0x00455563
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455563()
{



}

/*    Procedure: 0x00455564 - 0x0045558B
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004198BC()
 *        L0041BC86()
 *        L0041BE97()
 *        L0043F010()
 *        L0043F090()
 *        L00444A88()
 *        L00445738()
 *        L0044F80E()
 *        L004554A4()
 *        L00455548()
 */

L00455564(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L004555E8(A8, Ac, A10, A14, 0x455a90, 0, -1, 0xa);
}

/*    Procedure: 0x0045558C - 0x004555B7
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416934()
 */

L0045558C(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    return L004555E8(A8, Ac, A10, A14, 0x455a90, A18, A1c, 0xa);
}

/*    Procedure: 0x004555B8 - 0x004555E5
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D8B4()
 */

L004555B8(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    return L004555E8(A8, Ac, A10, A14, 0x455a90, A18, A1c, A20);
}

/*    Procedure: 0x004555E6 - 0x004555E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004555E6()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004555E8 - 0x0045577E
 *    Argument size: 32
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L00455564()
 *        L0045558C()
 *        L004555B8()
 *        L004557C8()
 */

L004555E8(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    edi = A8;
    Vfffffffc = esi;
    Vfffffff4 = 0;
    Vfffffff0 = 0;
    M00657650 = 0;
    M00657654 = 0;
    if(A10 >= 0xc0) {
        eax = edi;
        goto L00455778;
        A10 = A10 + A24;
        Vfffffff0 = 1;
        Vfffffff4 = Vfffffff4 - A24;
        if(A10 > 0xbf) {
            eax = edi;
        } else {
            esi = Vfffffffc;
            if(M00657654 == 0) {
                goto L0045576b;
            }
            eax = edi;
        }
    } else {
L0045576b:
        while(1) {
            bl = *edi;
            edi = edi + 1;
            if(bl == 0) {
                break;
            }
            bl = bl + 0xe0;
            if(bl < 0xe0) {
                if(esi >= 0x13c) {
                    continue;
                }
                esi = esi + A18(ebx, A14, esi, A10, A1c, A20);
                continue;
            }
            eax = bl & 0xff;
            if(eax > 0xed) {
                if(eax = eax - 0xfe) {
                    esi = ( *edi & 0xff) + ( *edi & 0xff);
                    edi = edi + 1;
                    continue;
                }
                if(eax = eax - 1) {
                    esi = ( *edi & 0xff) + ( *edi & 0xff);
                    edi = edi + 1;
                    A10 = *edi & 0xff;
                    edi = edi + 1;
                    Vfffffffc = esi;
                    continue;
                }
                continue;
            }
            == ? L0045567c : ;
            if(eax = eax - 0xe1) {
                A14 = *(( *edi & 0xff) * 4 + 0x502eb4);
                edi = edi + 1;
                continue;
            }
            if(eax = eax - 1) {
                ebx = *edi & 0xff;
                edi = edi + 1;
                Vffffffec = L00457DBC(ebx);
                L00457DEC(ebx, esi + 5, A10, 0, A1c, -1, A20);
                edx = esi;
                eax = *(Vffffffec + 2) + 0xa;
                Vfffffff8 = eax + edx;
                Vfffffff4 = ( *(Vffffffec + 1) & 0xff) + A24;
                esi = esi + eax;
                Vfffffff0 = 0;
                continue;
            }
            if(eax = eax - 1) {
                if(Vfffffff4 <= 0 || Vfffffff0 == 0) {
                    continue;
                }
                esi = Vfffffff8;
                Vfffffff0 = 0;
                continue;
            }
        }
        eax = edi;
    }
L00455778:
}

/*    Procedure: 0x0045577F - 0x004557C5
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 */

L0045577F(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    L00455A90(A8, 0, A10 + 1, A14 + 1, A18, A1c);
    return L00455A90(A8, Ac, A10, A14, A18, A1c);
}

/*    Procedure: 0x004557C6 - 0x004557C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004557C6()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004557C8 - 0x004557EF
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041A86F()
 *        L00435957()
 *        L00436AF7()
 *        L0043F090()
 *        L0044F7B7()
 */

L004557C8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L004555E8(A8, Ac, A10, A14, 0x455780, 0, -1, 0xa);
}

/*    Procedure: 0x004557F0 - 0x004557F6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004557F0()
{



    M00503078 = M00503078 + 1;
}

/*    Procedure: 0x004557F7 - 0x00455816
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004557F7()
{



    if(!(M00503078 = M00503078 - 1) && !(M00502e68 & 2) && !(al & 4) && !(al & 8)) {
        eax = L0045811C();
    }
}

/*    Procedure: 0x00455817 - 0x00455817
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455817()
{



}

/*    Procedure: 0x00455818 - 0x0045581F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00455820()
 */

L00455818(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x00455820 - 0x0045584C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00455820(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    do {
        ebx = L00473538(A8, 0x5030a8);
        if(ebx == 0) {
            L00455818(A8);
        }
    } while(ebx == 0);
    return ebx;
}

/*    Procedure: 0x0045584D - 0x004558D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045584D()
{



    asm("xchg ebx,ebx");
    (save)ebp;
    ebp = esp;
    (save)ecx;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0xc);
    esi = L004559D8(edi);
    *(ebp - 4) = *(ebp + 8);
    do {
        ebx = L0047777C(esi);
        if(ebx == 0) {
            goto L004558c5;
        }
        *( *(ebp - 4)) = ebx;
        *(ebp - 4) = *(ebp - 4) + 4;
        M00503078 = M00503078 + 1;
        eax = L004558D4(ebx, edi, esi);
        L0045591C(eax, ebx, edi, esi + ebx - eax);
        M00503078 = M00503078 - 1;
        esi = L004559D8(edi);
    } while(esi != 0);
    L004731B8(edi);
    eax = 1;
    goto L004558ce;
L004558c5:
    L004731B8(edi);
    eax = 0;
L004558ce:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004558D4 - 0x0045591A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0045584D()
 */

L004558D4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A10;
    ebx = A8;
    eax = L00455A04(Ac);
    *(ebp - 4) = eax;
    if(*(ebp - 4) != 0xff) {
        *ebx = *(ebp - 4);
        ebx = ebx + 1;
        esi = 7;
    }
    do {
        L00455A04(Ac);
        *ebx = al;
        ebx = ebx + 1;
        esi = esi - 1;
    } while(esi != 0);
    return ebx;
}

/*    Procedure: 0x0045591B - 0x0045591B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045591B()
{



}

/*    Procedure: 0x0045591C - 0x0045595D
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045584D()
 */

L0045591C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A14;
    ebx = A8;
    if(esi == 0) {
        eax = ebx;
    } else {
        if(!( *Ac & 2)) {
            do {
                L00455A04(A10);
                *ebx = al;
                ebx = ebx + 1;
                esi = esi - 1;
            } while(esi > 0);
            eax = ebx;
        } else {
            eax = L00455960(ebx, A10, esi);
        }
    }
}

/*    Procedure: 0x0045595E - 0x0045595F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045595E()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455960 - 0x004559D7
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045591C()
 */

L00455960(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A8;
    do {
        ebx = L00455A04(Ac);
        if(bl < 0) {
            esi = ~(bl >> 3);
            edx = ~(L00455A04(Ac) + ((bl & 7) << 8));
            eax = 0;
            if(esi > 0) {
                do {
                    *edi = *(edi + edx);
                    edi = edi + 1;
                    eax = eax + 1;
                } while(esi > eax);
            }
            A10 = A10 - esi;
        } else {
            do {
                L00455A04(Ac);
                *edi = al;
                edi = edi + 1;
                A10 = A10 - 1;
                ebx = ebx - 1;
            } while(bl > 0);
        }
    } while(A10 != 0);
    return edi;
}

/*    Procedure: 0x004559D8 - 0x00455A01
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045584D()
 */

L004559D8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = L00455A04(A8);
    eax = ebx == -1 ? 0 : (L00455A04(A8) << 8) + ebx;
}

/*    Procedure: 0x00455A02 - 0x00455A03
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455A02()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455A04 - 0x00455A22
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004558D4()
 *        L0045591C()
 *        L00455960()
 *        L004559D8()
 */

L00455A04(A8)
/* unknown */ void  A8;
{



    if(!( *(A8 + 8) = *(A8 + 8) - 1)) {
        eax = *A8;
        *A8 = *A8 + 1;
        eax = *eax & 0xff;
    } else {
        eax = L00473A44(A8);
    }
}

/*    Procedure: 0x00455A23 - 0x00455A24
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455A23()
{



}

/*    Procedure: 0x00455A25 - 0x00455A27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455A25()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455A28 - 0x00455A39
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L00455A28()
{



    M00657644 = 4;
    L004501E4();
    return L00458424();
}

/*    Procedure: 0x00455A3A - 0x00455A69
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455A3A()
{



    asm("xchg ebx,ebx");
    (save)ebp;
    ecx = *(esp + 8);
    edx = 0;
    al = *ecx;
    ecx = ecx + 1;
    do {
        eax = *(((al + 0xe0 & 0xff) + (al + 0xe0 & 0xff) * 4) * 2 + 0x50170d) & 0xff;
        edx = edx + eax;
        al = *ecx;
        ecx = ecx + 1;
    } while(al != 0);
    eax = edx;
    (restore)ebp;
}

/*    Procedure: 0x00455A6A - 0x00455A6B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455A6A()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455A6C - 0x00455A8F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041656C()
 */

L00455A6C(A8)
/* unknown */ void  A8;
{



    edx = A8 + 0xe0;
    if(edx < 0xe0) {
        return *((edx + edx * 4) * 2 + 0x50170d) & 0xff;
    }
    return 0;
}

/*    Procedure: 0x00455A90 - 0x00455B92
 *    Argument size: 24
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L0045577F()
 */

L00455A90(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edx = A1c;
    eax = A14;
    Vfffffffc = edx < 0 ? M00502e6c + 64320 : (edx << 6) + (edx << 6) * 4 + M00502e6c;
    Vfffffff8 = (A18 << 6) + (A18 << 6) * 4 + M00502e6c;
    M00657668 = eax;
    if(eax >= 0xc8) {
        eax = 0;
    } else {
        if(edx <= eax) {
            if(edx < 0) {
                goto L00455b03;
            }
            M00657654 = -1;
            eax = 0;
        } else {
L00455b03:
            edx = (eax << 6) + (eax << 6) * 4 + M00502e6c + A10;
            Vfffffff4 = A8 + A8 + (A8 + A8) * 4 + 0x501704;
            if(edx < Vfffffff8) {
                M00657650 = -1;
            }
            esi = 0;
            Vfffffff0 = Vfffffff4;
            do {
                if(edx >= Vfffffff8) {
                    eax = Vfffffff0;
                    al = *eax;
                    edi = 0;
                    ecx = edx;
                    do {
                        if(al < 0) {
                            *ecx = Ac;
                        }
                        eax = eax + eax;
                        ecx = ecx + 1;
                        edi = edi + 1;
                    } while(al != 0);
                }
                edx = edx + 0x140;
                M00657668 = M00657668 + 1;
                if(edx >= Vfffffffc) {
                    goto L00455b70;
                }
                esi = esi + 1;
                Vfffffff0 = Vfffffff0 + 1;
            } while(esi < 9);
            goto L00455b85;
L00455b70:
            M00657654 = -1;
L00455b85:
            eax = *(Vfffffff4 + 9) & 0xff;
        }
    }
}

/*    Procedure: 0x00455B93 - 0x00455BB7
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 */

L00455B93(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = Ac;
    if(eax < 0x9e) {
        eax = L00455BB8(A8, eax, A10, A14);
    }
}

/*    Procedure: 0x00455BB8 - 0x00455BF9
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00455B93()
 *        L0045717C()
 */

L00455BB8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = A10;
    eax = A8;
    if(eax < 0) {
        if(edx + eax <= 0) {
            goto L00455bf8;
        }
        edx = edx + eax;
        eax = 0;
    }
    if(edx + eax > 0x140) {
        edx = 0x140 - eax;
        if(edx <= 0) {
            goto L00455bf8;
        }
    }
    eax = L00455BFC(eax, Ac, edx, A14);
L00455bf8:
}

/*    Procedure: 0x00455BFA - 0x00455BFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455BFA()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455BFC - 0x00455C61
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00455BB8()
 *        L004572EC()
 *        L004576B4()
 *        L00457998()
 *        L00457ABC()
 */

L00455BFC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = A10;
    esi = A8;
    if(eax >= 0) {
        edx = (Ac << 6) + (Ac << 6) * 4 + M00502e6c + esi;
        ecx = A14;
        ecx = ecx | ecx << 8;
        for(ecx = ecx | ecx << 0x10; !(esi & 3) && eax > 0; esi = esi + 1) {
            *edx = cl;
            edx = edx + 1;
            eax = eax - 1;
        }
        do {
            *edx = ecx;
            edx = edx + 4;
            eax = eax - 4;
        } while(eax >= 4);
        do {
            *edx = cl;
            edx = edx + 1;
            eax = eax - 1;
        } while(eax > 0);
    }
}

/*    Procedure: 0x00455C62 - 0x00455C63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00455C62()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00455C64 - 0x00455D4B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00456E24()
 */

L00455C64()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    esi = *(ebp + 0x18);
    ebx = *( *(ebp + 0x1c));
    if(esi < 0 || ebx >= 0x9e || esi + ebx <= 0) {
        eax = esi;
        asm("imul dword [ebp+0x10]");
        *( *(ebp + 8)) = *( *(ebp + 8)) + eax;
        eax = esi;
        asm("imul dword [ebp+0x14]");
        *( *(ebp + 0xc)) = *( *(ebp + 0xc)) + eax;
        eax = *(ebp + 0x1c);
        *eax = *eax + esi;
    } else {
        *(ebp - 4) = *( *(ebp + 8));
        *(ebp - 8) = *( *(ebp + 0xc));
        if(ebx < 0) {
            eax = ebx;
            asm("imul dword [ebp+0x10]");
            *(ebp - 4) = *(ebp - 4) - eax;
            eax = ebx;
            asm("imul dword [ebp+0x14]");
            *(ebp - 8) = *(ebp - 8) - eax;
            esi = esi + ebx;
            ebx = 0;
        }
        do {
            if(ebx >= 0x9e) {
                break;
            }
            edx = *(ebp - 4) >> 0x10;
            eax = *(ebp - 8) >> 0x10;
            if(eax < edx) {
                *(ebp + 0x24)(eax, ebx, edx - eax, *(ebp + 0x20));
            } else {
                *(ebp + 0x24)(edx, ebx, eax - edx, *(ebp + 0x20));
            }
            *(ebp - 4) = *(ebp - 4) + *(ebp + 0x10);
            *(ebp - 8) = *(ebp - 8) + *(ebp + 0x14);
            ebx = ebx + 1;
            esi = esi - 1;
        } while(esi != 0);
        if(esi != 0) {
            eax = *(ebp + 0x10);
            asm("imul esi");
            *(ebp - 4) = *(ebp - 4) + eax;
            eax = *(ebp + 0x14);
            asm("imul esi");
            *(ebp - 8) = *(ebp - 8) + eax;
            ebx = ebx + esi;
        }
        eax = *(ebp + 8);
        *eax = *(ebp - 4);
        eax = *(ebp + 0xc);
        *eax = *(ebp - 8);
        eax = *(ebp + 0x1c);
        *eax = ebx;
    }
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00455D4C - 0x00455DF3
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00456E24()
 */

L00455D4C(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  esi;



    esi = A18;
    ecx = A10;
    if(!(eax = A1c - A14)) {
        if(!(eax = A1c - A14)) {
            if(!(eax = esi - ecx)) {
                eax = esi - ecx << 0x10;
                (save)ecx;
                ecx = ~(A1c - A14);
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
                eax = ~eax;
            } else {
                eax = ~(esi - ecx << 0x10);
                (save)ecx;
                ecx = ~(A1c - A14);
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
            }
        } else {
            if(!(eax = esi - ecx)) {
                eax = esi - ecx << 0x10;
                (save)ecx;
                ecx = A1c - A14;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
            } else {
                eax = ~(esi - ecx) << 0x10;
                (save)ecx;
                ecx = A1c - A14;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
                eax = ~eax;
            }
        }
    } else {
        eax = 2147483647;
        if(!(esi = esi - ecx)) {
            eax = -2147483647;
        }
    }
    *A8 = eax;
    ecx = ecx << 0x10;
    *Ac = ecx;
    return A1c - A14;
}

/*    Procedure: 0x00455DF4 - 0x0045656A
 *    Argument size: 16
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L00461CD4()
 */

L00455DF4(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = A10;
    ecx = A8;
    ax = *(ecx + 2);
    if(ax > *(Ac + 2)) {
        eax = ecx;
        ecx = Ac;
        Ac = eax;
    }
    if(*(ecx + 2) > *(edi + 2)) {
        eax = ecx;
        ecx = edi;
        edi = eax;
    }
    eax = Ac;
    if(*(eax + 2) > *(edi + 2)) {
        eax = Ac;
        Ac = edi;
        edi = eax;
    }
    ax = *(ecx + 2);
    ebx = ax;
    Vfffffffc = (ebx << 6) + (ebx << 6) * 4 + M00502e6c;
    if(ax < *(Ac + 2)) {
        esi = *(Ac + 2);
        if(!(eax = esi - ebx)) {
            if(!(eax = esi - ebx)) {
                if(!(eax = *Ac - *ecx)) {
                    eax = *Ac - *ecx << 0x10;
                    (save)ecx;
                    ecx = ~(esi - ebx);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    eax = ~eax;
                } else {
                    eax = ~( *Ac - *ecx << 0x10);
                    (save)ecx;
                    ecx = ~(esi - ebx);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                }
            } else {
                if(!(eax = *Ac - *ecx)) {
                    eax = *Ac - *ecx << 0x10;
                    (save)ecx;
                    ecx = esi - ebx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                } else {
                    eax = ~( *Ac - *ecx) << 0x10;
                    (save)ecx;
                    ecx = esi - ebx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    eax = ~eax;
                }
            }
        } else {
            eax = !(eax = *Ac - *ecx) ? 2147483647 : -2147483647;
        }
        Vfffffff8 = eax;
        if(!(eax = *(edi + 2) - ebx)) {
            if(!(eax = *(edi + 2) - ebx)) {
                eax = *edi;
                if(!(eax = eax - *ecx)) {
                    eax = *edi;
                    eax = eax - *ecx << 0x10;
                    (save)ecx;
                    ecx = ~( *(edi + 2) - ebx);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    eax = ~eax;
                } else {
                    eax = *edi;
                    eax = ~(eax - *ecx << 0x10);
                    (save)ecx;
                    ecx = ~( *(edi + 2) - ebx);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                }
            } else {
                eax = *edi;
                if(!(eax = eax - *ecx)) {
                    eax = *edi;
                    eax = eax - *ecx << 0x10;
                    (save)ecx;
                    ecx = *(edi + 2) - ebx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                } else {
                    eax = *edi;
                    eax = ~(eax - *ecx) << 0x10;
                    (save)ecx;
                    ecx = *(edi + 2) - ebx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    (restore)ecx;
                    eax = ~eax;
                }
            }
        } else {
            eax = *edi;
            eax = !(eax = eax - *ecx) ? 2147483647 : -2147483647;
        }
        Vfffffff4 = eax;
        eax = *ecx << 0x10;
        Vffffffec = eax;
        Vfffffff0 = Vffffffec;
        eax = Vfffffff8;
        if(eax >= Vfffffff4) {
            goto L0045617b;
        }
        do {
            if(ebx < 0x9e) {
                eax = Vfffffff0 >> 0x10;
                edx = Vffffffec >> 0x10;
                if(eax < 0) {
                    eax = 0;
                }
                if(edx > 0x140) {
                    edx = 0x140;
                }
                if(edx > eax) {
                    L00471198(eax + Vfffffffc, A14, edx - eax);
                }
            }
            Vfffffff0 = Vfffffff0 + Vfffffff8;
            eax = Vfffffff4;
            Vffffffec = Vffffffec + eax;
            ebx = ebx + 1;
            Vfffffffc = Vfffffffc + 0x140;
        } while(esi > ebx);
        esi = *(edi + 2);
        if(ebx < esi) {
            Vfffffff0 = *Ac << 0x10;
            if(!(eax = esi - ebx)) {
                if(!(eax = esi - ebx)) {
                    eax = *edi;
                    if(!(eax = eax - *Ac)) {
                        eax = *edi;
                        eax = eax - *Ac << 0x10;
                        ecx = ~(esi - ebx);
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        eax = ~eax;
                    } else {
                        eax = *edi;
                        eax = ~(eax - *Ac << 0x10);
                        ecx = ~(esi - ebx);
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                    }
                } else {
                    eax = *edi;
                    if(!(eax = eax - *Ac)) {
                        eax = *edi;
                        eax = eax - *Ac << 0x10;
                        ecx = esi - ebx;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                    } else {
                        eax = *edi;
                        eax = ~(eax - *Ac) << 0x10;
                        ecx = esi - ebx;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        eax = ~eax;
                    }
                }
            } else {
                eax = 2147483647;
                edx = *edi;
                if(!(edx = edx - *Ac)) {
                    eax = -2147483647;
                }
            }
            Vfffffff8 = eax;
            if(esi > ebx) {
                do {
                    if(ebx < 0x9e) {
                        eax = Vfffffff0 >> 0x10;
                        edx = Vffffffec >> 0x10;
                        if(eax < 0) {
                            eax = 0;
                        }
                        if(edx > 0x140) {
                            edx = 0x140;
                        }
                        if(edx > eax) {
                            L00471198(eax + Vfffffffc, A14, edx - eax);
                        }
                    }
                    Vfffffff0 = Vfffffff0 + Vfffffff8;
                    eax = Vfffffff4;
                    Vffffffec = Vffffffec + eax;
                    ebx = ebx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(esi > ebx);
                goto L00456564;
L0045617b:
                do {
                    if(ebx < 0x9e) {
                        eax = Vfffffff0 >> 0x10;
                        edx = Vffffffec >> 0x10;
                        if(eax < 0) {
                            eax = 0;
                        }
                        if(edx > 0x140) {
                            edx = 0x140;
                        }
                        if(edx > eax) {
                            L00471198(eax + Vfffffffc, A14, edx - eax);
                        }
                    }
                    Vfffffff0 = Vfffffff0 + Vfffffff4;
                    eax = Vfffffff8;
                    Vffffffec = Vffffffec + eax;
                    ebx = ebx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(esi > ebx);
                esi = *(edi + 2);
                if(ebx < esi) {
                    Vffffffec = *Ac << 0x10;
                    if(!(eax = esi - ebx)) {
                        if(!(eax = esi - ebx)) {
                            eax = *edi;
                            if(!(eax = eax - *Ac)) {
                                eax = *edi;
                                eax = eax - *Ac << 0x10;
                                ecx = ~(esi - ebx);
                                asm("cdq");
                                edx = ecx / ecx % ecx / ecx;
                                eax = ~eax;
                            } else {
                                eax = *edi;
                                eax = ~(eax - *Ac << 0x10);
                                ecx = ~(esi - ebx);
                                asm("cdq");
                                edx = ecx / ecx % ecx / ecx;
                            }
                        } else {
                            eax = *edi;
                            if(!(eax = eax - *Ac)) {
                                eax = *edi;
                                eax = eax - *Ac << 0x10;
                                ecx = esi - ebx;
                                asm("cdq");
                                edx = ecx / ecx % ecx / ecx;
                            } else {
                                eax = *edi;
                                eax = ~(eax - *Ac) << 0x10;
                                ecx = esi - ebx;
                                asm("cdq");
                                edx = ecx / ecx % ecx / ecx;
                                eax = ~eax;
                            }
                        }
                    } else {
                        eax = 2147483647;
                        edx = *edi;
                        if(!(edx = edx - *Ac)) {
                            eax = -2147483647;
                        }
                    }
                    Vfffffff8 = eax;
                    do {
                        if(ebx < 0x9e) {
                            eax = Vfffffff0 >> 0x10;
                            edx = Vffffffec >> 0x10;
                            if(eax < 0) {
                                eax = 0;
                            }
                            if(edx > 0x140) {
                                edx = 0x140;
                            }
                            if(edx > eax) {
                                L00471198(eax + Vfffffffc, A14, edx - eax);
                            }
                        }
                        Vfffffff0 = Vfffffff0 + Vfffffff4;
                        eax = Vfffffff8;
                        Vffffffec = Vffffffec + eax;
                        ebx = ebx + 1;
                        Vfffffffc = Vfffffffc + 0x140;
                    } while(esi > ebx);
                }
            }
        }
    } else {
        esi = *(edi + 2);
        if(ebx < esi) {
            if(!(eax = esi - ebx)) {
                if(!(eax = esi - ebx)) {
                    eax = *edi;
                    if(!(eax = eax - *Ac)) {
                        eax = *edi;
                        eax = eax - *Ac << 0x10;
                        (save)ecx;
                        ecx = ~(esi - ebx);
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        eax = ~eax;
                    } else {
                        eax = *edi;
                        eax = ~(eax - *Ac << 0x10);
                        (save)ecx;
                        ecx = ~(esi - ebx);
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                    }
                } else {
                    eax = *edi;
                    if(!(eax = eax - *Ac)) {
                        eax = *edi;
                        eax = eax - *Ac << 0x10;
                        (save)ecx;
                        ecx = esi - ebx;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                    } else {
                        eax = *edi;
                        eax = ~(eax - *Ac) << 0x10;
                        (save)ecx;
                        ecx = esi - ebx;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        eax = ~eax;
                    }
                }
            } else {
                eax = *edi;
                eax = !(eax = eax - *Ac) ? 2147483647 : -2147483647;
            }
            Vfffffff8 = eax;
            if(!(eax = esi - ebx)) {
                if(!(eax = esi - ebx)) {
                    eax = *edi;
                    if(!(eax = eax - *ecx)) {
                        eax = *edi;
                        eax = eax - *ecx << 0x10;
                        (save)ecx;
                        ecx = ~(esi - ebx);
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        eax = ~eax;
                    } else {
                        eax = *edi;
                        eax = ~(eax - *ecx << 0x10);
                        (save)ecx;
                        ecx = ~(esi - ebx);
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                    }
                } else {
                    eax = *edi;
                    if(!(eax = eax - *ecx)) {
                        eax = *edi;
                        eax = eax - *ecx << 0x10;
                        (save)ecx;
                        ecx = esi - ebx;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                    } else {
                        eax = *edi;
                        eax = ~(eax - *ecx) << 0x10;
                        (save)ecx;
                        ecx = esi - ebx;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        eax = ~eax;
                    }
                }
            } else {
                eax = *edi;
                eax = !(eax = eax - *ecx) ? 2147483647 : -2147483647;
            }
            Vfffffff4 = eax;
            ax = *ecx;
            if(ax >= *Ac) {
                goto L004564f5;
            }
            Vfffffff0 = ax << 0x10;
            eax = *Ac << 0x10;
            Vffffffec = eax;
            if(esi > ebx) {
                do {
                    if(ebx < 0x9e) {
                        eax = Vfffffff0 >> 0x10;
                        edx = Vffffffec >> 0x10;
                        if(eax < 0) {
                            eax = 0;
                        }
                        if(edx > 0x140) {
                            edx = 0x140;
                        }
                        if(edx > eax) {
                            L00471198(eax + Vfffffffc, A14, edx - eax);
                        }
                    }
                    Vfffffff0 = Vfffffff0 + Vfffffff4;
                    eax = Vfffffff8;
                    Vffffffec = Vffffffec + eax;
                    ebx = ebx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(esi > ebx);
                goto L00456564;
L004564f5:
                Vfffffff0 = *Ac << 0x10;
                eax = *ecx << 0x10;
                Vffffffec = eax;
                do {
                    if(ebx < 0x9e) {
                        eax = Vfffffff0 >> 0x10;
                        edx = Vffffffec >> 0x10;
                        if(eax < 0) {
                            eax = 0;
                        }
                        if(edx > 0x140) {
                            edx = 0x140;
                        }
                        if(edx > eax) {
                            L00471198(eax + Vfffffffc, A14, edx - eax);
                        }
                    }
                    Vfffffff0 = Vfffffff0 + Vfffffff8;
                    eax = Vfffffff4;
                    Vffffffec = Vffffffec + eax;
                    ebx = ebx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(esi > ebx);
            }
        }
    }
L00456564:
}

/*    Procedure: 0x0045656B - 0x0045656B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045656B()
{



}

/*    Procedure: 0x0045656C - 0x00456CFD
 *    Argument size: 16
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L00461C99()
 */

L0045656C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    ax = *(ebx + 2);
    if(ax > *(Ac + 2)) {
        eax = ebx;
        ebx = Ac;
        Ac = eax;
    }
    ax = *(ebx + 2);
    if(ax > *(A10 + 2)) {
        eax = ebx;
        ebx = A10;
        A10 = eax;
    }
    if(*(Ac + 2) > *(A10 + 2)) {
        Ac = A10;
        A10 = Ac;
    }
    ax = *(ebx + 2);
    ecx = ax;
    Vfffffffc = (ecx << 6) + (ecx << 6) * 4 + M00502e6c;
    if(ax < *(Ac + 2)) {
        Vffffffe8 = *(Ac + 2);
        if(!(eax = Vffffffe8 - ecx)) {
            if(!(eax = Vffffffe8 - ecx)) {
                if(!(eax = *Ac - *ebx)) {
                    eax = *Ac - *ebx << 0x10;
                    edi = ~(Vffffffe8 - ecx);
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                    eax = ~eax;
                } else {
                    eax = ~( *Ac - *ebx << 0x10);
                    edi = ~(Vffffffe8 - ecx);
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                }
            } else {
                if(!(eax = *Ac - *ebx)) {
                    eax = *Ac - *ebx << 0x10;
                    edi = Vffffffe8 - ecx;
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                } else {
                    eax = ~( *Ac - *ebx) << 0x10;
                    edi = Vffffffe8 - ecx;
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                    eax = ~eax;
                }
            }
        } else {
            eax = 2147483647;
            if(!(edx = *Ac - *ebx)) {
                eax = -2147483647;
            }
        }
        Vfffffff8 = eax;
        if(!(eax = *(A10 + 2) - ecx)) {
            if(!(eax = *(A10 + 2) - ecx)) {
                if(!(eax = *A10 - *ebx)) {
                    eax = *A10 - *ebx << 0x10;
                    edi = ~( *(A10 + 2) - ecx);
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                    eax = ~eax;
                } else {
                    eax = ~( *A10 - *ebx << 0x10);
                    edi = ~( *(A10 + 2) - ecx);
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                }
            } else {
                if(!(eax = *A10 - *ebx)) {
                    eax = *A10 - *ebx << 0x10;
                    edi = *(A10 + 2) - ecx;
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                } else {
                    eax = ~( *A10 - *ebx) << 0x10;
                    edi = *(A10 + 2) - ecx;
                    asm("cdq");
                    edx = edi / edi % edi / edi;
                    eax = ~eax;
                }
            }
        } else {
            eax = 2147483647;
            if(!(edx = *A10 - *ebx)) {
                eax = -2147483647;
            }
        }
        Vfffffff4 = eax;
        eax = *ebx << 0x10;
        Vffffffec = eax;
        Vfffffff0 = Vffffffec;
        if(Vfffffff8 >= Vfffffff4) {
            goto L00456915;
        }
        do {
            edx = Vffffffec >> 0x10;
            eax = Vfffffff0 >> 0x10;
            Vffffffe4 = Vfffffffc + eax;
            do {
                ebx = A14;
                *Vffffffe4 = bl;
                eax = eax + 1;
                Vffffffe4 = Vffffffe4 + 1;
            } while(edx > eax);
            Vfffffff0 = Vfffffff0 + Vfffffff8;
            Vffffffec = Vffffffec + Vfffffff4;
            ecx = ecx + 1;
            Vfffffffc = Vfffffffc + 0x140;
        } while(ecx < Vffffffe8);
        eax = *(A10 + 2);
        Vffffffe8 = eax;
        if(ecx < Vffffffe8) {
            Vfffffff0 = *Ac << 0x10;
            if(!(eax = Vffffffe8 - ecx)) {
                if(!(eax = Vffffffe8 - ecx)) {
                    if(!(eax = *A10 - *Ac)) {
                        eax = *A10 - *Ac << 0x10;
                        ebx = ~(Vffffffe8 - ecx);
                        asm("cdq");
                        edx = ebx / ebx % ebx / ebx;
                        eax = ~eax;
                    } else {
                        eax = ~( *A10 - *Ac << 0x10);
                        ebx = ~(Vffffffe8 - ecx);
                        asm("cdq");
                        edx = ebx / ebx % ebx / ebx;
                    }
                } else {
                    if(!(eax = *A10 - *Ac)) {
                        eax = *A10 - *Ac << 0x10;
                        ebx = Vffffffe8 - ecx;
                        asm("cdq");
                        edx = ebx / ebx % ebx / ebx;
                    } else {
                        eax = ~( *A10 - *Ac) << 0x10;
                        ebx = Vffffffe8 - ecx;
                        asm("cdq");
                        edx = ebx / ebx % ebx / ebx;
                        eax = ~eax;
                    }
                }
            } else {
                eax = 2147483647;
                if(!(edx = *A10 - *Ac)) {
                    eax = -2147483647;
                }
            }
            Vfffffff8 = eax;
            if(ecx < Vffffffe8) {
                do {
                    edx = Vffffffec >> 0x10;
                    eax = Vfffffff0 >> 0x10;
                    Vffffffe0 = Vfffffffc + eax;
                    do {
                        ebx = A14;
                        *Vffffffe0 = bl;
                        eax = eax + 1;
                        Vffffffe0 = Vffffffe0 + 1;
                    } while(edx > eax);
                    Vfffffff0 = Vfffffff0 + Vfffffff8;
                    eax = Vfffffff4;
                    Vffffffec = Vffffffec + eax;
                    ecx = ecx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(ecx < Vffffffe8);
                goto L00456cf7;
L00456915:
                do {
                    edx = Vffffffec >> 0x10;
                    eax = Vfffffff0 >> 0x10;
                    Vffffffdc = Vfffffffc + eax;
                    do {
                        ebx = A14;
                        *Vffffffdc = bl;
                        eax = eax + 1;
                        Vffffffdc = Vffffffdc + 1;
                    } while(edx > eax);
                    Vfffffff0 = Vfffffff0 + Vfffffff4;
                    Vffffffec = Vffffffec + Vfffffff8;
                    ecx = ecx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(ecx < Vffffffe8);
                eax = *(A10 + 2);
                Vffffffe8 = eax;
                if(ecx < Vffffffe8) {
                    Vffffffec = *Ac << 0x10;
                    if(!(eax = Vffffffe8 - ecx)) {
                        if(!(eax = Vffffffe8 - ecx)) {
                            if(!(eax = *A10 - *Ac)) {
                                eax = *A10 - *Ac << 0x10;
                                ebx = ~(Vffffffe8 - ecx);
                                asm("cdq");
                                edx = ebx / ebx % ebx / ebx;
                                eax = ~eax;
                            } else {
                                eax = ~( *A10 - *Ac << 0x10);
                                ebx = ~(Vffffffe8 - ecx);
                                asm("cdq");
                                edx = ebx / ebx % ebx / ebx;
                            }
                        } else {
                            if(!(eax = *A10 - *Ac)) {
                                eax = *A10 - *Ac << 0x10;
                                ebx = Vffffffe8 - ecx;
                                asm("cdq");
                                edx = ebx / ebx % ebx / ebx;
                            } else {
                                eax = ~( *A10 - *Ac) << 0x10;
                                ebx = Vffffffe8 - ecx;
                                asm("cdq");
                                edx = ebx / ebx % ebx / ebx;
                                eax = ~eax;
                            }
                        }
                    } else {
                        eax = 2147483647;
                        if(!(edx = *A10 - *Ac)) {
                            eax = -2147483647;
                        }
                    }
                    Vfffffff8 = eax;
                    do {
                        edx = Vffffffec >> 0x10;
                        eax = Vfffffff0 >> 0x10;
                        Vffffffd8 = Vfffffffc + eax;
                        do {
                            ebx = A14;
                            *Vffffffd8 = bl;
                            eax = eax + 1;
                            Vffffffd8 = Vffffffd8 + 1;
                        } while(edx > eax);
                        Vfffffff0 = Vfffffff0 + Vfffffff4;
                        eax = Vfffffff8;
                        Vffffffec = Vffffffec + eax;
                        ecx = ecx + 1;
                        Vfffffffc = Vfffffffc + 0x140;
                    } while(ecx < Vffffffe8);
                }
            }
        }
    } else {
        eax = *(A10 + 2);
        Vffffffe8 = eax;
        if(ecx < Vffffffe8) {
            if(!(eax = Vffffffe8 - ecx)) {
                if(!(eax = Vffffffe8 - ecx)) {
                    if(!(eax = *A10 - *Ac)) {
                        eax = *A10 - *Ac << 0x10;
                        edi = ~(Vffffffe8 - ecx);
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                        eax = ~eax;
                    } else {
                        eax = ~( *A10 - *Ac << 0x10);
                        edi = ~(Vffffffe8 - ecx);
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                    }
                } else {
                    if(!(eax = *A10 - *Ac)) {
                        eax = *A10 - *Ac << 0x10;
                        edi = Vffffffe8 - ecx;
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                    } else {
                        eax = ~( *A10 - *Ac) << 0x10;
                        edi = Vffffffe8 - ecx;
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                        eax = ~eax;
                    }
                }
            } else {
                eax = 2147483647;
                if(!(edx = *A10 - *Ac)) {
                    eax = -2147483647;
                }
            }
            Vfffffff8 = eax;
            if(!(eax = Vffffffe8 - ecx)) {
                if(!(eax = Vffffffe8 - ecx)) {
                    if(!(eax = *A10 - *ebx)) {
                        eax = *A10 - *ebx << 0x10;
                        edi = ~(Vffffffe8 - ecx);
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                        eax = ~eax;
                    } else {
                        eax = ~( *A10 - *ebx << 0x10);
                        edi = ~(Vffffffe8 - ecx);
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                    }
                } else {
                    if(!(eax = *A10 - *ebx)) {
                        eax = *A10 - *ebx << 0x10;
                        edi = Vffffffe8 - ecx;
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                    } else {
                        eax = ~( *A10 - *ebx) << 0x10;
                        edi = Vffffffe8 - ecx;
                        asm("cdq");
                        edx = edi / edi % edi / edi;
                        eax = ~eax;
                    }
                }
            } else {
                eax = 2147483647;
                if(!(edx = *A10 - *ebx)) {
                    eax = -2147483647;
                }
            }
            Vfffffff4 = eax;
            ax = *ebx;
            if(ax >= *Ac) {
                goto L00456c9d;
            }
            Vfffffff0 = ax << 0x10;
            eax = *Ac << 0x10;
            Vffffffec = eax;
            if(ecx < Vffffffe8) {
                do {
                    edx = Vffffffec >> 0x10;
                    eax = Vfffffff0 >> 0x10;
                    Vffffffd4 = Vfffffffc + eax;
                    do {
                        ebx = A14;
                        *Vffffffd4 = bl;
                        eax = eax + 1;
                        Vffffffd4 = Vffffffd4 + 1;
                    } while(edx > eax);
                    Vfffffff0 = Vfffffff0 + Vfffffff4;
                    eax = Vfffffff8;
                    Vffffffec = Vffffffec + eax;
                    ecx = ecx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(ecx < Vffffffe8);
                goto L00456cf7;
L00456c9d:
                Vfffffff0 = *Ac << 0x10;
                eax = *ebx << 0x10;
                Vffffffec = eax;
                do {
                    edx = Vffffffec >> 0x10;
                    eax = Vfffffff0 >> 0x10;
                    Vffffffd0 = Vfffffffc + eax;
                    do {
                        ebx = A14;
                        *Vffffffd0 = bl;
                        eax = eax + 1;
                        Vffffffd0 = Vffffffd0 + 1;
                    } while(edx > eax);
                    Vfffffff0 = Vfffffff0 + Vfffffff8;
                    eax = Vfffffff4;
                    Vffffffec = Vffffffec + eax;
                    ecx = ecx + 1;
                    Vfffffffc = Vfffffffc + 0x140;
                } while(ecx < Vffffffe8);
            }
        }
    }
L00456cf7:
}

/*    Procedure: 0x00456CFE - 0x00456CFF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00456CFE()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00456D00 - 0x00456DFA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462060()
 */

L00456D00()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0x10);
    esi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    eax = *ebx >= 0x140 || *(ebx + 2) >= 0x9e ? 0 : 1;
    edx = *esi >= 0x140 || *(esi + 2) >= 0x9e ? 0 : 1;
    ecx = *edi >= 0x140 || *(edi + 2) >= 0x9e ? 0 : 1;
    *(ebp - 4) = ecx;
    ecx = *( *(ebp + 0x14)) >= 0x140 || *( *(ebp + 0x14) + 2) >= 0x9e ? 0 : 1;
    *(ebp - 8) = ecx;
    if(eax != 0 || edx != 0 || *(ebp - 4) != 0 || *(ebp - 8) != 0) {
        if(eax != 0 && edx != 0 && *(ebp - 4) != 0 && *(ebp - 8) != 0) {
            L00456E24(ebx, esi, edi, *(ebp + 0x14), *(ebp + 0x18), 0x455bfc);
        }
        eax = L00456E24(ebx, esi, edi, *(ebp + 0x14), *(ebp + 0x18), 0x455b94);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00456DFB - 0x00456DFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00456DFB()
{



}

/*    Procedure: 0x00456DFC - 0x00456E21
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041AF5A()
 *        L0041B004()
 *        L00462022()
 */

L00456DFC(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L00456E24(A8, Ac, A10, A14, A18, 0x455bfc);
}

/*    Procedure: 0x00456E22 - 0x00456E23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00456E22()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00456E24 - 0x00457179
 *    Argument size: 24
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00456D00()
 *        L00456DFC()
 */

L00456E24(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    edi = Ac;
    esi = A8;
    eax = *(esi + 2);
    edx = *(edi + 2);
    if(eax > edx) {
        eax = edx;
    }
    edx = *(ebx + 2);
    if(eax > edx) {
        eax = edx;
    }
    edx = *(A14 + 2);
    if(eax > edx) {
        eax = edx;
    }
    while(eax < *(esi + 2)) {
        edx = esi;
        esi = edi;
        edi = ebx;
        ebx = A14;
        A14 = edx;
    }
    Vffffffe8 = *(esi + 2);
    Vffffffec = L00455D4C( & Vfffffff8, & Vfffffffc, *esi, *(esi + 2), *edi, *(edi + 2));
    esi = L00455D4C( & Vfffffff0, & Vfffffff4, *esi, *(esi + 2), *A14, *(A14 + 2));
    if(*(A14 + 2) > *(edi + 2)) {
        L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, Vffffffec, & Vffffffe8, A18, A1c);
        esi = esi - Vffffffec;
        Vffffffec = L00455D4C( & Vfffffff8, & Vfffffffc, *edi, *(edi + 2), *ebx, *(ebx + 2));
        if(*(A14 + 2) > *(ebx + 2)) {
            L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, Vffffffec, & Vffffffe8, A18, A1c);
            Vffffffec = L00455D4C( & Vfffffff8, & Vfffffffc, *ebx, *(ebx + 2), *A14, *(A14 + 2));
            eax = L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, Vffffffec, & Vffffffe8, A18, A1c);
        } else {
            L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, esi, & Vffffffe8, A18, A1c);
            esi = L00455D4C( & Vfffffff0, & Vfffffff4, *A14, *(A14 + 2), *ebx, *(ebx + 2));
            eax = L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, esi, & Vffffffe8, A18, A1c);
        }
    } else {
        L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, esi, & Vffffffe8, A18, A1c);
        Vffffffec = Vffffffec - esi;
        esi = L00455D4C( & Vfffffff0, & Vfffffff4, *A14, *(A14 + 2), *ebx, *(ebx + 2));
        if(*(edi + 2) < *(ebx + 2)) {
            L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, Vffffffec, & Vffffffe8, A18, A1c);
            Vffffffec = L00455D4C( & Vfffffff8, & Vfffffffc, *edi, *(edi + 2), *ebx, *(ebx + 2));
            eax = L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, Vffffffec, & Vffffffe8, A18, A1c);
        } else {
            L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, esi, & Vffffffe8, A18, A1c);
            esi = L00455D4C( & Vfffffff0, & Vfffffff4, *ebx, *(ebx + 2), *edi, *(edi + 2));
            eax = L00455C64( & Vfffffffc, & Vfffffff4, Vfffffff8, Vfffffff0, esi, & Vffffffe8, A18, A1c);
        }
    }
}

/*    Procedure: 0x0045717A - 0x0045717B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045717A()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0045717C - 0x00457239
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00461BD9()
 */

L0045717C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A10;
    esi = Ac;
    edx = A14 != 0 ? eax + eax + (eax + eax) * 8 + 0x502f85 : eax + eax + (eax + eax) * 8 + 0x502f7c;
    *(ebp - 4) = edx;
    A8 = A8 + 1;
    ebx = *( *(ebp - 4));
    *(ebp - 4) = *(ebp - 4) + 1;
    if(esi < 0x9e) {
        L00455BB8(A8 - ebx, esi, ebx + ebx - 1, A18);
    }
    for(edi = esi; 1; L00455BB8(A8 - ebx, edi, ebx + ebx - 1, A18)) {
        eax = *(ebp - 4);
        *(ebp - 4) = *(ebp - 4) + 1;
        ebx = *eax;
        if(ebx < 0) {
            break;
        }
        esi = esi + 1;
        edi = edi - 1;
        if(ebx <= 0) {
            continue;
        }
        if(esi < 0x9e) {
            L00455BB8(A8 - ebx, esi, ebx + ebx - 1, A18);
        }
        if(edi >= 0x9e) {
            continue;
        }
    }
}

/*    Procedure: 0x0045723A - 0x0045723B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045723A()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0045723C - 0x004572EB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00461B1E()
 *        L00461B66()
 */

L0045723C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = A8;
    cx = *eax;
    if(cx >= 0x140) {
        if(cx < 0) {
            ecx = *eax;
            ebx = Ac >> 1;
            >= ? 0x457265 : ;
            asm("adc ebx,+0x0");
            ecx = ecx + ebx;
            ecx :: 0;
            asm("setng cl");
        } else {
            ecx = *eax;
            ebx = Ac >> 1;
            if(!(ecx = ecx & 1)) {
                asm("adc ebx,+0x0");
            }
            ecx = ecx - ebx;
            ecx :: 0x140;
            asm("setnl cl");
            ecx = ecx & 1;
        }
        if(ecx != 0) {
            goto L004572e9;
        }
    }
    cx = *(eax + 2);
    if(cx >= 0x9e) {
        if(cx < 0) {
            ecx = *(eax + 2);
            ebx = Ac >> 1;
            >= ? 0x4572b0 : ;
            asm("adc ebx,+0x0");
            ecx = ecx + ebx;
            ecx :: 0;
            asm("setng cl");
        } else {
            ecx = *(eax + 2);
            ebx = Ac >> 1;
            if(!(ecx = ecx & 1)) {
                asm("adc ebx,+0x0");
            }
            ecx = ecx - ebx;
            ecx :: 0x9e;
            asm("setnl cl");
            ecx = ecx & 1;
        }
        if(ecx != 0) {
            goto L004572e9;
        }
    }
    eax = L004572EC(eax, Ac, A10);
L004572e9:
}

/*    Procedure: 0x004572EC - 0x004576B2
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045723C()
 *        L00462191()
 */

L004572EC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -4092;
    (save)eax;
    esp = esp + -3516;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = Ac;
    ebx = A8;
    if(eax < 0x3b4) {
        if(eax >= 6) {
            goto L00457551;
        }
        dx = *ebx;
        if(dx >= 2 && dx <= 0x13d && *(ebx + 2) >= 2 && *(ebx + 2) <= 0x9b && eax <= 5) {
            switch(eax) {
                case 0:
L00457370:
                    eax = L00455BFC( *ebx, *(ebx + 2), 1, A10);
                    goto L004576ac;
                case 1:
                    L00455BFC( *ebx - 1, *(ebx + 2) - 1, 2, A10);
                    eax = L00455BFC( *ebx - 1, *(ebx + 2), 2, A10);
                    goto L004576ac;
                case 2:
                    L00455BFC( *ebx, *(ebx + 2) - 1, 1, A10);
                    L00455BFC( *ebx - 1, *(ebx + 2), 3, A10);
                    eax = L00455BFC( *ebx, *(ebx + 2) + 1, 1, A10);
                    goto L004576ac;
                case 3:
                    L00455BFC( *ebx - 1, *(ebx + 2) - 1, 3, A10);
                    L00455BFC( *ebx - 1, *(ebx + 2), 3, A10);
                    eax = L00455BFC( *ebx - 1, *(ebx + 2) + 1, 3, A10);
                    goto L004576ac;
                case 4:
                    L00455BFC( *ebx - 1, *(ebx + 2) - 2, 2, A10);
                    L00455BFC( *ebx - 2, *(ebx + 2) - 1, 4, A10);
                    L00455BFC( *ebx - 2, *(ebx + 2), 4, A10);
                    eax = L00455BFC( *ebx - 1, *(ebx + 2) + 1, 2, A10);
                    goto L004576ac;
                case 5:
                    L00455BFC( *ebx, *(ebx + 2) - 2, 1, A10);
                    L00455BFC( *ebx - 1, *(ebx + 2) - 1, 3, A10);
                    L00455BFC( *ebx - 2, *(ebx + 2), 5, A10);
                    L00455BFC( *ebx - 1, *(ebx + 2) + 1, 3, A10);
                    eax = L00455BFC( *ebx, *(ebx + 2) + 2, 1, A10);
                    goto L004576ac;
            }
            goto L00457370;
L00457551:
            edx = eax >> 1;
            >= ? 0x45755a : ;
            asm("adc edx,+0x0");
            *(ebp - 0x10) = edx;
            *(ebp - 4) = *ebx;
            *(ebp - 8) = *(ebx + 2);
            ebx = *(ebp - 0x10);
            edx = eax - 2;
            if(edx == 5) {
                edx = edx + 3;
            }
            edx = ~edx;
            *(ebp - 0x14) = ebp + -7612;
            eax = *(ebp - 0x10) << 3;
            eax = eax + ebp + -7612;
            *(ebp - 0x18) = eax;
            ecx = *(ebp - 0x18);
            eax = *(ebp - 0x10) + *(ebp - 0x10) << 3;
            *(ebp - 0x1c) = eax + ebp + -7612;
            edx = edx + 6;
            eax = 1;
            if(ebx > 1) {
L004575b5:
                ecx = ecx - 8;
                esi = *(ebp - 4) - ebx;
                *ecx = esi;
                *( *(ebp - 0x18)) = esi;
                esi = ebx + ebx;
                *(ecx + 4) = esi;
                *( *(ebp - 0x18) + 4) = esi;
                *(ebp - 0x18) = *(ebp - 0x18) + 8;
                if(edx < 0) {
                    edx = edx + (eax << 2) + 6;
                } else {
                    *(ebp - 0x1c) = *(ebp - 0x1c) - 8;
                    esi = *(ebp - 4) - eax;
                    *( *(ebp - 0x1c)) = esi;
                    *( *(ebp - 0x14)) = esi;
                    esi = eax + eax;
                    *( *(ebp - 0x1c) + 4) = esi;
                    *( *(ebp - 0x14) + 4) = esi;
                    *(ebp - 0x14) = *(ebp - 0x14) + 8;
                    edx = edx + (eax - ebx << 2) + 0xa;
                    ebx = ebx - 1;
                }
                eax = eax + 1;
                if(ebx > eax) {
                    goto L004575b5;
                }
            }
            if(ebx == eax) {
                ecx = ecx - 8;
                edx = *(ebp - 4) - eax;
                *ecx = edx;
                *( *(ebp - 0x18)) = edx;
                eax = eax + eax;
                *(ecx + 4) = eax;
                *( *(ebp - 0x18) + 4) = eax;
            }
            esi = ebp + -7612;
            ebx = *(ebp - 8) - *(ebp - 0x10);
            if(ebx < 0) {
                esi = esi - (ebx << 3);
                ebx = 0;
            }
            eax = *(ebp - 8) + *(ebp - 0x10);
            *(ebp - 0xc) = eax > 0x9e ? 0x9e : eax;
            if(!(eax = *(ebp - 4) - *(ebp - 0x10))) {
                eax = *(ebp - 4) + *(ebp - 0x10);
                if(eax < 0x140) {
                    goto L00457688;
                }
            }
            edi = 0x455bb8;
            goto L0045768d;
L00457688:
            edi = 0x455bfc;
L0045768d:
            if(ebx < *(ebp - 0xc)) {
L00457692:
                eax = *edi( *esi, ebx, *(esi + 4), A10);
                esi = esi + 8;
                ebx = ebx + 1;
                if(ebx < *(ebp - 0xc)) {
                    goto L00457692;
                }
            }
        }
    }
L004576ac:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004576B3 - 0x004576B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004576B3()
{



}

/*    Procedure: 0x004576B4 - 0x0045785A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00445B24()
 */

L004576B4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -4092;
    (save)eax;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = Ac;
    eax = A8;
    ecx = edx >> 1;
    if(!(esp = esp + -3512)) {
        asm("adc ecx,+0x0");
    }
    *(ebp - 0xc) = ecx;
    *(ebp - 4) = *eax;
    *(ebp - 8) = *(eax + 2);
    ebx = *(ebp - 0xc);
    edx = edx - 2;
    if(edx == 5) {
        edx = edx + 3;
    }
    edx = ~edx;
    *(ebp - 0x10) = ebp + -7608;
    eax = *(ebp - 0xc) << 3;
    eax = eax + ebp + -7608;
    *(ebp - 0x14) = eax;
    ecx = *(ebp - 0x14);
    eax = *(ebp - 0xc) + *(ebp - 0xc) << 3;
    *(ebp - 0x18) = eax + ebp + -7608;
    edx = edx + 6;
    eax = 1;
    if(ebx > 1) {
        do {
            ecx = ecx - 8;
            esi = *(ebp - 4) - ebx;
            *ecx = esi;
            *( *(ebp - 0x14)) = esi;
            esi = ebx + ebx;
            *(ecx + 4) = esi;
            *( *(ebp - 0x14) + 4) = esi;
            *(ebp - 0x14) = *(ebp - 0x14) + 8;
            if(edx >= 0) {
                *(ebp - 0x18) = *(ebp - 0x18) - 8;
                esi = *(ebp - 4) - eax;
                *( *(ebp - 0x18)) = esi;
                *( *(ebp - 0x10)) = esi;
                esi = eax + eax;
                *( *(ebp - 0x18) + 4) = esi;
                *( *(ebp - 0x10) + 4) = esi;
                *(ebp - 0x10) = *(ebp - 0x10) + 8;
                edx = edx + (eax - ebx << 2) + 0xa;
                ebx = ebx - 1;
            } else {
                edx = edx + (eax << 2) + 6;
            }
            eax = eax + 1;
        } while(ebx > eax);
    }
    if(ebx == eax) {
        ecx = ecx - 8;
        edx = *(ebp - 4) - eax;
        *ecx = edx;
        *( *(ebp - 0x14)) = edx;
        eax = eax + eax;
        *(ecx + 4) = eax;
        *( *(ebp - 0x14) + 4) = eax;
    }
    esi = ebp + -7608;
    ebx = *(ebp - 8) - *(ebp - 0xc);
    if(ebx < 0) {
        esi = esi - (ebx << 3);
        ebx = 0;
    }
    eax = *(ebp - 8) + *(ebp - 0xc);
    edi = eax > 0x9e ? 0x9e : eax;
    do {
        if(!(eax = edi - ebx - 1)) {
            eax = ebp + -7608;
            if(esi == eax) {
                goto L004577fa;
            }
            edx = (ebx << 3) + (ebx << 3) * 4;
            edx = M00502e6c + edx * 8;
            (save)edx + *esi;
            (restore)edx;
            *edx = A10;
            edx = (ebx << 3) + (ebx << 3) * 4;
            edx = M00502e6c + edx * 8;
            edx = edx + *esi;
            *(edx + *(esi + 4) - 1) = A10;
        } else {
L004577fa:
            eax = L00455BFC( *esi, ebx, *(esi + 4), A10);
        }
        esi = esi + 8;
        ebx = ebx + 1;
    } while(edi > ebx);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0045785B - 0x0045785B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045785B()
{



}

/*    Procedure: 0x0045785C - 0x0045795C
 *    Argument size: 8
 *    Local size: 20
 *    Save regs size: 8
 *    Called by:
 *        L00461815()
 *        L0046193F()
 */

L0045785C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(A8 + 6960);
    if(eax >= *(A8 + 6956)) {
        Vfffffffc = *(A8 + 6952) != 0 ? 0x455bb8 : 0x455bfc;
        Vfffffff4 = *(A8 + 6960) - 1;
        eax = Vfffffff4;
        edx = eax;
        eax = edx + (edx + eax * 4) * 2;
        for(Vffffffec = A8 + eax * 4; 1; Vffffffec = Vffffffec - 0x2c) {
            eax = *(A8 + 6956);
            if(eax > Vfffffff4) {
                break;
            }
            eax = Vfffffff4;
            edx = eax;
            Vfffffff8 = (edx + (edx + eax * 4) * 2 << 2) + A8 + 4;
            Vfffffff0 = *Vffffffec;
            ebx = Vfffffff0;
            do {
                edx = 1;
                eax = Vfffffff8;
                if(ebx > 1) {
                    do {
                        ecx = *eax;
                        esi = *(eax + 4);
                        if(ecx > esi) {
                            *eax = esi;
                            *(eax + 4) = ecx;
                        }
                        edx = edx + 1;
                        eax = eax + 4;
                    } while(ebx > edx);
                }
                ebx = ebx - 1;
            } while(ebx > 1);
            ebx = Vfffffff0 - 2;
            esi = Vfffffff8 + ebx * 4;
            do {
                edx = *(esi + 4);
                eax = *esi;
                Vfffffffc(eax, Vfffffff4, edx - eax, Ac);
                ebx = ebx - 2;
                esi = esi - 8;
            } while(ebx >= 0);
            Vfffffff4 = Vfffffff4 - 1;
        }
    }
}

/*    Procedure: 0x0045795D - 0x0045795F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045795D()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457960 - 0x00457995
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00461A6F()
 */

L00457960(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = 8;
    edx = A8 + 0x28;
    eax = Ac + 0x20;
    do {
        *edx = *eax;
        ecx = ecx + 1;
        edx = edx + 4;
        eax = eax + 4;
    } while(ecx < 0x10);
    return L00457998(A8, Ac);
}

/*    Procedure: 0x00457996 - 0x00457997
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457996()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457998 - 0x00457AB9
 *    Argument size: 8
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L00457960()
 *        L00461AC6()
 */

L00457998(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = 0;
    edx = A8 + 8;
    eax = Ac;
    do {
        *edx = *eax;
        edi = edi + 1;
        edx = edx + 4;
        eax = eax + 4;
    } while(edi < 8);
    eax = *(A8 + 4);
    if(eax >= *A8) {
        *(A8 + 0x48) = 0;
        Vfffffffc = *(A8 + 4);
        eax = Vfffffffc;
        edx = eax;
        eax = (eax << 6) - edx;
        Vffffffec = A8 + eax * 4 + 0x4c;
        for(Vfffffff0 = A8 + Vfffffffc * 4 + 39892; 1; Vfffffff0 = Vfffffff0 - 4) {
            eax = *A8;
            if(eax > Vfffffffc) {
                break;
            }
            Vfffffff8 = *(A8 + 0x48);
            *(A8 + 0x48) = *(A8 + 0x48) ^ *Vfffffff0;
            edx = Vfffffffc;
            eax = edx;
            edx = ((edx << 6) - eax << 2) + A8 + 0x50;
            Vfffffff4 = *Vffffffec;
            eax = *(edx + 4);
            Vfffffff8 = Vfffffff8 ^ *edx;
            edi = 1;
            for(esi = edx + 0xc; edi < Vfffffff4 && eax < 0x13f; esi = esi + 8) {
                if(eax < 0) {
                    eax = 0;
                }
                ebx = *esi;
                if(ebx >= 0x140) {
                    ebx = 0x13f;
                }
                if(ebx > eax) {
                    L00455BFC(eax, Vfffffffc, ebx - eax, *(A8 + Vfffffff8 + 8));
                }
                Vfffffff8 = Vfffffff8 ^ *(esi - 4);
                eax = ebx;
                edi = edi + 1;
            }
            Vfffffffc = Vfffffffc - 1;
            Vffffffec = Vffffffec + -252;
        }
    }
}

/*    Procedure: 0x00457ABA - 0x00457ABB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457ABA()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457ABC - 0x00457D31
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041DCC6()
 *        L004271A4()
 *        L00445B96()
 *        L00445C80()
 *        L00454124()
 *        L00454C96()
 *        L00461C3F()
 */

L00457ABC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = Ac;
    edi = A8;
    dx = *(edi + 2);
    if(dx == *(esi + 2)) {
        ax = *edi;
        if(ax <= *esi) {
            ecx = *esi;
            eax = L00455BFC(ax, dx, ecx - *edi + 1, A10);
        } else {
            edx = *edi;
            eax = *esi;
            eax = L00455BFC(eax, *(esi + 2), edx - eax + 1, A10);
        }
    } else {
        if(*(edi + 2) > *(esi + 2)) {
            eax = edi;
            edi = esi;
            esi = eax;
        }
        eax = *(esi + 2);
        if(!(eax = eax - *(edi + 2))) {
            eax = *(esi + 2);
            if(!(eax = eax - *(edi + 2))) {
                eax = *esi;
                if(!(eax = eax - *edi)) {
                    eax = *esi;
                    eax = eax - *edi << 0x10;
                    edx = *(esi + 2);
                    ecx = ~(edx - *(edi + 2));
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    eax = ~eax;
                } else {
                    eax = *esi;
                    eax = ~(eax - *edi << 0x10);
                    edx = *(esi + 2);
                    ecx = ~(edx - *(edi + 2));
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                }
            } else {
                eax = *esi;
                if(!(eax = eax - *edi)) {
                    eax = *esi;
                    eax = eax - *edi << 0x10;
                    edx = *(esi + 2);
                    ecx = edx - *(edi + 2);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                } else {
                    eax = *esi;
                    eax = ~(eax - *edi) << 0x10;
                    edx = *(esi + 2);
                    ecx = edx - *(edi + 2);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    eax = ~eax;
                }
            }
        } else {
            eax = 2147483647;
            edx = *esi;
            if(!(edx = edx - *edi)) {
                eax = -2147483647;
            }
        }
        *(ebp - 4) = eax;
        ebx = *edi << 0x10;
        if(*(ebp - 4) >= 0) {
            if(*(ebp - 4) <= 65536) {
                for(edi = *(edi + 2); edi < *(esi + 2); edi = edi + 1) {
                    L00455BFC(ebx >> 0x10, edi, 1, A10);
                    ebx = ebx + *(ebp - 4);
                }
                eax = L00455BFC( *esi, edi, 1, A10);
            } else {
                for(edi = *(edi + 2); edi < *(esi + 2); edi = edi + 1) {
                    edx = *(ebp - 4) + ebx >> 0x10;
                    eax = ebx >> 0x10;
                    L00455BFC(eax, edi, edx - eax, A10);
                    ebx = ebx + *(ebp - 4);
                }
                edx = *esi;
                eax = ebx >> 0x10;
                eax = L00455BFC(eax, edi, edx - eax + 1, A10);
            }
        } else {
            if(*(ebp - 4) >= -65536) {
                for(edi = *(edi + 2); edi < *(esi + 2); edi = edi + 1) {
                    L00455BFC(ebx >> 0x10, edi, 1, A10);
                    ebx = ebx + *(ebp - 4);
                }
                eax = L00455BFC( *esi, edi, 1, A10);
            } else {
                L00455BFC( *edi, *(edi + 2), 1, A10);
                for(edi = *(edi + 2) + 1; 1; edi = edi + 1) {
                    eax = *(esi + 2);
                    if(edi > eax) {
                        goto L00457d2c;
                    }
                    edx = ebx >> 0x10;
                    eax = *(ebp - 4) + ebx >> 0x10;
                    L00455BFC(eax, edi, edx - eax, A10);
                    ebx = ebx + *(ebp - 4);
                }
            }
        }
    }
L00457d2c:
}

/*    Procedure: 0x00457D32 - 0x00457D33
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457D32()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457D34 - 0x00457D57
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00421F4D()
 *        L00423D14()
 */

L00457D34()
{



    L004580FC();
    L00471128(M00502e6c, M00502e9c, 64000);
    return L004580D8();
}

/*    Procedure: 0x00457D58 - 0x00457D85
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00457D58()
{
    /* unknown */ void  ebx;



    L004580FC();
    L00471128(50560 + M00502e9c, M00502e6c + 50560, 13440);
    return L004580D8();
}

/*    Procedure: 0x00457D86 - 0x00457D87
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457D86()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457D88 - 0x00457DA1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004198BC()
 *        L00419F48()
 *        L00419FBF()
 *        L0041A0B1()
 *        L0041A29C()
 *        L0041A377()
 *        L0041A688()
 *        L0041A71C()
 *        L0041A7F4()
 *        L0041AAA6()
 *        L0041BA6D()
 *        L0041BC86()
 *        L0041BE97()
 *        L0043C5F2()
 *        L00455238()
 */

L00457D88()
{



    return L00471198(M00502e6c, M00657658, 50560);
}

/*    Procedure: 0x00457DA2 - 0x00457DA3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457DA2()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457DA4 - 0x00457DB9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C40C()
 */

L00457DA4()
{



    return L00471198(M00502e6c, 0, 50560);
}

/*    Procedure: 0x00457DBA - 0x00457DBB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457DBA()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457DBC - 0x00457DCA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416998()
 *        L00416A42()
 *        L00416CB8()
 *        L0043E88B()
 *        L0044F6AC()
 *        L004555E8()
 *        L00457E1C()
 *        L00457E60()
 *        L004588F4()
 */

L00457DBC(A8)
/* unknown */ void  A8;
{



    return *(A8 * 4 + 0x5b09ec);
}

/*    Procedure: 0x00457DCB - 0x00457DCB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457DCB()
{



}

/*    Procedure: 0x00457DCC - 0x00457DE9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00416934()
 *        L00416998()
 *        L00416CB8()
 *        L0041A688()
 *        L0041A71C()
 *        L0041A7F4()
 *        L0041BA6D()
 *        L0041D404()
 *        L0041D8B4()
 *        L0041E55C()
 *        L0041F544()
 *        L004207A0()
 *        L00420DD8()
 *        L0042145C()
 *        L00444A88()
 *        L004553B4()
 */

L00457DCC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00457E1C(0x502e6c, A8, Ac, A10);
}

/*    Procedure: 0x00457DEA - 0x00457DEB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457DEA()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457DEC - 0x00457E19
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D5E0()
 *        L0043E580()
 *        L0043F26E()
 *        L004555E8()
 */

L00457DEC(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    return L00457E60(0x502e6c, A8, Ac, A10, A14, A18, A1c, A20);
}

/*    Procedure: 0x00457E1A - 0x00457E1B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457E1A()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457E1C - 0x00457E5F
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00436768()
 *        L0043E55C()
 *        L00445B24()
 *        L00445BF0()
 *        L00457DCC()
 *        L004581C8()
 *        L00458334()
 */

L00457E1C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    M00503078 = M00503078 + 1;
    ebx = L00457DBC(Ac);
    if(A8 != 0) {
        L00457EAC(A8, A10, A14, ebx, 0, 0, -1, -1);
    }
    M00503078 = M00503078 - 1;
    return ebx;
}

/*    Procedure: 0x00457E60 - 0x00457EAB
 *    Argument size: 32
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00457DEC()
 */

L00457E60(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
    /* unknown */ void  ebx;



    M00503078 = M00503078 + 1;
    ebx = L00457DBC(Ac);
    if(A8 != 0) {
        L00457EAC(A8, A10, A14, ebx, A18, A1c, A20, A24);
    }
    M00503078 = M00503078 - 1;
    return ebx;
}

/*    Procedure: 0x00457EAC - 0x00457FA5
 *    Argument size: 32
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00457E1C()
 *        L00457E60()
 */

L00457EAC(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ecx = Ac;
    eax = A8;
    Vfffffffc = A14 + 8;
    Vfffffff8 = *eax;
    ebx = A10 + *(A14 + 6) - *(eax + 8);
    Vfffffff4 = *(A14 + 1) & 0xff;
    if(A24 == -1) {
        A24 = *(eax + 0x10);
    }
    if(A20 == -1) {
        A20 = *(eax + 0xc);
    }
    if(ebx < A1c) {
        Vfffffff4 = Vfffffff4 + ebx - A1c;
        if(Vfffffff4 <= 0) {
            goto L00457f9f;
        }
        esi = *(A14 + 2);
        Vfffffffc = Vfffffffc - (ebx - A1c) * (ebx - A1c);
        ebx = A1c;
    }
    esi = *(eax + 0xc) + *(eax + 0x14);
    Vfffffff8 = Vfffffff8 + ebx * ebx;
    if(Vfffffff4 + ebx > A24) {
        Vfffffff4 = A24 - ebx;
    }
    if(Vfffffff4 > 0) {
        ecx = ecx + *(A14 + 4) - *(eax + 4);
        ebx = *(A14 + 2);
        esi = ebx;
        if(ecx >= A18) {
            goto L00457f67;
        }
        esi = esi + ecx - A18;
        if(esi > 0) {
            Vfffffffc = Vfffffffc - ecx - A18;
            ecx = A18;
L00457f67:
            Vfffffff8 = Vfffffff8 + ecx;
            if(esi + ecx <= A20) {
                goto L00457f7b;
            }
            esi = A20 - ecx;
            if(esi > 0) {
L00457f7b:
                ecx = ebx + *(eax + 0x14) - esi;
                eax = L00457FA8(Vfffffff8, Vfffffffc, esi, Vfffffff4, *(eax + 0xc) - esi, ecx, A14);
            }
        }
    }
L00457f9f:
}

/*    Procedure: 0x00457FA6 - 0x00457FA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00457FA6()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00457FA8 - 0x0045800D
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00457EAC()
 */

L00457FA8(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = Ac;
    esi = A8;
    if(!( *A20 & 1)) {
        do {
            L00471128(esi, ebx, A10);
            esi = esi + A18 + A10;
            ebx = ebx + A1c + A10;
            A14 = A14 - 1;
            eax = A14;
        } while(eax > 0);
    } else {
        do {
            edx = A10;
            do {
                al = *ebx;
                ebx = ebx + 1;
                if(al != 0) {
                    *esi = al;
                }
                esi = esi + 1;
                edx = edx - 1;
            } while(edx > 0);
            ebx = ebx + A1c;
            esi = esi + A18;
            A14 = A14 - 1;
            eax = A14;
        } while(eax > 0);
    }
}

/*    Procedure: 0x0045800E - 0x0045800F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045800E()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00458010 - 0x00458057
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00436601()
 *        L00436696()
 *        L00455168()
 *        L004552D4()
 *        L0045542D()
 *        L00458424()
 */

L00458010(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8;
    ebx = (Ac << 6) + (Ac << 6) * 4 + M00502e6c + eax;
    edi = A10 - eax + 1;
    esi = Ac;
    do {
        eax = L00471198(ebx, A18, edi);
        ebx = ebx + 0x140;
        esi = esi + 1;
    } while(esi <= A14);
}

/*    Procedure: 0x00458058 - 0x004580B6
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004551AC()
 */

L00458058(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    ecx = Ac;
    edx = A8;
    eax = (ecx << 6) + (ecx << 6) * 4 + M00502e6c + edx;
    edi = A10 - edx + 1;
    *(ebp - 4) = 0x140 - edi;
    do {
        edx = edi;
        do {
            if(( *eax & -4) != 0x28) {
                ebx = A18;
                *eax = bl;
            }
            eax = eax + 1;
            edx = edx - 1;
        } while(edx > 0);
        eax = eax + *(ebp - 4);
        ecx = ecx + 1;
    } while(ecx <= A14);
}

/*    Procedure: 0x004580B7 - 0x004580B7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004580B7()
{



}

/*    Procedure: 0x004580B8 - 0x004580D7
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043657A()
 */

L004580B8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = M00502e6c + ((Ac << 3) + (Ac << 3) * 4) * 8;
    *(eax + A8) = A10;
}

/*    Procedure: 0x004580D8 - 0x004580F9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004537F4()
 *        L0045535F()
 *        L004553B4()
 *        L004554A4()
 *        L00457D34()
 *        L00457D58()
 *        L00458334()
 */

L004580D8()
{



    if(!(M00502e68 & 2)) {
        M00503080 = -1;
        M00502e68 = M00502e68 & -21;
        M00502e68 = M00502e68 | 0x22;
    }
}

/*    Procedure: 0x004580FA - 0x004580FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004580FA()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004580FC - 0x00458118
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00426810()
 *        L004537F4()
 *        L0045535F()
 *        L004553B4()
 *        L004554A4()
 *        L00457D34()
 *        L00457D58()
 *        L00458334()
 *        L00458424()
 */

L004580FC()
{



    if(!(M00502e68 & 2)) {
        M00502e68 = M00502e68 & -35;
        eax = L004582E8(M00502e9c);
    }
}

/*    Procedure: 0x00458119 - 0x0045811B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458119()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0045811C - 0x004581C6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0044FC8D()
 *        L004557F7()
 */

L0045811C()
{
    /* unknown */ void  V2;
    /* unknown */ void  ecx;



    if(M00503078 == 0 && !(M00502e68 & 8)) {
        M00502e68 = M00502e68 | 8;
        eax = *L005003a8();
        *esp = ax;
        V2 = *esp >> 0x10;
        if(M00502e68 & 0x20 || *esp != M00657640 || V2 != M00657642) {
            M00657640 = *esp;
            M00657642 = V2;
            L004582E8(M00502e9c);
            L00458204(M00502e9c);
            eax = L004581C8(0x502e9c, M00657640, M00657642);
        }
        M00502e68 = M00502e68 & -41;
    }
}

/*    Procedure: 0x004581C7 - 0x004581C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004581C7()
{



}

/*    Procedure: 0x004581C8 - 0x00458200
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D8B4()
 *        L0045811C()
 *        L00458384()
 */

L004581C8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(!(M00644c18 & 0x20)) {
        eax = L00457E1C(A8, M0050307c, Ac, A10);
    }
    M005015e0 = 4;
    M00502e68 = M00502e68 & -5;
}

/*    Procedure: 0x00458201 - 0x00458203
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458201()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00458204 - 0x004582E5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D8B4()
 *        L0045811C()
 *        L00458384()
 */

L00458204()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    M00503080 = -1;
    eax = M0066706d & 0xff;
    edx = M00657642 + M00667072;
    if(edx < 0) {
        eax = eax + edx;
        if(eax <= 0) {
            goto L004582df;
        }
        edx = 0;
    }
    if(eax + edx > 0xc8) {
        eax = 0xc8 - edx;
        if(eax <= 0) {
            goto L004582df;
        }
    }
    ebx = M0066706e;
    ecx = M00657640 + M00667070;
    if(ecx < 0) {
        ebx = ebx + ecx;
        if(ebx <= 0) {
            goto L004582df;
        }
        ecx = 0;
    }
    if(ebx + ecx > 0x140) {
        ebx = 0x140 - ecx;
        if(ebx <= 0) {
            goto L004582df;
        }
    }
    M006670dc = ebx;
    M006670e0 = eax;
    *(ebp - 8) = ecx + (edx << 6) + (edx << 6) * 4;
    edi = *(ebp + 8) + *(ebp - 8);
    esi = 6713460;
    *(ebp - 4) = eax;
    do {
        L00471128(esi, edi, ebx);
        esi = esi + ebx;
        edi = edi + 0x140;
        *(ebp - 4) = *(ebp - 4) - 1;
    } while(*(ebp - 4) > 0);
    eax = *(ebp - 8);
    M00503080 = eax;
L004582df:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004582E6 - 0x004582E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004582E6()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004582E8 - 0x00458331
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041D8B4()
 *        L004580FC()
 *        L0045811C()
 *        L00458384()
 */

L004582E8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = M00503080;
    if(eax != -1) {
        esi = A8 + eax;
        ebx = 6713460;
        edi = M006670e0;
        do {
            eax = L00471128(esi, ebx, M006670dc);
            ebx = ebx + M006670dc;
            esi = esi + 0x140;
            edi = edi - 1;
        } while(edi > 0);
    }
}

/*    Procedure: 0x00458332 - 0x00458333
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458332()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00458334 - 0x00458381
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00458424()
 */

L00458334(A8)
/* unknown */ void  A8;
{



    if(A8 != M0050307c) {
        L004580FC();
        M00503078 = M00503078 + 1;
        eax = L00457E1C(0, A8, 0, 0);
        M0066706c = *eax;
        M00667070 = *(eax + 4);
        M00503078 = M00503078 - 1;
        M0050307c = A8;
        eax = L004580D8();
    }
}

/*    Procedure: 0x00458382 - 0x00458383
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458382()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00458384 - 0x00458422
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00418264()
 *        L00418EAB()
 *        L004198BC()
 *        L00419F48()
 *        L00419FBF()
 *        L0041A0B1()
 *        L0041A228()
 *        L0041A688()
 *        L0041A71C()
 *        L0041A7F4()
 *        L0041AAA6()
 *        L0041AF5A()
 *        L0041B004()
 *        L0041BA6D()
 *        L0041BC86()
 *        L0041BE97()
 *        L0041EA0C()
 *        L0041EBEC()
 *        L0041F15A()
 *        L004219F8()
 *        L00421F4D()
 *        L00422310()
 *        L00423CD2()
 *        L00423D14()
 *        L004267FC()
 *        L00426810()
 *        L00435860()
 *        L00435957()
 *        L004361D9()
 *        L0043623A()
 *        L0043C3A8()
 *        L0043C40C()
 *        L0043C5F2()
 *        L0043E7A4()
 *        L00445590()
 *        L00458424()
 */

L00458384()
{
    /* unknown */ void  V2;
    /* unknown */ void  ecx;



    L004552F4();
    M0065763c = M00657638;
    M00657638 = 0;
    M00503078 = M00503078 + 1;
    eax = *L005003a8();
    *esp = ax;
    V2 = *esp >> 0x10;
    if(!(M00502e68 & 2)) {
        M00657640 = *esp;
        M00502e68 = M00502e68 ^ 0x40;
        L00458204(M00502e6c);
        L004581C8(0x502e6c, M00657640, M00657642);
    }
    *L004f80b0();
    M00503084 = M00503084 ^ 0x40;
    eax = L0046FC7A();
    if(!(M00502e68 & 2)) {
        eax = L004582E8(M00502e6c);
    }
    M00503078 = M00503078 - 1;
}

/*    Procedure: 0x00458423 - 0x00458423
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458423()
{



}

/*    Procedure: 0x00458424 - 0x00458479
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00455A28()
 */

L00458424()
{



    L0046FB7C();
    M00503086 = M00503086 - 1;
    L00458614(0);
    L00458334(0);
    L004580FC();
    L00458010(0, 0, 0x13f, 0xc7, 0);
    L00458384();
    return L00458010(0, 0, 0x13f, 0xc7, 0);
}

/*    Procedure: 0x0045847A - 0x0045847C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045847A()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0045847D - 0x0045847F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045847D()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00458480 - 0x0045857F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004551F0()
 */

L00458480(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    *L004f80a4(1);
    do {
        L00470FDC(0x3da);
    } while(al & 8);
    do {
        L00470FDC(0x3da);
    } while(al & 8);
    asm("cli");
    L004710DD(0x3c8, 0x80);
    esi = 0;
    ebx = A8;
    do {
        L004710DD(0x3c9, *ebx & 0xff);
        L004710DD(0x3c9, *(ebx + 1) & 0xff);
        L004710DD(0x3c9, *(ebx + 2) & 0xff);
        esi = esi + 1;
        ebx = ebx + 3;
    } while(esi < 0x40);
    asm("sti");
    do {
        L00470FDC(0x3da);
    } while(al & 8);
    asm("cli");
    L004710DD(0x3c8, 0xc0);
    esi = 0x40;
    ebx = A8 + 0xc0;
    do {
        L004710DD(0x3c9, *ebx & 0xff);
        L004710DD(0x3c9, *(ebx + 1) & 0xff);
        eax = L004710DD(0x3c9, *(ebx + 2) & 0xff);
        esi = esi + 1;
        ebx = ebx + 3;
    } while(esi < 0x80);
    asm("sti");
}

/*    Procedure: 0x00458580 - 0x00458612
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043C300()
 */

L00458580(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    *L004f80a4(1);
    do {
        L00470FDC(0x3da);
    } while(al & 8);
    do {
        L00470FDC(0x3da);
    } while(al & 8);
    asm("cli");
    L004710DD(0x3c8, Ac);
    esi = 0;
    eax = A8;
    ebx = eax;
    if(A10 > 0) {
        do {
            L004710DD(0x3c9, *ebx & 0xff);
            L004710DD(0x3c9, *(ebx + 1) & 0xff);
            eax = L004710DD(0x3c9, *(ebx + 2) & 0xff);
            esi = esi + 1;
            ebx = ebx + 3;
        } while(A10 > esi);
    }
    asm("sti");
}

/*    Procedure: 0x00458613 - 0x00458613
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458613()
{



}

/*    Procedure: 0x00458614 - 0x004586C5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00458424()
 */

L00458614(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    M00657645 = A8;
    edi = M00657645 + M00657645 * 2 + M00502e64;
    *L004f80a4(1);
    do {
        L00470FDC(0x3da);
    } while(al & 8);
    esi = 0;
L00458645:
    do {
        L00470FDC(0x3da);
        if(al & 8) {
            goto L00458645;
        }
        asm("cli");
        L004710DD(0x3c8, esi);
        ebx = 0;
        do {
            L004710DD(0x3c9, *(edi + ebx + esi + (ebx + esi) * 2) & 0xff);
            L004710DD(0x3c9, *(edi + ebx + esi + (ebx + esi) * 2 + 1) & 0xff);
            eax = L004710DD(0x3c9, *(edi + ebx + esi + (ebx + esi) * 2 + 2) & 0xff);
            ebx = ebx + 1;
        } while(ebx < 0x40);
        asm("sti");
        esi = esi + 0x40;
    } while(esi < 0x100);
}

/*    Procedure: 0x004586C6 - 0x004586C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004586C6()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004586C8 - 0x004588F0
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004589D4()
 *        L00458CE0()
 */

L004586C8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    ebx = A10;
    ecx = *(A14 + 2) - *(Ac + 2);
    eax = *ebx << 0x10;
    *(A8 * 8 + 6713576) = eax;
    eax = *(ebx + 2) << 0x10;
    *(A8 * 8 + 6713580) = eax;
    if(ecx != 0) {
        if(ecx < 0) {
            eax = *A18;
            if(!(eax = eax - *ebx)) {
                eax = *A18;
                eax = eax - *ebx << 0x10;
                (save)ecx;
                ecx = ~ecx;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
                eax = ~eax;
            } else {
                eax = *A18;
                eax = ~(eax - *ebx << 0x10);
                (save)ecx;
                ecx = ~ecx;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
            }
        } else {
            eax = *A18;
            if(!(eax = eax - *ebx)) {
                eax = *A18;
                eax = eax - *ebx << 0x10;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
            } else {
                eax = *A18;
                eax = ~(eax - *ebx) << 0x10;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
                eax = ~eax;
            }
        }
    } else {
        eax = *A18;
        eax = !(eax = eax - *ebx) ? 2147483647 : -2147483647;
    }
    *(A8 * 8 + 6713592) = eax;
    if(ecx != 0) {
        if(ecx < 0) {
            eax = *(A18 + 2);
            if(!(eax = eax - *(ebx + 2))) {
                eax = *(A18 + 2);
                eax = eax - *(ebx + 2) << 0x10;
                (save)ecx;
                ecx = ~ecx;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
                eax = ~eax;
            } else {
                eax = *(A18 + 2);
                eax = ~(eax - *(ebx + 2) << 0x10);
                (save)ecx;
                ecx = ~ecx;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                (restore)ecx;
            }
        } else {
            eax = *(A18 + 2);
            if(!(eax = eax - *(ebx + 2))) {
                eax = *(A18 + 2);
                eax = eax - *(ebx + 2) << 0x10;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
            } else {
                eax = *(A18 + 2);
                eax = ~(eax - *(ebx + 2)) << 0x10;
                asm("cdq");
                ecx = ecx / ecx;
                edx = ecx % ecx;
                eax = ~eax;
            }
        }
    } else {
        eax = *(A18 + 2);
        eax = !(eax = eax - *(ebx + 2)) ? 2147483647 : -2147483647;
    }
    *(A8 * 8 + 6713596) = eax;
    eax = *Ac << 0x10;
    *(A8 * 4 + 6713608) = eax;
    if(ecx != 0) {
        if(ecx < 0) {
            if(!(eax = *A14 - *Ac)) {
                eax = *A14 - *Ac << 0x10;
                ebx = ~ecx;
                asm("cdq");
                edx = ebx / ebx % ebx / ebx;
                eax = ~eax;
            } else {
                eax = ~( *A14 - *Ac << 0x10);
                ebx = ~ecx;
                asm("cdq");
                edx = ebx / ebx % ebx / ebx;
            }
        } else {
            if(!(eax = *A14 - *Ac)) {
                eax = *A14 - *Ac << 0x10;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
            } else {
                eax = ~( *A14 - *Ac) << 0x10;
                asm("cdq");
                edx = ecx / ecx % ecx / ecx;
                eax = ~eax;
            }
        }
    } else {
        eax = 2147483647;
        if(!(edx = *A14 - *Ac)) {
            eax = -2147483647;
        }
    }
    *(A8 * 4 + 6713616) = eax;
}

/*    Procedure: 0x004588F1 - 0x004588F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004588F1()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004588F4 - 0x0045895D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00458960()
 *        L004589A0()
 *        L00458ACC()
 *        L00458CA4()
 */

L004588F4(A8)
/* unknown */ void  A8;
{



    eax = L00457DBC(A8);
    if(*(eax + 2) == 0x40) {
        M00667120 = !( *eax & 1) ? 0x45922c : 0x458ef4;
        M0066711c = 0x503088;
    } else {
        M00667120 = !( *eax & 1) ? 0x4598a0 : 0x459568;
        M0066711c = 0x503098;
    }
    eax = eax + 8;
    M006670e4 = eax;
    return M006670e4;
}

/*    Procedure: 0x0045895E - 0x0045895F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045895E()
{



    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00458960 - 0x0045899E
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00461EA2()
 */

L00458960(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    L004588F4(A14 & 0xfff);
    eax = M0066711c;
    return L004589A0(A8, Ac, A10, eax, eax + 4, eax + 8, A14);
}

/*    Procedure: 0x0045899F - 0x0045899F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045899F()
{



}

/*    Procedure: 0x004589A0 - 0x004589D3
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00458960()
 *        L00461F07()
 *        L00461F85()
 */

L004589A0(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    L004588F4(A20 & 0xfff);
    return L004589D4(A8, Ac, A10, A14, A18, A1c);
}

/*    Procedure: 0x004589D4 - 0x00458ACB
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004589A0()
 */

L004589D4(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A10;
    edi = Ac;
    for(ebx = A8; 1; A1c = A14) {
        ax = *(ebx + 2);
        if(ax <= *(edi + 2) && ax <= *(esi + 2)) {
            break;
        }
        eax = ebx;
        ebx = edi;
        edi = esi;
        esi = eax;
        A14 = A18;
        A18 = A1c;
    }
    L004586C8(0, ebx, A14, edi, A18);
    L004586C8(1, ebx, A14, esi, A1c);
    M00667118 = *(ebx + 2);
    M00503078 = M00503078 + 1;
    ax = *(edi + 2);
    if(ax < *(esi + 2)) {
        eax = ax;
        *L00667120(eax - *(ebx + 2));
        L004586C8(0, edi, A18, esi, A1c);
        eax = *(esi + 2);
        eax = *L00667120(eax - *(edi + 2));
    } else {
        eax = *(esi + 2);
        *L00667120(eax - *(ebx + 2));
        L004586C8(1, esi, A1c, edi, A18);
        eax = *(edi + 2);
        eax = *L00667120(eax - *(esi + 2));
    }
    M00503078 = M00503078 - 1;
}

/*    Procedure: 0x00458ACC - 0x00458CA2
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00461D0C()
 */

L00458ACC(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    ebx = A18;
    eax = L004588F4(ebx & 0xfff);
    ebx = ebx >> 0xc & 7;
    if(ebx <= 7) {
        switch(ebx) {
            case 0:
L00458b17:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax, eax + 4, eax + 0xc, eax + 8);
            case 1:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax + 4, eax + 0xc, eax + 8, eax);
            case 2:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax + 0xc, eax + 8, eax, eax + 4);
            case 3:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax + 8, eax, eax + 4, eax + 0xc);
            case 4:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax, eax + 8, eax + 0xc, eax + 4);
            case 5:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax + 8, eax + 0xc, eax + 4, eax);
            case 6:
                eax = M0066711c;
                return L00458CE0(A8, Ac, A10, A14, eax + 0xc, eax + 4, eax, eax + 8);
            case 7:
                eax = M0066711c;
                eax = L00458CE0(A8, Ac, A10, A14, eax + 4, eax, eax + 8, eax + 0xc);
                goto L00458ca0;
        }
        goto L00458b17;
    }
L00458ca0:
}

/*    Procedure: 0x00458CA3 - 0x00458CA3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458CA3()
{



}

/*    Procedure: 0x00458CA4 - 0x00458CDF
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00461D76()
 *        L00461DFD()
 */

L00458CA4(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    L004588F4(A28 & 0xfff);
    return L00458CE0(A8, Ac, A10, A14, A18, A1c, A20, A24);
}

/*    Procedure: 0x00458CE0 - 0x00458EF0
 *    Argument size: 32
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00458ACC()
 *        L00458CA4()
 */

L00458CE0(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A10;
    edi = Ac;
    for(ebx = A8; 1; A24 = A18) {
        ax = *(ebx + 2);
        if(ax <= *(edi + 2) && ax <= *(esi + 2) && ax <= *(A14 + 2)) {
            break;
        }
        eax = ebx;
        ebx = edi;
        edi = esi;
        esi = A14;
        A14 = eax;
        A18 = A1c;
        A1c = A20;
        A20 = A24;
    }
    L004586C8(0, ebx, A18, edi, A1c);
    L004586C8(1, ebx, A18, A14, A24);
    M00667118 = *(ebx + 2);
    M00503078 = M00503078 + 1;
    ax = *(edi + 2);
    if(*(A14 + 2) > ax) {
        eax = ax;
        *L00667120(eax - *(ebx + 2));
        L004586C8(0, edi, A1c, esi, A20);
        ax = *(esi + 2);
        if(*(A14 + 2) > ax) {
            eax = ax;
            *L00667120(eax - *(edi + 2));
            L004586C8(0, esi, A20, A14, A24);
            eax = *L00667120( *(A14 + 2) - *(esi + 2));
        } else {
            *L00667120( *(A14 + 2) - *(edi + 2));
            L004586C8(1, A14, A24, esi, A20);
            eax = *(esi + 2);
            eax = *L00667120(eax - *(A14 + 2));
        }
    } else {
        *L00667120( *(A14 + 2) - *(ebx + 2));
        L004586C8(1, A14, A24, esi, A20);
        ax = *(edi + 2);
        if(ax < *(esi + 2)) {
            eax = ax;
            *L00667120(eax - *(A14 + 2));
            L004586C8(0, edi, A1c, esi, A20);
            eax = *(esi + 2);
            eax = *L00667120(eax - *(edi + 2));
        } else {
            eax = *(esi + 2);
            *L00667120(eax - *(A14 + 2));
            L004586C8(1, esi, A20, edi, A1c);
            eax = *(edi + 2);
            eax = *L00667120(eax - *(esi + 2));
        }
    }
    M00503078 = M00503078 - 1;
}

/*    Procedure: 0x00458EF1 - 0x0045922B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00458EF1()
{



    asm("xchg ebx,ebx");
    (save)ebp;
    ebp = esp;
    esp = esp - 0x14;
    (save)ebx;
    (save)esi;
    (save)edi;
    if(*(ebp + 8) <= 0 || M00667118 >= 0x9e || M00667118 + *(ebp + 8) <= 0) {
        eax = *(ebp + 8);
        asm("imul dword [0x667110]");
        M00667108 = M00667108 + eax;
        eax = *(ebp + 8);
        asm("imul dword [0x6670f8]");
        M006670e8 = M006670e8 + eax;
        eax = *(ebp + 8);
        asm("imul dword [0x6670fc]");
        M006670ec = M006670ec + eax;
        eax = *(ebp + 8);
        asm("imul dword [0x667114]");
        M0066710c = M0066710c + eax;
        eax = *(ebp + 8);
        asm("imul dword [0x667100]");
        M006670f0 = M006670f0 + eax;
        eax = *(ebp + 8);
        asm("imul dword [0x667104]");
        M006670f4 = M006670f4 + eax;
        eax = *(ebp + 8);
        M00667118 = M00667118 + eax;
    } else {
        eax = M00667118;
        if(eax < 0) {
            edx = M00667110;
            M00667108 = M00667108 - eax * eax;
            edx = ~eax;
            ecx = edx;
            M006670e8 = M006670e8 + M006670f8 * M006670f8;
            ecx = ~M00667118;
            ecx = edx;
            M006670ec = M006670ec + M006670fc * M006670fc;
            ecx = M00667114;
            M0066710c = M0066710c - eax * eax;
            ecx = ~M00667118;
            ecx = edx;
            M006670f0 = M006670f0 + M00667100 * M00667100;
            ecx = ~M00667118;
            M006670f4 = M006670f4 + M00667104 * M00667104;
            *(ebp + 8) = *(ebp + 8) + eax;
            eax = 0;
            M00667118 = 0;
        }
        do {
            if(M00667118 >= 0x9e) {
                break;
            }
            eax = M00667108;
            edx = M0066710c;
            if(eax >= edx) {
                *(ebp - 0xc) = edx >> 0x10;
                esi = M006670f0;
                edi = M006670f4;
                *(ebp - 0x10) = eax >> 0x10;
                eax = M006670e8;
                *(ebp - 0x14) = M006670ec;
            } else {
                *(ebp - 0xc) = eax >> 0x10;
                esi = M006670e8;
                edi = M006670ec;
                *(ebp - 0x10) = edx >> 0x10;
                eax = M006670f0;
                *(ebp - 0x14) = M006670f4;
            }
            ebx = *(ebp - 0x10) - *(ebp - 0xc);
            if(*(ebp - 0xc) < 0x140 && *(ebp - 0x10) > 0 && ebx > 0) {
                *(ebp - 4) = eax - esi;
                if(*(ebp - 4) <= 0) {
                    eax = ~( *(ebp - 4));
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    *(ebp - 4) = ~eax;
                } else {
                    eax = *(ebp - 4);
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    *(ebp - 4) = eax;
                }
                *(ebp - 8) = *(ebp - 0x14) - edi;
                if(*(ebp - 8) <= 0) {
                    eax = ~( *(ebp - 8));
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    *(ebp - 8) = ~eax;
                } else {
                    eax = *(ebp - 8);
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    *(ebp - 8) = eax;
                }
                if(*(ebp - 0xc) < 0) {
                    eax = *(ebp - 0xc);
                    asm("imul dword [ebp-0x4]");
                    esi = esi - eax;
                    eax = *(ebp - 0xc);
                    asm("imul dword [ebp-0x8]");
                    edi = edi - eax;
                    ebx = ebx + *(ebp - 0xc);
                    *(ebp - 0xc) = 0;
                }
                if(*(ebp - 0x10) > 0x140) {
                    ebx = 0x140 - *(ebp - 0xc);
                }
                eax = (M00667118 << 6) + (M00667118 << 6) * 4 + M00502e6c + *(ebp - 0xc);
                if(ebx > 0) {
                    do {
                        edx = esi >> 0x10;
                        ecx = M006670e4 + edx;
                        edx = edi >> 0xa & -64;
                        *eax = *(( *(ecx + edx) & 0xff) + 6746404);
                        eax = eax + 1;
                        esi = esi + *(ebp - 4);
                        edi = edi + *(ebp - 8);
                    } while(ebx = ebx - 1);
                }
            }
            M00667108 = M00667108 + M00667110;
            M0066710c = M0066710c + M00667114;
            M006670e8 = M006670e8 + M006670f8;
            M006670ec = M006670ec + M006670fc;
            M006670f0 = M006670f0 + M00667100;
            eax = M00667104;
            M006670f4 = M006670f4 + eax;
            M00667118 = M00667118 + 1;
            *(ebp + 8) = *(ebp + 8) - 1;
        } while(*(ebp + 8) != 0);
        if(*(ebp + 8) > 0) {
            eax = *(ebp + 8);
            asm("imul dword [0x667110]");
            M00667108 = M00667108 + eax;
            eax = *(ebp + 8);
            asm("imul dword [0x6670f8]");
            M006670e8 = M006670e8 + eax;
            eax = *(ebp + 8);
            asm("imul dword [0x6670fc]");
            M006670ec = M006670ec + eax;
            eax = *(ebp + 8);
            asm("imul dword [0x667114]");
            M0066710c = M0066710c + eax;
            eax = *(ebp + 8);
            asm("imul dword [0x667100]");
            M006670f0 = M006670f0 + eax;
            eax = *(ebp + 8);
            asm("imul dword [0x667104]");
            M006670f4 = M006670f4 + eax;
            eax = *(ebp + 8);
            M00667118 = M00667118 + eax;
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0045922C - 0x00459567
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 12
 */

L0045922C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(A8 <= 0 || M00667118 >= 0x9e || M00667118 + A8 <= 0) {
        eax = A8;
        asm("imul dword [0x667110]");
        M00667108 = M00667108 + eax;
        eax = A8;
        asm("imul dword [0x6670f8]");
        M006670e8 = M006670e8 + eax;
        eax = A8;
        asm("imul dword [0x6670fc]");
        M006670ec = M006670ec + eax;
        eax = A8;
        asm("imul dword [0x667114]");
        M0066710c = M0066710c + eax;
        eax = A8;
        asm("imul dword [0x667100]");
        M006670f0 = M006670f0 + eax;
        eax = A8;
        asm("imul dword [0x667104]");
        M006670f4 = M006670f4 + eax;
        eax = A8;
        M00667118 = M00667118 + eax;
    } else {
        eax = M00667118;
        if(eax < 0) {
            edx = M00667110;
            M00667108 = M00667108 - eax * eax;
            edx = ~eax;
            ecx = edx;
            M006670e8 = M006670e8 + M006670f8 * M006670f8;
            ecx = ~M00667118;
            ecx = edx;
            M006670ec = M006670ec + M006670fc * M006670fc;
            ecx = M00667114;
            M0066710c = M0066710c - eax * eax;
            ecx = ~M00667118;
            ecx = edx;
            M006670f0 = M006670f0 + M00667100 * M00667100;
            ecx = ~M00667118;
            M006670f4 = M006670f4 + M00667104 * M00667104;
            A8 = A8 + eax;
            eax = 0;
            M00667118 = 0;
        }
        do {
            if(M00667118 >= 0x9e) {
                break;
            }
            eax = M00667108;
            edx = M0066710c;
            if(eax >= edx) {
                Vfffffff4 = edx >> 0x10;
                esi = M006670f0;
                edi = M006670f4;
                Vfffffff0 = eax >> 0x10;
                eax = M006670e8;
                Vffffffec = M006670ec;
            } else {
                Vfffffff4 = eax >> 0x10;
                esi = M006670e8;
                edi = M006670ec;
                Vfffffff0 = edx >> 0x10;
                eax = M006670f0;
                Vffffffec = M006670f4;
            }
            ebx = Vfffffff0 - Vfffffff4;
            if(Vfffffff4 < 0x140 && Vfffffff0 > 0 && ebx > 0) {
                Vfffffffc = eax - esi;
                if(Vfffffffc <= 0) {
                    eax = ~Vfffffffc;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffffc = ~eax;
                } else {
                    eax = Vfffffffc;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffffc = eax;
                }
                Vfffffff8 = Vffffffec - edi;
                if(Vfffffff8 <= 0) {
                    eax = ~Vfffffff8;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffff8 = ~eax;
                } else {
                    eax = Vfffffff8;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffff8 = eax;
                }
                if(Vfffffff4 < 0) {
                    eax = Vfffffff4;
                    asm("imul dword [ebp-0x4]");
                    esi = esi - eax;
                    eax = Vfffffff4;
                    asm("imul dword [ebp-0x8]");
                    edi = edi - eax;
                    ebx = ebx + Vfffffff4;
                    Vfffffff4 = 0;
                }
                if(Vfffffff0 > 0x140) {
                    ebx = 0x140 - Vfffffff4;
                }
                eax = (M00667118 << 6) + (M00667118 << 6) * 4 + M00502e6c + Vfffffff4;
                if(ebx > 0) {
                    do {
                        edx = esi >> 0x10;
                        ecx = M006670e4 + edx;
                        edx = edi >> 0xa & -64;
                        if(*(ecx + edx) != 0) {
                            *eax = *((edx & 0xff) + 6746404);
                        }
                        eax = eax + 1;
                        esi = esi + Vfffffffc;
                        edi = edi + Vfffffff8;
                    } while(ebx = ebx - 1);
                }
            }
            M00667108 = M00667108 + M00667110;
            M0066710c = M0066710c + M00667114;
            M006670e8 = M006670e8 + M006670f8;
            M006670ec = M006670ec + M006670fc;
            M006670f0 = M006670f0 + M00667100;
            eax = M00667104;
            M006670f4 = M006670f4 + eax;
            M00667118 = M00667118 + 1;
            A8 = A8 - 1;
        } while(A8 != 0);
        if(A8 > 0) {
            eax = A8;
            asm("imul dword [0x667110]");
            M00667108 = M00667108 + eax;
            eax = A8;
            asm("imul dword [0x6670f8]");
            M006670e8 = M006670e8 + eax;
            eax = A8;
            asm("imul dword [0x6670fc]");
            M006670ec = M006670ec + eax;
            eax = A8;
            asm("imul dword [0x667114]");
            M0066710c = M0066710c + eax;
            eax = A8;
            asm("imul dword [0x667100]");
            M006670f0 = M006670f0 + eax;
            eax = A8;
            asm("imul dword [0x667104]");
            M006670f4 = M006670f4 + eax;
            eax = A8;
            M00667118 = M00667118 + eax;
        }
    }
}

/*    Procedure: 0x00459568 - 0x0045989F
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 12
 */

L00459568(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(A8 <= 0 || M00667118 >= 0x9e || M00667118 + A8 <= 0) {
        eax = A8;
        asm("imul dword [0x667110]");
        M00667108 = M00667108 + eax;
        eax = A8;
        asm("imul dword [0x6670f8]");
        M006670e8 = M006670e8 + eax;
        eax = A8;
        asm("imul dword [0x6670fc]");
        M006670ec = M006670ec + eax;
        eax = A8;
        asm("imul dword [0x667114]");
        M0066710c = M0066710c + eax;
        eax = A8;
        asm("imul dword [0x667100]");
        M006670f0 = M006670f0 + eax;
        eax = A8;
        asm("imul dword [0x667104]");
        M006670f4 = M006670f4 + eax;
        eax = A8;
        M00667118 = M00667118 + eax;
    } else {
        eax = M00667118;
        if(eax < 0) {
            edx = M00667110;
            M00667108 = M00667108 - eax * eax;
            edx = ~eax;
            ecx = edx;
            M006670e8 = M006670e8 + M006670f8 * M006670f8;
            ecx = ~M00667118;
            ecx = edx;
            M006670ec = M006670ec + M006670fc * M006670fc;
            ecx = M00667114;
            M0066710c = M0066710c - eax * eax;
            ecx = ~M00667118;
            ecx = edx;
            M006670f0 = M006670f0 + M00667100 * M00667100;
            ecx = ~M00667118;
            M006670f4 = M006670f4 + M00667104 * M00667104;
            A8 = A8 + eax;
            eax = 0;
            M00667118 = 0;
        }
        do {
            if(M00667118 >= 0x9e) {
                break;
            }
            eax = M00667108;
            edx = M0066710c;
            if(eax >= edx) {
                Vfffffff4 = edx >> 0x10;
                esi = M006670f0;
                edi = M006670f4;
                Vfffffff0 = eax >> 0x10;
                eax = M006670e8;
                Vffffffec = M006670ec;
            } else {
                Vfffffff4 = eax >> 0x10;
                esi = M006670e8;
                edi = M006670ec;
                Vfffffff0 = edx >> 0x10;
                eax = M006670f0;
                Vffffffec = M006670f4;
            }
            ebx = Vfffffff0 - Vfffffff4;
            if(Vfffffff4 < 0x140 && Vfffffff0 > 0 && ebx > 0) {
                Vfffffffc = eax - esi;
                if(Vfffffffc <= 0) {
                    eax = ~Vfffffffc;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffffc = ~eax;
                } else {
                    eax = Vfffffffc;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffffc = eax;
                }
                Vfffffff8 = Vffffffec - edi;
                if(Vfffffff8 <= 0) {
                    eax = ~Vfffffff8;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffff8 = ~eax;
                } else {
                    eax = Vfffffff8;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffff8 = eax;
                }
                if(Vfffffff4 < 0) {
                    eax = Vfffffff4;
                    asm("imul dword [ebp-0x4]");
                    esi = esi - eax;
                    eax = Vfffffff4;
                    asm("imul dword [ebp-0x8]");
                    edi = edi - eax;
                    ebx = ebx + Vfffffff4;
                    Vfffffff4 = 0;
                }
                if(Vfffffff0 > 0x140) {
                    ebx = 0x140 - Vfffffff4;
                }
                eax = (M00667118 << 6) + (M00667118 << 6) * 4 + M00502e6c + Vfffffff4;
                if(ebx > 0) {
                    do {
                        edx = esi >> 0x10;
                        ecx = M006670e4 + edx;
                        edx = edi >> 9 & -128;
                        *eax = *(( *(ecx + edx) & 0xff) + 6746404);
                        eax = eax + 1;
                        esi = esi + Vfffffffc;
                        edi = edi + Vfffffff8;
                    } while(ebx = ebx - 1);
                }
            }
            M00667108 = M00667108 + M00667110;
            M0066710c = M0066710c + M00667114;
            M006670e8 = M006670e8 + M006670f8;
            M006670ec = M006670ec + M006670fc;
            M006670f0 = M006670f0 + M00667100;
            eax = M00667104;
            M006670f4 = M006670f4 + eax;
            M00667118 = M00667118 + 1;
            A8 = A8 - 1;
        } while(A8 != 0);
        if(A8 > 0) {
            eax = A8;
            asm("imul dword [0x667110]");
            M00667108 = M00667108 + eax;
            eax = A8;
            asm("imul dword [0x6670f8]");
            M006670e8 = M006670e8 + eax;
            eax = A8;
            asm("imul dword [0x6670fc]");
            M006670ec = M006670ec + eax;
            eax = A8;
            asm("imul dword [0x667114]");
            M0066710c = M0066710c + eax;
            eax = A8;
            asm("imul dword [0x667100]");
            M006670f0 = M006670f0 + eax;
            eax = A8;
            asm("imul dword [0x667104]");
            M006670f4 = M006670f4 + eax;
            eax = A8;
            M00667118 = M00667118 + eax;
        }
    }
}

/*    Procedure: 0x004598A0 - 0x00459BDB
 *    Argument size: 4
 *    Local size: 20
 *    Save regs size: 12
 */

L004598A0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(A8 <= 0 || M00667118 >= 0x9e || M00667118 + A8 <= 0) {
        eax = A8;
        asm("imul dword [0x667110]");
        M00667108 = M00667108 + eax;
        eax = A8;
        asm("imul dword [0x6670f8]");
        M006670e8 = M006670e8 + eax;
        eax = A8;
        asm("imul dword [0x6670fc]");
        M006670ec = M006670ec + eax;
        eax = A8;
        asm("imul dword [0x667114]");
        M0066710c = M0066710c + eax;
        eax = A8;
        asm("imul dword [0x667100]");
        M006670f0 = M006670f0 + eax;
        eax = A8;
        asm("imul dword [0x667104]");
        M006670f4 = M006670f4 + eax;
        eax = A8;
        M00667118 = M00667118 + eax;
    } else {
        eax = M00667118;
        if(eax < 0) {
            edx = M00667110;
            M00667108 = M00667108 - eax * eax;
            edx = ~eax;
            ecx = edx;
            M006670e8 = M006670e8 + M006670f8 * M006670f8;
            ecx = ~M00667118;
            ecx = edx;
            M006670ec = M006670ec + M006670fc * M006670fc;
            ecx = M00667114;
            M0066710c = M0066710c - eax * eax;
            ecx = ~M00667118;
            ecx = edx;
            M006670f0 = M006670f0 + M00667100 * M00667100;
            ecx = ~M00667118;
            M006670f4 = M006670f4 + M00667104 * M00667104;
            A8 = A8 + eax;
            eax = 0;
            M00667118 = 0;
        }
        do {
            if(M00667118 >= 0x9e) {
                break;
            }
            eax = M00667108;
            edx = M0066710c;
            if(eax >= edx) {
                Vfffffff4 = edx >> 0x10;
                esi = M006670f0;
                edi = M006670f4;
                Vfffffff0 = eax >> 0x10;
                eax = M006670e8;
                Vffffffec = M006670ec;
            } else {
                Vfffffff4 = eax >> 0x10;
                esi = M006670e8;
                edi = M006670ec;
                Vfffffff0 = edx >> 0x10;
                eax = M006670f0;
                Vffffffec = M006670f4;
            }
            ebx = Vfffffff0 - Vfffffff4;
            if(Vfffffff4 < 0x140 && Vfffffff0 > 0 && ebx > 0) {
                Vfffffffc = eax - esi;
                if(Vfffffffc <= 0) {
                    eax = ~Vfffffffc;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffffc = ~eax;
                } else {
                    eax = Vfffffffc;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffffc = eax;
                }
                Vfffffff8 = Vffffffec - edi;
                if(Vfffffff8 <= 0) {
                    eax = ~Vfffffff8;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffff8 = ~eax;
                } else {
                    eax = Vfffffff8;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    Vfffffff8 = eax;
                }
                if(Vfffffff4 < 0) {
                    eax = Vfffffff4;
                    asm("imul dword [ebp-0x4]");
                    esi = esi - eax;
                    eax = Vfffffff4;
                    asm("imul dword [ebp-0x8]");
                    edi = edi - eax;
                    ebx = ebx + Vfffffff4;
                    Vfffffff4 = 0;
                }
                if(Vfffffff0 > 0x140) {
                    ebx = 0x140 - Vfffffff4;
                }
                eax = (M00667118 << 6) + (M00667118 << 6) * 4 + M00502e6c + Vfffffff4;
                if(ebx > 0) {
                    do {
                        edx = esi >> 0x10;
                        ecx = M006670e4 + edx;
                        edx = edi >> 9 & -128;
                        if(*(ecx + edx) != 0) {
                            *eax = *((edx & 0xff) + 6746404);
                        }
                        eax = eax + 1;
                        esi = esi + Vfffffffc;
                        edi = edi + Vfffffff8;
                    } while(ebx = ebx - 1);
                }
            }
            M00667108 = M00667108 + M00667110;
            M0066710c = M0066710c + M00667114;
            M006670e8 = M006670e8 + M006670f8;
            M006670ec = M006670ec + M006670fc;
            M006670f0 = M006670f0 + M00667100;
            eax = M00667104;
            M006670f4 = M006670f4 + eax;
            M00667118 = M00667118 + 1;
            A8 = A8 - 1;
        } while(A8 != 0);
        if(A8 > 0) {
            eax = A8;
            asm("imul dword [0x667110]");
            M00667108 = M00667108 + eax;
            eax = A8;
            asm("imul dword [0x6670f8]");
            M006670e8 = M006670e8 + eax;
            eax = A8;
            asm("imul dword [0x6670fc]");
            M006670ec = M006670ec + eax;
            eax = A8;
            asm("imul dword [0x667114]");
            M0066710c = M0066710c + eax;
            eax = A8;
            asm("imul dword [0x667100]");
            M006670f0 = M006670f0 + eax;
            eax = A8;
            asm("imul dword [0x667104]");
            M006670f4 = M006670f4 + eax;
            eax = A8;
            M00667118 = M00667118 + eax;
        }
    }
}

/*    Procedure: 0x00459BDC - 0x00459C37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459BDC()
{



    asm("pusha");
    (save)es;
    (save)ds;
    ax = 0x1234;
    ds = 0x1234;
    es = 0x1234;
    eax = 305419896;
    if(!( *L12345678 = *L12345678 - 1)) {
        *(eax + 4) = esp;
        *(eax + 8) = ss;
        *(eax + 0xc) = eax + 8212;
        *(eax + 0x10) = 0x1234;
        asm("lss esp,[eax+0xc]");
        eax = L01459c0a();
        edx = 305419896;
        asm("lss esp,[edx+0x4]");
        *edx = *edx + 1;
        (restore)ds;
        (restore)es;
        asm("popa");
        if(eax != 0) {
            goto L00000000;
        }
        asm("iret");
    }
    *eax = *eax + 1;
    al = 0x20;
    asm("out 0x20,al");
    (restore)ds;
    (restore)es;
    asm("popa");
    asm("iret");
    goto L00000000;
}

/*    Procedure: 0x00459C38 - 0x00459CE9
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0044F8D0()
 */

L00459C38(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = L0047777C(M005030ac);
    L0044AE51(ebx, M005030ac);
    esi = L0047777C(8212);
    L0044AE51(esi, 8212);
    if(ebx != 0 && esi != 0) {
        L00471128(ebx, 0x459bdc, M005030ac);
        *(ebx + M005030b0) = Ac;
        eax = M005030b4 + ebx + 4;
        edx = A8 - eax;
        *(ebx + M005030b4) = edx;
        *(ebx + M005030b8) = A14;
        *(ebx + M005030b8 + 4) = A10;
        *esi = 1;
        *(ebx + M005030bc) = esi;
        *(ebx + M005030c0) = esi;
    }
    return ebx;
}

/*    Procedure: 0x00459CEA - 0x00459CEB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459CEA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00459CEC - 0x00459D35
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00428244()
 *        L0042907C()
 *        L0042B314()
 *        L004325FC()
 *        L00433BA4()
 *        L0045122F()
 *        L00453264()
 *        L004536D2()
 *        L00462528()
 *        L00462720()
 *        L00462760()
 *        L00462A34()
 *        L00462A70()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 *        L0046D648()
 */

L00459CEC(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax >= 65536) {
        eax = eax >> 0x10;
        edx = 0x10;
    } else {
        edx = 0;
    }
    if(eax >= 0x100) {
        eax = eax >> 8;
        edx = edx + 8;
    }
    if(eax >= 0x10) {
        eax = eax >> 4;
        edx = edx + 4;
    }
    if(eax >= 4) {
        eax = eax >> 2;
        edx = edx + 2;
    }
    if(eax >= 2) {
        return edx + 1;
    }
    return edx;
}

/*    Procedure: 0x00459D36 - 0x00459D37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459D36()
{



}

/*    Procedure: 0x00459D38 - 0x00459E06
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00459E08()
 *        L0045B2CC()
 */

L00459D38(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    eax = A8;
    edx = *(eax + 4);
    if(edx != 0 && (edx = edx + 1)) {
        goto L00459d5d;
    }
    ecx = *(eax + 0xc);
    if(ecx != 0 && (ecx = ecx + 1)) {
        goto L00459d5d;
    }
    esi = *(eax + 0x14);
    if(esi != 0) {
        if(esi = esi + 1) {
            goto L00459d98;
        }
L00459d5d:
        edx = *(eax + 4) < 0 ? ~( *(eax + 4)) : *(eax + 4);
        ecx = *(eax + 0xc) < 0 ? ~( *(eax + 0xc)) : *(eax + 0xc);
        edx = edx | ecx;
        ecx = *(eax + 0x14) < 0 ? ~( *(eax + 0x14)) : *(eax + 0x14);
        edx = edx | ecx;
        eax = 0x20;
    } else {
L00459d98:
        edx = *(eax + 4) < 0 ? ~( *eax) : *eax;
        ecx = *(eax + 0xc) < 0 ? ~( *(eax + 8)) : *(eax + 8);
        edx = edx | ecx;
        ecx = *(eax + 0x14) < 0 ? ~( *(eax + 0x10)) : *(eax + 0x10);
        edx = edx | ecx;
        eax = 0;
    }
    if(edx > 65535) {
        edx = edx >> 0x10;
        eax = eax + 0x10;
    }
    if(edx > 0xff) {
        edx = edx >> 8;
        eax = eax + 8;
    }
    if(edx > 0xf) {
        edx = edx >> 4;
        eax = eax + 4;
    }
    if(edx > 3) {
        edx = edx >> 2;
        eax = eax + 2;
    }
    if(edx > 1) {
        eax = eax + 1;
    }
}

/*    Procedure: 0x00459E07 - 0x00459E07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459E07()
{



}

/*    Procedure: 0x00459E08 - 0x00459E33
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041DFB0()
 *        L00427724()
 *        L004277A8()
 *        L00427898()
 *        L00428550()
 *        L00429824()
 *        L004298A8()
 *        L0042A718()
 *        L0042E38F()
 *        L00431A7C()
 *        L00431AFC()
 *        L00431B8C()
 *        L00453CC8()
 *        L0045B128()
 */

L00459E08(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = L00459D38(A8) - Ac;
    if(ebx <= 0) {
        eax = 0;
    } else {
        L00459F90(A8, ebx);
        eax = ebx;
    }
}

/*    Procedure: 0x00459E34 - 0x00459EA2
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 */

L00459E34(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A10;
    esi = *eax;
    *Ac = *A14 * *A14;
    esi = *(eax + 4);
    esi = *(A14 + 0xc) * *(A14 + 0xc) + *Ac;
    edi = *(eax + 8);
    *A8 = esi + *(A14 + 0x18) * *(A14 + 0x18);
    esi = *eax;
    *(Ac + 4) = *(A14 + 4) * *(A14 + 4);
    esi = *(eax + 4);
    esi = *(A14 + 0x10) * *(A14 + 0x10) + *(Ac + 4);
    edi = *(eax + 8);
    *(A8 + 4) = esi + *(A14 + 0x1c) * *(A14 + 0x1c);
    esi = *eax;
    *(Ac + 8) = *(A14 + 8) * *(A14 + 8);
    esi = *(eax + 4);
    esi = *(A14 + 0x14) * *(A14 + 0x14) + *(Ac + 8);
    eax = *(eax + 8);
    asm("imul dword [edx+0x20]");
    *(A8 + 8) = esi + eax;
}

/*    Procedure: 0x00459EA3 - 0x00459F16
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459EA3()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = *(ebp + 0x10);
    eax = *(ebp + 0xc);
    ecx = *(ebp + 8);
    ebx = *eax;
    esi = ebx;
    esi = *edx * *edx;
    edi = *(eax + 4);
    esi = esi + *(edx + 0xc) * *(edx + 0xc);
    edi = *(eax + 8);
    *(ebp - 4) = esi + *(edx + 0x18) * *(edx + 0x18);
    esi = ebx;
    esi = *(edx + 4) * *(edx + 4);
    edi = *(eax + 4);
    esi = esi + *(edx + 0x10) * *(edx + 0x10);
    edi = *(eax + 8);
    *(ebp - 8) = esi + *(edx + 0x1c) * *(edx + 0x1c);
    ebx = *(edx + 8) * *(edx + 8);
    esi = *(eax + 4);
    ebx = ebx + *(edx + 0x14) * *(edx + 0x14);
    eax = *(eax + 8);
    asm("imul dword [edx+0x20]");
    *(ecx + 8) = ebx + eax;
    *ecx = *(ebp - 4);
    eax = *(ebp - 8);
    *(ecx + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00459F17 - 0x00459F8C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459F17()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = *(ebp + 0xc);
    eax = *(ebp + 8);
    ecx = *eax;
    esi = ecx;
    esi = *edx * *edx;
    ebx = *(eax + 4);
    edi = ebx;
    esi = esi + *(edx + 4) * *(edx + 4);
    edi = *(eax + 8);
    *(ebp - 4) = esi + *(edx + 8) * *(edx + 8) + esi + *(edx + 8) * *(edx + 8);
    esi = ecx;
    esi = *(edx + 0xc) * *(edx + 0xc);
    edi = ebx;
    esi = esi + *(edx + 0x10) * *(edx + 0x10);
    edi = *(eax + 8);
    *(ebp - 8) = esi + *(edx + 0x14) * *(edx + 0x14) + esi + *(edx + 0x14) * *(edx + 0x14);
    ecx = *(edx + 0x18) * *(edx + 0x18);
    ecx = ecx + *(edx + 0x1c) * *(edx + 0x1c);
    ebx = *(eax + 8);
    *(eax + 8) = ecx + *(edx + 0x20) * *(edx + 0x20) + ecx + *(edx + 0x20) * *(edx + 0x20);
    *eax = *(ebp - 4);
    *(eax + 4) = *(ebp - 8);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00459F8D - 0x00459F8F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00459F8D()
{



}

/*    Procedure: 0x00459F90 - 0x0045A040
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00428244()
 *        L00453648()
 *        L00459E08()
 *        L0045B2CC()
 */

L00459F90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(Ac != 0) {
        if(Ac < 0x20) {
            ebx = 0x20 - Ac;
            ecx = ebx;
            esi = *(A8 + 4) << cl;
            ecx = Ac;
            *A8 = esi | *A8 >> cl;
            ecx = Ac;
            *(A8 + 4) = *(A8 + 4) >> cl;
            ecx = ebx;
            esi = *(A8 + 0xc) << cl;
            ecx = Ac;
            *(A8 + 8) = esi | *(A8 + 8) >> cl;
            ecx = Ac;
            *(A8 + 0xc) = *(A8 + 0xc) >> cl;
            ecx = ebx;
            ebx = *(A8 + 0x14) << cl;
            ecx = Ac;
            *(A8 + 0x10) = ebx | *(A8 + 0x10) >> cl;
            *(A8 + 0x14) = *(A8 + 0x14) >> Ac;
        } else {
            if(Ac > 0x20) {
                ebx = Ac - 0x20;
                ecx = ebx;
                *A8 = *(A8 + 4) >> cl;
                ecx = ebx;
                *(A8 + 8) = *(A8 + 0xc) >> cl;
                ecx = ebx;
                *(A8 + 0x10) = *(A8 + 0x14) >> cl;
            } else {
                *A8 = *(A8 + 4);
                *(A8 + 8) = *(A8 + 0xc);
                *(A8 + 0x10) = *(A8 + 0x14);
            }
            *(A8 + 4) = *(A8 + 4) >> 0x1f;
            *(A8 + 0xc) = *(A8 + 0xc) >> 0x1f;
            *(A8 + 0x14) = *(A8 + 0x14) >> 0x1f;
        }
    }
}

/*    Procedure: 0x0045A041 - 0x0045A043
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A041()
{



}

/*    Procedure: 0x0045A044 - 0x0045A095
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041C617()
 *        L0041E2FC()
 *        L0042CF1A()
 *        L0042D4AA()
 *        L0042D862()
 *        L0042DA37()
 *        L0042DC8F()
 *        L00431D4C()
 *        L0043FC74()
 *        L00441C98()
 *        L00441DB4()
 *        L00453264()
 *        L0045B128()
 *        L0046125B()
 */

L0045A044(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save) *(Ac + 4);
    L0044EB4E(A8, *A8, *(A8 + 4), *Ac);
    (save) *(Ac + 0xc);
    L0044EB4E(A8 + 8, *(A8 + 8), *(A8 + 0xc), *(Ac + 8));
    (save) *(Ac + 0x14);
    return L0044EB4E(A8 + 0x10, *(A8 + 0x10), *(A8 + 0x14), *(Ac + 0x10));
}

/*    Procedure: 0x0045A096 - 0x0045A097
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A096()
{



}

/*    Procedure: 0x0045A098 - 0x0045A0E9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00427498()
 *        L0042DA37()
 *        L0042DC8F()
 *        L0042E38F()
 *        L00431A38()
 *        L00431D4C()
 *        L0045B21F()
 */

L0045A098(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save) *(Ac + 4);
    L0044EB80(A8, *A8, *(A8 + 4), *Ac);
    (save) *(Ac + 0xc);
    L0044EB80(A8 + 8, *(A8 + 8), *(A8 + 0xc), *(Ac + 8));
    (save) *(Ac + 0x14);
    return L0044EB80(A8 + 0x10, *(A8 + 0x10), *(A8 + 0x14), *(Ac + 0x10));
}

/*    Procedure: 0x0045A0EA - 0x0045A0EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A0EA()
{



}

/*    Procedure: 0x0045A0EC - 0x0045A150
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00431D4C()
 *        L0045B21F()
 */

L0045A0EC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save) *(Ac + 4);
    L0044EB80(A8, M005030d0, M005030d4, *Ac);
    (save) *(Ac + 0xc);
    L0044EB80(A8 + 8, M005030d0, M005030d4, *(Ac + 8));
    (save) *(Ac + 0x14);
    return L0044EB80(A8 + 0x10, M005030d0, M005030d4, *(Ac + 0x10));
}

/*    Procedure: 0x0045A151 - 0x0045A153
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A151()
{



}

/*    Procedure: 0x0045A154 - 0x0045A194
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00427898()
 */

L0045A154(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L0044EB18(A8, *Ac, *(Ac + 4));
    L0044EB18(A8 + 8, *(Ac + 8), *(Ac + 0xc));
    return L0044EB18(A8 + 0x10, *(Ac + 0x10), *(Ac + 0x14));
}

/*    Procedure: 0x0045A195 - 0x0045A197
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A195()
{



}

/*    Procedure: 0x0045A198 - 0x0045A1D8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045B2CC()
 *        L004611E2()
 */

L0045A198(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    *A8 = *Ac;
    *(A8 + 0x10) = *(Ac + 0x10);
    *(A8 + 0x20) = *(Ac + 0x20);
    ecx = *(Ac + 4);
    *(A8 + 4) = *(Ac + 0xc);
    *(A8 + 0xc) = ecx;
    ecx = *(Ac + 8);
    *(A8 + 8) = *(Ac + 0x18);
    *(A8 + 0x18) = ecx;
    ecx = *(Ac + 0x14);
    *(A8 + 0x14) = *(Ac + 0x1c);
    *(A8 + 0x1c) = ecx;
}

/*    Procedure: 0x0045A1D9 - 0x0045A2FC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045A1D9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    ebx = *eax;
    ebx = *A10 * *A10;
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 8);
    *A8 = ebx + *(A10 + 0x18) * *(A10 + 0x18) >> 0xf;
    ebx = *eax;
    ebx = *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 8);
    *(A8 + 4) = ebx + *(A10 + 0x1c) * *(A10 + 0x1c) >> 0xf;
    ebx = *eax;
    ebx = *(A10 + 8) * *(A10 + 8);
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0x14) * *(A10 + 0x14);
    esi = *(eax + 8);
    *(A8 + 8) = ebx + *(A10 + 0x20) * *(A10 + 0x20) >> 0xf;
    ebx = *(eax + 0xc);
    ebx = *A10 * *A10;
    esi = *(eax + 0x10);
    ebx = ebx + *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 0x14);
    *(A8 + 0xc) = ebx + *(A10 + 0x18) * *(A10 + 0x18) >> 0xf;
    ebx = *(eax + 0xc);
    ebx = *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 0x10);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 0x14);
    *(A8 + 0x10) = ebx + *(A10 + 0x1c) * *(A10 + 0x1c) >> 0xf;
    ebx = *(eax + 0xc);
    ebx = *(A10 + 8) * *(A10 + 8);
    esi = *(eax + 0x10);
    ebx = ebx + *(A10 + 0x14) * *(A10 + 0x14);
    esi = *(eax + 0x14);
    *(A8 + 0x14) = ebx + *(A10 + 0x20) * *(A10 + 0x20) >> 0xf;
    ebx = *(eax + 0x18);
    ebx = *A10 * *A10;
    esi = *(eax + 0x1c);
    ebx = ebx + *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 0x20);
    *(A8 + 0x18) = ebx + *(A10 + 0x18) * *(A10 + 0x18) >> 0xf;
    ebx = *(eax + 0x18);
    ebx = *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 0x1c);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 0x20);
    *(A8 + 0x1c) = ebx + *(A10 + 0x1c) * *(A10 + 0x1c) >> 0xf;
    ebx = *(eax + 0x18);
    ebx = *(A10 + 8) * *(A10 + 8);
    esi = *(eax + 0x1c);
    ebx = ebx + *(A10 + 0x14) * *(A10 + 0x14);
    eax = *(eax + 0x20);
    asm("imul dword [edx+0x20]");
    *(A8 + 0x20) = ebx + eax >> 0xf;
}

/*    Procedure: 0x0045A2FD - 0x0045A420
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045A2FD(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    ebx = *eax;
    ebx = *A10 * *A10;
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 8);
    *A8 = ebx + *(A10 + 8) * *(A10 + 8) >> 0xf;
    ebx = *eax;
    ebx = *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 8);
    *(A8 + 4) = ebx + *(A10 + 0x14) * *(A10 + 0x14) >> 0xf;
    ebx = *eax;
    ebx = *(A10 + 0x18) * *(A10 + 0x18);
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0x1c) * *(A10 + 0x1c);
    esi = *(eax + 8);
    *(A8 + 8) = ebx + *(A10 + 0x20) * *(A10 + 0x20) >> 0xf;
    ebx = *(eax + 0xc);
    ebx = *A10 * *A10;
    esi = *(eax + 0x10);
    ebx = ebx + *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 0x14);
    *(A8 + 0xc) = ebx + *(A10 + 8) * *(A10 + 8) >> 0xf;
    ebx = *(eax + 0xc);
    ebx = *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 0x10);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 0x14);
    *(A8 + 0x10) = ebx + *(A10 + 0x14) * *(A10 + 0x14) >> 0xf;
    ebx = *(eax + 0xc);
    ebx = *(A10 + 0x18) * *(A10 + 0x18);
    esi = *(eax + 0x10);
    ebx = ebx + *(A10 + 0x1c) * *(A10 + 0x1c);
    esi = *(eax + 0x14);
    *(A8 + 0x14) = ebx + *(A10 + 0x20) * *(A10 + 0x20) >> 0xf;
    ebx = *(eax + 0x18);
    ebx = *A10 * *A10;
    esi = *(eax + 0x1c);
    ebx = ebx + *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 0x20);
    *(A8 + 0x18) = ebx + *(A10 + 8) * *(A10 + 8) >> 0xf;
    ebx = *(eax + 0x18);
    ebx = *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 0x1c);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 0x20);
    *(A8 + 0x1c) = ebx + *(A10 + 0x14) * *(A10 + 0x14) >> 0xf;
    ebx = *(eax + 0x18);
    ebx = *(A10 + 0x18) * *(A10 + 0x18);
    esi = *(eax + 0x1c);
    ebx = ebx + *(A10 + 0x1c) * *(A10 + 0x1c);
    eax = *(eax + 0x20);
    asm("imul dword [edx+0x20]");
    *(A8 + 0x20) = ebx + eax >> 0xf;
}

/*    Procedure: 0x0045A421 - 0x0045A49F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A421()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = *(ebp + 0x10);
    eax = *(ebp + 0xc);
    ecx = *(ebp + 8);
    ebx = *eax;
    esi = ebx;
    esi = *edx * *edx;
    edi = *(eax + 4);
    esi = esi + *(edx + 0xc) * *(edx + 0xc);
    edi = *(eax + 8);
    *(ebp - 4) = esi + *(edx + 0x18) * *(edx + 0x18) >> 0xf;
    esi = ebx;
    esi = *(edx + 4) * *(edx + 4);
    edi = *(eax + 4);
    esi = esi + *(edx + 0x10) * *(edx + 0x10);
    edi = *(eax + 8);
    *(ebp - 8) = esi + *(edx + 0x1c) * *(edx + 0x1c) >> 0xf;
    ebx = *(edx + 8) * *(edx + 8);
    esi = *(eax + 4);
    ebx = ebx + *(edx + 0x14) * *(edx + 0x14);
    eax = *(eax + 8);
    asm("imul dword [edx+0x20]");
    *(ecx + 8) = ebx + eax >> 0xf;
    *ecx = *(ebp - 4);
    eax = *(ebp - 8);
    *(ecx + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045A4A0 - 0x0045A51B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A4A0()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = *(ebp + 0x10);
    eax = *(ebp + 0xc);
    ecx = *(ebp + 8);
    ebx = *eax;
    esi = ebx;
    esi = *edx * *edx;
    edi = *(eax + 4);
    esi = esi + *(edx + 4) * *(edx + 4);
    edi = *(eax + 8);
    *(ebp - 4) = esi + *(edx + 8) * *(edx + 8) >> 0xf;
    esi = ebx;
    esi = *(edx + 0xc) * *(edx + 0xc);
    edi = *(eax + 4);
    esi = esi + *(edx + 0x10) * *(edx + 0x10);
    edi = *(eax + 8);
    *(ebp - 8) = esi + *(edx + 0x14) * *(edx + 0x14) >> 0xf;
    ebx = *(edx + 0x18) * *(edx + 0x18);
    esi = *(eax + 4);
    ebx = ebx + *(edx + 0x1c) * *(edx + 0x1c);
    eax = *(eax + 8);
    asm("imul dword [edx+0x20]");
    *(ecx + 8) = ebx + eax >> 0xf;
    *ecx = *(ebp - 4);
    eax = *(ebp - 8);
    *(ecx + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045A51C - 0x0045A551
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045B2CC()
 *        L0045BF8C()
 *        L0045C1C0()
 *        L0045E738()
 *        L00460C2B()
 */

L0045A51C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = Ac;
    ebx = A8;
    if(ecx > 0) {
        do {
            ecx = ecx >> 1;
            ebx = ebx >> 1;
        } while(ecx > 32767);
    }
    if(ecx != 0) {
        eax = ebx << 8;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        return;
    }
    return ebx;
}

/*    Procedure: 0x0045A552 - 0x0045A5D9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045A552(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 0x18) = L00470ADC(Ac);
    *(A8 + 0x10) = L00470ADC(A10);
    *(A8 + 0x20) = L00470ADC(Ac + 16384);
    *(A8 + 4) = L00470ADC(A10 + 16384);
    *(A8 + 0x1c) = 0;
    eax = *(A8 + 0x18);
    asm("imul dword [ebx+0x10]");
    *(A8 + 8) = eax >> 0xf;
    eax = *(A8 + 0x20);
    asm("imul dword [ebx+0x4]");
    *(A8 + 0xc) = eax >> 0xf;
    eax = *(A8 + 0x18);
    asm("imul dword [ebx+0x4]");
    *(A8 + 0x14) = ~(eax >> 0xf);
    eax = *(A8 + 0x10);
    asm("imul dword [ebx+0x20]");
    eax = ~(eax >> 0xf);
    *A8 = eax;
    *(A8 + 0x20) = ~( *(A8 + 0x20));
    *(A8 + 0x18) = ~( *(A8 + 0x18));
    return *A8;
}

/*    Procedure: 0x0045A5DA - 0x0045A65B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045A5DA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 4) = L00470ADC(Ac);
    *(A8 + 0x18) = L00470ADC(A10);
    *(A8 + 0x10) = L00470ADC(Ac + 16384);
    *(A8 + 0x20) = L00470ADC(A10 + 16384);
    *(A8 + 0x1c) = 0;
    eax = *(A8 + 4);
    asm("imul dword [ebx+0x18]");
    *(A8 + 0x14) = eax >> 0xf;
    eax = *(A8 + 0x10);
    asm("imul dword [ebx+0x20]");
    *A8 = eax >> 0xf;
    eax = *(A8 + 4);
    asm("imul dword [ebx+0x20]");
    *(A8 + 0xc) = ~(eax >> 0xf);
    eax = *(A8 + 0x18);
    asm("imul dword [ebx+0x10]");
    eax = ~(eax >> 0xf);
    *(A8 + 8) = eax;
    return *(A8 + 8);
}

/*    Procedure: 0x0045A65C - 0x0045A6BB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045A65C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    ebx = *eax;
    ebx = *A10 * *A10;
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0xc) * *(A10 + 0xc);
    esi = *(eax + 8);
    *A8 = ebx + *(A10 + 0x18) * *(A10 + 0x18);
    ebx = *eax;
    ebx = *(A10 + 4) * *(A10 + 4);
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0x10) * *(A10 + 0x10);
    esi = *(eax + 8);
    *(A8 + 4) = ebx + *(A10 + 0x1c) * *(A10 + 0x1c);
    ebx = *eax;
    ebx = *(A10 + 8) * *(A10 + 8);
    esi = *(eax + 4);
    ebx = ebx + *(A10 + 0x14) * *(A10 + 0x14);
    eax = *(eax + 8);
    asm("imul dword [edx+0x20]");
    *(A8 + 8) = ebx + eax;
}

/*    Procedure: 0x0045A6BC - 0x0045A7A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A6BC()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 0xc);
    edi = *(ebp + 8);
    (save) *esi << 0x10;
    (save)L004537B0( *ebx);
    (save) *(esi + 0xc) << 0x10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x18) << 0x10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 4) = edx + eax;
    (save) *(esi + 4) << 0x10;
    (save)L004537B0( *ebx);
    (save) *(esi + 0x10) << 0x10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x1c) << 0x10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 8) = edx + eax;
    (save) *(esi + 8) << 0x10;
    (save)L004537B0( *ebx);
    (save) *(esi + 0x14) << 0x10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x20) << 0x10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(edi + 8) = edx + eax;
    *edi = *(ebp - 4);
    eax = *(ebp - 8);
    *(edi + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045A7A8 - 0x0045A878
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004277A8()
 *        L004287E4()
 *        L0042C7C4()
 *        L0042CBE4()
 *        L0042F03E()
 *        L0042F42D()
 *        L00431A7C()
 *        L00431B8C()
 *        L00431D4C()
 *        L00433318()
 *        L00434A50()
 *        L00436FCA()
 *        L0045B128()
 *        L0046008C()
 */

L0045A7A8()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 0xc);
    edi = *(ebp + 8);
    (save) *esi;
    (save)L004537B0( *ebx);
    (save) *(esi + 0xc);
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x18);
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 4) = edx + eax;
    (save) *(esi + 4);
    (save)L004537B0( *ebx);
    (save) *(esi + 0x10);
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x1c);
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 8) = edx + eax;
    (save) *(esi + 8);
    (save)L004537B0( *ebx);
    (save) *(esi + 0x14);
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x20);
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(edi + 8) = edx + eax;
    *edi = *(ebp - 4);
    eax = *(ebp - 8);
    *(edi + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045A879 - 0x0045A967
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045A879()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 0xc);
    edi = *(ebp + 8);
    (save) *esi << 0x10;
    (save)L004537B0( *ebx);
    (save) *(esi + 4) << 0x10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 8) << 0x10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 4) = edx + eax;
    (save) *(esi + 0xc) << 0x10;
    (save)L004537B0( *ebx);
    (save) *(esi + 0x10) << 0x10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x14) << 0x10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 8) = edx + eax;
    (save) *(esi + 0x18) << 0x10;
    (save)L004537B0( *ebx);
    (save) *(esi + 0x1c) << 0x10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x20) << 0x10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(edi + 8) = edx + eax;
    *edi = *(ebp - 4);
    eax = *(ebp - 8);
    *(edi + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045A968 - 0x0045AA38
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041DFB0()
 *        L00427724()
 *        L00428550()
 *        L004298A8()
 *        L00429C28()
 *        L0042AC82()
 *        L0042AD7E()
 *        L00431AFC()
 *        L00431D4C()
 *        L004325FC()
 *        L00453C40()
 *        L0045B2CC()
 *        L0045B874()
 */

L0045A968()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 0xc);
    edi = *(ebp + 8);
    (save) *esi;
    (save)L004537B0( *ebx);
    (save) *(esi + 4);
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 8);
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 4) = edx + eax;
    (save) *(esi + 0xc);
    (save)L004537B0( *ebx);
    (save) *(esi + 0x10);
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x14);
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebp - 8) = edx + eax;
    (save) *(esi + 0x18);
    (save)L004537B0( *ebx);
    (save) *(esi + 0x1c);
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    (save)edx + eax;
    (save) *(esi + 0x20);
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(edi + 8) = edx + eax;
    *edi = *(ebp - 4);
    eax = *(ebp - 8);
    *(edi + 4) = eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045AA39 - 0x0045AA3B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045AA39()
{



}

/*    Procedure: 0x0045AA3C - 0x0045AB08
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00451BEC()
 */

L0045AA3C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    (save) *A14;
    *Ac = L004537B0( *A10);
    (save) *(A14 + 0xc);
    (save)L004537B0( *(A10 + 4)) + *Ac;
    (save) *(A14 + 0x18);
    A8 = L004537B0( *(A10 + 8));
    (restore)edx;
    edx = edx + A8;
    *A8 = edx;
    (save) *(A14 + 4);
    *(Ac + 4) = L004537B0( *A10);
    (save) *(A14 + 0x10);
    (save)L004537B0( *(A10 + 4)) + *(Ac + 4);
    (save) *(A14 + 0x1c);
    A8 = L004537B0( *(A10 + 8));
    (restore)edx;
    edx = edx + A8;
    *(A8 + 4) = edx;
    (save) *(A14 + 8);
    *(Ac + 8) = L004537B0( *A10);
    (save) *(A14 + 0x14);
    (save)L004537B0( *(A10 + 4)) + *(Ac + 8);
    (save) *(A14 + 0x20);
    A8 = L004537B0( *(A10 + 8));
    (restore)edx;
    edx = edx + A8;
    *(A8 + 8) = edx;
}

/*    Procedure: 0x0045AB09 - 0x0045AB0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045AB09()
{



}

/*    Procedure: 0x0045AB0C - 0x0045AD2B
 *    Argument size: 12
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L004277A8()
 *        L0045B293()
 */

L0045AB0C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    (save) *esi;
    edi = L004537B0( *Ac);
    (save) *(esi + 0xc);
    edi = edi + L004537B0( *(Ac + 4));
    (save) *(esi + 0x18);
    Vffffffdc = edi + L004537B0( *(Ac + 8));
    (save) *(esi + 4);
    edi = L004537B0( *Ac);
    (save) *(esi + 0x10);
    edi = edi + L004537B0( *(Ac + 4));
    (save) *(esi + 0x1c);
    Vffffffe0 = edi + L004537B0( *(Ac + 8));
    (save) *(esi + 8);
    edi = L004537B0( *Ac);
    (save) *(esi + 0x14);
    edi = edi + L004537B0( *(Ac + 4));
    (save) *(esi + 0x20);
    Vffffffe4 = edi + L004537B0( *(Ac + 8));
    (save) *esi;
    edi = L004537B0( *(Ac + 0xc));
    (save) *(esi + 0xc);
    edi = edi + L004537B0( *(Ac + 0x10));
    (save) *(esi + 0x18);
    Vffffffe8 = edi + L004537B0( *(Ac + 0x14));
    (save) *(esi + 4);
    edi = L004537B0( *(Ac + 0xc));
    (save) *(esi + 0x10);
    edi = edi + L004537B0( *(Ac + 0x10));
    (save) *(esi + 0x1c);
    Vffffffec = edi + L004537B0( *(Ac + 0x14));
    (save) *(esi + 8);
    edi = L004537B0( *(Ac + 0xc));
    (save) *(esi + 0x14);
    edi = edi + L004537B0( *(Ac + 0x10));
    (save) *(esi + 0x20);
    Vfffffff0 = edi + L004537B0( *(Ac + 0x14));
    (save) *esi;
    edi = L004537B0( *(Ac + 0x18));
    (save) *(esi + 0xc);
    edi = edi + L004537B0( *(Ac + 0x1c));
    (save) *(esi + 0x18);
    Vfffffff4 = edi + L004537B0( *(Ac + 0x20));
    (save) *(esi + 4);
    edi = L004537B0( *(Ac + 0x18));
    (save) *(esi + 0x10);
    edi = edi + L004537B0( *(Ac + 0x1c));
    (save) *(esi + 0x1c);
    Vfffffff8 = edi + L004537B0( *(Ac + 0x20));
    (save) *(esi + 8);
    edi = L004537B0( *(Ac + 0x18));
    (save) *(esi + 0x14);
    edi = edi + L004537B0( *(Ac + 0x1c));
    (save) *(esi + 0x20);
    Vfffffffc = edi + L004537B0( *(Ac + 0x20));
    esi = & Vffffffdc;
    edi = A8;
    ecx = 9;
    asm("rep movsd");
}

/*    Procedure: 0x0045AD2C - 0x0045AF4B
 *    Argument size: 12
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L00427724()
 *        L0045B2CC()
 */

L0045AD2C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    (save) *esi;
    edi = L004537B0( *Ac);
    (save) *(esi + 4);
    edi = edi + L004537B0( *(Ac + 4));
    (save) *(esi + 8);
    Vffffffdc = edi + L004537B0( *(Ac + 8));
    (save) *(esi + 0xc);
    edi = L004537B0( *Ac);
    (save) *(esi + 0x10);
    edi = edi + L004537B0( *(Ac + 4));
    (save) *(esi + 0x14);
    Vffffffe0 = edi + L004537B0( *(Ac + 8));
    (save) *(esi + 0x18);
    edi = L004537B0( *Ac);
    (save) *(esi + 0x1c);
    edi = edi + L004537B0( *(Ac + 4));
    (save) *(esi + 0x20);
    Vffffffe4 = edi + L004537B0( *(Ac + 8));
    (save) *esi;
    edi = L004537B0( *(Ac + 0xc));
    (save) *(esi + 4);
    edi = edi + L004537B0( *(Ac + 0x10));
    (save) *(esi + 8);
    Vffffffe8 = edi + L004537B0( *(Ac + 0x14));
    (save) *(esi + 0xc);
    edi = L004537B0( *(Ac + 0xc));
    (save) *(esi + 0x10);
    edi = edi + L004537B0( *(Ac + 0x10));
    (save) *(esi + 0x14);
    Vffffffec = edi + L004537B0( *(Ac + 0x14));
    (save) *(esi + 0x18);
    edi = L004537B0( *(Ac + 0xc));
    (save) *(esi + 0x1c);
    edi = edi + L004537B0( *(Ac + 0x10));
    (save) *(esi + 0x20);
    Vfffffff0 = edi + L004537B0( *(Ac + 0x14));
    (save) *esi;
    edi = L004537B0( *(Ac + 0x18));
    (save) *(esi + 4);
    edi = edi + L004537B0( *(Ac + 0x1c));
    (save) *(esi + 8);
    Vfffffff4 = edi + L004537B0( *(Ac + 0x20));
    (save) *(esi + 0xc);
    edi = L004537B0( *(Ac + 0x18));
    (save) *(esi + 0x10);
    edi = edi + L004537B0( *(Ac + 0x1c));
    (save) *(esi + 0x14);
    Vfffffff8 = edi + L004537B0( *(Ac + 0x20));
    (save) *(esi + 0x18);
    edi = L004537B0( *(Ac + 0x18));
    (save) *(esi + 0x1c);
    edi = edi + L004537B0( *(Ac + 0x1c));
    (save) *(esi + 0x20);
    Vfffffffc = edi + L004537B0( *(Ac + 0x20));
    esi = & Vffffffdc;
    edi = A8;
    ecx = 9;
    asm("rep movsd");
}

/*    Procedure: 0x0045AF4C - 0x0045AFED
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00439D78()
 */

L0045AF4C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 0x18) = L00470B41(Ac);
    *(A8 + 0x10) = L00470B41(A10);
    *(A8 + 0x20) = L00470B41(Ac + 16384);
    *(A8 + 4) = L00470B41(A10 + 16384);
    *(A8 + 0x1c) = 0;
    (save) *(A8 + 0x10);
    *(A8 + 8) = L004537B0( *(A8 + 0x18));
    (save) *(A8 + 4);
    *(A8 + 0xc) = L004537B0( *(A8 + 0x20));
    (save) *(A8 + 4);
    *(A8 + 0x14) = ~(L004537B0( *(A8 + 0x18)));
    (save) *(A8 + 0x20);
    eax = ~(L004537B0( *(A8 + 0x10)));
    *A8 = eax;
    *(A8 + 0x20) = ~( *(A8 + 0x20));
    *(A8 + 0x18) = ~( *(A8 + 0x18));
    return *A8;
}

/*    Procedure: 0x0045AFEE - 0x0045AFEF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045AFEE()
{



}

/*    Procedure: 0x0045AFF0 - 0x0045B08B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00412B40()
 *        L0041EC08()
 *        L0042723C()
 *        L0042E2D0()
 *        L0042E746()
 *        L00434A50()
 *        L00437250()
 *        L00439FBC()
 *        L0043C40C()
 *        L0043D8E4()
 *        L0043DD28()
 *        L00441C98()
 *        L00443DE4()
 *        L00453D98()
 */

L0045AFF0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 4) = L00470B41(Ac);
    *(A8 + 0x18) = L00470B41(A10);
    *(A8 + 0x10) = L00470B41(Ac + 16384);
    *(A8 + 0x20) = L00470B41(A10 + 16384);
    *(A8 + 0x1c) = 0;
    (save) *(A8 + 0x18);
    *(A8 + 0x14) = L004537B0( *(A8 + 4));
    (save) *(A8 + 0x20);
    *A8 = L004537B0( *(A8 + 0x10));
    (save) *(A8 + 0x20);
    *(A8 + 0xc) = ~(L004537B0( *(A8 + 4)));
    (save) *(A8 + 0x10);
    eax = ~(L004537B0( *(A8 + 0x18)));
    *(A8 + 8) = eax;
    return *(A8 + 8);
}

/*    Procedure: 0x0045B08C - 0x0045B127
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043F26E()
 *        L0043F914()
 */

L0045B08C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 0xc) = L00470B41(Ac);
    *(A8 + 8) = L00470B41(A10);
    *(A8 + 0x10) = L00470B41(Ac + 16384);
    *(A8 + 0x20) = L00470B41(A10 + 16384);
    *(A8 + 0x14) = 0;
    (save) *(A8 + 8);
    *(A8 + 0x1c) = L004537B0( *(A8 + 0xc));
    (save) *(A8 + 0x20);
    *A8 = L004537B0( *(A8 + 0x10));
    (save) *(A8 + 0x20);
    *(A8 + 4) = ~(L004537B0( *(A8 + 0xc)));
    (save) *(A8 + 0x10);
    eax = ~(L004537B0( *(A8 + 8)));
    *(A8 + 0x18) = eax;
    return *(A8 + 0x18);
}

/*    Procedure: 0x0045B128 - 0x0045B21E
 *    Argument size: 8
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L0045B128()
 */

L0045B128(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;



    esi = A8;
    if(*(Ac + 0x56) != 0) {
        if(*(Ac + 0x25) == M00644bb2) {
            (save)esi;
            edi = esi;
            esi = Ac + 0x26;
            ecx = 6;
            asm("rep movsd");
            (restore)esi;
            goto L0045b218;
        }
        edi = *L00501b90( *(Ac + 0x56) & 0xff);
        L0045B128(esi, edi);
        if(*(Ac + 0x57) != 0) {
            (save)esi;
            (save)edi;
            esi = Ac + 0x3e;
            edi = & Vffffffe4;
            ecx = 6;
            asm("rep movsd");
            (restore)edi;
            (restore)esi;
            Vfffffffc = L00459E08( & Vffffffe4, 0x1c);
            Vffffffd8 = Vffffffe4;
            Vffffffdc = Vffffffec;
            Vffffffe0 = Vfffffff4;
            L0045A7A8( & Vffffffd8, & Vffffffd8, edi);
            *L00501700( & Vffffffe4, & Vffffffd8, Vfffffffc);
            eax = L0045A044(esi, & Vffffffe4);
        } else {
            eax = L0045A044(esi, Ac + 0x3e);
        }
    } else {
        (save)esi;
        edi = esi;
        esi = Ac + 0x3e;
        ecx = 6;
        asm("rep movsd");
        (restore)esi;
    }
    (save)esi;
    edi = Ac + 0x26;
    ecx = 6;
    asm("rep movsd");
    (restore)esi;
    *(Ac + 0x25) = M00644bb2;
L0045b218:
}

/*    Procedure: 0x0045B21F - 0x0045B292
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045B21F(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = Ac;
    esi = A8;
    if(*(eax + 0x56) == *(A10 + 0x56)) {
        if(*(eax + 0x57) != *(A10 + 0x57)) {
            goto L0045b276;
        }
        (save)esi;
        edi = esi;
        esi = eax + 0x3e;
        ecx = 6;
        asm("rep movsd");
        (restore)esi;
        eax = L0045A098(esi, A10 + 0x3e);
    } else {
        if(*(A10 + 0x56) == *(eax + 0x86)) {
            eax = L0045A0EC(esi, A10 + 0x3e);
        } else {
L0045b276:
            *L005030d8(esi, eax);
            eax = L0045A098(esi, A10 + 0x26);
        }
    }
}

/*    Procedure: 0x0045B293 - 0x0045B2CB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0045B293(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x58) != M00644bb2) {
        eax = L0045AB0C(A8 + 0x5a, A8, *L00501b90( *(A8 + 0x56) & 0xff));
        *(A8 + 0x58) = M00644bb2;
    }
}

/*    Procedure: 0x0045B2CC - 0x0045B650
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B2CC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -412;
    (save)A8;
    (save)esi;
    (save)edi;
    edi = *L00501b9c( *(A8 + 0x82));
    *L005030dc(ebp + -384, A8, Ac);
    esi = L00459D38(ebp + -384);
    *(ebp - 8) = esi - 0x1c;
    if(*(ebp - 8) > 0) {
        L00459F90(ebp + -384, *(ebp - 8));
    } else {
        *(ebp - 8) = 0;
    }
    esi = esi - 0xd;
    if(esi < 0) {
        esi = 0;
    }
    esi = esi - *(A8 + 0x7e);
    *(A8 + 0x88) = esi;
    eax = *(edi + 0x20);
    if(esi >= eax) {
        esi = esi - eax;
        if(esi > 5) {
            al = 0x3f;
        } else {
            ecx = esi;
            al = 1 << cl;
        }
        *(A8 + 0x8a) = al;
        *(A8 + 0x98) = 32768;
        *(A8 + 0x9a) = 32768;
    } else {
        *(ebp - 0x1c) = A8;
        *(ebp - 0x70) = 0;
        *(A8 + 0x8a) = 0;
        if(*(Ac + 0x57) == 0) {
            *(ebp - 0x34) = M00644bd0;
            *(ebp - 0x30) = M00644bd4;
            *(ebp - 0x2c) = M00644bd8;
            *(ebp - 4) = Ac;
        } else {
            *(ebp - 0x34) = M00644bdc;
            *(ebp - 0x30) = M00644be0;
            *(ebp - 0x2c) = M00644be4;
            *(ebp - 4) = *(Ac + 0x56) == *(A8 + 0x86) || *(A8 + 0x57) != 0 && *(Ac + 0x56) == *(A8 + 0x56) ? Ac : Ac + 0x5a;
        }
        L00471128(ebp + -228, 6573048, 0x18);
        *(ebp + -396) = *(ebp + -384);
        *(ebp + -392) = *(ebp + -376);
        *(ebp + -388) = *(ebp + -368);
        L0045A968(ebp + -356, ebp + -396, *(ebp - 4));
        *(ebp - 0x20) = *(edi + 0x14);
        eax = *(edi + 0x18);
        *(ebp - 0x38) = eax;
        eax = *(ebp - 0x38) + *(A8 + 0x7e) - *(ebp - 8);
        if(eax < 0) {
            *(ebp - 0x38) = *(ebp - 0x38) - eax;
            *(ebp - 0x20) = *(ebp - 0x20) + eax;
            if(*(ebp - 0x20) < 0) {
                *(ebp - 0x20) = 0;
            }
        } else {
            ecx = eax;
            *(ebp + -356) = *(ebp + -356) >> cl;
            ecx = eax;
            *(ebp + -352) = *(ebp + -352) >> cl;
            *(ebp + -348) = *(ebp + -348) >> eax;
        }
        eax = L0045B8F0(ebp + -360, edi);
        if(eax != 0) {
            *(A8 + 0x98) = 32768;
            *(A8 + 0x9a) = 32768;
        } else {
            *(ebp - 0x72) = 1;
            *(ebp - 0x73) = 1;
            *(ebp - 0x74) = 1;
            eax = L00452681(A8 + 0x98, ebp + -356);
            if(eax != 0) {
                *(A8 + 0x98) = 32768;
                *(A8 + 0x9a) = 32768;
            } else {
                if(esi >= *(edi + 0x28)) {
                    *(ebp + -412) = *(edi + 0x24);
                    *(ebp + -410) = *(edi + 0x26);
                    *(ebp + -404) = 0;
                    *(ebp + -400) = 0;
                    *(ebp + -408) = 0;
                    *(ebp + -412) = *(ebp + -412) & 0xf;
                    *(ebp + -411) = *(ebp + -411) & 0xf;
                    *(ebp + -410) = *(ebp + -410) & 0xf;
                    ecx = *(ebp - 0x20);
                    esi = *(edi + 0x1c) << cl;
                    eax = L0045C1C0(ebp + -360, A8 + 0x98, L0045A51C(esi, *(ebp + -348)), esi, *(ebp + -412), *(ebp + -408), *(ebp + -404), *(ebp + -400), 1, ebp + -356);
                    goto L0045b64a;
                }
            }
            *(ebp - 0xc) = A8;
            esi = Ac;
            if(*(Ac + 0x57) != 0) {
                if(*(A8 + 0x57) == 0) {
                    if(*(Ac + 0x56) == *(A8 + 0x86)) {
                        L0045A198(ebp + -340, Ac);
                        esi = 0;
                    } else {
                        esi = Ac + 0x5a;
                    }
                }
            } else {
                if(*(A8 + 0x57) != 0) {
                    *L005030e0(A8);
                    *(ebp - 0xc) = A8 + 0x5a;
                }
            }
            if(esi != 0) {
                L0045AD2C(ebp + -340, *(ebp - 0xc), esi);
            }
            *(ebp + -276) = 0;
            L0045B874(ebp + -360);
            L00461138(ebp + -360, edi);
            eax = L00461528(0, 0);
        }
    }
L0045b64a:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0045B651 - 0x0045B675
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0045B651(A8)
/* unknown */ void  A8;
{



    return L0045B69C(A8, *L00501ba0( *(A8 + 0x82)));
}

/*    Procedure: 0x0045B676 - 0x0045B699
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0045B676(A8)
/* unknown */ void  A8;
{



    return L0045B69C(A8, *L00501b9c( *(A8 + 0x82)));
}

/*    Procedure: 0x0045B69A - 0x0045B69B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B69A()
{



}

/*    Procedure: 0x0045B69C - 0x0045B777
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045B651()
 *        L0045B676()
 */

L0045B69C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -348;
    (save)Ac;
    (save)esi;
    (save)edi;
    eax = A8;
    esi = ebp + -348;
    *(esi + 0x14c) = eax;
    *(esi + 0xf8) = 0;
    (save)esi;
    edi = esi + 0x14;
    esi = eax;
    ecx = 9;
    asm("rep movsd");
    (restore)esi;
    *(esi + 4) = *(eax + 0x26);
    *(esi + 8) = *(eax + 0x2e);
    *(esi + 0xc) = *(eax + 0x36);
    *(esi + 0x148) = *(Ac + 0x14);
    *(esi + 0x130) = 0;
    eax = L0045B8F0(esi, Ac);
    if(eax == 0) {
        *(esi + 0x54) = 0;
        eax = 1 & 0xff;
        *(esi + 0xf6) = al;
        *(esi + 0xf5) = al;
        *(esi + 0xf4) = *(esi + 0xf5);
        *(esi + 0x134) = M00644bd0;
        *(esi + 0x138) = M00644bd4;
        *(esi + 0x13c) = M00644bd8;
        L00471128(esi + 0x84, 6573048, 0x18);
        L0045B874(esi);
        L00461138(esi, Ac);
        eax = L00461528(0, 0);
    }
    (restore)edi;
    (restore)esi;
    (restore)Ac;
}

/*    Procedure: 0x0045B778 - 0x0045B870
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B778(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -348;
    (save)A8;
    (save)esi;
    (save)edi;
    edi = ebp + -348;
    esi = *L00501ba0( *(A8 + 0x82));
    *(edi + 0x14c) = A8;
    *(edi + 0xf8) = 0;
    (save)esi;
    (save)edi;
    esi = A8;
    edi = edi + 0x14;
    ecx = 9;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    *(edi + 4) = *(A8 + 0x26);
    *(edi + 8) = *(A8 + 0x2e);
    *(edi + 0xc) = *(A8 + 0x36);
    *(edi + 0x148) = *(esi + 0x14);
    *(edi + 0x130) = 0;
    eax = L0045B8F0(edi, esi);
    if(eax == 0) {
        *(edi + 0x54) = 0;
        eax = 1 & 0xff;
        *(edi + 0xf6) = al;
        *(edi + 0xf5) = al;
        *(edi + 0xf4) = *(edi + 0xf5);
        *(edi + 0x134) = M00644bd0;
        *(edi + 0x138) = M00644bd4;
        *(edi + 0x13c) = M00644bd8;
        L00471128(edi + 0x84, 6573048, 0x18);
        L0045B874(edi);
        L00461158(edi, esi, Ac, ( *(A8 + 0xa4) & 65535) + ( *(A8 + 0xa4) & 65535));
        eax = L00461528(0, 0);
    }
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0045B871 - 0x0045B873
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B871()
{



}

/*    Procedure: 0x0045B874 - 0x0045B8ED
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L0045B2CC()
 *        L0045B69C()
 *        L0045B778()
 *        L0045ED38()
 */

L0045B874(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = L004516B0( & Vfffffff4, A8 + 4);
    *(A8 + 0x44) = esi;
    eax = *(A8 + 0x44) + 7 - *(A8 + 0x148);
    if(eax < 0) {
        eax = ~eax;
        *(A8 + 0x44) = *(A8 + 0x44) + eax;
        ecx = eax;
        Vfffffff4 = Vfffffff4 >> cl;
        ecx = eax;
        Vfffffff8 = Vfffffff8 >> cl;
        Vfffffffc = Vfffffffc >> eax;
    }
    Vfffffff4 = ~Vfffffff4;
    Vfffffff8 = ~Vfffffff8;
    Vfffffffc = ~Vfffffffc;
    esi = A8 + 0x14;
    L0045A968(A8 + 0x48, & Vfffffff4, esi);
    return L0045A968(A8 + 0x38, A8 + 0x134, esi);
}

/*    Procedure: 0x0045B8EE - 0x0045B8EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B8EE()
{



}

/*    Procedure: 0x0045B8F0 - 0x0045B912
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045B2CC()
 *        L0045B69C()
 *        L0045B778()
 *        L0045F4B2()
 */

L0045B8F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = *(A8 + 0x148);
    return L0045B914(A8 + 4, *(Ac + 0x1c) << cl);
}

/*    Procedure: 0x0045B913 - 0x0045B913
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B913()
{



}

/*    Procedure: 0x0045B914 - 0x0045B965
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045B8F0()
 *        L0045FA00()
 */

L0045B914(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = *(A8 + 8) + Ac;
    if(edx < 0x40) {
        return 1;
    }
    ebx = *A8 < 0 ? ~( *A8) : *A8;
    if(edx >= ebx - Ac) {
        ebx = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
        if(edx >= ebx - Ac) {
            goto L0045b961;
        }
    }
    return 1;
L0045b961:
    return 0;
}

/*    Procedure: 0x0045B966 - 0x0045B967
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B966()
{



}

/*    Procedure: 0x0045B968 - 0x0045B97D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045F4B2()
 */

L0045B968(A8)
/* unknown */ void  A8;
{



    return L0045B9C0( *(A8 + 8), 0);
}

/*    Procedure: 0x0045B97E - 0x0045B97F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B97E()
{



}

/*    Procedure: 0x0045B980 - 0x0045B9BD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00461158()
 */

L0045B980(A8)
/* unknown */ void  A8;
{



    eax = *L00655AEC;
    *(eax + -196) = 0;
    *(eax + -160) = 0;
    *(eax - 0x7c) = 0;
    *(eax - 0x58) = 0;
    *(eax - 0x34) = 0;
    *(eax - 0x10) = 0;
    return L0045B9C0(A8, 0);
}

/*    Procedure: 0x0045B9BE - 0x0045B9BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B9BE()
{



}

/*    Procedure: 0x0045B9C0 - 0x0045B9E6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045B968()
 *        L0045B980()
 */

L0045B9C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = 0;
    if(A8 > 0) {
        do {
            ebx = eax + eax * 8;
            *(M00655aec + ebx * 4 + 0x14) = Ac;
            eax = eax + 1;
        } while(A8 > eax);
    }
}

/*    Procedure: 0x0045B9E7 - 0x0045B9E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045B9E7()
{



}

/*    Procedure: 0x0045B9E8 - 0x0045BA4B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045C1C0()
 *        L0045C74C()
 *        L0045CAA8()
 *        L0045D0C0()
 *        L0045DB33()
 *        L0045E4F9()
 *        L0045E738()
 *        L0045F4B2()
 *        L0046008C()
 *        L004608F2()
 *        L00460C2B()
 *        L004621F5()
 *        L0046D648()
 */

L0045B9E8(A8, Ac, Ad, Ae, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  Ad;
/* unknown */ void  Ae;
/* unknown */ void  A10;
{



    edx = A10;
    if(edx != 0) {
        ecx = edx;
        Ac = Ac + *(((edx << 4) - ecx) * 2 + 0x503104);
        edx = A10;
        ecx = edx;
        Ad = Ad + *(((edx << 4) - ecx) * 2 + 0x503105);
        edx = A10;
        ecx = edx;
        Ae = Ae + *(((edx << 4) - ecx) * 2 + 0x503106);
        *A8 = Ac;
        *(A8 + 2) = Ae;
        return;
    }
    *A8 = Ac;
    *(A8 + 2) = Ae;
}

/*    Procedure: 0x0045BA4C - 0x0045BACE
 *    Argument size: 8
 *    Local size: 16
 *    Save regs size: 8
 *    Called by:
 *        L0045BF8C()
 *        L0045C74C()
 *        L0045CAA8()
 *        L0045D0C0()
 *        L0045DB33()
 *        L0045E4F9()
 *        L0045E738()
 *        L0045F4B2()
 *        L0045F8A9()
 *        L0046008C()
 *        L004608F2()
 *        L00460C2B()
 *        L004621F5()
 *        L0046D648()
 */

L0045BA4C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff1;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ecx = Ac >> 0xe;
    == ? L0045ba85 : ;
    Vfffffff4 = Ac & 0xfff;
    Vfffffff0 = 0;
    Vfffffff1 = 0;
    Vfffffff2 = 0;
    Vfffffff8 = Ac & 8192;
    goto L0045bab3;
    cl = Ac >> 8 & 0xf;
    Vfffffff0 = cl;
    cl = Ac >> 4 & 0xf;
    Vfffffff1 = cl;
    Vfffffff2 = Ac & 0xf;
    Vfffffff8 = Ac & 8192;
    Vfffffff4 = 0;
L0045bab3:
    Vfffffffc = Ac & 0x1000;
    esi = & Vfffffff0;
    edi = A8;
    ecx = 4;
    asm("rep movsd");
    return A8;
}

/*    Procedure: 0x0045BACF - 0x0045BACF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045BACF()
{



}

/*    Procedure: 0x0045BAD0 - 0x0045BB23
 *    Argument size: 30
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045C74C()
 *        L0045CAA8()
 *        L0045D0C0()
 *        L0045DB33()
 *        L0045E4F9()
 *        L0045F4B2()
 *        L0046008C()
 *        L004608F2()
 */

L0045BAD0(A8, Ac, A10, A11, A12, A18, A1c, A20, A21, A22)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A11;
/* unknown */ void  A12;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A21;
/* unknown */ void  A22;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(A1c != 0) {
        A10 = A10 + *(Ac + 0xf4);
        A11 = A11 + *(Ac + 0xf5);
        A12 = A12 + *(Ac + 0xf6);
    }
    if(A18 == 0) {
        A10 = A10 + A20;
        A11 = A11 + A21;
        A12 = A12 + A22;
    }
    esi = & A10;
    edi = A8;
    ecx = 4;
    asm("rep movsd");
}

/*    Procedure: 0x0045BB24 - 0x0045BB69
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045C1C0()
 *        L0045E738()
 *        L0045F8A9()
 *        L0046008C()
 *        L00460C2B()
 */

L0045BB24(A8, Ac, A10, A11, A12, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A11;
/* unknown */ void  A12;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    A18 = 0;
    if(A1c != 0) {
        A1c = 0;
        A10 = A10 + ( *(Ac + 0xf4) & 0xff);
        A11 = A11 + *(Ac + 0xf5);
        A12 = A12 + *(Ac + 0xf6);
    }
    esi = & A10;
    edi = A8;
    ecx = 4;
    asm("rep movsd");
}

/*    Procedure: 0x0045BB6A - 0x0045BB6B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045BB6A()
{



}

/*    Procedure: 0x0045BB6C - 0x0045BBAC
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045CAA8()
 *        L0045D0C0()
 */

L0045BB6C(A8, Ac, A10, A11, A12, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A11;
/* unknown */ void  A12;
/* unknown */ void  A1c;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(A1c != 0) {
        A1c = 0;
        A10 = A10 + ( *(Ac + 0xf4) & 0xff);
        A11 = A11 + *(Ac + 0xf5);
        A12 = A12 + *(Ac + 0xf6);
    }
    esi = & A10;
    edi = A8;
    ecx = 4;
    asm("rep movsd");
}

/*    Procedure: 0x0045BBAD - 0x0045BEE3
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 */

L0045BBAD(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = Ac;
    eax = A10 >> 0xd;
    if(eax > 7) {
        goto L0045becf;
    }
    switch(eax) {
        case 0:
L0045becf:
            L00461528(0, 0);
            goto L0045bedb;
        case 1:
            goto L0045bbf7;
        case 2:
            goto L0045bcb1;
        case 3:
            goto L0045bd17;
        case 4:
            goto L0045becf;
        case 5:
            goto L0045becf;
        case 6:
            goto L0045becf;
        case 7:
            goto L0045bdd1;
    }
L0045bbf7:
    al = edi >> 5 & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi >> 5 & 0xff) << 2) + ((edi >> 5 & 0xff) << 2) * 8 + M00655aec : *L00501688(A8, edi >> 5 & 0xff);
    edi = L00461430(A8, eax + 4);
L0045bc4f:
    eax = *esi + *esi * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *esi << 2) + ( *esi << 2) * 8 + M00655aec : *L00501688(A8, *esi);
    eax = L00461430(A8, eax + 4);
    if(eax > edi) {
        edi = eax;
    }
    esi = esi + 2;
    if(*(esi - 1) == 0xff) {
        goto L0045bc4f;
    }
    L00461528(1, edi);
    return esi;
L0045bcb1:
    al = edi >> 5 & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi >> 5 & 0xff) << 2) + ((edi >> 5 & 0xff) << 2) * 8 + M00655aec : *L00501688(A8, edi >> 5 & 0xff);
    L00461528(1, L00461430(A8, eax + 4));
    return esi;
L0045bd17:
    al = edi >> 5 & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi >> 5 & 0xff) << 2) + ((edi >> 5 & 0xff) << 2) * 8 + M00655aec : *L00501688(A8, edi >> 5 & 0xff);
    edi = L00461430(A8, eax + 4);
L0045bd6f:
    eax = *esi + *esi * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *esi << 2) + ( *esi << 2) * 8 + M00655aec : *L00501688(A8, *esi);
    eax = L00461430(A8, eax + 4);
    if(eax < edi) {
        edi = eax;
    }
    esi = esi + 2;
    if(*(esi - 1) == 0xff) {
        goto L0045bd6f;
    }
    L00461528(1, edi);
    return esi;
L0045bdd1:
    if(!(eax = (edi >> 5) - 0x7fd)) {
        if(!(eax = eax - 1)) {
            if(eax = eax - 1) {
                goto L0045be49;
            }
            L00461528(1, L00461430(A8, A8 + 4));
        } else {
            L00461528(1, -1);
        }
    } else {
        Vfffffff4 = 0;
        Vfffffff8 = 0;
        ecx = *(A8 + 0x148);
        Vfffffffc = *esi << cl;
        esi = esi + 2;
        L00461528(1, L00461430(A8, & Vfffffff4));
        goto L0045bedb;
L0045be49:
        al = edi >> 5 & 0xff;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi >> 5 & 0xff) << 2) + ((edi >> 5 & 0xff) << 2) * 8 + M00655aec : *L00501688(A8, edi >> 5 & 0xff);
        Vfffffff4 = *(eax + 4);
        Vfffffff8 = *(eax + 8);
        Vfffffffc = *(eax + 0xc);
        ecx = *(A8 + 0x148);
        Vfffffffc = Vfffffffc + ( *esi << cl);
        esi = esi + 2;
        L00461528(1, L00461430(A8, & Vfffffff4));
    }
L0045bedb:
    return esi;
}

/*    Procedure: 0x0045BEE4 - 0x0045BF56
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045BEE4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    if(A10 < 0) {
        L0046159C();
    } else {
        eax = ebx >> 5;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? (ebx >> 5 << 2) + (ebx >> 5 << 2) * 8 + M00655aec : *L00501688(A8, ebx >> 5);
        L00461568(L00461430(A8, eax + 4));
    }
    return Ac;
}

/*    Procedure: 0x0045BF57 - 0x0045BF8B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0045BF57(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0045BF8C(A8, *Ac, *(Ac + 2), *(Ac + 5) & 0xff, *(Ac + 4) & 0x80);
    return Ac + 6;
}

/*    Procedure: 0x0045BF8C - 0x0045C1BD
 *    Argument size: 20
 *    Local size: 52
 *    Save regs size: 12
 *    Called by:
 *        L0045BF57()
 *        L00460EEC()
 */

L0045BF8C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffea;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;



    ebx = A10;
    L0045BA4C( & Vfffffff0, Ac);
    (save)A14;
    esi = & Vfffffff0;
    edi = & Vffffffcc;
    ecx = 4;
    asm("rep movsd");
    (restore)esi;
    eax = esi;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? (esi << 2) + (esi << 2) * 8 + M00655aec : *L00501680(A8, esi);
    esi = eax;
    ebx = L0045164C(A8, ebx);
    eax = *(A8 + 0x148) - 8;
    if(eax < 0) {
        ecx = ~eax;
        ebx = ebx >> cl;
    } else {
        ecx = eax;
        ebx = ebx << cl;
    }
    edi = *(esi + 0xc);
    if(edi >= 0x40) {
        *(A8 + 0xd4) = ebx;
        edx = ebx << 3;
        eax = edi;
        if(edx <= eax) {
            goto L0045c18a;
        }
        Vffffffe4 = 0;
        if(ebx < eax) {
            eax = eax | ebx;
            edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
            eax = eax | edx;
            edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
            eax = eax | edx;
            if(eax >= 67108864) {
                Vffffffe4 = Vffffffe4 + 0x10;
                eax = eax >> 0x10;
            }
            if(eax >= 262144) {
                Vffffffe4 = Vffffffe4 + 8;
                eax = eax >> 8;
            }
            if(eax >= 16384) {
                Vffffffe4 = Vffffffe4 + 4;
                eax = eax >> 4;
            }
            if(eax >= 0x1000) {
                Vffffffe4 = Vffffffe4 + 2;
                eax = eax >> 2;
            }
            if(eax >= 0x800) {
                Vffffffe4 = Vffffffe4 + 1;
            }
            ecx = Vffffffe4;
            eax = ebx >> cl;
            edx = eax;
            eax = eax * eax;
            ecx = Vffffffe4;
            Vffffffec = edi >> cl;
            edx = Vffffffec;
            Vffffffec = Vffffffec * Vffffffec - eax;
            if(Vffffffec != 0) {
                ecx = Vffffffe4;
                Vffffffe0 = *(esi + 4) >> cl;
                ecx = Vffffffe4;
                eax = edi >> cl;
                asm("imul dword [ebp-0x20]");
                eax = eax << 8;
                asm("cdq");
                Vffffffec = Vffffffec / Vffffffec;
                edx = Vffffffec % Vffffffec;
                ax = ax + 0xa0;
                Vffffffe8 = ax;
                ecx = Vffffffe4;
                Vffffffdc = *(esi + 8) >> cl;
                eax = edi >> Vffffffe4;
                asm("imul dword [ebp-0x24]");
                eax = eax << 8;
                asm("cdq");
                Vffffffec = Vffffffec / Vffffffec;
                edx = Vffffffec % Vffffffec;
                Vffffffea = 0x4f - ax;
                (save)esi + 4;
                (save)A18;
                (save)Vffffffd8;
                (save)Vffffffd4;
                (save)Vffffffd0;
                (save)Vffffffcc;
                (save)ebx;
                eax = Vffffffe0;
                asm("imul dword [ebp-0x20]");
                edx = Vffffffdc;
                eax = *L00501670(eax + Vffffffdc * Vffffffdc + Vffffffec);
                ebx = ebx >> Vffffffe4 << 8;
                asm("imul ebx");
                edx = 0;
                Vffffffec = Vffffffec / Vffffffec;
                edx = Vffffffec % Vffffffec;
                (save)eax;
                (save) & Vffffffe8;
                (save)A8;
                eax = L0045C1C0();
                esp = esp + 0x28;
                goto L0045c1b7;
L0045c18a:
                eax = L0045C1C0(A8, esi, L0045A51C(ebx, edi), ebx, Vffffffcc, Vffffffd0, Vffffffd4, Vffffffd8, A18, esi + 4);
            }
        }
    }
L0045c1b7:
}

/*    Procedure: 0x0045C1BE - 0x0045C1BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045C1BE()
{



}

/*    Procedure: 0x0045C1C0 - 0x0045C6C4
 *    Argument size: 40
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L0045B2CC()
 *        L0045BF8C()
 */

L0045C1C0(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffde;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe2;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff9;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    ebx = A2c;
    ax = *Ac;
    if(ax >= 0x140) {
        if(ax < 0) {
            eax = *Ac;
            edx = A10 >> 1;
            >= ? 0x45c1f2 : ;
            asm("adc edx,+0x0");
        } else {
            eax = *Ac;
            edx = A10 >> 1;
            if(!(eax = eax + edx)) {
                asm("adc edx,+0x0");
            }
            eax = eax - edx;
        }
        if(eax >= 0x140) {
            goto L0045c6be;
        }
    }
    ax = *(Ac + 2);
    if(ax >= 0x9e) {
        if(ax < 0) {
            eax = *(Ac + 2);
            edx = A10 >> 1;
            >= ? 0x45c232 : ;
            asm("adc edx,+0x0");
        } else {
            eax = *(Ac + 2);
            edx = A10 >> 1;
            if(!(eax = eax + edx)) {
                asm("adc edx,+0x0");
            }
            eax = eax - edx;
        }
        if(eax >= 0x9e) {
            goto L0045c6be;
        }
    }
    L0045BB24( & Vffffffe4, A8, A18, A1c, A20, A24);
    eax = & Vffffffe4;
    (save) *(eax + 0xc);
    (save) *(eax + 8);
    L0045B9E8( & Vfffffff9, *eax, *(eax + 4));
    if(A20 == 0) {
        if(A10 < 9) {
            if(*(A8 + 0x13c) < -28672 && A28 == 0) {
                goto L0045c540;
            }
            Vfffffff9 = Vfffffff9 + *(A8 + 0x84);
            Vfffffffa = Vfffffffa + *(A8 + 0x85);
            Vfffffffb = Vfffffffb + *(A8 + 0x86);
            goto L0045c540;
        }
        eax = *(A8 + 0x13c);
        if(eax < -32000) {
            goto L0045c540;
        }
        if(eax > 32000) {
            Vfffffff9 = Vfffffff9 + *(A8 + 0x84);
            Vfffffffa = Vfffffffa + *(A8 + 0x85);
            Vfffffffb = Vfffffffb + *(A8 + 0x86);
            goto L0045c540;
        }
        ebx = L004614B8(0x19, L00461430(A8, ebx), 0);
        *ebx = 0x4618a0;
        *(ebx + 4) = 0x461908;
        *(ebx + 0x18) = 0x461908;
        *(ebx + 0x2c) = 0x461818;
        *L004f80a0(Vfffffff9);
        eax = ax & 65535;
        *(A8 + 0xcc) = eax;
        *(ebx + 0x30) = *(A8 + 0xcc);
        *(ebx + 0x34) = 0x461908;
        *(ebx + 0x48) = 0x461908;
        *(ebx + 0x5c) = 0x461940;
        Vfffffff9 = Vfffffff9 + *(A8 + 0x84);
        Vfffffffa = Vfffffffa + *(A8 + 0x85);
        Vfffffffb = Vfffffffb + *(A8 + 0x86);
        *L004f80a0(Vfffffff9);
        *(ebx + 0x60) = ax & 65535;
        eax = *(A8 + 0x134);
        asm("imul dword [esi+0x134]");
        edx = *(A8 + 0x138);
        Vfffffff4 = *L00501670(eax + *(A8 + 0x138) * *(A8 + 0x138)) + 8;
        eax = *(A8 + 0x134) << 0xf;
        asm("cdq");
        Vfffffff4 = Vfffffff4 / Vfffffff4;
        edx = Vfffffff4 % Vfffffff4;
        ecx = eax;
        ecx = A10 * A10 >> 0x10;
        ax = ~ecx;
        Vffffffe2 = ax;
        eax = ecx << 0x11;
        ecx = 3;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        eax = eax >> 0xf;
        Vffffffdc = ax;
        eax = ~( *(A8 + 0x138)) << 0xf;
        asm("cdq");
        Vfffffff4 = Vfffffff4 / Vfffffff4;
        edx = Vfffffff4 % Vfffffff4;
        ecx = eax;
        Vffffffe0 = A10 * A10 >> 0x10;
        eax = Vffffffe0 << 0x11;
        ecx = 3;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        Vffffffde = eax >> 0xf;
        *(ebx + 8) = *Ac + Vffffffe0;
        *(ebx + 0xa) = *(Ac + 2) + Vffffffe2;
        eax = *(ebx + 8);
        *(ebx + 0x58) = eax;
        *(ebx + 0x38) = eax;
        *(ebx + 0x28) = *(ebx + 0x38);
        *(ebx + 0xc) = ~Vffffffdc + *(ebx + 8);
        *(ebx + 0xe) = ~Vffffffde + *(ebx + 0xa);
        *(ebx + 0x3c) = *(ebx + 8) + Vffffffdc;
        *(ebx + 0x3e) = *(ebx + 0xa) + Vffffffde;
        *(ebx + 0x14) = ~Vffffffe0 + *Ac;
        *(ebx + 0x16) = ~Vffffffe2 + *(Ac + 2);
        eax = *(ebx + 0x14);
        *(ebx + 0x4c) = eax;
        *(ebx + 0x44) = eax;
        *(ebx + 0x1c) = *(ebx + 0x44);
        *(ebx + 0x10) = ~Vffffffdc + *(ebx + 0x14);
        *(ebx + 0x12) = ~Vffffffde + *(ebx + 0x16);
        *(ebx + 0x40) = *(ebx + 0x14) + Vffffffdc;
        ax = *(ebx + 0x16) + Vffffffde;
        *(ebx + 0x42) = ax;
        eax = ~( *(A8 + 0x13c));
        edx = eax;
        Vffffffdc = Vffffffdc * Vffffffdc >> 0xf;
        edx = ~( *(A8 + 0x13c));
        edx = Vffffffde;
        asm("imul edx");
        Vffffffde = eax >> 0xf;
        *(ebx + 0x24) = *(ebx + 8) + Vffffffdc;
        *(ebx + 0x26) = *(ebx + 0xa) + Vffffffde;
        *(ebx + 0x54) = *(ebx + 0x24);
        *(ebx + 0x20) = *(ebx + 0x14) + Vffffffdc;
        *(ebx + 0x22) = *(ebx + 0x16) + Vffffffde;
        eax = *(ebx + 0x20);
        *(ebx + 0x50) = eax;
    } else {
L0045c540:
        Vfffffffc = *Ac;
        Vfffffffe = *(Ac + 2);
        if(A10 == 0) {
            if(A28 != 0) {
                A10 = L0045A51C(A14, *(ebx + 8) >> 8);
                if(A10 == 0) {
                    eax = L0045C6C8(A8, & Vfffffffc, 0, Vfffffff9, ebx);
                    goto L0045c6be;
                }
                A10 = *((A10 >> 3) + 0x50443c);
                goto L0045c5de;
            }
            eax = L0045C6C8(A8, & Vfffffffc, A10, Vfffffff9, ebx);
        } else {
            if(A10 > 9) {
                eax = L0045C6C8(A8, & Vfffffffc, A10, Vfffffff9, ebx);
            } else {
L0045c5de:
                eax = Vfffffffc;
                if(eax < 0x140) {
                    eax = Vfffffffe;
                    if(eax < 0x9e) {
                        ebx = L004614B8(6, L00461430(A8, ebx), 0);
                        if(A28 != 0) {
                            *ebx = 0x461bdc;
                            Vfffffffc = Vfffffffc - 1;
                            Vfffffffe = Vfffffffe - 1;
                        } else {
                            *ebx = 0x461b68;
                        }
                        *(ebx + 8) = Vfffffffc;
                        *(ebx + 0xc) = Vfffffffe;
                        *(ebx + 0x10) = A10;
                        *L004f80a0(Vfffffff9);
                        *(ebx + 4) = ax & 65535;
                        eax = (Vfffffff9 & 0xff) + (Vfffffff9 & 0xff) + (M00644bc4 & 0xff) + 1;
                        ecx = 3;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        Vfffffff9 = al;
                        eax = (Vfffffffa & 0xff) + (Vfffffffa & 0xff) + (M00644bc5 & 0xff) + 1;
                        ecx = 3;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        Vfffffffa = al;
                        eax = (Vfffffffb & 0xff) + (Vfffffffb & 0xff) + (M00644bc6 & 0xff) + 1;
                        ecx = 3;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        Vfffffffb = al;
                        *L004f80a0(Vfffffff9);
                        eax = ax & 65535;
                        *(ebx + 0x14) = eax;
                    }
                }
            }
        }
    }
L0045c6be:
}

/*    Procedure: 0x0045C6C5 - 0x0045C6C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045C6C5()
{



}

/*    Procedure: 0x0045C6C8 - 0x0045C71C
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045C1C0()
 */

L0045C6C8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;



    ebx = L004614B8(5, L00461430(A8, A18), 0);
    *ebx = 0x461b20;
    *(ebx + 8) = *Ac;
    *(ebx + 0xc) = *(Ac + 2);
    *(ebx + 0x10) = A10;
    *L004f80a0(A14);
    eax = ax & 65535;
    *(ebx + 4) = eax;
    return *(ebx + 4);
}

/*    Procedure: 0x0045C71D - 0x0045C748
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L0045C71D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L0045C74C(A8, *Ac, *(Ac + 2) & 0xff, *(Ac + 3) & 0xff);
    return Ac + 4;
}

/*    Procedure: 0x0045C749 - 0x0045C74B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045C749()
{



}

/*    Procedure: 0x0045C74C - 0x0045C846
 *    Argument size: 16
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L0045C71D()
 *        L00460EEC()
 */

L0045C74C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vffffffff;



    Vfffffffd = M0050445d;
    Vffffffff = M0050445f;
    (save)Vfffffffd;
    L0045BA4C( & Vffffffd8, Ac);
    eax = & Vffffffd8;
    (save) *(eax + 0xc);
    (save) *(eax + 8);
    (save) *(eax + 4);
    (save) *eax;
    (save)A8;
    (save) & Vffffffe8;
    L0045BAD0();
    esp = esp + 0x1c;
    eax = & Vffffffe8;
    (save) *(eax + 0xc);
    (save) *(eax + 8);
    L0045B9E8( & Vfffffffa, *eax, *(eax + 4));
    (save) *( & Vfffffffa);
    eax = A14;
    eax = al + al * 8;
    if(*(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0)) {
        eax = A14;
        eax = (al << 2) + (al << 2) * 8 + M00655aec;
    } else {
        eax = *L00501680(A8, A14);
    }
    (save)eax;
    eax = A10;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? (A10 << 2) + (A10 << 2) * 8 + M00655aec : *L00501680(A8, A10);
    (save)eax;
    (save)A8;
    esp = esp + 0x10;
    return L0045C848();
}

/*    Procedure: 0x0045C847 - 0x0045C847
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045C847()
{



}

/*    Procedure: 0x0045C848 - 0x0045C9BD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045C74C()
 *        L0045E738()
 */

L0045C848()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 0xc);
    *(ebp - 4) = *ebx;
    *(ebp - 8) = *esi;
    if(*(ebp - 4) < 0x140) {
        if(*(ebp - 2) >= 0x9e) {
            goto L0045c8ac;
        }
        if(*(ebp - 8) < 0x140 && *(ebp - 6) < 0x9e) {
            goto L0045c94d;
        }
        eax = L0045C9C0(ebp - 8, esi, ebx);
        if(eax == 0) {
            goto L0045c94d;
        }
    } else {
L0045c8ac:
        if(*(ebp - 8) < 0x140) {
            if(*(ebp - 6) >= 0x9e) {
                goto L0045c8d9;
            }
            eax = L0045C9C0(ebp - 4, ebx, esi);
            if(eax == 0) {
                goto L0045c94d;
            }
        } else {
L0045c8d9:
            edi = L0045DA14( *(ebp - 4));
            eax = L0045DA14( *(ebp - 8));
            if(*((edi | eax) * 4 + 0x504330) == 0) {
                edi = L0045DA48( *(ebp - 2));
                eax = L0045DA48( *(ebp - 6));
                if(*((edi | eax) * 4 + 0x504330) == 0) {
                    eax = L0045C9C0(ebp - 4, ebx, esi);
                    if(eax == 0) {
                        eax = L0045C9C0(ebp - 8, esi, ebx);
                        if(eax == 0) {
L0045c94d:
                            ebx = L004614B8(6, L00461430( *(ebp + 8), ebx + 4), 0);
                            *ebx = 0x461c40;
                            eax = *(ebp - 4) > 0 ? *(ebp - 4) - 1 : 0;
                            *(ebx + 4) = eax;
                            *(ebx + 8) = *(ebp - 2);
                            eax = *(ebp - 8) > 0 ? *(ebp - 8) - 1 : 0;
                            *(ebx + 0xc) = eax;
                            *(ebx + 0x10) = *(ebp - 6);
                            *L004f80a0( *(ebp + 0x14));
                            eax = ax & 65535;
                            *(ebx + 0x14) = eax;
                        }
                    }
                }
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045C9BE - 0x0045C9BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045C9BE()
{



}

/*    Procedure: 0x0045C9C0 - 0x0045CA1D
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045C848()
 */

L0045C9C0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = Ac;
    if(*(eax + 0xc) < 0x40) {
        if(*(A10 + 0xc) < 0x40) {
            eax = 1;
            goto L0045ca1a;
        }
        L00454E54(A8, eax + 4, A10 + 4);
    }
    L00454D20(A8, A10);
    eax = *A8 >= 0x140 || *(A8 + 2) >= 0x9e ? 1 : 0;
L0045ca1a:
}

/*    Procedure: 0x0045CA1E - 0x0045CA6F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045CA1E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    L0045CAA8(A8, *Ac, *(Ac + 3) & 0xff ^ 1, *(Ac + 2) & 0xff ^ 1, *(Ac + 5) & 0xff ^ 1, *(Ac + 4) & 0xff ^ 1);
    return L0045CA70(A8, Ac, A10);
}

/*    Procedure: 0x0045CA70 - 0x0045CAA7
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045CA1E()
 */

L0045CA70(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0045CAA8(A8, *Ac, *(Ac + 3) & 0xff, *(Ac + 2) & 0xff, *(Ac + 5) & 0xff, *(Ac + 4) & 0xff);
    return Ac + 6;
}

/*    Procedure: 0x0045CAA8 - 0x0045CF08
 *    Argument size: 24
 *    Local size: 72
 *    Save regs size: 12
 *    Called by:
 *        L0045CA1E()
 *        L0045CA70()
 */

L0045CAA8(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffba;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdd;
    /* unknown */ void  Vffffffde;
    /* unknown */ void  Vffffffdf;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;



    edi = A14;
    esi = A10;
    ebx = A8;
    eax = M00655af0;
    eax = !( *(eax + A1c * 8 + 3) >> 1 & 1) ? *L00501660(ebx, A1c) : (A1c << 3) + M00655af0;
    Vfffffff0 = eax;
    L0045BA4C( & Vffffffe0, Ac);
    (save)esi;
    (save)edi;
    esi = & Vffffffe0;
    edi = & Vffffffb8;
    ecx = 4;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    if(!( *(Vfffffff0 + 3) & 1)) {
        eax = 1;
    } else {
        eax = edi;
        eax = al + al * 8;
        if(*(M00655aec + eax * 4 + 0x14) == *(ebx + 0xf0)) {
            eax = edi;
            eax = (al << 2) + (al << 2) * 8 + M00655aec;
        } else {
            eax = *L00501680(ebx, edi);
        }
        edi = eax;
        eax = *(M00655aec + (A18 + A18 * 8) * 4 + 0x14);
        eax = eax == *(ebx + 0xf0) ? (A18 << 2) + (A18 << 2) * 8 + M00655aec : *L00501680(ebx, A18);
        Vfffffff4 = eax;
        eax = esi;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) == *(ebx + 0xf0) ? (esi << 2) + (esi << 2) * 8 + M00655aec : *L00501680(ebx, esi);
        esi = eax;
        if(M00644bb4 >= 0) {
            if(*esi < 63536 || *esi > 0x910 || *(esi + 2) < 63536 || *(esi + 2) > 0x86e || *edi < 63536 || *edi > 0x910 || *(edi + 2) < 63536 || *(edi + 2) > 0x86e || *Vfffffff4 < 63536 || *Vfffffff4 > 0x910 || *(Vfffffff4 + 2) < 63536 || *(Vfffffff4 + 2) > 0x86e) {
                goto L0045ceb6;
            }
            L0045BB6C( & Vffffffb8, ebx, Vffffffb8, Vffffffbc, Vffffffc0, Vffffffc4);
            if(Vffffffbc == 0) {
                goto L0045ceb6;
            }
            eax = *esi;
            if(!(eax = eax - *edi)) {
                eax = *esi;
                eax = eax - *edi;
            } else {
                eax = *esi;
                eax = ~(eax - *edi);
            }
            edx = *edi;
            if(!(edx = edx - *Vfffffff4)) {
                edx = *edi;
                edx = edx - *Vfffffff4;
            } else {
                edx = *edi;
                edx = ~(edx - *Vfffffff4);
            }
            eax = eax + edx;
            edx = !(edx = *Vfffffff4 - *esi) ? *Vfffffff4 - *esi : ~( *Vfffffff4 - *esi);
            eax = eax + edx;
            edx = *(esi + 2);
            if(!(edx = edx - *(edi + 2))) {
                edx = *(esi + 2);
                edx = edx - *(edi + 2);
            } else {
                edx = *(esi + 2);
                edx = ~(edx - *(edi + 2));
            }
            eax = eax + edx;
            edx = *(edi + 2);
            if(!(edx = edx - *(Vfffffff4 + 2))) {
                edx = *(edi + 2);
                edx = edx - *(Vfffffff4 + 2);
            } else {
                edx = *(edi + 2);
                edx = ~(edx - *(Vfffffff4 + 2));
            }
            eax = eax + edx;
            edx = !(edx = *(Vfffffff4 + 2) - *(esi + 2)) ? *(Vfffffff4 + 2) - *(esi + 2) : ~( *(Vfffffff4 + 2) - *(esi + 2));
            if(eax + edx < 6) {
                goto L0045ceb6;
            }
            (save)L0045DA7C(esi);
            eax = L0045DA7C(edi);
            (restore)edx;
            (save)edx | eax;
            (restore)edx;
            if(((edx | L0045DA7C(Vfffffff4)) << 3) + 0x504254 == 0) {
                eax = 1;
            } else {
                eax = L004614B8(0xc, L00461430(ebx, esi + 4), 0);
                *eax = 0x461ea4;
                *(eax + 4) = *esi;
                *(eax + 8) = *edi;
                *(eax + 0xc) = *Vfffffff4;
                Vffffffdd = Vffffffb8;
                Vffffffdf = Vffffffba;
                if(Vffffffc0 == 0) {
                    Vffffffdd = Vffffffdd + *Vfffffff0;
                    Vffffffde = Vffffffde + *(Vfffffff0 + 1);
                    Vffffffdf = Vffffffdf + *(Vfffffff0 + 2);
                }
                Vffffffd8 = Vffffffbc + Vffffffbc + (Vffffffbc + Vffffffbc) * 2 + (Vffffffbc + Vffffffbc + (Vffffffbc + Vffffffbc) * 2) * 4 + 0x5030fc;
                *(eax + 0x10) = *Vffffffd8;
                edi = 0;
                esi = eax + 0x14;
                for(ebx = Vffffffd8 + 8; edi < *(Vffffffd8 + 4); ebx = ebx + 3) {
                    Vfffffffa = *ebx;
                    Vfffffffc = *(ebx + 2);
                    Vfffffffa = Vfffffffa + Vffffffdd;
                    Vfffffffb = Vfffffffb + Vffffffde;
                    Vfffffffc = Vfffffffc + Vffffffdf;
                    if(Vfffffffa > 0xf) {
                        Vfffffffa = 0xf;
                    }
                    if(Vfffffffb > 0xf) {
                        Vfffffffb = 0xf;
                    }
                    if(Vfffffffc > 0xf) {
                        Vfffffffc = 0xf;
                    }
                    *L004f80a0(Vfffffffa);
                    *esi = ax & 65535;
                    edi = edi + 1;
                    esi = esi + 4;
                }
                eax = 0;
            }
        } else {
L0045ceb6:
            L0045BAD0( & Vffffffc8, ebx, Vffffffb8, Vffffffbc, Vffffffc0, Vffffffc4, *Vfffffff0);
            eax = & Vffffffc8;
            (save) *(eax + 0xc);
            (save) *(eax + 8);
            L0045B9E8( & Vfffffffd, *eax, *(eax + 4));
            eax = L0045CF0C(ebx, esi, edi, Vfffffff4, Vfffffffd);
        }
    }
}

/*    Procedure: 0x0045CF09 - 0x0045CF0B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045CF09()
{



}

/*    Procedure: 0x0045CF0C - 0x0045D027
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0045CAA8()
 */

L0045CF0C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;



    if(*Ac < 0x140) {
        if(*(Ac + 2) >= 0x9e) {
            goto L0045cfcc;
        }
        if(*A10 >= 0x140 || *(A10 + 2) >= 0x9e || *A14 >= 0x140 || *(A14 + 2) >= 0x9e) {
            goto L0045d00c;
        }
        *(ebp - 4) = L004614B8(5, L00461430(A8, Ac + 4), 0);
        *( *(ebp - 4)) = 0x461cd4;
        eax = *(ebp - 4);
        *(eax + 4) = *Ac;
        eax = *(ebp - 4);
        *(eax + 8) = *A10;
        eax = *(ebp - 4);
        *(eax + 0xc) = *A14;
        *L004f80a0(A18);
        eax = ax & 65535;
        *( *(ebp - 4) + 0x10) = eax;
        eax = 0;
    } else {
L0045cfcc:
        if(*A10 >= 0x140 || *(A10 + 2) >= 0x9e) {
            if(*A14 < 0x140 && *(A14 + 2) < 0x9e) {
                goto L0045d00c;
            }
            eax = L0045D74C(A8, Ac, A10, A14, A14, A18);
        } else {
L0045d00c:
            L0045D808(A8, Ac, A10, A14, A14, A18);
            eax = 0;
        }
    }
}

/*    Procedure: 0x0045D028 - 0x0045D07F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045D028(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    L0045D0C0(A8, *Ac, *(Ac + 4) & 0xff ^ 1, *(Ac + 2) & 0xff ^ 1, *(Ac + 5) & 0xff ^ 1, *(Ac + 3) & 0xff ^ 1, *(Ac + 6) ^ 1);
    return L0045D080(A8, Ac, A10);
}

/*    Procedure: 0x0045D080 - 0x0045D0BC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045D028()
 */

L0045D080(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0045D0C0(A8, *Ac, *(Ac + 4) & 0xff, *(Ac + 2) & 0xff, *(Ac + 5) & 0xff, *(Ac + 3) & 0xff, *(Ac + 6));
    return Ac + 8;
}

/*    Procedure: 0x0045D0BD - 0x0045D0BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045D0BD()
{



}

/*    Procedure: 0x0045D0C0 - 0x0045D74A
 *    Argument size: 28
 *    Local size: 60
 *    Save regs size: 12
 *    Called by:
 *        L0045D028()
 *        L0045D080()
 */

L0045D0C0(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc6;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe9;
    /* unknown */ void  Vffffffea;
    /* unknown */ void  Vffffffeb;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffb;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;



    edi = A1c;
    esi = A18;
    ebx = A14;
    eax = M00655af0;
    eax = !( *(eax + A20 * 8 + 3) >> 1 & 1) ? *L00501660(A8, A20) : (A20 << 3) + M00655af0;
    Vfffffff0 = eax;
    if(!( *(Vfffffff0 + 3) & 1)) {
        eax = 1;
    } else {
        L0045BA4C( & Vffffffc4, Ac);
        eax = bl + bl * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(A8 + 0xf0) ? (bl << 2) + (bl << 2) * 8 + M00655aec : *L00501680(A8, ebx);
        ebx = eax;
        eax = esi;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        if(eax == *(A8 + 0xf0)) {
            eax = esi;
            eax = (al << 2) + (al << 2) * 8 + M00655aec;
        } else {
            eax = *L00501680(A8, esi);
        }
        esi = eax;
        eax = edi;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(A8 + 0xf0) ? (edi << 2) + (edi << 2) * 8 + M00655aec : *L00501680(A8, edi);
        edi = eax;
        eax = *(M00655aec + (A10 + A10 * 8) * 4 + 0x14);
        eax = eax == *(A8 + 0xf0) ? (A10 << 2) + (A10 << 2) * 8 + M00655aec : *L00501680(A8, A10);
        Vfffffff4 = eax;
        if(M00644bb4 >= 0) {
            if(*Vfffffff4 < 63536 || *Vfffffff4 > 0x910 || *(Vfffffff4 + 2) < 63536 || *(Vfffffff4 + 2) > 0x86e || *ebx < 63536 || *ebx > 0x910 || *(ebx + 2) < 63536 || *(ebx + 2) > 0x86e || *esi < 63536 || *esi > 0x910 || *(esi + 2) < 63536 || *(esi + 2) > 0x86e || *edi < 63536 || *edi > 0x910 || *(edi + 2) < 63536 || *(edi + 2) > 0x86e) {
                goto L0045d5b6;
            }
            L0045BB6C( & Vffffffc4, A8, Vffffffc4, Vffffffc8, Vffffffcc, Vffffffd0);
            if(Vffffffc8 == 0) {
                goto L0045d5b6;
            }
            eax = !(eax = *Vfffffff4 - *ebx) ? *Vfffffff4 - *ebx : ~( *Vfffffff4 - *ebx);
            edx = *ebx;
            if(!(edx = edx - *esi)) {
                edx = *ebx;
                edx = edx - *esi;
            } else {
                edx = *ebx;
                edx = ~(edx - *esi);
            }
            eax = eax + edx;
            edx = *esi;
            if(!(edx = edx - *edi)) {
                edx = *esi;
                edx = edx - *edi;
            } else {
                edx = *esi;
                edx = ~(edx - *edi);
            }
            eax = eax + edx;
            edx = *edi;
            if(!(edx = edx - *Vfffffff4)) {
                edx = *edi;
                edx = edx - *Vfffffff4;
            } else {
                edx = *edi;
                edx = ~(edx - *Vfffffff4);
            }
            eax = eax + edx;
            edx = !(edx = *(Vfffffff4 + 2) - *(ebx + 2)) ? *(Vfffffff4 + 2) - *(ebx + 2) : ~( *(Vfffffff4 + 2) - *(ebx + 2));
            eax = eax + edx;
            edx = *(ebx + 2);
            if(!(edx = edx - *(esi + 2))) {
                edx = *(ebx + 2);
                edx = edx - *(esi + 2);
            } else {
                edx = *(ebx + 2);
                edx = ~(edx - *(esi + 2));
            }
            eax = eax + edx;
            edx = *(esi + 2);
            if(!(edx = edx - *(edi + 2))) {
                edx = *(esi + 2);
                edx = edx - *(edi + 2);
            } else {
                edx = *(esi + 2);
                edx = ~(edx - *(edi + 2));
            }
            eax = eax + edx;
            edx = *(edi + 2);
            if(!(edx = edx - *(Vfffffff4 + 2))) {
                edx = *(edi + 2);
                edx = edx - *(Vfffffff4 + 2);
            } else {
                edx = *(edi + 2);
                edx = ~(edx - *(Vfffffff4 + 2));
            }
            if(eax + edx < 6) {
                goto L0045d5b6;
            }
            (save)L0045DA7C(Vfffffff4);
            eax = L0045DA7C(ebx);
            (restore)edx;
            (save)edx | eax;
            eax = L0045DA7C(esi);
            (restore)edx;
            (save)edx | eax;
            eax = L0045DA7C(edi);
            (restore)edx;
            if(((edx | eax) << 3) + 0x504254 == 0) {
                eax = 1;
            } else {
                Vffffffec = L004614B8(0xd, L00461430(A8, Vfffffff4 + 4), 0);
                *Vffffffec = 0x461d0c;
                *(Vffffffec + 4) = *Vfffffff4;
                *(Vffffffec + 8) = *ebx;
                *(Vffffffec + 0xc) = *esi;
                *(Vffffffec + 0x10) = *edi;
                Vffffffe9 = Vffffffc4;
                Vffffffeb = Vffffffc6;
                if(Vffffffcc == 0) {
                    Vffffffe9 = Vffffffe9 + *Vfffffff0;
                    Vffffffea = Vffffffea + *(Vfffffff0 + 1);
                    Vffffffeb = Vffffffeb + *(Vfffffff0 + 2);
                }
                Vffffffe4 = Vffffffc8 + Vffffffc8 + (Vffffffc8 + Vffffffc8) * 2 + (Vffffffc8 + Vffffffc8 + (Vffffffc8 + Vffffffc8) * 2) * 4 + 0x5030fc;
                *(Vffffffec + 0x14) = *Vffffffe4;
                edi = 0;
                esi = Vffffffec + 0x18;
                for(ebx = Vffffffe4 + 8; edi < *(Vffffffe4 + 4); ebx = ebx + 3) {
                    Vfffffffa = *ebx;
                    Vfffffffc = *(ebx + 2);
                    Vfffffffa = Vfffffffa + Vffffffe9;
                    Vfffffffb = Vfffffffb + Vffffffea;
                    Vfffffffc = Vfffffffc + Vffffffeb;
                    if(Vfffffffa > 0xf) {
                        Vfffffffa = 0xf;
                    }
                    if(Vfffffffb > 0xf) {
                        Vfffffffb = 0xf;
                    }
                    if(Vfffffffc > 0xf) {
                        Vfffffffc = 0xf;
                    }
                    *L004f80a0(Vfffffffa);
                    *esi = ax & 65535;
                    edi = edi + 1;
                    esi = esi + 4;
                }
                eax = 0;
            }
        } else {
L0045d5b6:
            L0045BAD0( & Vffffffd4, A8, Vffffffc4, Vffffffc8, Vffffffcc, Vffffffd0, *Vfffffff0);
            eax = & Vffffffd4;
            (save) *(eax + 0xc);
            (save) *(eax + 8);
            L0045B9E8( & Vfffffffd, *eax, *(eax + 4));
            if(*Vfffffff4 < 0x140) {
                if(*(Vfffffff4 + 2) >= 0x9e) {
                    goto L0045d6d3;
                }
                if(*ebx >= 0x140 || *(ebx + 2) >= 0x9e || *esi >= 0x140 || *(esi + 2) >= 0x9e || *edi >= 0x140 || *(edi + 2) >= 0x9e) {
                    goto L0045d72b;
                }
                Vffffffec = L004614B8(6, L00461430(A8, Vfffffff4 + 4), 0);
                *Vffffffec = 0x462024;
                *(Vffffffec + 4) = *Vfffffff4;
                *(Vffffffec + 8) = *ebx;
                *(Vffffffec + 0xc) = *esi;
                *(Vffffffec + 0x10) = *edi;
                *L004f80a0(Vfffffffd);
                eax = ax & 65535;
                *(Vffffffec + 0x14) = eax;
                eax = 0;
            } else {
L0045d6d3:
                if(*ebx >= 0x140 || *(ebx + 2) >= 0x9e) {
                    if(*esi < 0x140 && *(esi + 2) < 0x9e || *edi < 0x140 && *(edi + 2) < 0x9e) {
                        goto L0045d72b;
                    }
                    eax = L0045D74C(A8, Vfffffff4, ebx, esi, edi, Vfffffffd);
                } else {
L0045d72b:
                    L0045D808(A8, Vfffffff4, ebx, esi, edi, Vfffffffd);
                    eax = 0;
                }
            }
        }
    }
}

/*    Procedure: 0x0045D74B - 0x0045D74B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045D74B()
{



}

/*    Procedure: 0x0045D74C - 0x0045D805
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045CF0C()
 *        L0045D0C0()
 */

L0045D74C(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    (save)L0045DA14( *Ac);
    eax = L0045DA14( *A10);
    (restore)edx;
    (save)edx | eax;
    eax = L0045DA14( *A14);
    (restore)edx;
    (save)edx | eax;
    (restore)edx;
    if(*((edx | L0045DA14( *A18)) * 4 + 0x504330) == 0) {
        (save)L0045DA48( *(Ac + 2));
        eax = L0045DA48( *(A10 + 2));
        (restore)edx;
        (save)edx | eax;
        eax = L0045DA48( *(A14 + 2));
        (restore)edx;
        (save)edx | eax;
        (restore)edx;
        if(*((edx | L0045DA48( *(A18 + 2))) * 4 + 0x504330) == 0) {
            goto L0045d7e8;
        }
    }
    eax = 1;
    goto L0045d801;
L0045d7e8:
    L0045D808(A8, Ac, A10, A14, A18, A1c);
    eax = 0;
L0045d801:
}

/*    Procedure: 0x0045D806 - 0x0045D807
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045D806()
{



}

/*    Procedure: 0x0045D808 - 0x0045DA12
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045CF0C()
 *        L0045D0C0()
 *        L0045D74C()
 */

L0045D808(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = Ac;
    edi = L004614B8(0, L00461430(A8, esi + 4), 0);
    *edi = 0x4618a0;
    *(edi + 4) = 0x4618b8;
    for(ebx = 2; *(esi + 0xc) < 0x40; A18 = eax) {
        eax = esi;
        esi = A10;
        A10 = A14;
        A14 = A18;
    }
    if(*(A10 + 0xc) < 0x40) {
        *(edi + ebx * 4) = *esi;
        ebx = ebx + 1;
        eax = ebx;
        ebx = ebx + 1;
        L00454E54((eax << 2) + edi, A10 + 4, esi + 4);
        if(*(A14 + 0xc) >= 0x40) {
            *(edi + ebx * 4) = 0x4618e0;
            ebx = ebx + 1;
            eax = ebx;
            ebx = ebx + 1;
            L00454E54((eax << 2) + edi, A10 + 4, A14 + 4);
            eax = 1;
        } else {
            eax = 0;
        }
    } else {
        *(edi + ebx * 4) = *esi;
        ebx = ebx + 1;
        *(edi + ebx * 4) = *A10;
        ebx = ebx + 1;
        if(*(A14 + 0xc) < 0x40) {
            *(edi + ebx * 4) = 0x4618e0;
            ebx = ebx + 1;
            eax = ebx;
            ebx = ebx + 1;
            L00454E54((eax << 2) + edi, A14 + 4, A10 + 4);
            eax = 0;
        } else {
            eax = 1;
        }
    }
    if(!(edx = eax - 1)) {
        == ? L0045d955 : ;
    } else {
        if(*(A18 + 0xc) >= 0x40) {
            *(edi + ebx * 4) = 0x4618e0;
            ebx = ebx + 1;
            eax = ebx;
            ebx = ebx + 1;
            L00454E54((eax << 2) + edi, A14 + 4, A18 + 4);
            eax = 1;
        } else {
            eax = 0;
            goto L0045d99f;
            *(edi + ebx * 4) = 0x4618e0;
            ebx = ebx + 1;
            *(edi + ebx * 4) = *A14;
            ebx = ebx + 1;
            if(*(A18 + 0xc) < 0x40) {
                *(edi + ebx * 4) = 0x4618e0;
                ebx = ebx + 1;
                eax = ebx;
                ebx = ebx + 1;
                L00454E54((eax << 2) + edi, A18 + 4, A14 + 4);
                eax = 0;
            } else {
                eax = 1;
            }
        }
    }
L0045d99f:
    if(!(eax = eax - 1)) {
        == ? L0045d9ce : ;
    } else {
        *(edi + ebx * 4) = 0x4618e0;
        ebx = ebx + 1;
        eax = ebx;
        ebx = ebx + 1;
        L00454E54((eax << 2) + edi, A18 + 4, esi + 4);
        goto L0045d9df;
        *(edi + ebx * 4) = 0x4618e0;
        ebx = ebx + 1;
        *(edi + ebx * 4) = *A18;
        ebx = ebx + 1;
    }
L0045d9df:
    *(edi + ebx * 4) = 0x4618e0;
    ebx = ebx + 1;
    *(edi + ebx * 4) = *esi;
    ebx = ebx + 1;
    *(edi + ebx * 4) = 0x461940;
    ebx = ebx + 1;
    *L004f80a0(A1c);
    *(edi + ebx * 4) = ax & 65535;
    return L00461674(ebx + 1);
}

/*    Procedure: 0x0045DA13 - 0x0045DA13
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DA13()
{



}

/*    Procedure: 0x0045DA14 - 0x0045DA45
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045C848()
 *        L0045D74C()
 *        L0046F8F4()
 */

L0045DA14(A8)
/* unknown */ void  A8;
{



    if(A8 == -32766) {
        return 8;
    }
    if(A8 < 0x140) {
        return 2;
    }
    edx = 1;
    if(A8 >= 0) {
        edx = 4;
    }
    return edx;
}

/*    Procedure: 0x0045DA46 - 0x0045DA47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DA46()
{



}

/*    Procedure: 0x0045DA48 - 0x0045DA79
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045C848()
 *        L0045D74C()
 *        L0046F8F4()
 */

L0045DA48(A8)
/* unknown */ void  A8;
{



    if(A8 == -32766) {
        return 8;
    }
    if(A8 < 0x9e) {
        return 2;
    }
    edx = 1;
    if(A8 >= 0) {
        edx = 4;
    }
    return edx;
}

/*    Procedure: 0x0045DA7A - 0x0045DA7B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DA7A()
{



}

/*    Procedure: 0x0045DA7C - 0x0045DABE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045CAA8()
 *        L0045D0C0()
 */

L0045DA7C(A8)
/* unknown */ void  A8;
{



    eax = 0;
    cx = *A8;
    eax = cx < 0 ? 1 : cx >= 0x140 ? eax | 4 : eax | 2;
    cx = *(A8 + 2);
    eax = cx < 0 ? eax | 8 : cx >= 0x9e ? eax | 0x20 : eax | 0x10;
}

/*    Procedure: 0x0045DABF - 0x0045DABF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DABF()
{



}

/*    Procedure: 0x0045DAC0 - 0x0045DADA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045DB33()
 *        L0045DD1A()
 *        L0045DFD0()
 *        L0045E06C()
 */

L0045DAC0(A8)
/* unknown */ void  A8;
{



    eax = L00461674(2);
    *eax = 0x4618e0;
    *(eax + 4) = *A8;
}

/*    Procedure: 0x0045DADB - 0x0045DADB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DADB()
{



}

/*    Procedure: 0x0045DADC - 0x0045DAFE
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045DE08()
 *        L0045E06C()
 */

L0045DADC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = L00461674(3);
    *eax = 0x4618b8;
    *(eax + 4) = *A8;
    *(eax + 8) = *Ac;
}

/*    Procedure: 0x0045DAFF - 0x0045DAFF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DAFF()
{



}

/*    Procedure: 0x0045DB00 - 0x0045DB32
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045E1DC()
 *        L0045E305()
 */

L0045DB00(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L00461674(5);
    *eax = 0x461908;
    *(eax + 4) = *A8;
    *(eax + 8) = *Ac;
    *(eax + 0xc) = *A10;
    *(eax + 0x10) = *A14;
}

/*    Procedure: 0x0045DB33 - 0x0045DD09
 *    Argument size: 12
 *    Local size: 40
 *    Save regs size: 12
 */

L0045DB33(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffd;



    edi = A10;
    ebx = Ac;
    esi = A8;
    eax = *(ebx + 2) & 0x7f;
    eax = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(esi, *(ebx + 2) & 0x7f) : (( *(ebx + 2) & 0x7f) << 3) + M00655af0;
    Vfffffff8 = eax;
    edi = *ebx;
    ebx = ebx + 2 + 2;
    if(!( *(Vfffffff8 + 3) & 1)) {
        eax = ( *(ebx - 1) & 0xff) + ebx;
    } else {
        (save) *Vfffffff8;
        L0045BA4C( & Vffffffd8, edi);
        eax = & Vffffffd8;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        (save) *(eax + 4);
        (save) *eax;
        (save)esi;
        (save) & Vffffffe8;
        L0045BAD0();
        esp = esp + 0x1c;
        eax = & Vffffffe8;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        L0045B9E8( & Vfffffffd, *eax, *(eax + 4));
        *(esi + 0x118) = 0;
        *(esi + 0x128) = *(ebx - 2) & 0xff & 0x80;
        (save)0;
        eax = ( *ebx & 0x7f) + ( *ebx & 0x7f) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(esi + 0xf0) ? (( *ebx & 0x7f) << 2) + (( *ebx & 0x7f) << 2) * 8 + M00655aec : *L00501688(esi, *ebx & 0x7f);
        (save)L00461430(esi, eax + 4);
        (save)1;
        eax = L004614B8();
        esp = esp + 0xc;
        *(esi + 0x12c) = eax;
        for(*( *(esi + 0x12c)) = 0x4618a0; 1; ebx = *eax(esi, ebx, edi)) {
            edi = *ebx;
            ebx = ebx + 2;
            eax = *((edi >> 9) * 4 + 0x504314);
            if(eax == 0x45dd0c) {
                break;
            }
        }
        if(*(esi + 0x128) == -1) {
            L00461518( *(esi + 0x12c));
            *(L00461674(1)) = 0x46217c;
        } else {
            if(*(esi + 0x104) != 0) {
                ebx = L0045DFD0(esi, ebx, *(esi + 0x110));
                if(*(esi + 0x10c) != 0) {
                    L0045DAC0(esi + 0x108);
                }
            }
            esi = L00461674(2);
            *esi = 0x461940;
            *L004f80a0(Vfffffffd);
            *(esi + 4) = ax & 65535;
        }
        eax = ebx;
    }
}

/*    Procedure: 0x0045DD0A - 0x0045DD19
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DD0A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return Ac;
}

/*    Procedure: 0x0045DD1A - 0x0045DD61
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045DD1A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    esi = Ac;
    if(*(A8 + 0x104) != 0) {
        esi = L0045DFD0(A8, esi, *(A8 + 0x110));
        if(*(A8 + 0x10c) != 0) {
            L0045DAC0(A8 + 0x108);
        }
    }
    return esi;
}

/*    Procedure: 0x0045DD62 - 0x0045DE04
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045DD62(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    edi = A10;
    al = edi & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi & 0xff) << 2) + ((edi & 0xff) << 2) * 8 + M00655aec : *L00501680(A8, edi & 0xff);
    edi = eax;
    *(A8 + 0x110) = edi;
    eax = *Ac + *Ac * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *Ac << 2) + ( *Ac << 2) * 8 + M00655aec : *L00501680(A8, *Ac);
    return L0045DE08(A8, Ac + 2, edi, eax);
}

/*    Procedure: 0x0045DE05 - 0x0045DE07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DE05()
{



}

/*    Procedure: 0x0045DE08 - 0x0045DEF7
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0045DD62()
 *        L0045E1DC()
 */

L0045DE08(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    *(A8 + 0x114) = A14;
    *(A8 + 0x104) = -1;
    if(*(A10 + 0xc) < 0x40) {
        if(*(A8 + 0x128) != 0) {
            goto L0045dee5;
        }
        if(*(A14 + 0xc) < 0x40) {
            *(A8 + 0x104) = 0;
            *(A8 + 0x10c) = -1;
            eax = Ac;
        } else {
            L00454E54(A8 + 0x108, A10 + 4, A14 + 4);
            *(A8 + 0x10c) = 0;
            L0045DADC(A8 + 0x108, A14);
            eax = Ac;
        }
    } else {
        if(*(A14 + 0xc) < 0x40) {
            if(*(A8 + 0x128) != 0) {
                goto L0045dee5;
            }
            L00454E54(ebp - 4, A14 + 4, A10 + 4);
            *(A8 + 0x10c) = -1;
            L0045DADC(A10, ebp - 4);
            eax = Ac;
        } else {
            *(A8 + 0x10c) = 0;
            L0045DADC(A10, A14);
            eax = Ac;
            goto L0045def2;
L0045dee5:
            eax = L0045DEF8(A8, Ac);
        }
    }
L0045def2:
}

/*    Procedure: 0x0045DEF8 - 0x0045DF35
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045DE08()
 *        L0045DFD0()
 *        L0045E305()
 */

L0045DEF8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    for(eax = Ac; 1; eax = *ecx(A8, eax, edx)) {
        edx = *eax;
        eax = eax + 2;
        ecx = *((edx >> 9) * 4 + 0x504370);
        if(ecx == 0x45dd0c) {
            break;
        }
    }
    *(A8 + 0x128) = -1;
    return eax - 2;
}

/*    Procedure: 0x0045DF36 - 0x0045DF48
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DF36(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return Ac + 2;
}

/*    Procedure: 0x0045DF49 - 0x0045DF59
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DF49(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return Ac;
}

/*    Procedure: 0x0045DF5A - 0x0045DF6C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DF5A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return Ac + 4;
}

/*    Procedure: 0x0045DF6D - 0x0045DFCC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045DF6D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    al = A10 & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((A10 & 0xff) << 2) + ((A10 & 0xff) << 2) * 8 + M00655aec : *L00501680(A8, A10 & 0xff);
    return L0045DFD0(A8, Ac, eax);
}

/*    Procedure: 0x0045DFCD - 0x0045DFCF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045DFCD()
{



}

/*    Procedure: 0x0045DFD0 - 0x0045E068
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0045DB33()
 *        L0045DD1A()
 *        L0045DF6D()
 */

L0045DFD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;



    if(*(A8 + 0x10c) == 0) {
        if(*(A10 + 0xc) >= 0x40) {
            *(A8 + 0x114) = A10;
            L0045DAC0(A10);
        } else {
            if(*(A8 + 0x128) != 0) {
                eax = L0045DEF8(A8, Ac);
                goto L0045e063;
            }
            L00454E54(ebp - 4, A10 + 4, *(A8 + 0x114) + 4);
            *(A8 + 0x114) = A10;
            *(A8 + 0x10c) = -1;
            L0045DAC0(ebp - 4);
        }
    } else {
        if(*(A10 + 0xc) >= 0x40) {
            L0045E06C(A8, A10);
        } else {
            *(A8 + 0x114) = A10;
        }
    }
    eax = Ac;
L0045e063:
}

/*    Procedure: 0x0045E069 - 0x0045E06B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045E069()
{



}

/*    Procedure: 0x0045E06C - 0x0045E0E0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045DFD0()
 *        L0045E0E1()
 */

L0045E06C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    eax = *(A8 + 0x114);
    *(A8 + 0x114) = Ac;
    *(A8 + 0x10c) = 0;
    L00454E54(ebp - 4, eax + 4, Ac + 4);
    if(*(A8 + 0x104) != 0) {
        L0045DAC0(ebp - 4);
        eax = L0045DAC0(Ac);
    } else {
        *(A8 + 0x104) = -1;
        *(A8 + 0x108) = *(ebp - 4);
        eax = L0045DADC(ebp - 4, Ac);
    }
}

/*    Procedure: 0x0045E0E1 - 0x0045E16F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045E0E1(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = *(A8 + 0x114);
    if(*(eax + 0xc) < 0x40) {
        al = A10 & 0xff;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((A10 & 0xff) << 2) + ((A10 & 0xff) << 2) * 8 + M00655aec : *L00501680(A8, A10 & 0xff);
        if(*(eax + 0xc) < 0x40) {
            *(A8 + 0x114) = eax;
            eax = Ac + 2;
        } else {
            L0045E06C(A8, eax);
            eax = Ac + 2;
        }
    } else {
        eax = L0045E1DC(A8, Ac, A10, eax);
    }
}

/*    Procedure: 0x0045E170 - 0x0045E1D9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L0045E170(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    eax = A10;
    eax = *(Ac + 1) + *(Ac + 1) * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    edi = eax == *(A8 + 0xf0) ? ( *(Ac + 1) << 2) + ( *(Ac + 1) << 2) * 8 + M00655aec : *L00501680(A8, *(Ac + 1));
    *(A8 + 0x110) = edi;
    return L0045E1DC(A8, Ac + 2, *Ac & 0xff, edi);
}

/*    Procedure: 0x0045E1DA - 0x0045E1DB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045E1DA()
{



}

/*    Procedure: 0x0045E1DC - 0x0045E304
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0045E0E1()
 *        L0045E170()
 */

L0045E1DC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    edi = A10;
    al = edi & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi & 0xff) << 2) + ((edi & 0xff) << 2) * 8 + M00655aec : *L00501680(A8, edi & 0xff);
    edi = eax;
    eax = *(Ac + 1) + *(Ac + 1) * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *(Ac + 1) << 2) + ( *(Ac + 1) << 2) * 8 + M00655aec : *L00501680(A8, *(Ac + 1));
    *(ebp - 4) = eax;
    eax = *Ac + *Ac * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *Ac << 2) + ( *Ac << 2) * 8 + M00655aec : *L00501680(A8, *Ac);
    if(*(eax + 0xc) < 0x40 || *(A14 + 0xc) < 0x40 || *(edi + 0xc) < 0x40 || *( *(ebp - 4) + 0xc) < 0x40) {
        eax = L0045DE08(A8, Ac + 2, A14, eax);
    } else {
        *(A8 + 0x114) = eax;
        *(A8 + 0x10c) = 0;
        *(A8 + 0x104) = -1;
        L0045DB00(A14, edi, *(ebp - 4), eax);
        eax = Ac + 2;
    }
}

/*    Procedure: 0x0045E305 - 0x0045E4F8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045E305(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -152;
    (save)A8;
    (save)Ac;
    (save)edi;
    edi = A10;
    al = edi & 0xff;
    eax = al + al * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? ((edi & 0xff) << 2) + ((edi & 0xff) << 2) * 8 + M00655aec : *L00501680(A8, edi & 0xff);
    edi = eax;
    if(*(edi + 0xc) > 0x40) {
        eax = *Ac & 0xff;
        if(eax != *(A8 + 0x118)) {
            *(A8 + 0x118) = eax;
            eax = (( *Ac & 0xff) >> 1) + (( *Ac & 0xff) >> 1) * 2;
            *(ebp - 0xc) = *( *(A8 + 0x154) + eax * 2 - 4);
            *(ebp - 8) = *( *(A8 + 0x154) + eax * 2 - 3);
            *(ebp - 4) = *( *(A8 + 0x154) + eax * 2 - 2);
            if(!( *Ac & 1)) {
                *(ebp - 0xc) = ~( *(ebp - 0xc));
            }
            (save) *(ebp - 0xc);
            (save)L004537B0( *(A8 + 0x14));
            (save) *(ebp - 8);
            eax = L004537B0( *(A8 + 0x20));
            (restore)edx;
            (save)edx + eax;
            (save) *(ebp - 4);
            eax = L004537B0( *(A8 + 0x2c));
            (restore)edx;
            *(A8 + 0x11c) = edx + eax;
            (save) *(ebp - 0xc);
            (save)L004537B0( *(A8 + 0x18));
            (save) *(ebp - 8);
            eax = L004537B0( *(A8 + 0x24));
            (restore)edx;
            (save)edx + eax;
            (save) *(ebp - 4);
            eax = L004537B0( *(A8 + 0x30));
            (restore)edx;
            *(A8 + 0x120) = edx + eax;
            (save) *(ebp - 0xc);
            (save)L004537B0( *(A8 + 0x1c));
            (save) *(ebp - 8);
            eax = L004537B0( *(A8 + 0x28));
            (restore)edx;
            (save)edx + eax;
            (save) *(ebp - 4);
            eax = L004537B0( *(A8 + 0x34));
            (restore)edx;
            *(A8 + 0x124) = edx + eax;
        }
        ecx = *(A8 + 0x148);
        if(L004547F0(ebp + -152, edi + 4, A8 + 0x11c, ( *(Ac + 1) & 0xff) << cl) != 0) {
            L0045DB00(ebp - 0x2c, ebp - 0x28, ebp - 0x24, ebp - 0x20);
            L0045DB00(ebp - 0x1c, ebp - 0x18, ebp - 0x14, ebp - 0x10);
        }
    } else {
        if(*(A8 + 0x128) != 0) {
            eax = L0045DEF8(A8, Ac);
            goto L0045e4f2;
        }
    }
    *(A8 + 0x104) = 0;
    eax = Ac + 2;
L0045e4f2:
    (restore)edi;
    (restore)Ac;
    (restore)A8;
}

/*    Procedure: 0x0045E4F9 - 0x0045E737
 *    Argument size: 8
 *    Local size: 48
 *    Save regs size: 12
 */

L0045E4F9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffd;



    esi = A8;
    eax = *(Ac + 6) & 0xff;
    edi = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(esi, *(Ac + 6) & 0xff) : (( *(Ac + 6) & 0xff) << 3) + M00655af0;
    if(!( *(edi + 3) & 1)) {
        eax = Ac + 8;
    } else {
        (save) *edi;
        L0045BA4C( & Vffffffd0, *Ac);
        eax = & Vffffffd0;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        (save) *(eax + 4);
        (save) *eax;
        (save)esi;
        (save) & Vffffffe0;
        L0045BAD0();
        esp = esp + 0x1c;
        eax = & Vffffffe0;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        L0045B9E8( & Vfffffffd, *eax, *(eax + 4));
        eax = *(Ac + 5) + *(Ac + 5) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(esi + 0xf0) ? ( *(Ac + 5) << 2) + ( *(Ac + 5) << 2) * 8 + M00655aec : *L00501680(esi, *(Ac + 5));
        Vfffffff4 = eax;
        eax = *(Ac + 4) + *(Ac + 4) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        edi = eax == *(esi + 0xf0) ? ( *(Ac + 4) << 2) + ( *(Ac + 4) << 2) * 8 + M00655aec : *L00501680(esi, *(Ac + 4));
        eax = *(Ac + 3) + *(Ac + 3) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(esi + 0xf0) ? ( *(Ac + 3) << 2) + ( *(Ac + 3) << 2) * 8 + M00655aec : *L00501680(esi, *(Ac + 3));
        Vfffffff0 = eax;
        eax = *(Ac + 2) + *(Ac + 2) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(esi + 0xf0) ? ( *(Ac + 2) << 2) + ( *(Ac + 2) << 2) * 8 + M00655aec : *L00501680(esi, *(Ac + 2));
        Vfffffff8 = eax;
        if(*(edi + 0xc) >= 0x40 && *(Vfffffff8 + 0xc) >= 0x40 && *(Vfffffff4 + 0xc) >= 0x40 && *(Vfffffff0 + 0xc) >= 0x40) {
            esi = L004614B8(0xa, L00461430(esi, edi + 4), 0);
            *esi = 0x46209c;
            *(esi + 4) = *edi;
            *(esi + 8) = *(edi + 2);
            *(esi + 0xc) = *Vfffffff8;
            *(esi + 0x10) = *(Vfffffff8 + 2);
            *(esi + 0x14) = *Vfffffff4;
            *(esi + 0x18) = *(Vfffffff4 + 2);
            *(esi + 0x1c) = *Vfffffff0;
            *(esi + 0x20) = *(Vfffffff0 + 2);
            *L004f80a0(Vfffffffd);
            *(esi + 0x24) = ax & 65535;
        }
        eax = Ac + 8;
    }
}

/*    Procedure: 0x0045E738 - 0x0045EBBF
 *    Argument size: 12
 *    Local size: 72
 *    Save regs size: 12
 */

L0045E738(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffb8;
    /* unknown */ void  Vffffffb9;
    /* unknown */ void  Vffffffba;
    /* unknown */ void  Vffffffbc;
    /* unknown */ void  Vffffffc0;
    /* unknown */ void  Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffca;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;
    /* unknown */ void  Vffffffff;



    eax = A10;
    esi = Ac;
    L0045BA4C( & Vffffffcc, *esi);
    eax = & Vffffffcc;
    L0045BB24( & Vffffffb8, A8, *eax, *(eax + 4), *(eax + 8), *(eax + 0xc));
    (save)Vffffffc4;
    (save)Vffffffc0;
    L0045B9E8( & Vfffffffd, Vffffffb8, Vffffffbc);
    esi = esi + 2;
    Vfffffff8 = *(esi + 2);
    eax = *esi + *esi * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *esi << 2) + ( *esi << 2) * 8 + M00655aec : *L00501680(A8, *esi);
    Vffffffe8 = eax;
    if(*(Vffffffe8 + 0xc) <= 0x200) {
        eax = esi + 4;
    } else {
        eax = *(esi + 1) + *(esi + 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax == *(A8 + 0xf0) ? ( *(esi + 1) << 2) + ( *(esi + 1) << 2) * 8 + M00655aec : *L00501680(A8, *(esi + 1));
        Vffffffec = eax;
        if(*(Vffffffec + 0xc) <= 0x200) {
            eax = esi + 4;
        } else {
            eax = *(A8 + 0x148) - 6;
            Vfffffff8 = eax < 0 ? Vfffffff8 >> ~eax : Vfffffff8 << eax;
            Vfffffff8 = L0045A51C(Vfffffff8, *(Vffffffe8 + 0xc));
            if(Vfffffff8 == 0) {
                eax = esi + 4;
            } else {
                if(Vfffffff8 <= 4) {
                    L0045C848(A8, Vffffffe8, Vffffffec, Vfffffffd);
                    eax = esi + 4;
                } else {
                    Vffffffe4 = *Vffffffe8 - *Vffffffec;
                    Vffffffe0 = *(Vffffffe8 + 2) - *(Vffffffec + 2);
                    eax = Vffffffe4;
                    asm("imul dword [ebp-0x1c]");
                    edx = Vffffffe0;
                    Vffffffdc = *L00501670(eax + Vffffffe0 * Vffffffe0);
                    if(Vffffffdc < Vfffffff8) {
                        ecx = L004614B8(0xd, L00461430(A8, Vffffffe8 + 4), 0);
                        *ecx = 0x461d0c;
                        eax = *Vffffffec + *Vffffffe8 + *Vffffffe8;
                        ebx = 3;
                        asm("cdq");
                        edx = ebx / ebx % ebx / ebx;
                        Vffffffc8 = ax;
                        eax = *(Vffffffec + 2) + *(Vffffffe8 + 2) + *(Vffffffe8 + 2);
                        ebx = 3;
                        asm("cdq");
                        edx = ebx / ebx % ebx / ebx;
                        Vffffffca = ax;
                        eax = Vfffffff8 >> 2;
                        Vfffffff4 = ax;
                        eax = Vfffffff8 >> 2;
                        Vfffffff6 = ax;
                        eax = ~Vfffffff8 >> 2;
                        Vfffffff0 = ax;
                        Vfffffff2 = Vfffffff8 >> 2;
                        *(ecx + 4) = Vffffffc8 + Vfffffff0;
                        *(ecx + 6) = Vffffffca + Vfffffff2;
                        *(ecx + 8) = Vffffffc8 + Vfffffff4;
                        *(ecx + 0xa) = Vffffffca + Vfffffff6;
                        *(ecx + 0xc) = ~Vfffffff0 + Vffffffc8;
                        *(ecx + 0xe) = ~Vfffffff2 + Vffffffca;
                        *(ecx + 0x10) = ~Vfffffff4 + Vffffffc8;
                        *(ecx + 0x12) = ~Vfffffff6 + Vffffffca;
                        *(ecx + 0x14) = 0x123;
                        ebx = 1;
                        edi = ecx + 0x1c;
                        do {
                            eax = Vffffffb8 & 0xff;
                            ecx = ebx + 1;
                            asm("imul ecx");
                            (save)ecx;
                            ecx = 7;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            (restore)ecx;
                            Vfffffffd = al;
                            eax = Vffffffb9 & 0xff;
                            asm("imul ecx");
                            (save)ecx;
                            ecx = 7;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            (restore)ecx;
                            Vfffffffe = al;
                            eax = Vffffffba & 0xff;
                            asm("imul ecx");
                            ecx = 7;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            Vffffffff = al;
                            *L004f80a0(Vfffffffd);
                            *edi = ax & 65535;
                            ebx = ebx + 1;
                            edi = edi + 4;
                        } while(ebx < 7);
                        if(Vffffffdc << 3 >= Vfffffff8) {
                            goto L0045ea62;
                        }
                        eax = esi + 4;
                    } else {
L0045ea62:
                        ecx = L004614B8(0xd, L00461430(A8, Vffffffe8 + 4), 0);
                        *ecx = 0x461d0c;
                        eax = Vffffffe4 << 0xf;
                        asm("cdq");
                        Vffffffdc = Vffffffdc / Vffffffdc;
                        edx = Vffffffdc % Vffffffdc;
                        Vfffffff4 = ax;
                        eax = Vffffffe0 << 0xf;
                        asm("cdq");
                        Vffffffdc = Vffffffdc / Vffffffdc;
                        edx = Vffffffdc % Vffffffdc;
                        ebx = eax;
                        Vfffffff6 = bx;
                        eax = Vfffffff6;
                        asm("imul dword [ebp-0x8]");
                        eax = eax >> 0x11;
                        Vfffffff0 = ax;
                        eax = Vfffffff4;
                        asm("imul dword [ebp-0x8]");
                        Vfffffff2 = ~eax >> 0x11;
                        *(ecx + 4) = *Vffffffe8 + Vfffffff0;
                        *(ecx + 6) = *(Vffffffe8 + 2) + Vfffffff2;
                        *(ecx + 8) = *Vffffffec + Vfffffff0;
                        *(ecx + 0xa) = *(Vffffffec + 2) + Vfffffff2;
                        *(ecx + 0xc) = *Vffffffec + ~Vfffffff0;
                        *(ecx + 0xe) = *(Vffffffec + 2) + ~Vfffffff2;
                        *(ecx + 0x10) = *Vffffffe8 + ~Vfffffff0;
                        *(ecx + 0x12) = *(Vffffffe8 + 2) + ~Vfffffff2;
                        *(ecx + 0x14) = 0x65;
                        ebx = 1;
                        edi = ecx + 0x1c;
                        do {
                            eax = Vffffffb8 & 0xff;
                            ecx = ebx + 1;
                            asm("imul ecx");
                            (save)ecx;
                            ecx = 7;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            (restore)ecx;
                            Vfffffffd = al;
                            eax = Vffffffb9 & 0xff;
                            asm("imul ecx");
                            (save)ecx;
                            ecx = 7;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            (restore)ecx;
                            Vfffffffe = al;
                            eax = Vffffffba & 0xff;
                            asm("imul ecx");
                            ecx = 7;
                            asm("cdq");
                            edx = ecx / ecx % ecx / ecx;
                            Vffffffff = al;
                            *L004f80a0(Vfffffffd);
                            *edi = ax & 65535;
                            ebx = ebx + 1;
                            edi = edi + 4;
                        } while(ebx < 7);
                        eax = esi + 4;
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x0045EBC0 - 0x0045ED34
 *    Argument size: 20
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L0045ED38()
 *        L0045EDE3()
 */

L0045EBC0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edx = A14;
    Ac = A10;
    ecx = A8;
    esi = A18 >> 8 & 7;
    if(esi <= 6) {
        switch(esi) {
            case 0:
L0045ec08:
                Vfffffffc = ecx;
                Vfffffff8 = ecx + 0xc;
                Vfffffff4 = ecx + 0x18;
                goto L0045ec75;
            case 1:
                Vfffffffc = ecx + 0xc;
                Vfffffff8 = ecx + 0x18;
                Vfffffff4 = ecx;
                goto L0045ec75;
            case 2:
                Vfffffffc = ecx + 0x18;
                Vfffffff8 = ecx;
                Vfffffff4 = ecx + 0xc;
                goto L0045ec75;
            case 3:
                edx = edx ^ -1;
                Vfffffffc = ecx + 0x18;
                Vfffffff8 = ecx + 0xc;
                Vfffffff4 = ecx;
                goto L0045ec75;
            case 4:
                edx = edx ^ -1;
                Vfffffffc = ecx + 0xc;
                Vfffffff8 = ecx;
                Vfffffff4 = ecx + 0x18;
                goto L0045ec75;
            case 5:
                edx = edx ^ -1;
                Vfffffffc = ecx;
                Vfffffff8 = ecx + 0x18;
                Vfffffff4 = ecx + 0xc;
                goto L0045ec75;
            case 6:
                goto L0045ec08;
        }
        goto L0045ec08;
    }
L0045ec75:
    if(!(bh & 0x20)) {
        ecx = ~( *Ac);
        *Vfffffffc = ecx;
        ecx = ~( *(Ac + 4));
        *(Vfffffffc + 4) = ecx;
        ecx = ~( *(Ac + 8));
        *(Vfffffffc + 8) = ecx;
        edx = !edx;
    } else {
        ecx = Vfffffffc;
        *ecx = *Ac;
        *(ecx + 4) = *(Ac + 4);
        *(ecx + 8) = *(Ac + 8);
    }
    if(!(bh & 0x10)) {
        ecx = ~( *(Ac + 0xc));
        *Vfffffff8 = ecx;
        ecx = ~( *(Ac + 0x10));
        *(Vfffffff8 + 4) = ecx;
        ecx = ~( *(Ac + 0x14));
        *(Vfffffff8 + 8) = ecx;
        edx = !edx;
    } else {
        ecx = Vfffffff8;
        *ecx = *(Ac + 0xc);
        *(ecx + 4) = *(Ac + 0x10);
        *(ecx + 8) = *(Ac + 0x14);
    }
    if(!(bh & 8)) {
        ecx = ~( *(Ac + 0x18));
        *Vfffffff4 = ecx;
        ecx = ~( *(Ac + 0x1c));
        *(Vfffffff4 + 4) = ecx;
        Ac = ~( *(Ac + 0x20));
        *(Vfffffff4 + 8) = Ac;
        edx = !edx;
    } else {
        ecx = Vfffffff4;
        *ecx = *(Ac + 0x18);
        *(ecx + 4) = *(Ac + 0x1c);
        *(ecx + 8) = *(Ac + 0x20);
    }
    *Ac = edx;
}

/*    Procedure: 0x0045ED35 - 0x0045ED37
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045ED35()
{



}

/*    Procedure: 0x0045ED38 - 0x0045EDE2
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045F4B2()
 *        L0045FA00()
 */

L0045ED38(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A10;
    esi = Ac;
    if((edi >> 8 & 7) == 6) {
        (save)esi;
        (save)edi;
        esi = esi + 0x9c;
        edi = A8 + 0x14;
        ecx = 9;
        asm("rep movsd");
        (restore)edi;
        (restore)esi;
        *(A8 + 0xf8) = *(esi + 0xfc);
    } else {
        L0045EBC0(A8 + 0x14, A8 + 0xf8, esi + 0x14, *(esi + 0xf8), edi);
    }
    eax = L00471128(A8 + 0x84, 6573048, 0x18);
    if(!(edi & 16384)) {
        *(A8 + 0x134) = *(esi + 0x134);
        *(A8 + 0x138) = *(esi + 0x138);
        *(A8 + 0x13c) = *(esi + 0x13c);
        eax = L0045B874(A8);
    }
}

/*    Procedure: 0x0045EDE3 - 0x0045F211
 *    Argument size: 12
 *    Local size: 20
 *    Save regs size: 12
 */

L0045EDE3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    if(!(eax = (esi & 49152) - 32768)) {
        if(eax = eax - 16384) {
            goto L0045ee20;
        }
    } else {
        eax = L0045F214(A8, Ac, esi);
        goto L0045f20b;
L0045ee20:
        eax = *Ac + *Ac * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *Ac << 2) + ( *Ac << 2) * 8 + M00655aec : *L00501684(A8, *Ac);
        Vfffffffc = eax;
        eax = *(Ac + 1) + *(Ac + 1) * 8;
        esi = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(Ac + 1) << 2) + ( *(Ac + 1) << 2) * 8 + M00655aec : *L00501684(A8, *(Ac + 1));
        eax = *(Ac + 2) + *(Ac + 2) * 8;
        eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(Ac + 2) << 2) + ( *(Ac + 2) << 2) * 8 + M00655aec : *L00501684(A8, *(Ac + 2));
        Vfffffff8 = eax;
        eax = *(esi + 0x18);
        *(A8 + 0xb4) = eax + ~( *(Vfffffffc + 0x18));
        eax = *(esi + 0x1c);
        *(A8 + 0xb8) = eax + ~( *(Vfffffffc + 0x1c));
        eax = *(esi + 0x20);
        *(A8 + 0xbc) = eax + ~( *(Vfffffffc + 0x20));
        esi = L0045122F(A8 + 0xb4) + 1;
        eax = *(A8 + 0xb4) < 0 ? ~(L004537CD( ~( *(A8 + 0xb4)), esi)) : L004537CD( *(A8 + 0xb4), esi);
        *(A8 + 0xb4) = eax;
        eax = *(A8 + 0xb8) < 0 ? ~(L004537CD( ~( *(A8 + 0xb8)), esi)) : L004537CD( *(A8 + 0xb8), esi);
        *(A8 + 0xb8) = eax;
        eax = *(A8 + 0xbc) < 0 ? ~(L004537CD( ~( *(A8 + 0xbc)), esi)) : L004537CD( *(A8 + 0xbc), esi);
        *(A8 + 0xbc) = eax;
        Vffffffec = *(Vfffffff8 + 0x18) + ~( *(Vfffffffc + 0x18));
        Vfffffff0 = *(Vfffffff8 + 0x1c) + ~( *(Vfffffffc + 0x1c));
        Vfffffff4 = *(Vfffffff8 + 0x20) + ~( *(Vfffffffc + 0x20));
        (save) *(A8 + 0xbc);
        esi = L004537B0(Vfffffff0);
        (save) *(A8 + 0xb8);
        *(A8 + 0x9c) = esi - L004537B0(Vfffffff4);
        (save) *(A8 + 0xb4);
        esi = L004537B0(Vfffffff4);
        (save) *(A8 + 0xbc);
        *(A8 + 0xa0) = esi - L004537B0(Vffffffec);
        (save) *(A8 + 0xb8);
        esi = L004537B0(Vffffffec);
        (save) *(A8 + 0xb4);
        *(A8 + 0xa4) = esi - L004537B0(Vfffffff0);
        esi = L0045122F(A8 + 0x9c) + 1;
        eax = *(A8 + 0x9c) < 0 ? ~(L004537CD( ~( *(A8 + 0x9c)), esi)) : L004537CD( *(A8 + 0x9c), esi);
        *(A8 + 0x9c) = eax;
        eax = *(A8 + 0xa0) < 0 ? ~(L004537CD( ~( *(A8 + 0xa0)), esi)) : L004537CD( *(A8 + 0xa0), esi);
        *(A8 + 0xa0) = eax;
        eax = *(A8 + 0xa4) < 0 ? ~(L004537CD( ~( *(A8 + 0xa4)), esi)) : L004537CD( *(A8 + 0xa4), esi);
        *(A8 + 0xa4) = eax;
        (save) *(A8 + 0xa4);
        esi = L004537B0( *(A8 + 0xb8));
        (save) *(A8 + 0xa0);
        *(A8 + 0xa8) = esi - L004537B0( *(A8 + 0xbc));
        (save) *(A8 + 0x9c);
        esi = L004537B0( *(A8 + 0xbc));
        (save) *(A8 + 0xa4);
        *(A8 + 0xac) = esi - L004537B0( *(A8 + 0xb4));
        (save) *(A8 + 0xa0);
        esi = L004537B0( *(A8 + 0xb4));
        (save) *(A8 + 0x9c);
        *(A8 + 0xb0) = esi - L004537B0( *(A8 + 0xb8));
        eax = Ac + 4;
        goto L0045f20b;
    }
    L0045EBC0(A8 + 0x9c, A8 + 0xfc, A8 + 0x14, *(A8 + 0xf8), esi + esi);
    eax = *Ac;
    if(eax != 0) {
        L0045F23C(A8, esi >> 5 & 3, eax);
    }
    eax = Ac + 2;
L0045f20b:
}

/*    Procedure: 0x0045F212 - 0x0045F213
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F212()
{



}

/*    Procedure: 0x0045F214 - 0x0045F23A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045EDE3()
 */

L0045F214(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0045F23C(A8, A10 >> 5 & 3, *Ac);
    return Ac + 2;
}

/*    Procedure: 0x0045F23B - 0x0045F23B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F23B()
{



}

/*    Procedure: 0x0045F23C - 0x0045F279
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045EDE3()
 *        L0045F214()
 */

L0045F23C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = L0045164C(A8, A10);
    return L0045F27C(A8, Ac, L00470B41(ebx + 16384), L00470B41(ebx));
}

/*    Procedure: 0x0045F27A - 0x0045F27B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F27A()
{



}

/*    Procedure: 0x0045F27C - 0x0045F3B2
 *    Argument size: 16
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0045F23C()
 *        L0046101F()
 */

L0045F27C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    if(!(edx = Ac - 1)) {
        == ? L0045f2a8 : ;
        if(edx = edx - 1) {
            goto L0045f2b6;
        }
    } else {
        esi = eax + 0xa8;
        ebx = eax + 0xb4;
        goto L0045f2c2;
        esi = eax + 0xb4;
        ebx = eax + 0x9c;
        goto L0045f2c2;
L0045f2b6:
        esi = eax + 0x9c;
        ebx = eax + 0xa8;
    }
L0045f2c2:
    (save)A10;
    (save)L004537B0( *esi);
    (save)A14;
    eax = L004537B0( *ebx);
    (restore)edx;
    Vfffffff4 = edx + eax;
    (save)A10;
    (save)L004537B0( *(esi + 4));
    (save)A14;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    Vfffffff8 = edx + eax;
    (save)A10;
    (save)L004537B0( *(esi + 8));
    (save)A14;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    Vfffffffc = edx + eax;
    (save)A14;
    (save)L004537B0( ~( *esi));
    (save)A10;
    eax = L004537B0( *ebx);
    (restore)edx;
    *ebx = edx + eax;
    (save)A14;
    (save)L004537B0( ~( *(esi + 4)));
    (save)A10;
    eax = L004537B0( *(ebx + 4));
    (restore)edx;
    *(ebx + 4) = edx + eax;
    (save)A14;
    (save)L004537B0( ~( *(esi + 8)));
    (save)A10;
    eax = L004537B0( *(ebx + 8));
    (restore)edx;
    *(ebx + 8) = edx + eax;
    *esi = Vfffffff4;
    *(esi + 4) = Vfffffff8;
    eax = Vfffffffc;
    *(esi + 8) = eax;
    return *(esi + 8);
}

/*    Procedure: 0x0045F3B3 - 0x0045F3B3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F3B3()
{



}

/*    Procedure: 0x0045F3B4 - 0x0045F46D
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0045F4B2()
 *        L00461158()
 */

L0045F3B4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = Ac;
    ecx = A8;
    eax = 0x504434;
    esi = (ebx + ecx << 2) + (ebx + ecx << 2) * 8;
    esi = esi + (A10 << 3) + 0xc;
    edx = *L00504434;
    if(esi + edx > 32768) {
        eax = 1;
    } else {
        esi = *eax;
        *(esi + 6713636) = M00655aec;
        *eax = edx + 4;
        edx = *eax;
        *(edx + 6713636) = M00655af0;
        edx = *eax + 4;
        *eax = edx;
        *(ebp - 4) = edx;
        esi = (ebx << 2) + (ebx << 2) * 8 + edx;
        *eax = esi;
        M00655aec = 6713636 + *eax;
        ebx = (ecx << 2) + (ecx << 2) * 8 + esi;
        *eax = ebx;
        M00655af0 = 6713636 + *eax;
        edx = (A10 << 3) + ebx;
        *eax = edx;
        ecx = *eax;
        *(ecx + 6713636) = *(ebp - 4);
        *eax = edx + 4;
        eax = 0;
    }
}

/*    Procedure: 0x0045F46E - 0x0045F46F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F46E()
{



}

/*    Procedure: 0x0045F470 - 0x0045F4B1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045F4B2()
 *        L00461158()
 */

L0045F470()
{



    if(*L00504434 != 0) {
        *L00504434 = edx - 4;
        edx = *( *L00504434 + 6713636);
        *L00504434 = edx;
        ecx = *L00504434 - 4;
        *L00504434 = ecx;
        M00655af0 = *( *L00504434 + 6713636);
        *L00504434 = *L00504434 - 4;
        eax = *( *L00504434 + 6713636);
        M00655aec = eax;
    }
}

/*    Procedure: 0x0045F4B2 - 0x0045F8A8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F4B2(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -668;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = A10;
    esi = A8;
    eax = *(Ac + 2) & 0xff;
    eax = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(esi, *(Ac + 2) & 0xff) : (( *(Ac + 2) & 0xff) << 3) + M00655af0;
    *(ebp - 4) = eax;
    if(!( *( *(ebp - 4) + 3) & 1)) {
        eax = Ac + 8;
    } else {
        (save) *( *(ebp - 4));
        L0045BA4C(ebp - 0x2c, *Ac);
        eax = ebp - 0x2c;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        (save) *(eax + 4);
        (save) *eax;
        (save)esi;
        (save)ebp - 0x1c;
        L0045BAD0();
        esp = esp + 0x1c;
        eax = ebp - 0x1c;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        L0045B9E8(ebp - 7, *eax, *(eax + 4));
        *(ebp + -148) = *(ebp - 7);
        *(ebp + -146) = *(ebp - 5);
        if(*(M00655aec + ( *(Ac + 4) + *(Ac + 4) * 8) * 4 + 0x14) == *(esi + 0xf0)) {
            eax = ( *(Ac + 4) << 2) + ( *(Ac + 4) << 2) * 8 + M00655aec;
        } else {
            eax = Ac;
            eax = *L00501688(esi, *(eax + 4));
        }
        *(ebp - 0x58) = *(esi + 0x130);
        *(ebp - 0x3c) = *(esi + 0x14c);
        *(ebp + -200) = *(eax + 4);
        *(ebp + -196) = *(eax + 8);
        *(ebp + -192) = *(eax + 0xc);
        eax = ebp + -200;
        *(ebp + -388) = *eax;
        *(ebp + -384) = *(eax + 4);
        *(ebp + -380) = *(eax + 8);
        eax = *(Ac + 3) & 0xff;
        *(ebp - 0x40) = eax & 0xf;
        ebx = *L00501ba0(eax >> 4);
        L0045ED38(ebp + -392, esi, *(Ac + 4) & 65535);
        if(*(ebp + -144) < 0) {
            *(ebp + -372) = ~( *(ebp + -372));
            *(ebp + -368) = ~( *(ebp + -368));
            *(ebp + -364) = ~( *(ebp + -364));
        }
        if(L0045F3B4( *(ebx + 8), 0, 4) != 0) {
            eax = Ac + 8;
        } else {
            *(ebp + -392) = ebx;
            *(ebp - 0x38) = *(ebx + 4);
            *(ebp + -656) = *(ebp - 0x3c) + 0x124;
            *L005000c0(ebp + -648, *(Ac + 6), ebp + -668);
            L0045B968(ebx);
            edi = M00655af0;
            esi = edi + 3;
            *(edi + 3) = *(edi + 3) & 0xfd;
            *esi = *esi & 0xfe;
            edx = *esi & 1;
            eax = M00655af0;
            *(eax + 2) = dl;
            *(eax + 1) = dl;
            *eax = dl;
            *(eax + 8) = *eax;
            *(eax + 0xc) = *(eax + 4);
            edx = *(ebp - 4);
            *(eax + 0x18) = *edx;
            *(eax + 0x1c) = *(edx + 4);
            edx = eax + 0x18;
            *(eax + 0x10) = *edx;
            *(eax + 0x14) = *(edx + 4);
            *(ebp + -152) = 2;
            for(*(ebp - 0xc) = ebp + -648; 1; *(ebp - 0xc) = *(ebp - 0xc) + 1) {
                edi = *( *(ebp - 0xc)) & 0xff;
                if(edi == 0) {
                    break;
                }
                if(edi >= 0x20) {
                    esi = *(ebx + edi * 4 - 0x40);
                    esi = L0045B8F0(ebp + -392, ebx) != 0 ? *(ebx + edi * 4 - 0x3c) - 2 : L004610FC(ebp + -392, esi) - 2;
                    di = *esi;
                    if(di != 0) {
                        eax = di >> 6;
                        eax = al + al * 8;
                        eax = *(M00655aec + eax * 4 + 0x14) != *(ebp + -152) ? *L00501688(ebp + -392, *esi >> 6) : ( *esi >> 6 << 2) + ( *esi >> 6 << 2) * 8 + M00655aec;
                        *(ebp + -388) = *(eax + 4);
                        *(ebp + -384) = *(eax + 8);
                        *(ebp + -380) = *(eax + 0xc);
                        *(ebp + -152) = *(ebp + -152) + 1;
                    }
                } else {
                    *(ebp + -388) = *(ebp + -200);
                    *(ebp + -384) = *(ebp + -196);
                    *(ebp + -380) = *(ebp + -192);
                    *(ebp + -152) = *(ebp + -152) + 1;
                    eax = *(ebx + 0x3c) + *(ebx + 0x3c) * 8;
                    eax = *(M00655aec + eax * 4 + 0x14);
                    eax = eax != *(ebp + -152) ? *L00501688(ebp + -392, *(ebx + 0x3c)) : ( *(ebx + 0x3c) << 2) + ( *(ebx + 0x3c) << 2) * 8 + M00655aec;
                    *(ebp + -200) = *(eax + 4);
                    *(ebp + -196) = *(eax + 8);
                    *(ebp + -192) = *(eax + 0xc);
                    eax = ebp + -200;
                    *(ebp + -388) = *eax;
                    *(ebp + -384) = *(eax + 4);
                    *(ebp + -380) = *(eax + 8);
                    *(ebp + -152) = *(ebp + -152) + 1;
                }
            }
            L0045F470();
            eax = Ac + 8;
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0045F8A9 - 0x0045F996
 *    Argument size: 12
 *    Local size: 48
 *    Save regs size: 12
 */

L0045F8A9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;



    ebx = Ac;
    esi = A8;
    eax = *ebx + *ebx * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    edi = eax == *(esi + 0xf0) ? ( *ebx << 2) + ( *ebx << 2) * 8 + M00655aec : *L00501680(esi, *ebx);
    L0045BA4C( & Vffffffe0, *(ebx + 4));
    eax = & Vffffffe0;
    eax = L0045BB24( & Vfffffff0, esi, *eax, *(eax + 4), *(eax + 8), *(eax + 0xc));
    (save)esi;
    (save)edi;
    esi = & Vfffffff0;
    edi = & Vffffffd0;
    ecx = 4;
    asm("rep movsd");
    (restore)edi;
    (restore)esi;
    ebx = !( *(ebx + 3) & 8) ? L0045FA00(esi, ebx + 6, edi, Vffffffd0, *(esi + ((eax & 0xff) >> 4) * 4 + 0x54), A10 >> 5, *ebx & 65535) : L0045FA00(esi, ebx + 6, edi, Vffffffd0, *(ebx + 3) >> 4, A10 >> 5, *ebx & 65535);
    return ebx;
}

/*    Procedure: 0x0045F997 - 0x0045F9FE
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L0045F997(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save) *Ac & 65535;
    (save)A10 >> 5;
    (save)0;
    (save) *(A8 + 0xf4);
    eax = *Ac + *Ac * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *Ac << 2) + ( *Ac << 2) * 8 + M00655aec : *L00501680(A8, *Ac);
    (save)eax;
    (save)Ac + 2;
    (save)A8;
    esp = esp + 0x1c;
    return L0045FA00();
}

/*    Procedure: 0x0045F9FF - 0x0045F9FF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045F9FF()
{



}

/*    Procedure: 0x0045FA00 - 0x0045FC45
 *    Argument size: 29
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045F8A9()
 *        L0045F997()
 */

L0045FA00(A8, Ac, A10, A14, A16, A18, A1c, A20, A21)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A16;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A21;
{



    esp = esp + -372;
    (save)A8;
    (save)esi;
    (save)edi;
    edi = Ac;
    esi = *L00501b9c(A1c);
    *(ebp - 4) = A18 + *(esi + 0x14) + *(esi + 0x18) - *(A8 + 0x130);
    ecx = *(ebp - 4);
    if(L0045B914(A10 + 4, *(esi + 0x1c) << cl) != 0) {
        if(!(A21 & 0x80)) {
            edi = edi + 4;
        }
        eax = edi;
    } else {
        if(!(A21 & 0x80)) {
            edi = edi + 4;
            eax = *(edi - 2) + *(edi - 2) * 8;
            eax = *(M00655aec + eax * 4 + 0x14);
            eax = eax == *(A8 + 0xf0) ? ( *(edi - 2) << 2) + ( *(edi - 2) << 2) * 8 + M00655aec : *L00501680(A8, *(edi - 2));
            *(ebp - 0xc) = eax;
            *(ebp - 8) = *(edi - 4) & 0xff;
            if(*(ebp - 8) != 0x7f) {
                eax = *(ebp - 8) + *(ebp - 8) * 8;
                eax = *(M00655aec + eax * 4 + 0x14);
                eax = eax == *(A8 + 0xf0) ? ( *(ebp - 8) << 2) + ( *(ebp - 8) << 2) * 8 + M00655aec : *L00501680(A8, *(ebp - 8));
                *(ebp - 0x10) = eax;
                *(ebp - 8) = *(edi - 3) & 0xff;
                if(*(ebp - 8) != 0x7f) {
                    eax = *(ebp - 8) + *(ebp - 8) * 8;
                    eax = *(M00655aec + eax * 4 + 0x14);
                    eax = eax == *(A8 + 0xf0) ? ( *(ebp - 8) << 2) + ( *(ebp - 8) << 2) * 8 + M00655aec : *L00501680(A8, *(ebp - 8));
                    *(ebp - 0x14) = eax;
                    *(ebp - 8) = *(edi - 1) & 0xff;
                    if(*(ebp - 8) != 0x7f) {
                        eax = *(ebp - 8) + *(ebp - 8) * 8;
                        eax = *(M00655aec + eax * 4 + 0x14);
                        eax = eax == *(A8 + 0xf0) ? ( *(ebp - 8) << 2) + ( *(ebp - 8) << 2) * 8 + M00655aec : *L00501680(A8, *(ebp - 8));
                        *(ebp - 0x18) = eax;
                    }
                }
            }
        }
        eax = A10;
        *(ebp + -368) = *(eax + 4);
        *(ebp + -364) = *(eax + 8);
        *(ebp + -360) = *(eax + 0xc);
        *(ebp - 0x28) = *(A8 + 0x14c);
        *(ebp - 0x44) = *(A8 + 0x130);
        *(ebp + -260) = A10;
        *(ebp + -256) = *(ebp - 0xc);
        *(ebp + -252) = *(ebp - 0x10);
        *(ebp + -248) = *(ebp - 0x14);
        *(ebp + -244) = *(ebp - 0x18);
        *(ebp - 0x2c) = *(ebp - 4);
        *(ebp + -288) = *(A8 + 0x54) + 1;
        *(ebp + -284) = *(A8 + 0x58);
        *(ebp + -280) = *(A8 + 0x5c);
        *(ebp - 0x80) = A14;
        *(ebp - 0x7e) = A16;
        L0045ED38(ebp + -372, A8, A20);
        L00461138(ebp + -372, esi);
        eax = edi;
    }
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0045FC46 - 0x0045FC47
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045FC46()
{



}

/*    Procedure: 0x0045FC48 - 0x0045FCF2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045FCF3()
 *        L0045FD62()
 */

L0045FC48(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    if(Ac < 0) {
        eax = ebx & 32767;
        eax = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(A8, ebx & 32767) : ((ebx & 32767) << 3) + M00655af0;
        eax = *(eax + 3) & 1;
    } else {
        if(*(A8 + 0xc) < 0) {
            eax = 0;
        } else {
            if(!(M00644bb4 & 1)) {
                eax = M00644bb8;
            }
            if(*(A8 + 0x148) + eax > 0) {
                ecx = *(A8 + 0x148) + eax;
                edx = ebx << cl;
                ecx = *(A8 + 0x148) + eax;
                if(ebx == edx >> cl) {
                    goto L0045fce1;
                }
                eax = 0;
            } else {
                edx = ebx;
L0045fce1:
                eax = edx >= *(A8 + 0xc) ? 0 : 1;
            }
        }
    }
}

/*    Procedure: 0x0045FCF3 - 0x0045FD1E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0045FCF3(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L0045FD20(L0045FC48(A8, *Ac), Ac + 2, A10);
}

/*    Procedure: 0x0045FD1F - 0x0045FD1F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045FD1F()
{



}

/*    Procedure: 0x0045FD20 - 0x0045FD4B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045FCF3()
 *        L0045FD62()
 *        L0045FD96()
 *        L0045FDE4()
 *        L00460B24()
 */

L0045FD20(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 != 0) {
        ecx = A10 >> 5;
        == ? L0045fd42 : ;
        return Ac + (dx >> 5) + (dx >> 5);
        M00504438 = 0;
    }
}

/*    Procedure: 0x0045FD4C - 0x0045FD61
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0045FD4C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    M00504438 = 0;
    return Ac;
}

/*    Procedure: 0x0045FD62 - 0x0045FD95
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0045FD62(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)A10;
    (save)Ac + 2;
    eax = L0045FC48(A8, *Ac);
    eax :: 1;
    asm("sbb eax,eax");
    (save) ~eax;
    esp = esp + 0xc;
    return L0045FD20();
}

/*    Procedure: 0x0045FD96 - 0x0045FDE3
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0045FD96(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L004515F1(A8, *Ac & 0xff);
    (save)A10;
    edx = Ac + 2;
    (save)edx;
    if(*(Ac + 1) == 0) {
        edx = edx | -1;
    } else {
        ecx = ( *(Ac + 1) & 0xff) - 1;
        edx = 1 << cl;
    }
    (save)0;
    esp = esp + 0xc;
    return L0045FD20();
}

/*    Procedure: 0x0045FDE4 - 0x0045FE2F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0045FDE4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L004515F1(A8, *Ac & 0xff);
    (save)A10;
    edx = Ac + 2;
    (save)edx;
    if(*(Ac + 1) == 0) {
        edx = edx | -1;
    } else {
        ecx = ( *(Ac + 1) & 0xff) - 1;
        edx = 1 << cl;
    }
    (save)0;
    esp = esp + 0xc;
    return L0045FD20();
}

/*    Procedure: 0x0045FE30 - 0x0045FFDD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0045FE30()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    edi = L004515F1(ebx, *esi & 0xff);
    *(ebp - 4) = L004515F1(ebx, *(esi + 1) & 0xff);
    eax = *(ebp + 0x10) >> 4 & 0xf;
    if(eax <= 0xf) {
        switch(eax) {
            case 0:
L0045feba:
                *(ebp - 8) = edi + *(ebp - 4);
                goto L0045ffbf;
            case 1:
                *(ebp - 8) = edi - *(ebp - 4);
                goto L0045ffbf;
            case 2:
                *(ebp - 8) = *(ebp - 4) * *(ebp - 4);
                goto L0045ffbf;
            case 3:
                goto L0045fedc;
            case 4:
                *(ebp - 8) = edi >> *(ebp - 4);
                goto L0045ffbf;
            case 5:
                *(ebp - 8) = edi << *(ebp - 4);
                goto L0045ffbf;
            case 6:
                goto L0045ff12;
            case 7:
                goto L0045ff24;
            case 8:
                eax = edi << 0x10;
                edx = 0;
                *(ebp - 4) = *(ebp - 4) / *(ebp - 4);
                edx = *(ebp - 4) % *(ebp - 4);
                *(ebp - 8) = eax;
                goto L0045ffbf;
            case 9:
                *(ebp - 8) = edi >> *(ebp - 4);
                goto L0045ffbf;
            case 0xa:
                edi = edi + *(ebp - 4);
                *(ebp - 8) = *( *(ebx + 0x14c) + edi * 2 + 0x9c) & 65535;
                goto L0045ffbf;
            case 0xb:
                goto L0045ff66;
            case 0xc:
                goto L0045ff74;
            case 0xd:
                (save)edi;
                *(ebp - 8) = L004537B0(L00470B41( *(ebp - 4)));
                goto L0045ffbf;
            case 0xe:
                (save)edi;
                *(ebp - 8) = L004537B0(L00470B41( *(ebp - 4) + 16384));
                goto L0045ffbf;
            case 0xf:
                *(ebp - 8) = edi & *(ebp - 4);
                goto L0045ffbf;
        }
        goto L0045feba;
L0045fedc:
        if(*(ebp - 4) == 0) {
            *(ebp - 8) = edi;
        } else {
            eax = edi;
            asm("cdq");
            *(ebp - 4) = *(ebp - 4) / *(ebp - 4);
            edx = *(ebp - 4) % *(ebp - 4);
            *(ebp - 8) = eax;
            goto L0045ffbf;
L0045ff12:
            if(*(ebp - 4) >= edi) {
                edi = *(ebp - 4);
            }
            *(ebp - 8) = edi;
            goto L0045ffbf;
L0045ff24:
            if(*(ebp - 4) <= edi) {
                edi = *(ebp - 4) - 1;
            }
            *(ebp - 8) = edi;
            goto L0045ffbf;
L0045ff66:
            if(*(ebp - 4) > edi) {
                edi = 0;
            }
            *(ebp - 8) = edi;
            goto L0045ffbf;
L0045ff74:
            if(*(ebp - 4) < edi) {
                edi = 0;
            }
            *(ebp - 8) = edi;
        }
    }
L0045ffbf:
    eax = *(ebp - 8) & 65535;
    *(ebx + ( *(ebp + 0x10) >> 8 & 7) * 4 + 0x54) = eax;
    eax = esi + 2;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0045FFDE - 0x0046004C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0045FFDE(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    eax = A8;
    ebx = *(eax + 4) < 0 ? ~( *(eax + 4)) : *(eax + 4);
    edx = *(eax + 8) < 0 ? ~( *(eax + 8)) : *(eax + 8);
    ebx = ebx + edx;
    edx = *(eax + 0xc) < 0 ? ~( *(eax + 0xc)) : *(eax + 0xc);
    ebx = ebx + edx;
    eax = ebx;
    edx = 0;
    edx = 131072 / 131072 % 131072 / 131072;
    ebx = eax;
    if(ebx < 0x3f) {
        L00470592(A10 >> 5 & 0xf, 0x3f - ebx);
    }
    return Ac;
}

/*    Procedure: 0x0046004D - 0x00460088
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 */

L0046004D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    L0046008C(A8, *Ac, *(Ac + 2), *(Ac + 4), *(Ac + 6), *(Ac + 8), *(Ac + 0xa));
    return Ac + 0xc;
}

/*    Procedure: 0x00460089 - 0x0046008B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00460089()
{



}

/*    Procedure: 0x0046008C - 0x004608F1
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046004D()
 */

L0046008C(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    esp = esp + -592;
    (save)ebx;
    (save)A8;
    (save)edi;
    edi = A14;
    ebx = A10;
    al = ebx & 0xff;
    eax = al + al * 8;
    if(*(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0)) {
        al = ebx & 0xff;
        eax = (al << 2) + (al << 2) * 8 + M00655aec;
    } else {
        eax = *L00501680(A8, ebx & 0xff);
    }
    *(ebp - 4) = eax;
    eax = *(ebp - 4);
    if(*(eax + 0xc) > 0x40) {
        eax = ebx >> 8;
        eax = al + al * 8;
        eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? (ebx >> 8 << 2) + (ebx >> 8 << 2) * 8 + M00655aec : *L00501680(A8, ebx >> 8);
        ebx = eax;
        if(*(ebx + 0xc) > 0x40) {
            ecx = *(A8 + 0x148);
            *(ebp - 8) = edi >> 8 << cl;
            eax = ((edi & 0x7e) >> 1) + ((edi & 0x7e) >> 1) * 2;
            *(ebp + -188) = *( *(A8 + 0x154) + eax * 2 - 4) << 8;
            *(ebp + -184) = *( *(A8 + 0x154) + eax * 2 - 3) << 8;
            *(ebp + -180) = *( *(A8 + 0x154) + eax * 2 - 2) << 8;
            if(!(edi & 1)) {
                *(ebp + -188) = ~( *(ebp + -188));
            }
            L0045A7A8(ebp + -200, ebp + -188, A8 + 0x14);
            eax = L00454700(ebp + -364, *(ebp - 4) + 4, ebp + -200, *(ebp - 8));
            if(eax != 0) {
                ecx = *(A8 + 0x148);
                *(ebp - 0xc) = A18 >> 8 << cl;
                eax = L00454700(ebp + -548, ebx + 4, ebp + -200, *(ebp - 0xc));
                if(eax != 0) {
                    *(ebp + -212) = *( *(ebp - 4) + 4) + *(ebx + 4);
                    *(ebp + -208) = *( *(ebp - 4) + 8) + *(ebx + 8);
                    *(ebp + -204) = *( *(ebp - 4) + 0xc) + *(ebx + 0xc);
                    ecx = 2;
                    eax = *(ebp + -212);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -212) = eax;
                    ecx = 2;
                    eax = *(ebp + -208);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -208) = eax;
                    ecx = 2;
                    eax = *(ebp + -204);
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -204) = eax;
                    ebx = L004614B8(0, L00461430(A8, ebp + -212), 0);
                    *(ebp - 0x1c) = ebx;
                    L0045BA4C(ebp + -176, Ac);
                    if(*(ebp + -168) != 0) {
                        eax = 0;
                    } else {
                        L004545F4(ebp + -224, ebp + -200, A8 + 0x134);
                        *(ebp - 0x20) = *L00501674(ebp + -224);
                        eax = *(ebp - 0x20) >= 0x1000 ? 0 : 1;
                    }
                    if(eax != 0) {
                        L0045BB24(ebp - 0x34, A8, *(ebp + -176), *(ebp + -172), *(ebp + -168), *(ebp + -164));
                        eax = ebp - 0x34;
                        (save) *(eax + 0xc);
                        (save) *(eax + 8);
                        L0045B9E8(ebp - 0xf, *eax, *(eax + 4));
                        eax = ( *(ebp - 0x20) >> 0xc ^ 7) + ( *(ebp - 0x20) >> 0xc ^ 7) * 2;
                        *(ebp - 0x12) = *(A8 + eax + 0x84);
                        *(ebp - 0x10) = *(A8 + eax + 0x86);
                        *(ebp - 0x12) = *(ebp - 0x12) + *(ebp - 0xf);
                        *(ebp - 0x11) = *(ebp - 0x11) + *(ebp - 0xe);
                        *(ebp - 0x10) = *(ebp - 0x10) + *(ebp - 0xd);
                        eax = *(ebp + -200);
                        asm("imul dword [ebp+0xfffffeb0]");
                        edx = *(ebp + -196);
                        eax = eax + *(ebp + -332) * *(ebp + -332);
                        edx = *(ebp + -192);
                        eax = eax + *(ebp + -328) * *(ebp + -328);
                        edx = *(ebp - 0x20);
                        ecx = ( *(ebp + -288) * *(ebp + -288) >> 0xf) + 3;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        *(ebp - 0x24) = *((eax >> 9) * 2 + 0x5167e0) + *((eax >> 9) * 2 + 0x5167e0);
                        eax = *(ebp + -336);
                        asm("imul dword [esi+0x134]");
                        edx = *(ebp + -332);
                        eax = eax + *(A8 + 0x138) * *(A8 + 0x138);
                        edx = *(ebp + -328);
                        if(eax + *(A8 + 0x13c) * *(A8 + 0x13c) < 0) {
                            *(ebp - 0x24) = ~( *(ebp - 0x24));
                            *(ebp - 0x15) = *(ebp - 0xf);
                            *(ebp - 0x13) = *(ebp - 0xd);
                            *(ebp - 0xf) = *(ebp - 0x12);
                            *(ebp - 0xd) = *(ebp - 0x10);
                            *(ebp - 0x12) = *(ebp - 0x15);
                            *(ebp - 0x10) = *(ebp - 0x13);
                        }
                        *ebx = 0x4618a0;
                        *(ebx + 4) = 0x4618b8;
                        *(ebx + 8) = *(ebp + -256);
                        *(ebx + 0xc) = *(ebp + -440);
                        L00454310(ebp + -408, ebp + -440, ebp + -436, ebp + -432, ebp + -428);
                        ecx = *(ebp + -368);
                        (save) *(ebp - 0x24) >> cl;
                        (save)ebp + -408;
                        (save)ebx + 0x10;
                        ebx = L00454544();
                        *ebx = 0x461934;
                        *(ebx + 4) = *(ebp + -256);
                        L00454310(ebp + -592, ebp + -256, ebp + -252, ebp + -248, ebp + -244);
                        ecx = *(ebp + -552);
                        (save) *(ebp - 0x24) >> cl;
                        (save)ebp + -592;
                        (save)ebx + 8;
                        ebx = L00454544();
                        *ebx = 0x4618e0;
                        eax = *(ebp + -408) >> 0x10;
                        *(ebx + 4) = ax;
                        *(ebx + 6) = *(ebp + -404) >> 0x10;
                        *(ebx + 8) = 0x461818;
                        *L004f80a0( *(ebp - 0xf));
                        *(ebx + 0xc) = ax & 65535;
                        *(ebx + 0x10) = 0x4618b8;
                        eax = *(ebp + -408) >> 0x10;
                        *(ebx + 0x14) = ax;
                        eax = *(ebp + -404) >> 0x10;
                        *(ebx + 0x16) = ax;
                        eax = *(ebp + -592) >> 0x10;
                        *(ebx + 0x18) = ax;
                        *(ebx + 0x1a) = *(ebp + -588) >> 0x10;
                        (save)0;
                        (save)ebp + -592;
                        (save)ebx + 0x1c;
                        ebx = L00454544();
                        *ebx = 0x4618e0;
                        *(ebx + 4) = *(ebp + -428);
                        *(ebx + 8) = 0x461934;
                        eax = *(ebp + -408) >> 0x10;
                        *(ebx + 0xc) = ax;
                        *(ebx + 0xe) = *(ebp + -404) >> 0x10;
                        (save)0;
                        (save)ebp + -408;
                        (save)ebx + 0x10;
                        ebx = L00454544();
                        *ebx = 0x461940;
                        *L004f80a0( *(ebp - 0x12));
                        *(ebx + 4) = ax & 65535;
                        ebx = ebx + 8;
                    } else {
                        *ebx = 0x4618a0;
                        *(ebx + 0x20) = 0x461908;
                        *(ebx + 4) = 0x461908;
                        eax = *(ebp + -256);
                        *(ebx + 0x38) = eax;
                        *(ebx + 8) = *(ebx + 0x38);
                        *(ebx + 0xc) = *(ebp + -252);
                        *(ebx + 0x10) = *(ebp + -248);
                        *(ebx + 0x14) = *(ebp + -244);
                        *(ebx + 0x34) = 0x4618e0;
                        *(ebx + 0x18) = 0x4618e0;
                        eax = *(ebp + -428);
                        *(ebx + 0x1c) = eax;
                        *(ebx + 0x24) = *(ebx + 0x1c);
                        *(ebx + 0x28) = *(ebp + -432);
                        *(ebx + 0x2c) = *(ebp + -436);
                        *(ebx + 0x30) = *(ebp + -440);
                        *(ebx + 0x3c) = 0x461940;
                        L0045BA4C(ebp - 0x58, Ac);
                        eax = ebp - 0x58;
                        L0045BB24(ebp - 0x48, A8, *eax, *(eax + 4), *(eax + 8), *(eax + 0xc));
                        eax = ebp - 0x48;
                        (save) *(eax + 0xc);
                        (save) *(eax + 8);
                        L0045B9E8(ebp - 0x37, *eax, *(eax + 4));
                        *L004f80a0( *(ebp - 0x37));
                        *(ebx + 0x40) = ax & 65535;
                        ebx = ebx + 0x44;
                    }
                    if(!(edi & 0x80)) {
                        eax = edi & 0x7f;
                        eax = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(A8, edi & 0x7f) : ((edi & 0x7f) << 3) + M00655af0;
                        edi = eax;
                        if(!( *(edi + 3) & 1)) {
                            *(ebx - 8) = 0x461818;
                            *ebx = 0x461908;
                            *(ebx + 4) = *(ebp + -256);
                            *(ebx + 8) = *(ebp + -252);
                            *(ebx + 0xc) = *(ebp + -248);
                            *(ebx + 0x10) = *(ebp + -244);
                            *(ebx + 0x14) = 0x461908;
                            *(ebx + 0x18) = *(ebp + -240);
                            *(ebx + 0x1c) = *(ebp + -236);
                            *(ebx + 0x20) = *(ebp + -232);
                            *(ebx + 0x24) = *(ebp + -228);
                            *(ebx + 0x28) = 0x461940;
                            (save) *edi;
                            L0045BA4C(ebp - 0x7c, A1c);
                            eax = ebp - 0x7c;
                            (save) *(eax + 0xc);
                            (save) *(eax + 8);
                            (save) *(eax + 4);
                            (save) *eax;
                            (save)A8;
                            (save)ebp - 0x6c;
                            L0045BAD0();
                            esp = esp + 0x1c;
                            eax = ebp - 0x6c;
                            (save) *(eax + 0xc);
                            (save) *(eax + 8);
                            L0045B9E8(ebp - 0x5b, *eax, *(eax + 4));
                            *L004f80a0( *(ebp - 0x5b));
                            *(ebx + 0x2c) = ax & 65535;
                            ebx = ebx + 0x30;
                        }
                    }
                    if(!(A18 & 0x80)) {
                        eax = A18 & 0x7f;
                        edi = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(A8, A18 & 0x7f) : ((A18 & 0x7f) << 3) + M00655af0;
                        if(!( *(edi + 3) & 1)) {
                            *(ebx - 8) = 0x461818;
                            *ebx = 0x461908;
                            *(ebx + 4) = *(ebp + -440);
                            *(ebx + 8) = *(ebp + -436);
                            *(ebx + 0xc) = *(ebp + -432);
                            *(ebx + 0x10) = *(ebp + -428);
                            *(ebx + 0x14) = 0x461908;
                            *(ebx + 0x18) = *(ebp + -424);
                            *(ebx + 0x1c) = *(ebp + -420);
                            *(ebx + 0x20) = *(ebp + -416);
                            *(ebx + 0x24) = *(ebp + -412);
                            *(ebx + 0x28) = 0x461940;
                            (save) *edi;
                            L0045BA4C(ebp + -160, A20);
                            eax = ebp + -160;
                            (save) *(eax + 0xc);
                            (save) *(eax + 8);
                            (save) *(eax + 4);
                            (save) *eax;
                            (save)A8;
                            (save)ebp + -144;
                            L0045BAD0();
                            esp = esp + 0x1c;
                            eax = ebp + -144;
                            (save) *(eax + 0xc);
                            (save) *(eax + 8);
                            L0045B9E8(ebp - 0x7f, *eax, *(eax + 4));
                            *L004f80a0( *(ebp - 0x7f));
                            *(ebx + 0x2c) = ax & 65535;
                            ebx = ebx + 0x30;
                        }
                    }
                    ebx = ebx - *(ebp - 0x1c);
                    if(ebx < 0) {
                        ebx = ebx + 3;
                    }
                    eax = L00461674(ebx >> 2);
                }
            }
        }
    }
    (restore)edi;
    (restore)A8;
    (restore)ebx;
}

/*    Procedure: 0x004608F2 - 0x004609ED
 *    Argument size: 12
 *    Local size: 20
 *    Save regs size: 12
 */

L004608F2(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vffffffee;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = Ac;
    esi = *(ebx + 2) & 0xff;
    eax = esi & 0x7f;
    eax = !( *(M00655af0 + eax * 8 + 3) >> 1 & 1) ? *L00501660(A8, esi & 0x7f) : ((esi & 0x7f) << 3) + M00655af0;
    Vfffffffc = eax;
    A10 = *ebx;
    if(*(ebx + 3) != 0) {
        eax = L004515F1(A8, *(ebx + 3) & 0xff) & 7;
        if(eax != 0) {
            A10 = *(ebx + eax * 2 + 2);
        }
        ebx = ebx + 0x12;
    } else {
        ebx = ebx + 4;
    }
    L0045BA4C( & Vffffffec, A10);
    if(Vfffffff0 != 0) {
        Vfffffff4 = 1;
    }
    L0045BAD0( & Vffffffec, A8, Vffffffec, Vfffffff0, Vfffffff4, Vfffffff8, *Vfffffffc);
    if(!(esi & 0x80)) {
        (save)Vfffffff8;
        (save)Vfffffff4;
        L0045B9E8(M00655af0, Vffffffec, Vfffffff0);
    } else {
        *(A8 + 0xf4) = Vffffffec;
        *(A8 + 0xf6) = Vffffffee;
    }
    return ebx;
}

/*    Procedure: 0x004609EE - 0x00460A23
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L004609EE(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = 0;
    L00460A24(A8, A10 >> 5 & 0xff, *Ac & 65535, *(ebp - 4));
    return Ac + 2;
}

/*    Procedure: 0x00460A24 - 0x00460B23
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004609EE()
 *        L00460EEC()
 */

L00460A24(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    ebx = Ac;
    eax = bl + bl * 8;
    eax = *(M00655aec + eax * 4 + 0x14) == *(A8 + 0xf0) ? (bl << 2) + (bl << 2) * 8 + M00655aec : *L00501680(A8, ebx);
    ebx = eax;
    eax = *(ebx + 2) - 4;
    if(eax <= 0x91) {
        eax = *ebx - 2;
        if(eax <= 0x13b) {
            eax = L004614B8(4, L00461430(A8, ebx + 4), 0);
            *eax = 0x462120;
            *(eax + 4) = A10;
            *(eax + 8) = *ebx;
            *(eax + 0xc) = A14;
        }
    }
    if(!(M00644df2 & 2)) {
        eax = !(eax = M00644c10 - *ebx) ? M00644c10 - *ebx : ~(M00644c10 - *ebx);
        edx = !(edx = M00644c12 - *(ebx + 2)) ? M00644c12 - *(ebx + 2) : ~(M00644c12 - *(ebx + 2));
        eax = eax + edx;
        if(eax < 8) {
            eax = A14;
            M00644e42 = eax;
        }
    }
}

/*    Procedure: 0x00460B24 - 0x00460C2A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L00460B24(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = Ac + 4;
    eax = *(ebx - 2) + *(ebx - 2) * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    eax = eax == *(A8 + 0xf0) ? ( *(ebx - 2) << 2) + ( *(ebx - 2) << 2) * 8 + M00655aec : *L00501680(A8, *(ebx - 2));
    *(ebp - 4) = eax;
    if(*( *(ebp - 4) + 0xc) < 0x40) {
        eax = ebx;
    } else {
        eax = *(ebx - 1) + *(ebx - 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        edx = eax == *(A8 + 0xf0) ? ( *(ebx - 1) << 2) + ( *(ebx - 1) << 2) * 8 + M00655aec : *L00501680(A8, *(ebx - 1));
        if(*(edx + 0xc) < 0x40) {
            eax = ebx;
        } else {
            eax = *edx;
            eax = eax - *( *(ebp - 4));
            ecx = eax < 0 ? ~eax : eax;
            eax = *(edx + 2);
            eax = eax - *( *(ebp - 4) + 2);
            edx = eax < 0 ? ~eax : eax;
            ecx = ecx + edx;
            dx = *(ebx - 4);
            eax = dx & 32767;
            ecx :: eax;
            asm("setnc al");
            eax = eax & 1;
            if(dx < 0) {
                eax :: 1;
                asm("sbb eax,eax");
                eax = ~eax;
            }
            eax = L0045FD20(eax, ebx, A10);
        }
    }
}

/*    Procedure: 0x00460C2B - 0x00460E4F
 *    Argument size: 12
 *    Local size: 48
 *    Save regs size: 12
 */

L00460C2B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd5;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vffffffff;



    edi = A10;
    ebx = Ac;
    L0045BA4C( & Vffffffd8, *ebx);
    eax = & Vffffffd8;
    L0045BB24( & Vffffffe8, A8, *eax, *(eax + 4), *(eax + 8), *(eax + 0xc));
    eax = & Vffffffe8;
    (save) *(eax + 0xc);
    (save) *(eax + 8);
    L0045B9E8( & Vfffffffa, *eax, *(eax + 4));
    Vfffffffd = Vfffffffa;
    Vffffffff = Vfffffffc;
    Vffffffd4 = L0045164C(A8, *(ebx + 2) & 65535);
    ebx = ebx + 4;
    if(!(Vffffffd5 & 0x80)) {
        Vffffffd4 = Vffffffd4 & 32767;
    } else {
        eax = *(A8 + 0x148);
        Vffffffd4 = eax <= 7 ? Vffffffd4 >> 7 - eax : Vffffffd4 << eax - 7;
        if(*(A8 + 0xc) <= 0) {
            while(*(ebx + 1) != 0x7f && *ebx != 0x7f) {
                ebx = ebx + 2;
            }
            eax = ebx + 2;
            goto L00460e49;
        }
        Vffffffd4 = L0045A51C(Vffffffd4, *(A8 + 0xc));
    }
    edi = L004614B8(0, L00461430(A8, A8 + 4), 0);
    Vffffffd0 = edi;
    *edi = 0x462194;
    *(edi + 4) = Vffffffd4;
    *L004f80a0(Vfffffffd);
    *(edi + 8) = ax & 65535;
    for(edi = edi + 0xc; *(ebx + 1) != 0x7f; ebx = ebx + 2) {
        eax = *(ebx + 1) + *(ebx + 1) * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax != *(A8 + 0xf0) ? *L00501680(A8, *(ebx + 1)) : ( *(ebx + 1) << 2) + ( *(ebx + 1) << 2) * 8 + M00655aec;
        if(*(eax + 0xc) >= 0x40 && *(eax + 2) - 1 < 0x9d && *eax - 1 < 0x13f) {
            *edi = *eax - 1;
            *(edi + 4) = *(eax + 2) - 1;
            edi = edi + 8;
        }
        if(*ebx == 0x7f) {
            break;
        }
        eax = *ebx + *ebx * 8;
        eax = *(M00655aec + eax * 4 + 0x14);
        eax = eax != *(A8 + 0xf0) ? *L00501680(A8, *ebx) : ( *ebx << 2) + ( *ebx << 2) * 8 + M00655aec;
        if(*(eax + 0xc) >= 0x40 && *(eax + 2) - 1 < 0x9d && *eax - 1 < 0x13f) {
            *edi = *eax - 1;
            *(edi + 4) = *(eax + 2) - 1;
            edi = edi + 8;
        }
    }
    *edi = -1;
    edi = edi + 4 - Vffffffd0;
    if(edi < 0) {
        edi = edi + 3;
    }
    L00461674(edi >> 2);
    eax = ebx + 2;
L00460e49:
}

/*    Procedure: 0x00460E50 - 0x00460EB1
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 */

L00460E50(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = A10;
    eax = ebx;
    if(ax < 0) {
        eax = L00460EB4(A8, Ac, ax >> 4);
    } else {
        ebx = L004515F1(A8, ebx >> 5 & 0xff);
        *(A8 + 0x150) = *(A8 + 0x150) + ebx + ebx + (ebx + ebx) * 2;
        M00655aec = M00655aec + (ebx + ebx << 2) + (ebx + ebx << 2) * 8;
        eax = Ac;
    }
}

/*    Procedure: 0x00460EB2 - 0x00460EB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00460EB2()
{



}

/*    Procedure: 0x00460EB4 - 0x00460EEB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00460E50()
 */

L00460EB4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A8;
    if(A10 == 63489) {
        eax = L00460EEC(eax, Ac, ecx);
    } else {
        esi = eax + 0x9c;
        edi = eax + 0x14;
        ecx = 9;
        asm("rep movsd");
        eax = Ac;
    }
}

/*    Procedure: 0x00460EEC - 0x00460FD3
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00460EB4()
 */

L00460EEC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vffffffff;



    eax = *(A8 + 0x14c);
    Vfffffff8 = *(eax + 0xa4) & 65535;
    ecx = eax + 0xa6;
    ebx = *(eax + 0x9e) & 65535;
    Vfffffff4 = ebx;
    Vfffffffc = *(eax + 0xa0);
    esi = 0;
    Vfffffff0 = ecx;
    if(0 < Vfffffff8) {
        do {
            edi = esi + esi;
            ebx = *Vfffffff0 & 0xf;
            if(!(Vfffffff4 & 0x20)) {
                L0045C74C(A8, *(ebx * 4 + 0x504460), edi, edi + 1);
            }
            L0045BF8C(A8, *(ebx * 4 + 0x50438c), *(ebx * 4 + 0x5043c4) >> 7, edi, 0);
            if(*(M00655aec + 0xc) <= *(ebx * 4 + 0x5043fc)) {
                eax = (esi & 0x3f) << 2;
                Vffffffff = al | Vffffffff & 3;
                L00460A24(A8, edi, 33792, Vfffffffc);
            }
            esi = esi + 1;
            Vfffffff0 = Vfffffff0 + 2;
        } while(esi < Vfffffff8);
    }
    return Ac;
}

/*    Procedure: 0x00460FD4 - 0x0046101E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046101F()
 */

L00460FD4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *(A8 + 0xbc) = 2147483647;
    *(A8 + 0xac) = 2147483647;
    *(A8 + 0x9c) = 2147483647;
    *(A8 + 0xb8) = 0;
    *(A8 + 0xb4) = 0;
    *(A8 + 0xb0) = 0;
    *(A8 + 0xa8) = 0;
    *(A8 + 0xa4) = 0;
    *(A8 + 0xa0) = 0;
    return Ac;
}

/*    Procedure: 0x0046101F - 0x004610F8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 */

L0046101F(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(A10 < 0) {
        Ac = L00460FD4(A8, Ac, Ac);
    } else {
        *(ebp - 4) = Ac >> 5 & 3;
        if(!(Ac = *(ebp - 4) - 1)) {
            == ? L0046106b : ;
            if(Ac = Ac - 1) {
                goto L00461079;
            }
        } else {
            ebx = *(A8 + 0x3c);
            esi = *(A8 + 0x40);
            goto L00461085;
            ebx = *(A8 + 0x40);
            esi = *(A8 + 0x38);
            goto L00461085;
L00461079:
            ebx = *(A8 + 0x38);
            esi = *(A8 + 0x3c);
        }
L00461085:
        Ac = ebx;
        asm("imul ebx");
        edx = esi;
        edi = *L00501670(Ac + esi * esi);
        if(edi != 0) {
            ebx = ebx < 0 ? ~(L004537CD( ~ebx, edi)) : L004537CD(ebx, edi);
            Ac = esi < 0 ? ~(L004537CD( ~esi, edi)) : L004537CD(esi, edi);
            L0045F27C(A8, *(ebp - 4), ebx, Ac);
        }
    }
}

/*    Procedure: 0x004610F9 - 0x004610FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004610F9()
{



}

/*    Procedure: 0x004610FC - 0x00461135
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045F4B2()
 *        L00461158()
 */

L004610FC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    for(eax = Ac; M00504438 != 0; eax = *( *((edx & 0x1f) * 4 + 0x504294))(A8, eax + 2, edx)) {
        edx = *eax & 65535;
    }
    M00504438 = 1;
}

/*    Procedure: 0x00461136 - 0x00461137
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461136()
{



}

/*    Procedure: 0x00461138 - 0x00461154
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045B2CC()
 *        L0045B69C()
 *        L0045FA00()
 */

L00461138(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00461158(A8, Ac, *(Ac + 4), *(Ac + 8));
}

/*    Procedure: 0x00461155 - 0x00461157
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461155()
{



}

/*    Procedure: 0x00461158 - 0x004611E1
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0045B778()
 *        L00461138()
 */

L00461158(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L0045F3B4(A14, 6, *(Ac + 0x10));
    if(eax == 0) {
        *(A8 + 0x150) = A10;
        *A8 = Ac;
        *(A8 + 0x154) = *(Ac + 0xc);
        eax = *(A8 + 0x148) - 8 - *(A8 + 0x44);
        if(eax > 0) {
            *(A8 + 0x44) = *(A8 + 0x44) + eax;
            ecx = eax;
            *(A8 + 0x48) = *(A8 + 0x48) << cl;
            ecx = eax;
            *(A8 + 0x4c) = *(A8 + 0x4c) << cl;
            *(A8 + 0x50) = *(A8 + 0x50) << eax;
        }
        L0045B980(A14);
        *"3'E"(A8, Ac);
        *(A8 + 0xf0) = 2;
        L004610FC(A8, *Ac);
        eax = L0045F470();
    }
}

/*    Procedure: 0x004611E2 - 0x0046125A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L004611E2(A8)
/* unknown */ void  A8;
{



    esp = esp + -340;
    (save)A8;
    if(*(A8 + 0x57) == 0) {
        L0045A198(ebp + -340, A8);
    } else {
        *L005030e0(A8);
        L0045A198(ebp + -340, A8 + 0x5a);
    }
    *(ebp + -302) = 0;
    *(ebp + -294) = 0;
    *(ebp + -286) = 0x200;
    *(ebp + -210) = 0x13b;
    eax = *L005030ec(ebp + -340);
    (restore)A8;
}

/*    Procedure: 0x0046125B - 0x0046142C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L0046125B(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -364;
    (save)ebx;
    (save)esi;
    ebx = A8;
    esi = ebp + -340;
    *L00501b98(esi, ebx, 0);
    eax = *( *L00501b9c( *(esi + 0x82)) + 0x38);
    if(eax != 0) {
        if(!( *(ebx + 0x151) & 4)) {
            *(ebx + 0x151) = *(ebx + 0x151) & 0xfb;
            ecx = *(esi + 0xd2) & 0xff;
            edx = *(eax + 0x20);
            eax = *(eax + 0x22);
            ebx = 0;
        } else {
            if(!( *(ebx + 0x151) & 8)) {
                *(ebx + 0x151) = *(ebx + 0x151) & 0xf7;
                ecx = *(esi + 0xd3) & 0xff;
                edx = ~( *(eax + 0x24));
                eax = *(eax + 0x26);
                *(esi + 0x18) = ~( *(esi + 0x18));
                *(esi + 0x1c) = ~( *(esi + 0x1c));
                *(esi + 0x20) = ~( *(esi + 0x20));
                ebx = 0;
            } else {
                *(ebx + 0x151) = *(ebx + 0x151) & 0xef;
                if(M00644daa < 0) {
                    ecx = *(esi + 0xd4) & 0xff;
                    edx = *(eax + 0x28);
                    eax = *(eax + 0x2a);
                } else {
                    ecx = *(esi + 0xd5) & 0xff;
                    edx = *(eax + 0x2c);
                    eax = *(eax + 0x2e);
                }
                ebx = 1;
            }
        }
        *(esi + 0xa4) = ecx;
        ecx = *(esi + 0x18) >> 0x10;
        *(ebp + -364) = edx * edx;
        ecx = *(esi + 0x1c) >> 0x10;
        *(ebp + -356) = edx * edx;
        ecx = *(esi + 0x20) >> 0x10;
        *(ebp + -348) = edx * edx;
        if(eax != 0) {
            edx = *(esi + 0xc) >> 0x10;
            *(ebp + -364) = *(ebp + -364) + eax * eax;
            edx = *(esi + 0x10) >> 0x10;
            *(ebp + -356) = *(ebp + -356) + eax * eax;
            edx = *(esi + 0x14) >> 0x10;
            *(ebp + -348) = *(ebp + -348) + eax * eax;
        }
        if(ebx != 0) {
            *L005016f0(esi + 0x18, esi, M00644da8);
            *L005016f0(esi + 0xc, esi + 0x18, M00644daa);
        }
        *(ebp + -364) = *(ebp + -364) >> 0xc;
        *(ebp + -356) = *(ebp + -356) >> 0xc;
        *(ebp + -348) = *(ebp + -348) >> 0xc;
        *(ebp + -360) = *(ebp + -364) >> 0x1f;
        *(ebp + -352) = *(ebp + -356) >> 0x1f;
        *(ebp + -344) = *(ebp + -348) >> 0x1f;
        L0045A044(esi + 0x3e, ebp + -364);
        *(esi + 0x82) = 0x9c;
        eax = *L005030e4(esi, Ac);
    }
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0046142D - 0x0046142F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046142D()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00461430 - 0x004614B4
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0045BBAD()
 *        L0045BEE4()
 *        L0045C1C0()
 *        L0045C6C8()
 *        L0045C848()
 *        L0045CAA8()
 *        L0045CF0C()
 *        L0045D0C0()
 *        L0045D808()
 *        L0045DB33()
 *        L0045E4F9()
 *        L0045E738()
 *        L0046008C()
 *        L00460A24()
 *        L00460C2B()
 *        L00467E94()
 *        L0046881C()
 */

L00461430(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    eax = Ac;
    if(*(eax + 8) <= 0) {
        eax = 1;
    } else {
        ebx = *eax < 0 ? ~( *eax) : *eax;
        edx = *(eax + 4) < 0 ? ~( *(eax + 4)) : *(eax + 4);
        ebx = (ebx + edx >> 3) + *(eax + 8);
        (save) *(A8 + 0x130);
        (restore)ecx;
        edx = 3 - ecx;
        if(edx >= 0) {
            ecx = edx;
            eax = ebx >> cl;
        } else {
            edx = ~edx;
            ecx = edx;
            if(ebx < -2147483648 >> cl) {
                ecx = edx;
                eax = ebx << cl;
            } else {
                edx = edx << 0x19 | -2147483648;
                eax = edx | *(eax + 8) >> 7;
            }
        }
    }
}

/*    Procedure: 0x004614B5 - 0x004614B7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004614B5()
{



}

/*    Procedure: 0x004614B8 - 0x00461517
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045C1C0()
 *        L0045C6C8()
 *        L0045C848()
 *        L0045CAA8()
 *        L0045CF0C()
 *        L0045D0C0()
 *        L0045D808()
 *        L0045DB33()
 *        L0045E4F9()
 *        L0045E738()
 *        L0046008C()
 *        L00460A24()
 *        L00460C2B()
 *        L00461528()
 *        L00461568()
 *        L004632CD()
 *        L00463BDE()
 *        L00463DB3()
 *        L00463E65()
 *        L0046F8F4()
 */

L004614B8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = M0050449c;
    if(A10 != 0 || M005044a8 == 0) {
        *ebx = Ac;
        *(ebx + 4) = *M005044a4;
        *M005044a4 = ebx;
        ebx = ebx + 8;
    }
    eax = (A8 << 2) + ebx;
    M0050449c = eax;
    eax = M0050449c - M00504498;
    if(eax < 0) {
        eax = eax + 3;
    }
    if(eax >> 2 > 50000) {
        L004539E4();
    }
    return ebx;
}

/*    Procedure: 0x00461518 - 0x00461524
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045DB33()
 */

L00461518(A8)
/* unknown */ void  A8;
{



    M0050449c = A8;
    return M0050449c;
}

/*    Procedure: 0x00461525 - 0x00461527
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461525()
{



}

/*    Procedure: 0x00461528 - 0x00461565
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045B2CC()
 *        L0045B69C()
 *        L0045B778()
 *        L0045BBAD()
 *        L00461568()
 *        L0046159C()
 *        L0046E898()
 */

L00461528(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(M005044a8 != 0) {
        *(L00461674(1)) = 0x461888;
    }
    eax = A8;
    M005044a8 = eax;
    if(eax != 0) {
        eax = L004614B8(1, Ac, 1);
        *eax = 0x461864;
    }
}

/*    Procedure: 0x00461566 - 0x00461567
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461566()
{



}

/*    Procedure: 0x00461568 - 0x00461598
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045BEE4()
 */

L00461568(A8)
/* unknown */ void  A8;
{



    L00461528(0, 0);
    eax = L004614B8(3, A8, 0);
    *eax = 0x4617f4;
    return L004615C0(eax + 4);
}

/*    Procedure: 0x00461599 - 0x0046159B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461599()
{



}

/*    Procedure: 0x0046159C - 0x004615BC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045BEE4()
 */

L0046159C()
{



    L00461528(0, 0);
    (save)L004615EC() + 4;
    eax = L00461674(0);
    (restore)edx;
    *edx = eax;
    return *edx;
}

/*    Procedure: 0x004615BD - 0x004615BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004615BD()
{



}

/*    Procedure: 0x004615C0 - 0x004615E8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00461568()
 */

L004615C0(A8)
/* unknown */ void  A8;
{



    *(M005044a0 * 4 + 6946660) = M005044a4;
    M005044a0 = M005044a0 + 1;
    M005044a4 = A8;
    *A8 = 0;
}

/*    Procedure: 0x004615E9 - 0x004615EB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004615E9()
{



}

/*    Procedure: 0x004615EC - 0x00461619
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046159C()
 */

L004615EC()
{



    M005044a0 = M005044a0 - 1;
    M005044a4 = *(M005044a0 * 4 + 6946660);
    *(M005044a0 * 4 + 6946660) = 0;
    return M005044a4;
}

/*    Procedure: 0x0046161A - 0x0046161B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046161A()
{



}

/*    Procedure: 0x0046161C - 0x00461640
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00461644()
 */

L0046161C(A8)
/* unknown */ void  A8;
{



    M0069ff74 = 0;
    M005044a4 = 6946676;
    M005044a0 = 0;
    M0050449c = A8;
    return M0050449c;
}

/*    Procedure: 0x00461641 - 0x00461643
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461641()
{



}

/*    Procedure: 0x00461644 - 0x00461673
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C40C()
 *        L0043C5F2()
 */

L00461644()
{



    L0046161C(M00504498);
    eax = *L004f80a4(0);
    M00657649 = M00657646;
    M0065764b = M00657648;
    return M0065764b;
}

/*    Procedure: 0x00461674 - 0x004616AF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045D808()
 *        L0045DAC0()
 *        L0045DADC()
 *        L0045DB00()
 *        L0045DB33()
 *        L0046008C()
 *        L00460C2B()
 *        L00461528()
 *        L0046159C()
 */

L00461674(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = M0050449c;
    M0050449c = M0050449c + (A8 << 2);
    eax = M0050449c - M00504498;
    if(eax < 0) {
        eax = eax + 3;
    }
    if(eax >> 2 > 50000) {
        L004539E4();
    }
    return ebx;
}

/*    Procedure: 0x004616B0 - 0x004617E5
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L004617E8()
 *        L004617F4()
 */

L004616B0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = 0;
    eax = *A8;
    do {
        Vfffffffc = Vfffffffc + 1;
        eax = *(eax + 4);
    } while(eax != 0);
    esi = 1;
    if(1 < Vfffffffc) {
        do {
            ecx = A8;
            Vfffffff8 = Vfffffffc;
            do {
                eax = ecx;
                edx = esi;
                do {
                    eax = *eax + 4;
                    edx = edx - 1;
                } while(edx > 0);
                Vfffffff0 = esi;
                edx = Vfffffff8 - esi;
                if(esi < edx) {
                    edx = esi;
                }
                Vfffffff4 = *( *ecx);
                Vffffffec = *( *eax);
                do {
                    if(Vfffffff4 <= Vffffffec) {
                        if(Vfffffff4 == Vffffffec && *ecx < *eax) {
                            goto L0046172c;
                        }
                        Vffffffe8 = *eax;
                        ebx = *(Vffffffe8 + 4);
                        *eax = ebx;
                        ebx = *eax == 0 ? 0 : *( *eax);
                        Vffffffec = ebx;
                        ebx = *ecx;
                        *(Vffffffe8 + 4) = ebx;
                        *ecx = Vffffffe8;
                        ecx = Vffffffe8 + 4;
                        edx = edx - 1;
                    } else {
L0046172c:
                        ecx = *ecx + 4;
                        Vfffffff4 = *( *ecx);
                        Vfffffff0 = Vfffffff0 - 1;
                    }
                } while(Vfffffff0 > 0 && edx > 0);
                do {
                    eax = *eax + 4;
                    edx = edx - 1;
                } while(edx != 0);
                ecx = eax;
                Vfffffff8 = Vfffffff8 - esi + esi;
            } while(esi < Vfffffff8);
            esi = esi + esi;
        } while(esi < Vfffffffc);
    }
    eax = *A8;
    A8 = eax;
    do {
        for(eax = A8 + 8; M005044ac == 0; eax = *eax(eax)) {
        }
        M005044ac = 0;
        eax = *(A8 + 4);
        A8 = eax;
    } while(A8 != 0);
}

/*    Procedure: 0x004617E6 - 0x004617E7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004617E6()
{



}

/*    Procedure: 0x004617E8 - 0x004617F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C40C()
 *        L0043C5F2()
 */

L004617E8()
{



    return L004616B0(6946676);
}

/*    Procedure: 0x004617F4 - 0x00461814
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004617F4(A8)
/* unknown */ void  A8;
{



    L004616B0(A8 + 4);
    M005044ac = 1;
    return *(A8 + 8);
}

/*    Procedure: 0x00461815 - 0x0046184A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00461815(A8)
/* unknown */ void  A8;
{



    L0045785C(M0069ff78, *L004f80a8( *(A8 + 4)));
    M0069ff78 = *L00501678();
    return A8 + 8;
}

/*    Procedure: 0x0046184B - 0x00461860
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0046184B(A8)
/* unknown */ void  A8;
{



    M005044ac = 1;
    return A8 + 4;
}

/*    Procedure: 0x00461861 - 0x00461887
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00461861(A8)
/* unknown */ void  A8;
{



    for(eax = A8 + 4; M005044ac != 2; eax = *eax(eax)) {
    }
    M005044ac = 1;
}

/*    Procedure: 0x00461888 - 0x0046189C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00461888(A8)
/* unknown */ void  A8;
{



    M005044ac = 2;
    return A8 + 4;
}

/*    Procedure: 0x0046189D - 0x004618B5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0046189D(A8)
/* unknown */ void  A8;
{



    M0069ff78 = *L00501678();
    return A8 + 4;
}

/*    Procedure: 0x004618B6 - 0x004618DC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004618B6(A8)
/* unknown */ void  A8;
{



    L00454B9C(M0069ff78, A8 + 4, A8 + 8, 0);
    return A8 + 0xc;
}

/*    Procedure: 0x004618DD - 0x00461904
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L004618DD(A8)
/* unknown */ void  A8;
{



    L00454B9C(M0069ff78, A8 - 4, A8 + 4, 0);
    return A8 + 8;
}

/*    Procedure: 0x00461905 - 0x00461932
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00461905(A8)
/* unknown */ void  A8;
{



    L004542E8(M0069ff78, A8 + 4, A8 + 8, A8 + 0xc, A8 + 0x10);
    return A8 + 0x14;
}

/*    Procedure: 0x00461933 - 0x0046193E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00461933(A8)
/* unknown */ void  A8;
{



    return A8 + 8;
}

/*    Procedure: 0x0046193F - 0x00461971
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L0046193F(A8)
/* unknown */ void  A8;
{



    L0045785C(M0069ff78, *L004f80a8( *(A8 + 4)));
    M005044ac = 1;
    return A8 + 8;
}

/*    Procedure: 0x00461972 - 0x00461989
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00461972(A8)
/* unknown */ void  A8;
{



    M0069ff7c = *L0050167c();
    return A8 + 4;
}

/*    Procedure: 0x0046198A - 0x004619D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046198A()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp - 4) = *(ebx + 4);
    *(ebp - 2) = *(ebx + 8);
    *(ebp - 8) = *(ebx + 0xc);
    *(ebp - 6) = *(ebx + 0x10);
    L00454FD8(M0069ff7c, ebp - 4, ebp - 8, *(ebx + 0x14));
    eax = ebx + 0x18;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004619D8 - 0x00461A4B
 *    Argument size: 4
 *    Local size: 16
 *    Save regs size: 4
 */

L004619D8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = *(A8 + 4);
    Vfffffffe = *(A8 + 8);
    Vfffffff8 = *(A8 + 0xc);
    Vfffffffa = *(A8 + 0x10);
    Vfffffff4 = *(A8 + 0x14);
    Vfffffff6 = *(A8 + 0x18);
    Vfffffff0 = *(A8 + 0x1c);
    Vfffffff2 = *(A8 + 0x20);
    L004550A4(M0069ff7c, & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0, *(A8 + 0x24));
    return A8 + 0x28;
}

/*    Procedure: 0x00461A4C - 0x00461A6E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00461A4C(A8)
/* unknown */ void  A8;
{



    L00454F7C( *(A8 + 4), *(A8 + 8), M0069ff7c);
    return A8 + 0xc;
}

/*    Procedure: 0x00461A6F - 0x00461AC5
 *    Argument size: 4
 *    Local size: 64
 *    Save regs size: 12
 */

L00461A6F(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc0;



    edi = 0;
    esi = & Vffffffc0;
    eax = A8;
    ebx = eax + 4;
    do {
        eax = *L004f80a8( *ebx);
        *esi = eax;
        edi = edi + 1;
        esi = esi + 4;
        ebx = ebx + 4;
    } while(edi < 0x10);
    L00457960(M0069ff7c, & Vffffffc0);
    M005044ac = 1;
    return A8 + 0x44;
}

/*    Procedure: 0x00461AC6 - 0x00461B1D
 *    Argument size: 4
 *    Local size: 32
 *    Save regs size: 12
 */

L00461AC6(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;



    edi = 0;
    esi = & Vffffffe0;
    eax = A8;
    ebx = eax + 4;
    do {
        eax = *L004f80a8( *ebx);
        *esi = eax;
        edi = edi + 1;
        esi = esi + 4;
        ebx = ebx + 4;
    } while(edi < 8);
    L00457998(M0069ff7c, & Vffffffe0);
    M005044ac = 1;
    return A8 + 0x24;
}

/*    Procedure: 0x00461B1E - 0x00461B65
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00461B1E(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    *(ebp - 4) = *(A8 + 8);
    *(ebp - 2) = *(A8 + 0xc);
    L0045723C(ebp - 4, *(A8 + 0x10), *L004f80a8( *(A8 + 4)));
    M005044ac = 1;
    return A8 + 0x14;
}

/*    Procedure: 0x00461B66 - 0x00461BD8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00461B66(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;



    *(ebp - 4) = *(A8 + 8);
    *(ebp - 2) = *(A8 + 0xc);
    esi = *(A8 + 0x10) - 1;
    eax = L0045723C(ebp - 4, *(esi + 0x5044b9), *L004f80a8( *(A8 + 0x14)));
    L0045723C(ebp - 4, *(esi + 0x5044b0), *L004f80a8( *(A8 + 4)));
    M005044ac = 1;
    return A8 + 0x18;
}

/*    Procedure: 0x00461BD9 - 0x00461C3E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00461BD9(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = *(A8 + 8);
    edi = *(A8 + 0xc);
    eax = *(A8 + 0x10);
    *(ebp - 4) = eax;
    eax = L0045717C(esi, edi, *(ebp - 4), 0, *L004f80a8( *(A8 + 0x14)));
    L0045717C(esi, edi, *(ebp - 4), 1, *L004f80a8( *(A8 + 4)));
    M005044ac = 1;
    return A8 + 0x18;
}

/*    Procedure: 0x00461C3F - 0x00461C98
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461C3F()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    *(ebp - 4) = *(ebx + 4);
    *(ebp - 2) = *(ebx + 8);
    *(ebp - 8) = *(ebx + 0xc);
    *(ebp - 6) = *(ebx + 0x10);
    L00457ABC(ebp - 4, ebp - 8, *L004f80a8( *(ebx + 0x14)));
    M005044ac = 1;
    eax = ebx + 0x18;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00461C99 - 0x00461CD3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00461C99(A8)
/* unknown */ void  A8;
{



    L0045656C(A8 + 4, A8 + 8, A8 + 0xc, *L004f80a8( *(A8 + 0x10)));
    M005044ac = 1;
    return A8 + 0x14;
}

/*    Procedure: 0x00461CD4 - 0x00461D0B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00461CD4(A8)
/* unknown */ void  A8;
{



    L00455DF4(A8 + 4, A8 + 8, A8 + 0xc, *L004f80a8( *(A8 + 0x10)));
    M005044ac = 1;
    return A8 + 0x14;
}

/*    Procedure: 0x00461D0C - 0x00461D75
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00461D0C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 0;
    esi = 6746404;
    ebx = A8 + 0x18;
    do {
        *esi = *L004f80a8( *ebx);
        edi = edi + 1;
        esi = esi + 1;
        ebx = ebx + 4;
    } while(edi < 7);
    L00458ACC(A8 + 4, A8 + 8, A8 + 0xc, A8 + 0x10, *(A8 + 0x14));
    M005044ac = 1;
    return A8 + 0x34;
}

/*    Procedure: 0x00461D76 - 0x00461DFC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00461D76(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = *(A8 + 0x26) + 6746404;
    eax = 0;
    *(ebp - 4) = 0;
    ebx = A8 + 0x28;
    do {
        *esi = *L004f80a8( *ebx);
        esi = esi + 1;
        *esi = *L004f80a8( *(ebx + 2));
        esi = esi + 1;
        *(ebp - 4) = *(ebp - 4) + 1;
        ebx = ebx + 4;
    } while(*(ebp - 4) < 4);
    L00458CA4(A8 + 4, A8 + 8, A8 + 0xc, A8 + 0x10, A8 + 0x14, A8 + 0x18, A8 + 0x1c, A8 + 0x20, *(A8 + 0x24));
    M005044ac = 1;
    return A8 + 0x38;
}

/*    Procedure: 0x00461DFD - 0x00461EA1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461DFD()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 8);
    esi = *(edi + 0x26) + 6746404;
    *(ebp - 8) = *(edi + 0x28) >> 1;
    *(ebp - 4) = 0;
    ebx = edi + 0x2c;
    eax = *(ebp - 4);
    do {
        *esi = *L004f80a8( *ebx);
        esi = esi + 1;
        *L004f80a8( *(ebx + 2));
        *esi = al;
        esi = esi + 1;
        *(ebp - 4) = *(ebp - 4) + 1;
        ebx = ebx + 4;
        eax = *(ebp - 4);
    } while(eax < *(ebp - 8));
    L00458CA4(edi + 4, edi + 8, edi + 0xc, edi + 0x10, edi + 0x14, edi + 0x18, edi + 0x1c, edi + 0x20, *(edi + 0x24));
    M005044ac = 1;
    eax = ( *(ebp - 8) << 2) + edi + 0x2c;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00461EA2 - 0x00461F06
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00461EA2(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = 0;
    esi = 6746404;
    ebx = A8 + 0x14;
    do {
        *esi = *L004f80a8( *ebx);
        edi = edi + 1;
        esi = esi + 1;
        ebx = ebx + 4;
    } while(edi < 7);
    L00458960(A8 + 4, A8 + 8, A8 + 0xc, *(A8 + 0x10));
    M005044ac = 1;
    return A8 + 0x30;
}

/*    Procedure: 0x00461F07 - 0x00461F84
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00461F07(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = *(A8 + 0x1e) + 6746404;
    eax = 0;
    *(ebp - 4) = 0;
    ebx = A8 + 0x20;
    do {
        *esi = *L004f80a8( *ebx);
        esi = esi + 1;
        *esi = *L004f80a8( *(ebx + 2));
        esi = esi + 1;
        *(ebp - 4) = *(ebp - 4) + 1;
        ebx = ebx + 4;
    } while(*(ebp - 4) < 4);
    L004589A0(A8 + 4, A8 + 8, A8 + 0xc, A8 + 0x10, A8 + 0x14, A8 + 0x18, *(A8 + 0x1c));
    M005044ac = 1;
    return A8 + 0x30;
}

/*    Procedure: 0x00461F85 - 0x00462021
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00461F85()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 8);
    esi = *(edi + 0x1e) + 6746404;
    *(ebp - 8) = *(edi + 0x20) >> 1;
    *(ebp - 4) = 0;
    ebx = edi + 0x24;
    eax = *(ebp - 4);
    do {
        *esi = *L004f80a8( *ebx);
        esi = esi + 1;
        *L004f80a8( *(ebx + 2));
        *esi = al;
        esi = esi + 1;
        *(ebp - 4) = *(ebp - 4) + 1;
        ebx = ebx + 4;
        eax = *(ebp - 4);
    } while(eax < *(ebp - 8));
    L004589A0(edi + 4, edi + 8, edi + 0xc, edi + 0x10, edi + 0x14, edi + 0x18, *(edi + 0x1c));
    M005044ac = 1;
    eax = ( *(ebp - 8) << 2) + edi + 0x24;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00462022 - 0x0046205F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00462022(A8)
/* unknown */ void  A8;
{



    L00456DFC(A8 + 4, A8 + 8, A8 + 0xc, A8 + 0x10, *L004f80a8( *(A8 + 0x14)));
    M005044ac = 1;
    return A8 + 0x18;
}

/*    Procedure: 0x00462060 - 0x0046209B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00462060(A8)
/* unknown */ void  A8;
{



    L00456D00(A8 + 4, A8 + 8, A8 + 0xc, A8 + 0x10, *L004f80a8( *(A8 + 0x14)));
    M005044ac = 1;
    return A8 + 0x18;
}

/*    Procedure: 0x0046209C - 0x0046211C
 *    Argument size: 4
 *    Local size: 16
 *    Save regs size: 4
 */

L0046209C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff2;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffc = *(A8 + 4);
    Vfffffffe = *(A8 + 8);
    Vfffffff8 = *(A8 + 0xc);
    Vfffffffa = *(A8 + 0x10);
    Vfffffff4 = *(A8 + 0x14);
    Vfffffff6 = *(A8 + 0x18);
    Vfffffff0 = *(A8 + 0x1c);
    Vfffffff2 = *(A8 + 0x20);
    L00454124( & Vfffffffc, & Vfffffff8, & Vfffffff4, & Vfffffff0, *L004f80a8( *(A8 + 0x24)));
    M005044ac = 1;
    return A8 + 0x28;
}

/*    Procedure: 0x0046211D - 0x0046217B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0046211D(A8)
/* unknown */ void  A8;
{



    esp = esp + -276;
    (save)A8;
    *(ebp + -268) = *(A8 + 0xc);
    *L005000c0(ebp + -256, *(A8 + 4), ebp + -276);
    L00455548(ebp + -256, *(A8 + 8), *(A8 + 0xa));
    M005044ac = 1;
    eax = A8 + 0x10;
    (restore)A8;
}

/*    Procedure: 0x0046217C - 0x00462190
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0046217C(A8)
/* unknown */ void  A8;
{



    M005044ac = 1;
    return A8 + 4;
}

/*    Procedure: 0x00462191 - 0x004621F4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 16
 */

L00462191(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = A8;
    esi = *(ebx + 4);
    edi = *L004f80a8( *(ebx + 8));
    ebx = ebx + 0xc;
    for(*(ebp - 4) = *ebx; *(ebp - 4) >= 0; *(ebp - 4) = *ebx) {
        *(ebp - 2) = *(ebx + 4);
        L004572EC(ebp - 4, esi, edi);
        ebx = ebx + 8;
    }
    M005044ac = 1;
    return ebx + 4;
}

/*    Procedure: 0x004621F5 - 0x004623A9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004621F5()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    esp = esp - 0x2c;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0xc);
    esi = *(ebp + 8);
    edi = 6642412;
    L0045BA4C(ebp - 0x2c, *ebx);
    eax = ebp - 0x2c;
    (save) *(eax + 0xc);
    (save) *(eax + 8);
    L0045B9E8(6950784, *eax, *(eax + 4));
    eax = *(ebx + 2) + *(ebx + 2) * 8;
    eax = *( *edi + eax * 4 + 0x14);
    eax = eax == *(esi + 0xf0) ? ( *(ebx + 2) << 2) + ( *(ebx + 2) << 2) * 8 + *edi : *L00501680(esi, *(ebx + 2));
    *(ebp - 4) = eax;
    eax = *(ebx + 3) + *(ebx + 3) * 8;
    eax = *( *edi + eax * 4 + 0x14) != 0 ? ( *(ebx + 3) << 2) + ( *(ebx + 3) << 2) * 8 + *edi : *L00501684(esi, *(ebx + 3));
    *(ebp - 8) = eax;
    eax = *(ebx + 4) + *(ebx + 4) * 8;
    eax = *( *edi + eax * 4 + 0x14);
    eax = eax == *(esi + 0xf0) ? ( *(ebx + 4) << 2) + ( *(ebx + 4) << 2) * 8 + *edi : *L00501680(esi, *(ebx + 4));
    *(ebp - 0xc) = eax;
    eax = *(ebx + 5) + *(ebx + 5) * 8;
    eax = *( *edi + eax * 4 + 0x14) != 0 ? ( *(ebx + 5) << 2) + ( *(ebx + 5) << 2) * 8 + *edi : *L00501684(esi, *(ebx + 5));
    *(ebp - 0x10) = eax;
    eax = *(ebx + 6) + *(ebx + 6) * 8;
    eax = *( *edi + eax * 4 + 0x14);
    eax = eax == *(esi + 0xf0) ? ( *(ebx + 6) << 2) + ( *(ebx + 6) << 2) * 8 + *edi : *L00501680(esi, *(ebx + 6));
    *(ebp - 0x14) = eax;
    eax = *(ebx + 7) + *(ebx + 7) * 8;
    eax = *( *edi + eax * 4 + 0x14) != 0 ? ( *(ebx + 7) << 2) + ( *(ebx + 7) << 2) * 8 + *edi : *L00501684(esi, *(ebx + 7));
    edi = eax;
    *(ebp - 0x18) = *(ebx + 8);
    ebx = L00462528(ebp - 0x1c, ebx + 0xa);
    L004628E4(esi, *(ebp - 4), *(ebp - 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 0x14), edi, *( *(ebp - 0x1c) + 8), *(ebp - 0x18));
    eax = ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x004623AA - 0x004623AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004623AA()
{



}

/*    Procedure: 0x004623AC - 0x00462428
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00462A70()
 *        L0046D648()
 */

L004623AC()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ecx = 6951376;
    ebx = 7059384;
    if(M006a11c8 == 0) {
        M006a11c8 = 6951376;
        eax = 0;
        edx = 6951376;
        do {
            esi = (eax << 3) + (eax << 3) * 8;
            *edx = esi + ecx + 0x48;
            eax = eax + 1;
            edx = edx + 0x48;
        } while(eax < 0x5db);
        *(ecx + 107928) = 0;
        M006bb7b0 = ebx;
        eax = 0;
        edx = ebx;
        do {
            ecx = eax << 4;
            *edx = ecx + ebx + 0x10;
            eax = eax + 1;
            edx = edx + 0x10;
        } while(eax < 0xbb7);
        *(ebx + 47984) = 0;
        M006a11cc = 0;
        eax = 0;
        M006bb7b4 = 0;
    }
}

/*    Procedure: 0x00462429 - 0x0046242B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462429()
{



}

/*    Procedure: 0x0046242C - 0x00462433
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046D648()
 */

L0046242C()
{



    M006a11c8 = 0;
    return 0;
}

/*    Procedure: 0x00462434 - 0x0046246B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00463FFE()
 *        L00464271()
 *        L004644CB()
 *        L00464731()
 *        L00464997()
 *        L00464C44()
 *        L00464EFD()
 *        L004651BB()
 *        L00465484()
 *        L00465786()
 *        L00465B8F()
 *        L00465FAA()
 *        L004663C3()
 *        L004667E8()
 *        L00466C51()
 *        L004670D0()
 *        L00467549()
 *        L004679CC()
 *        L00467C03()
 */

L00462434()
{
    /* unknown */ void  ebx;



    ebx = M006a11c8;
    M006a11cc = M006a11cc + 1;
    if(M006a11cc >= 0x5dc) {
        L004782DA(6951336, 1);
    }
    M006a11c8 = *M006a11c8;
    return ebx;
}

/*    Procedure: 0x0046246C - 0x00462486
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004624CC()
 */

L0046246C(A8)
/* unknown */ void  A8;
{



    M006a11cc = M006a11cc - 1;
    *A8 = M006a11c8;
    M006a11c8 = A8;
}

/*    Procedure: 0x00462487 - 0x00462487
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462487()
{



}

/*    Procedure: 0x00462488 - 0x004624CA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00462A70()
 *        L00463FFE()
 *        L00464271()
 *        L004644CB()
 *        L00464731()
 *        L00464997()
 *        L00464C44()
 *        L00464EFD()
 *        L004651BB()
 *        L00465484()
 *        L00465786()
 *        L00465B8F()
 *        L00465FAA()
 *        L004663C3()
 *        L004667E8()
 *        L00466C51()
 *        L004670D0()
 *        L00467549()
 *        L004679CC()
 *        L00467C03()
 *        L00467E94()
 *        L0046881C()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 *        L0046D648()
 */

L00462488()
{
    /* unknown */ void  ebx;



    eax = M006bb7b0;
    ebx = eax;
    M006bb7b0 = *eax;
    M006bb7b4 = M006bb7b4 + 1;
    if(M006bb7b4 >= 0xbb8) {
        L004782DA(6951336, 2);
    }
    *(ebx + 4) = 0;
    *(ebx + 0xc) = 0;
    *(ebx + 8) = 0;
    return ebx;
}

/*    Procedure: 0x004624CB - 0x004624CB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004624CB()
{



}

/*    Procedure: 0x004624CC - 0x0046250B
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004624CC()
 *        L00462A70()
 *        L00467E94()
 *        L0046881C()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 */

L004624CC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = A8;
    do {
        eax = *(ebx + 4);
        if(eax != 0) {
            L004624CC(eax);
        }
        eax = *(ebx + 8);
        if(eax != 0) {
            L0046246C(eax);
        }
        M006bb7b4 = M006bb7b4 - 1;
        eax = M006bb7b0;
        *ebx = eax;
        M006bb7b0 = ebx;
        ebx = *(ebx + 0xc);
    } while(ebx != 0);
}

/*    Procedure: 0x0046250C - 0x00462527
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004287E4()
 *        L00428DEC()
 *        L00432FDC()
 *        L00433318()
 */

L0046250C(A8)
/* unknown */ void  A8;
{



    eax = A8;
    do {
        eax = eax + 0x10;
    } while(*eax != 0);
    return eax + 2;
}

/*    Procedure: 0x00462528 - 0x004626F8
 *    Argument size: 8
 *    Local size: 28
 *    Save regs size: 8
 *    Called by:
 *        L004621F5()
 *        L0046D648()
 */

L00462528(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff0 = 0x58;
    Vffffffec = 6946688;
    edx = 0;
    eax = Vffffffec + 8;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 4;
    } while(edx < 0x14);
    edx = 0;
    eax = Vffffffec;
    do {
        *eax = 0;
        edx = edx + 1;
        eax = eax + 4;
    } while(edx < 2);
    Vfffffffc = *Ac;
    do {
        Vfffffff4 = *(Ac + 2);
        Vffffffe8 = L00459CEC(Vfffffffc);
        ebx = Vffffffec;
        eax = Vffffffe8 - 3 >> 1;
        if(!(Vfffffffc = Vfffffffc << 0x10 - Vffffffe8 & 65535)) {
            asm("adc eax,+0x0");
        }
        Vffffffe8 = eax;
        do {
            Vfffffff8 = Vfffffffc >> 0xb;
            Vffffffe4 = ebx;
            ebx = *(Vffffffe4 + Vfffffff8 * 4 + 8);
            if(ebx == 0) {
                ebx = 6946688 + Vfffffff0;
                Vfffffff0 = Vfffffff0 + 0x18;
                edx = 0;
                eax = ebx + 8;
                do {
                    *eax = 0;
                    edx = edx + 1;
                    eax = eax + 4;
                } while(edx < 4);
                edx = 0;
                ecx = ebx;
                eax = Vffffffe4;
                do {
                    esi = *eax;
                    if(esi <= 0) {
                        esi = *eax;
                        *ecx = esi >= 0 ? 0 : esi + 1;
                    } else {
                        *ecx = ~( *((esi + esi * 2) * 4 + 0x504610) - 1);
                    }
                    edx = edx + 1;
                    ecx = ecx + 4;
                    eax = eax + 4;
                } while(edx < 2);
                *(Vffffffe4 + Vfffffff8 * 4 + 8) = ebx;
            }
            Vfffffffc = Vfffffffc << 2 & 8191;
            Vffffffe8 = Vffffffe8 - 1;
        } while(Vffffffe8 > 0);
        edx = 0;
        eax = ebx;
        do {
            if(*eax == 0) {
                break;
            }
            edx = edx + 1;
            eax = eax + 4;
        } while(edx < 2);
        if(edx < 2) {
            eax = 6946688 + Vfffffff0;
            Vfffffff0 = Vfffffff0 + 0x10;
            *(ebx + edx * 4) = eax;
            *eax = Vfffffff4;
            *(eax + 4) = *(Ac + 4);
            *(eax + 6) = *(Ac + 6);
            *(eax + 8) = *(Ac + 8);
            *(eax + 0xa) = *(Ac + 0xa);
            *(eax + 0xc) = *(Ac + 0xc);
            *(eax + 0xe) = *(Ac + 0xe);
        }
        Ac = Ac + 0x10;
        Vfffffffc = *Ac;
    } while(Vfffffffc != 0);
    *A8 = Vffffffec;
    return Ac + 2;
}

/*    Procedure: 0x004626F9 - 0x004626FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004626F9()
{



}

/*    Procedure: 0x004626FC - 0x0046271D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004628E4()
 *        L00463EBC()
 *        L0046D648()
 */

L004626FC(A8)
/* unknown */ void  A8;
{



    edx = A8 >> 0x1b;
    edx = (edx | A8 << 5) + A8;
    ecx = edx >> 0x10;
    return A8 + (ecx | edx << 0x10);
}

/*    Procedure: 0x0046271E - 0x0046271F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046271E()
{



}

/*    Procedure: 0x00462720 - 0x0046275F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004627DC()
 *        L0046D648()
 *        L0046E898()
 *        L0046F838()
 */

L00462720(A8)
/* unknown */ void  A8;
{



    edx = *A8 < 0 ? ~( *A8) : *A8;
    ecx = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
    edx = edx | ecx;
    ecx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
    return L00459CEC(edx | ecx);
}

/*    Procedure: 0x00462760 - 0x004627DB
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00467E94()
 *        L0046881C()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 */

L00462760(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = *Ac < 0 ? ~( *Ac) : *Ac;
    edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
    eax = eax | edx;
    edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
    eax = L00459CEC(eax | edx) - 0xd;
    if(eax >= 0) {
        ecx = eax;
        *A8 = *Ac >> cl;
        ecx = eax;
        *(A8 + 4) = *(Ac + 4) >> cl;
        ecx = eax;
        eax = *(Ac + 8) >> cl;
        *(A8 + 8) = eax;
    } else {
        *A8 = *Ac;
        *(A8 + 4) = *(Ac + 4);
        eax = *(Ac + 8);
        *(A8 + 8) = eax;
    }
}

/*    Procedure: 0x004627DC - 0x004628E3
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00467E94()
 *        L0046881C()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 */

L004627DC(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ecx = A14;
    edx = A10;
    eax = Ac;
    esi = *edx;
    Vfffffff4 = esi + ~( *eax);
    esi = *(edx + 4);
    Vfffffff8 = esi + ~( *(eax + 4));
    edx = *(edx + 8);
    Vfffffffc = edx + ~( *(eax + 8));
    edx = *ecx;
    Vffffffe8 = edx + ~( *eax);
    edx = *(ecx + 4);
    Vffffffec = edx + ~( *(eax + 4));
    edx = *(ecx + 8);
    Vfffffff0 = edx + ~( *(eax + 8));
    eax = L00462720( & Vfffffff4) - 6;
    if(eax > 0) {
        ecx = eax;
        Vfffffff4 = Vfffffff4 >> cl;
        ecx = eax;
        Vfffffff8 = Vfffffff8 >> cl;
        Vfffffffc = Vfffffffc >> eax;
    }
    eax = L00462720( & Vffffffe8) - 6;
    if(eax > 0) {
        ecx = eax;
        Vffffffe8 = Vffffffe8 >> cl;
        ecx = eax;
        Vffffffec = Vffffffec >> cl;
        Vfffffff0 = Vfffffff0 >> eax;
    }
    eax = Vfffffff8;
    asm("imul dword [ebp-0x10]");
    edx = Vfffffffc;
    *A8 = eax - Vffffffec * Vffffffec;
    eax = Vfffffffc;
    asm("imul dword [ebp-0x18]");
    edx = Vfffffff4;
    *(A8 + 4) = eax - Vfffffff0 * Vfffffff0;
    eax = Vfffffff4;
    asm("imul dword [ebp-0x14]");
    edx = Vfffffff8;
    *(A8 + 8) = eax - Vffffffe8 * Vffffffe8;
    ecx = *L00501674(A8) + 1;
    eax = *A8 << 0xf;
    asm("cdq");
    ecx = ecx / ecx;
    edx = ecx % ecx;
    *A8 = eax;
    eax = *(A8 + 4) << 0xf;
    asm("cdq");
    ecx = ecx / ecx;
    edx = ecx % ecx;
    *(A8 + 4) = eax;
    eax = *(A8 + 8) << 0xf;
    asm("cdq");
    edx = ecx / ecx % ecx / ecx;
    *(A8 + 8) = eax;
}

/*    Procedure: 0x004628E4 - 0x00462A32
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004621F5()
 */

L004628E4(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -216;
    (save)A14;
    (save)esi;
    edx = Ac;
    if(*(edx + 0xc) < 0x40 && *(A14 + 0xc) < 0x40) {
        eax = A1c;
        if(*(eax + 0xc) < 0x40) {
            goto L00462a2d;
        }
    }
    *(ebp - 0x20) = *(A10 + 0x18);
    *(ebp - 0x1c) = *(A10 + 0x1c);
    *(ebp - 0x18) = *(A10 + 0x20);
    *(ebp - 0x44) = *(edx + 4);
    *(ebp - 0x40) = *(edx + 8);
    *(ebp - 0x3c) = *(edx + 0xc);
    *(ebp - 0x48) = *edx;
    eax = L004626FC( *( *(A8 + 0x14c) + 0xa0));
    *(ebp - 0xc) = eax >> 4;
    edx = A18;
    *(ebp - 0x68) = *(edx + 0x18);
    *(ebp - 0x64) = *(edx + 0x1c);
    *(ebp - 0x60) = *(edx + 0x20);
    *(ebp + -140) = *(A14 + 4);
    *(ebp + -136) = *(A14 + 8);
    *(ebp + -132) = *(A14 + 0xc);
    *(ebp + -144) = *A14;
    eax = L004626FC(eax);
    *(ebp - 0x54) = eax >> 4;
    edx = A20;
    *(ebp + -176) = *(edx + 0x18);
    *(ebp + -172) = *(edx + 0x1c);
    *(ebp + -168) = *(edx + 0x20);
    edx = A1c;
    *(ebp + -212) = *(edx + 4);
    *(ebp + -208) = *(edx + 8);
    *(ebp + -204) = *(edx + 0xc);
    *(ebp + -216) = *A1c;
    *(ebp + -156) = L004626FC(eax) >> 4;
    M006a1188 = 0;
    M006a119c = 1;
    eax = L00462A70(A8, ebp - 0x48, ebp + -144, ebp + -216, A24, A28);
L00462a2d:
    (restore)esi;
    (restore)A14;
}

/*    Procedure: 0x00462A33 - 0x00462A33
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462A33()
{



}

/*    Procedure: 0x00462A34 - 0x00462A6D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00462CB8()
 *        L00463FFE()
 *        L00464271()
 *        L004644CB()
 *        L00464731()
 *        L00464997()
 *        L00464C44()
 *        L00464EFD()
 *        L004651BB()
 *        L00465484()
 *        L00465786()
 *        L00465B8F()
 *        L00465FAA()
 *        L004663C3()
 *        L004667E8()
 *        L00466C51()
 *        L004670D0()
 *        L00467549()
 *        L004679CC()
 *        L00467C03()
 */

L00462A34(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = *(A8 + 0xc);
    if(esi < 0x400) {
        esi = 0x400;
    }
    eax = L00459CEC(esi);
    edi = M006a11a0 - eax;
    *(A8 + 0x44) = edi;
    if(!(edi = *(A8 + 0x44) - 1)) {
        *(A8 + 0x44) = 1;
    }
}

/*    Procedure: 0x00462A6E - 0x00462A6F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462A6E()
{



}

/*    Procedure: 0x00462A70 - 0x00462BBA
 *    Argument size: 24
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L004628E4()
 */

L00462A70(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    L004623AC();
    edx = *(Ac + 4);
    eax = edx;
    ecx = *(A10 + 4);
    if(eax > ecx) {
        eax = ecx;
    } else {
        edx = ecx;
    }
    ecx = *(A14 + 4);
    if(eax > ecx) {
        eax = ecx;
    }
    if(ecx > edx) {
        edx = ecx;
    }
    Vfffffffc = edx - eax;
    edx = *(Ac + 8);
    eax = edx;
    ecx = *(A10 + 8);
    if(eax > ecx) {
        eax = ecx;
    } else {
        edx = ecx;
    }
    ecx = *(A14 + 8);
    if(eax > ecx) {
        eax = ecx;
    }
    if(ecx > edx) {
        edx = ecx;
    }
    Vfffffff8 = edx - eax;
    edx = *(Ac + 0xc);
    eax = edx;
    ecx = *(A10 + 0xc);
    if(eax > ecx) {
        eax = ecx;
    } else {
        edx = ecx;
    }
    ecx = *(A14 + 0xc);
    if(eax > ecx) {
        eax = ecx;
    }
    if(ecx > edx) {
        edx = ecx;
    }
    eax = edx - eax;
    edi = Vfffffffc;
    if(edi < Vfffffff8) {
        edi = Vfffffff8;
    }
    if(edi < eax) {
        edi = eax;
    }
    eax = edi + edx;
    if(eax >= 0x40) {
        M006a11a0 = L00459CEC(Vfffffffc + Vfffffff8) + M005044c4;
        Vfffffff4 = L00462488();
        *Vfffffff4 = Ac;
        Vfffffff0 = L00462488();
        *Vfffffff0 = A10;
        Vffffffec = L00462488();
        *Vffffffec = A14;
        L00462EF8(Ac, A10, A14, Vfffffff4, Vfffffff0, Vffffffec, edi, A18, 0, L00462C28(A8, edi, A1c, 0), 0);
        L004624CC(Vfffffff4);
        L004624CC(Vfffffff0);
        eax = L004624CC(Vffffffec);
    }
}

/*    Procedure: 0x00462BBB - 0x00462BF0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00462BBB(A8)
/* unknown */ void  A8;
{



    if(A8 == -32766) {
        return 8;
    }
    if(A8 == 0xa0) {
        return 2;
    }
    edx = 1;
    if(A8 >= 0xa0) {
        edx = 4;
    }
    return edx;
}

/*    Procedure: 0x00462BF1 - 0x00462C24
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00462BF1(A8)
/* unknown */ void  A8;
{



    if(A8 == -32766) {
        return 8;
    }
    if(A8 == 0x4f) {
        return 2;
    }
    edx = 1;
    if(A8 >= 0x4f) {
        edx = 4;
    }
    return edx;
}

/*    Procedure: 0x00462C25 - 0x00462C27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462C25()
{



}

/*    Procedure: 0x00462C28 - 0x00462CB5
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00462A70()
 *        L0046D648()
 */

L00462C28(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    ebx = (A10 << 4) + (A10 << 4) * 2 + 0x5046b0;
    if(A14 != 0) {
        M006c7340 = 0x462bbc;
        M006c7344 = 0x462bf4;
        M006c7348 = 0x463fb8;
    } else {
        M006c7340 = 0x45da14;
        M006c7344 = 0x45da48;
        M006c7348 = 0x463f00;
    }
    ecx = A8 != 0 ? *(A8 + 0x130) : 0;
    M006a1190 = 500000000 >> cl;
    M006a11a4 = *ebx;
    *(ebx + 4)(ebx);
    M006a1184 = A8;
    return *(ebx + 8);
}

/*    Procedure: 0x00462CB6 - 0x00462CB7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462CB6()
{



}

/*    Procedure: 0x00462CB8 - 0x00462EF5
 *    Argument size: 24
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00462EF8()
 *        L0046D648()
 */

L00462CB8(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A1c;
    if(A14 != 0) {
        eax = eax + 8;
    }
    if(A18 == 0) {
        eax = eax + 2;
    }
    M006c733c = *(eax * 4 + 0x504950);
    M006c7338 = *(eax * 4 + 0x504960);
    L00462A34(A8);
    *L006c7340( *A8);
    *(A8 + 0x24) = ax;
    *L006c7344( *(A8 + 2));
    *(A8 + 0x26) = ax;
    L00462A34(Ac);
    *L006c7340( *Ac);
    *(Ac + 0x24) = ax;
    *L006c7344( *(Ac + 2));
    *(Ac + 0x26) = ax;
    L00462A34(A10);
    *L006c7340( *A10);
    *(A10 + 0x24) = ax;
    *L006c7344( *(A10 + 2));
    *(A10 + 0x26) = ax;
    if(A14 != 0) {
        Vfffffffc = 0;
        Vfffffff0 = A14;
        do {
            if(*Vfffffff0 > 0) {
                eax = *Vfffffff0;
                Vfffffff4 = ( *eax << 2) + ( *eax << 2) * 2 + 0x504608;
                eax = eax + 4;
                if(*eax < 0x80 && *(eax + 2) < 0x80) {
                    edx = *eax;
                    Vfffffff8 = edx + ( *(eax + 2) << 7);
                    *(A8 + 0x3c) = *(A8 + 0x3c) >> 7;
                    if(*(Vfffffff4 + 4) != 0) {
                        edx = *( *(Vfffffff4 + 4) + Vfffffff8) & 0xff;
                        *(A8 + 0x3c) = *(A8 + 0x3c) * *(A8 + 0x3c);
                    }
                    *(A8 + 0x3c) = *(A8 + 0x3c) + ( *( *Vfffffff4 + Vfffffff8) << 0x15);
                }
                if(*(eax + 4) < 0x80 && *(eax + 6) < 0x80) {
                    edx = *(eax + 4);
                    Vfffffff8 = edx + ( *(eax + 6) << 7);
                    *(Ac + 0x3c) = *(Ac + 0x3c) >> 7;
                    if(*(Vfffffff4 + 4) != 0) {
                        edx = *( *(Vfffffff4 + 4) + Vfffffff8) & 0xff;
                        *(Ac + 0x3c) = *(Ac + 0x3c) * *(Ac + 0x3c);
                    }
                    *(Ac + 0x3c) = *(Ac + 0x3c) + ( *( *Vfffffff4 + Vfffffff8) << 0x15);
                }
                if(*(eax + 8) < 0x80 && *(eax + 0xa) < 0x80) {
                    edx = *(eax + 8);
                    Vfffffff8 = edx + ( *(eax + 0xa) << 7);
                    *(A10 + 0x3c) = *(A10 + 0x3c) >> 7;
                    eax = *(Vfffffff4 + 4);
                    if(eax != 0) {
                        eax = *(eax + Vfffffff8) & 0xff;
                        *(A10 + 0x3c) = *(A10 + 0x3c) * *(A10 + 0x3c);
                    }
                    *(A10 + 0x3c) = *(A10 + 0x3c) + ( *( *Vfffffff4 + Vfffffff8) << 0x15);
                }
            }
            Vfffffffc = Vfffffffc + 1;
            Vfffffff0 = Vfffffff0 + 4;
        } while(Vfffffffc < 2);
    }
    eax = *(A8 + 0x3c) < 0 ? 0 : *(A8 + 0x3c);
    *(A8 + 0x40) = eax;
    eax = *(Ac + 0x3c) < 0 ? 0 : *(Ac + 0x3c);
    *(Ac + 0x40) = eax;
    eax = *(A10 + 0x3c) < 0 ? 0 : *(A10 + 0x3c);
    *(A10 + 0x40) = eax;
}

/*    Procedure: 0x00462EF6 - 0x00462EF7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00462EF6()
{



}

/*    Procedure: 0x00462EF8 - 0x0046303D
 *    Argument size: 44
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00462A70()
 *        L0046D648()
 */

L00462EF8(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c, A30)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
{



    L00462CB8(A8, Ac, A10, A24, A28, A2c);
    if(!(bl & 1)) {
        if(A2c < 8) {
            goto L00462fba;
        }
        if(!(eax = A30 - 1)) {
            == ? L00462f6b : ;
            if(eax = eax - 1) {
                goto L00462f94;
            }
        } else {
            eax = L0046881C(A8, Ac, A10, A14, A18, A1c, 0, A20, A24);
            goto L00463039;
            eax = L0046A4F4(A8, Ac, A10, A14, A18, A1c, 0, A20, A24);
            goto L00463039;
L00462f94:
            eax = L0046C600(A8, Ac, A10, A14, A18, A1c, 0, A20, A24);
        }
    } else {
L00462fba:
        if(!(eax = A30 - 1)) {
            == ? L00462fef : ;
            if(eax = eax - 1) {
                goto L00463015;
            }
        } else {
            eax = L00467E94(A8, Ac, A10, A14, A18, A1c, 0, A20, A24);
            goto L00463039;
            eax = L00469220(A8, Ac, A10, A14, A18, A1c, 0, A20, A24);
            goto L00463039;
L00463015:
            eax = L0046B7D8(A8, Ac, A10, A14, A18, A1c, 0, A20, A24);
        }
    }
L00463039:
}

/*    Procedure: 0x0046303E - 0x00463047
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0046303E(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x00463048 - 0x0046314A
 *    Argument size: 12
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L004632CD()
 */

L00463048(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A10;
    esi = *(ebx + 0x3c);
    Vfffffffc = esi >> 3;
    esi = L004537CD(esi, esi - *(Ac + 0x3c));
    if(esi < 0) {
        esi = 0;
    }
    edi = 2147483647 - esi;
    (save)Vfffffffc;
    eax = L004537B0( *(ebx + 0x28));
    Vfffffff0 = *(ebx + 4) - eax;
    (save)Vfffffffc;
    eax = L004537B0( *(ebx + 0x2c));
    Vfffffff4 = *(ebx + 8) - eax;
    (save)Vfffffffc;
    eax = L004537B0( *(ebx + 0x30));
    Vfffffff8 = *(ebx + 0xc) - eax;
    (save)edi;
    ebx = L004537B0( *(Ac + 4));
    (save)esi;
    Vfffffff0 = ebx + L004537B0(Vfffffff0);
    (save)edi;
    ebx = L004537B0( *(Ac + 8));
    (save)esi;
    Vfffffff4 = ebx + L004537B0(Vfffffff4);
    (save)edi;
    ebx = L004537B0( *(Ac + 0xc));
    (save)esi;
    Vfffffff8 = ebx + L004537B0(Vfffffff8);
    return L00452681(A8, & Vfffffff0);
}

/*    Procedure: 0x0046314B - 0x0046314B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046314B()
{



}

/*    Procedure: 0x0046314C - 0x004631E1
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004632CD()
 */

L0046314C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edx = A14;
    eax = A8;
    if(Ac != 0) {
        ebx = M006a1194;
        A10 = (A10 << 3) + Ac * Ac;
        ebx = 0;
        edi = eax;
        esi = edx;
        do {
            eax = *esi;
            edx = 8 - Ac;
            asm("imul edx");
            *(ebp - 4) = eax + A10 >> 3 & 986895;
            *L004f80a0( *(ebp - 4));
            eax = ax & 65535;
            *edi = eax;
            ebx = ebx + 1;
            edi = edi + 4;
            esi = esi + 4;
        } while(ebx < 7);
    } else {
        ebx = 0;
        edi = eax;
        esi = edx;
        do {
            *(ebp - 4) = *esi + A10;
            *L004f80a0( *(ebp - 4));
            eax = ax & 65535;
            *edi = eax;
            ebx = ebx + 1;
            edi = edi + 4;
            esi = esi + 4;
        } while(ebx < 7);
    }
}

/*    Procedure: 0x004631E2 - 0x004631E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004631E2()
{



}

/*    Procedure: 0x004631E4 - 0x004632CC
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004632CD()
 *        L00463BDE()
 */

L004631E4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edx = A14;
    eax = A8;
    A18 = A18 >> 1;
    if(Ac != 0) {
        ebx = M006a1194;
        A10 = (A10 << 3) + Ac * Ac;
        edi = 0;
        esi = eax;
        ebx = edx;
        if(0 < A18) {
            do {
                eax = *ebx;
                edx = 8 - Ac;
                asm("imul edx");
                *(ebp - 4) = eax + A10 >> 3 & 986895;
                *L004f80a0( *(ebp - 4));
                *esi = ax;
                eax = *(ebx + 4);
                edx = 8 - Ac;
                asm("imul edx");
                *(ebp - 4) = eax + A10 >> 3 & 986895;
                *(esi + 2) = *L004f80a0( *(ebp - 4));
                edi = edi + 1;
                esi = esi + 4;
                ebx = ebx + 8;
            } while(edi < A18);
        }
    } else {
        edi = 0;
        esi = eax;
        ebx = edx;
        if(0 < A18) {
            do {
                *(ebp - 4) = *ebx + A10;
                *L004f80a0( *(ebp - 4));
                *esi = ax;
                *(ebp - 4) = *(ebx + 4) + A10;
                *(esi + 2) = *L004f80a0( *(ebp - 4));
                edi = edi + 1;
                esi = esi + 4;
                ebx = ebx + 8;
            } while(edi < A18);
        }
    }
}

/*    Procedure: 0x004632CD - 0x00463A89
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 */

L004632CD(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    esi = A18;
    eax = A14;
    edi = A8;
    ebx = *(M006a1184 + 0x134);
    ebx = *eax * *eax;
    edx = *(M006a1184 + 0x138);
    ebx = ebx + *(eax + 4) * *(eax + 4);
    edx = *(M006a1184 + 0x13c);
    ebx = ~(ebx + *(eax + 8) * *(eax + 8));
    if(ebx < 0) {
        ebx = ebx >> 0x1b;
        if(ebx < 0x18) {
            ebx = 0;
        }
        eax = (ebx & 7) + (ebx & 7) * 2;
        edx = M006a1184;
        Vfffffffc = *(edx + eax + 0x84);
        Vfffffffe = *(edx + eax + 0x86);
    } else {
        Vfffffffc = 0;
    }
    if(*(Ac + 0x3c) > *(edi + 0x3c)) {
        eax = edi;
        edi = Ac;
        Ac = eax;
    }
    if(*(A10 + 0x3c) > *(edi + 0x3c)) {
        eax = edi;
        edi = A10;
        A10 = eax;
    }
    eax = *(Ac + 0x3c);
    if(eax < *(A10 + 0x3c)) {
        eax = Ac;
        Ac = A10;
        A10 = eax;
    }
    if(M006a1188 != 0) {
        ebx = L004765BC( *(edi + 4));
        ebx = (ebx + L004765BC( *(edi + 8)) >> 3) + *(edi + 0xc);
        ecx = M006a118c;
        if(ecx != 0) {
            eax = ebx - ecx;
            asm("cdq");
            M006a1198 = M006a1198 / M006a1198;
            edx = M006a1198 % M006a1198;
            ebx = eax;
        } else {
            ecx = M006a1198;
            eax = ebx;
            asm("cdq");
            edx = ecx / ecx % ecx / ecx;
            ebx = eax;
        }
        if(ebx < 0) {
            ebx = 0;
        }
        if(ebx > 8) {
            ebx = 8;
        }
    } else {
        ebx = 0;
    }
    *(edi + 0x3c) :: 0;
    asm("setng al");
    eax = eax & 1;
    edx = Ac;
    *(edx + 0x3c) :: 0;
    asm("setng dl");
    eax = eax + (edx & 1);
    edx = A10;
    *(edx + 0x3c) :: 0;
    asm("setng dl");
    eax = eax + (edx & 1);
    if(M00644bb4 >= 0) {
        if(esi <= 536870911) {
            goto L0046342d;
        }
        if(eax != 3) {
L0046342d:
            if(esi <= 2147483647 || *(edi + 0x3c) - *(A10 + 0x3c) >= 536870911) {
                goto L0046355c;
            }
        }
    }
    eax = *(edi + 0x3c);
    edx = eax >> 0x12;
    ecx = edx;
    edx = (edx << 3) - ecx + ((edx << 3) - ecx) * 2;
    if(edx < 0) {
        edx = edx + 0x1ff;
    }
    Vfffffff0 = edx >> 9;
    if(eax <= 0) {
        Vfffffff0 = Vfffffff0 + 3;
        if(Vfffffff0 < 0) {
            Vfffffff0 = 0;
        }
        if(ebx != 0) {
            eax = *((Vfffffff0 << 5) + 0x5049d0);
            edx = 8 - ebx;
            asm("imul edx");
            edx = M006a1194;
            Vfffffffc = Vfffffffc + (eax + ebx * ebx >> 3 & 986895);
        } else {
            Vfffffffc = Vfffffffc + *((Vfffffff0 << 5) + 0x5049d0);
        }
    } else {
        if(Vfffffff0 > 0x14) {
            Vfffffff0 = 0x14;
        }
        if(ebx != 0) {
            eax = Vfffffff0;
            edx = eax;
            eax = *(((eax << 3) - edx) * 4 + 0x504cc8);
            edx = 8 - ebx;
            asm("imul edx");
            edx = M006a1194;
            Vfffffffc = Vfffffffc + (eax + ebx * ebx >> 3 & 986895);
        } else {
            eax = Vfffffff0;
            edx = eax;
            Vfffffffc = Vfffffffc + *(((eax << 3) - edx) * 4 + 0x504cc8);
        }
    }
    esi = L004614B8(5, esi, 0);
    *esi = 0x461cd4;
    *(esi + 4) = *edi;
    *(esi + 8) = *Ac;
    *(esi + 0xc) = *A10;
    *L004f80a0(Vfffffffc);
    eax = ax & 65535;
    *(esi + 0x10) = eax;
    goto L00463a83;
L0046355c:
    if(!(eax = eax - 1)) {
        == ? L0046374d : ;
        if(eax = eax - 1) {
            goto L004635ec;
        }
        if(!(eax = eax - 1)) {
            eax = *(Ac + 0x3c) + *(edi + 0x3c);
            Vfffffff0 = (eax + *(A10 + 0x3c) >> 0x19) + 3;
            if(Vfffffff0 < 0) {
                Vfffffff0 = 0;
            }
            esi = L004614B8(0xc, esi, 0);
            *esi = 0x461ea4;
            *(esi + 4) = *edi;
            *(esi + 8) = *Ac;
            *(esi + 0xc) = *A10;
            *(esi + 0x10) = 0x121;
            eax = L0046314C(esi + 0x14, ebx, Vfffffffc, (Vfffffff0 << 5) + 0x5049d0);
            goto L00463a83;
L004635ec:
            Vfffffff4 = L004614B8(0xd, esi, 0);
            *Vfffffff4 = 0x461d0c;
            *(Vfffffff4 + 4) = *A10;
            *(Vfffffff4 + 8) = *Ac;
            L00463048(Vfffffff4 + 0xc, Ac, edi);
            L00463048(Vfffffff4 + 0x10, A10, edi);
            *(Vfffffff4 + 0x14) = 0x121;
            L0046314C(Vfffffff4 + 0x18, ebx, Vfffffffc, 0x504a30);
            if(*(edi + 0x3c) < 4194304) {
                esi = L004614B8(0xc, esi, 0);
                *esi = 0x461ea4;
                *(esi + 4) = *(Vfffffff4 + 0xc);
                *(esi + 8) = *(Vfffffff4 + 0x10);
                *(esi + 0xc) = *edi;
                *(esi + 0x10) = 0x40;
                eax = L0046314C(esi + 0x14, ebx, Vfffffffc, 0x504cc8);
            } else {
                esi = L004614B8(0x14, esi, 0);
                *esi = 0x461f88;
                *(esi + 4) = *(Vfffffff4 + 0xc);
                *(esi + 8) = *(Vfffffff4 + 0x10);
                *(esi + 0xc) = *edi;
                *(esi + 0x10) = 0;
                *(esi + 0x12) = 0;
                *(esi + 0x14) = 0x3f;
                *(esi + 0x16) = 0;
                *(esi + 0x18) = 0;
                eax = *(edi + 0x3c) >> 0x12;
                *(esi + 0x1a) = ax;
                if(*(esi + 0x1a) > 0x1ff) {
                    *(esi + 0x1a) = 0x1ff;
                }
                *(esi + 0x1c) = 0x5e;
                *(esi + 0x1e) = 0;
                *(esi + 0x20) = 0x16;
                eax = L004631E4(esi + 0x24, ebx, Vfffffffc, 0x504c70, 0x16);
                goto L00463a83;
                if(*(edi + 0x3c) < 4194304) {
                    Vfffffff4 = L004614B8(0xd, esi, 0);
                    *Vfffffff4 = 0x461d0c;
                    *(Vfffffff4 + 4) = *edi;
                    *(Vfffffff4 + 8) = *Ac;
                    L00463048(Vfffffff4 + 0xc, A10, Ac);
                    L00463048(Vfffffff4 + 0x10, A10, edi);
                    *(Vfffffff4 + 0x14) = 0x40;
                    L0046314C(Vfffffff4 + 0x18, ebx, Vfffffffc, 0x504cc8);
                } else {
                    Vfffffff4 = L004614B8(0x16, esi, 0);
                    *Vfffffff4 = 0x461e00;
                    *(Vfffffff4 + 4) = *edi;
                    *(Vfffffff4 + 8) = *Ac;
                    L00463048(Vfffffff4 + 0xc, A10, Ac);
                    L00463048(Vfffffff4 + 0x10, A10, edi);
                    *(Vfffffff4 + 0x14) = 0;
                    eax = *(edi + 0x3c) >> 0x12;
                    *(Vfffffff4 + 0x16) = ax;
                    *(Vfffffff4 + 0x18) = 0x3f;
                    *(Vfffffff4 + 0x1a) = *(Ac + 0x3c) >> 0x12;
                    *(Vfffffff4 + 0x1c) = 0x3f;
                    *(Vfffffff4 + 0x1e) = 0;
                    *(Vfffffff4 + 0x20) = 0;
                    *(Vfffffff4 + 0x22) = 0;
                    if(*(Vfffffff4 + 0x16) > 0x1ff) {
                        *(Vfffffff4 + 0x16) = 0x1ff;
                    }
                    if(*(Vfffffff4 + 0x1a) > 0x1ff) {
                        *(Vfffffff4 + 0x1a) = 0x1ff;
                    }
                    *(Vfffffff4 + 0x24) = 0x5e;
                    *(Vfffffff4 + 0x26) = 0;
                    *(Vfffffff4 + 0x28) = 0x16;
                    L004631E4(Vfffffff4 + 0x2c, ebx, Vfffffffc, 0x504c70, 0x16);
                }
                esi = L004614B8(0xc, esi, 0);
                *esi = 0x461ea4;
                *(esi + 4) = *A10;
                *(esi + 8) = *(Vfffffff4 + 0xc);
                *(esi + 0xc) = *(Vfffffff4 + 0x10);
                *(esi + 0x10) = 0x121;
                eax = L0046314C(esi + 0x14, ebx, Vfffffffc, 0x504a30);
            }
        }
    } else {
        if(*(edi + 0x3c) - *(A10 + 0x3c) < 4194304) {
            esi = L004614B8(0xc, esi, 0);
            *esi = 0x461ea4;
            *(esi + 4) = *edi;
            *(esi + 8) = *Ac;
            *(esi + 0xc) = *A10;
            *(esi + 0x10) = 0x40;
            eax = *(A10 + 0x3c) >> 0x12;
            edx = eax;
            eax = (eax << 3) - edx + ((eax << 3) - edx) * 2;
            if(eax < 0) {
                eax = eax + 0x1ff;
            }
            Vfffffff0 = eax >> 9;
            if(Vfffffff0 > 0x14) {
                Vfffffff0 = 0x14;
            }
            eax = Vfffffff0;
            edx = eax;
            eax = L0046314C(esi + 0x14, ebx, Vfffffffc, ((eax << 3) - edx << 2) + 0x504cc8);
        } else {
            esi = L004614B8(0x14, esi, 0);
            *esi = 0x461f88;
            *(esi + 4) = *edi;
            *(esi + 8) = *Ac;
            *(esi + 0xc) = *A10;
            *(esi + 0x10) = 0;
            eax = *(edi + 0x3c) >> 0x12;
            *(esi + 0x12) = ax;
            *(esi + 0x14) = 0x3f;
            eax = *(Ac + 0x3c) >> 0x12;
            *(esi + 0x16) = ax;
            *(esi + 0x18) = 0;
            *(esi + 0x1a) = *(A10 + 0x3c) >> 0x12;
            if(*(esi + 0x12) > 0x1ff) {
                *(esi + 0x12) = 0x1ff;
            }
            if(*(esi + 0x16) > 0x1ff) {
                *(esi + 0x16) = 0x1ff;
            }
            if(*(esi + 0x1a) > 0x1ff) {
                *(esi + 0x1a) = 0x1ff;
            }
            *(esi + 0x1c) = 0x5e;
            *(esi + 0x1e) = 0;
            *(esi + 0x20) = 0x16;
            eax = L004631E4(esi + 0x24, ebx, Vfffffffc, 0x504c70, 0x16);
        }
    }
L00463a83:
}

/*    Procedure: 0x00463A8A - 0x00463BDD
 *    Argument size: 4
 *    Local size: 24
 *    Save regs size: 12
 */

L00463A8A(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = 0;
    edx = 0x504c70;
    eax = 0x504f14;
    do {
        ecx = *(A8 + *eax * 4 + 0xc);
        ecx = *(eax + 4) * *(eax + 4);
        esi = *(A8 + *(eax + 8) * 4 + 0xc);
        *edx = ecx + *(eax + 0xc) * *(eax + 0xc) >> 4 & 986895;
        Vfffffffc = Vfffffffc + 1;
        edx = edx + 4;
        eax = eax + 0x10;
    } while(Vfffffffc < 0x16);
    Vfffffffc = 0;
    Vffffffec = 0x505074;
    Vfffffff0 = 0x504cc8;
    do {
        ecx = 0;
        edx = Vfffffff0;
        eax = Vffffffec;
        do {
            esi = *(A8 + *eax * 4 + 0xc);
            esi = *(eax + 4) * *(eax + 4);
            edi = *(A8 + *(eax + 8) * 4 + 0xc);
            *edx = esi + *(eax + 0xc) * *(eax + 0xc) >> 4 & 986895;
            ecx = ecx + 1;
            edx = edx + 4;
            eax = eax + 0x10;
        } while(ecx < 7);
        Vfffffffc = Vfffffffc + 1;
        Vffffffec = Vffffffec + 0x70;
        Vfffffff0 = Vfffffff0 + 0x1c;
    } while(Vfffffffc < 0x15);
    Vfffffffc = 0;
    Vffffffe8 = 0x5049d0;
    do {
        eax = (Vfffffffc << 2) + 1;
        ecx = 3;
        asm("cdq");
        edx = ecx / ecx % ecx / ecx;
        ecx = 4 - eax;
        ecx = *(A8 + 0xc) * *(A8 + 0xc);
        esi = *(A8 + 0x10);
        Vfffffff8 = ecx + eax * eax >> 2 & 986895;
        edx = *(A8 + 0x14) * *(A8 + 0x14);
        ecx = *(A8 + 0x18);
        Vfffffff4 = edx + eax * eax >> 2 & 986895;
        ecx = 0;
        esi = Vffffffe8;
        do {
            eax = (ecx << 3) + 3;
            edi = 6;
            asm("cdq");
            edx = edi / edi % edi / edi;
            edx = 8 - eax;
            edi = Vfffffff4;
            *esi = Vfffffff8 * Vfffffff8 + eax * eax >> 3 & 986895;
            ecx = ecx + 1;
            esi = esi + 4;
        } while(ecx < 7);
        Vfffffffc = Vfffffffc + 1;
        Vffffffe8 = Vffffffe8 + 0x20;
    } while(Vfffffffc < 4);
}

/*    Procedure: 0x00463BDE - 0x00463D66
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00463BDE()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    eax = *(ebp + 0x14);
    esi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    edx = *(M006a1184 + 0x134);
    edx = *eax * *eax;
    ecx = *(M006a1184 + 0x138);
    edx = edx + *(eax + 4) * *(eax + 4);
    ecx = *(M006a1184 + 0x13c);
    eax = ~(edx + *(eax + 8) * *(eax + 8));
    if(eax < 0) {
        eax = eax >> 0x1b;
        if(eax < 0x18) {
            eax = 0;
        }
        eax = (eax & 7) + (eax & 7) * 2;
        edx = M006a1184;
        *(ebp - 4) = *(edx + eax + 0x84);
        *(ebp - 2) = *(edx + eax + 0x86);
    } else {
        *(ebp - 4) = 0;
    }
    if(*(esi + 0x3c) > *(ebx + 0x3c)) {
        eax = ebx;
        ebx = esi;
        esi = eax;
    }
    if(*( *(ebp + 0x10) + 0x3c) > *(ebx + 0x3c)) {
        eax = ebx;
        ebx = *(ebp + 0x10);
        *(ebp + 0x10) = eax;
    }
    eax = *(esi + 0x3c);
    if(eax < *( *(ebp + 0x10) + 0x3c)) {
        eax = esi;
        esi = *(ebp + 0x10);
        *(ebp + 0x10) = eax;
    }
    eax = L004614B8(0x19, *(ebp + 0x18), 0);
    *eax = 0x461f88;
    *(eax + 4) = *ebx;
    *(eax + 8) = *esi;
    *(eax + 0xc) = *( *(ebp + 0x10));
    *(eax + 0x10) = 0;
    edx = *(ebx + 0x3c) >> 0x12;
    *(eax + 0x12) = dx;
    *(eax + 0x14) = 0x3f;
    edx = *(esi + 0x3c) >> 0x12;
    *(eax + 0x16) = dx;
    *(eax + 0x18) = 0;
    edx = *( *(ebp + 0x10) + 0x3c) >> 0x12;
    *(eax + 0x1a) = dx;
    ecx = *(eax + 0x12);
    if(ecx - dx < 0x10) {
        *(eax + 0x1a) = *(eax + 0x1a) - 8;
        if(*(eax + 0x1a) < 0) {
            *(eax + 0x1a) = 0;
            *(eax + 0x12) = 0x10;
        } else {
            dx = *(eax + 0x1a) + 0x10;
            *(eax + 0x12) = dx;
            if(*(eax + 0x12) > 0x1ff) {
                *(eax + 0x12) = 0x1ff;
                *(eax + 0x1a) = 0x1ef;
            }
        }
    }
    *(eax + 0x1c) = 0x5f;
    *(eax + 0x1e) = 0;
    *(eax + 0x20) = 0x20;
    eax = L004631E4(eax + 0x24, 0, *(ebp - 4), 0x5059a4, 0x20);
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00463D67 - 0x00463DB2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00463D67(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ecx = 0;
    edx = 0x5059a4;
    eax = 0x505a24;
    do {
        ebx = *(A8 + *eax * 4 + 0xc);
        ebx = *(eax + 4) * *(eax + 4);
        esi = *(A8 + *(eax + 8) * 4 + 0xc);
        *edx = ebx + *(eax + 0xc) * *(eax + 0xc) >> 4 & 986895;
        ecx = ecx + 1;
        edx = edx + 4;
        eax = eax + 0x10;
    } while(ecx < 0x20);
}

/*    Procedure: 0x00463DB3 - 0x00463E64
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 8
 */

L00463DB3(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    eax = A14;
    edx = M006a1184;
    ecx = *(edx + 0x134);
    ecx = *eax * *eax;
    ebx = *(edx + 0x138);
    ecx = ecx + *(eax + 4) * *(eax + 4);
    ebx = *(edx + 0x13c);
    eax = ~(ecx + *(eax + 8) * *(eax + 8));
    if(eax < 0) {
        eax = eax >> 0x1b;
        if(eax < 0x18) {
            eax = 0;
        }
        eax = (eax & 7) + (eax & 7) * 2;
        *(ebp - 4) = *(edx + eax + 0x84);
        *(ebp - 2) = *(edx + eax + 0x86);
    } else {
        *(ebp - 4) = 0;
    }
    ebx = L004614B8(5, A18, 0);
    *ebx = 0x461cd4;
    *(ebx + 4) = *A8;
    *(ebx + 8) = *Ac;
    *(ebx + 0xc) = *A10;
    *(ebp - 4) = *(ebp - 4) + M006a0f80;
    *L004f80a0( *(ebp - 4));
    eax = ax & 65535;
    *(ebx + 0x10) = eax;
    return *(ebx + 0x10);
}

/*    Procedure: 0x00463E65 - 0x00463EB9
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 8
 */

L00463E65(A8, Ac, A10, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A18;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;



    ebx = L004614B8(5, A18, 0);
    *ebx = 0x461cd4;
    *(ebx + 4) = *A8;
    *(ebx + 8) = *Ac;
    *(ebx + 0xc) = *A10;
    *(ebp - 4) = M006a0f80;
    *L004f80a0( *(ebp - 4));
    eax = ax & 65535;
    *(ebx + 0x10) = eax;
    return *(ebx + 0x10);
}

/*    Procedure: 0x00463EBA - 0x00463EBB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00463EBA()
{



}

/*    Procedure: 0x00463EBC - 0x00463EFF
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00464271()
 *        L004644CB()
 *        L00464731()
 *        L00464997()
 *        L00464C44()
 *        L00464EFD()
 *        L004651BB()
 *        L00465484()
 *        L00465786()
 *        L00465B8F()
 *        L00465FAA()
 *        L004663C3()
 *        L004667E8()
 *        L00466C51()
 *        L004670D0()
 *        L00467549()
 */

L00463EBC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    if(A10 <= 1) {
        eax = L004626FC(A8 ^ Ac) >> 4;
    } else {
        ebx = A8 - Ac;
        if(ebx < 0) {
            ebx = ~ebx;
        }
        (save)ebx;
        eax = L004537B0(L004626FC(A8 ^ Ac)) >> 1;
    }
}

/*    Procedure: 0x00463F00 - 0x00463FB5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L00463F00(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = *(A8 + 0xc);
    if(ebx < 0x40) {
        *(A8 + 0x26) = 8;
        *(A8 + 0x24) = 8;
    } else {
        if(ebx > 65536) {
            ebx = ebx >> 8;
            eax = *(A8 + 4);
            asm("cdq");
            ebx = ebx / ebx;
            edx = ebx % ebx;
            esi = eax + 0xa0;
            eax = *(A8 + 8);
            asm("cdq");
            edx = ebx / ebx % ebx / ebx;
            (save)eax;
            (restore)edx;
            eax = 0x4f - edx;
        } else {
            eax = *(A8 + 4) << 8;
            asm("cdq");
            ebx = ebx / ebx;
            edx = ebx % ebx;
            esi = eax + 0xa0;
            eax = *(A8 + 8) << 8;
            asm("cdq");
            edx = ebx / ebx % ebx / ebx;
            (save)eax;
            (restore)edx;
            eax = 0x4f - edx;
        }
        if(esi <= 0x140) {
            *(A8 + 0x24) = 2;
        } else {
            dx = 1;
            if(esi >= 0) {
                edx = 4;
            }
            *(A8 + 0x24) = dx;
        }
        if(eax < 0x9e) {
            *(A8 + 0x26) = 2;
        } else {
            dx = 1;
            if(eax >= 0) {
                edx = 4;
            }
            *(A8 + 0x26) = dx;
        }
        *A8 = si;
        *(A8 + 2) = ax;
    }
}

/*    Procedure: 0x00463FB6 - 0x00463FFD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00463FB6(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 4) == 0) {
        *(A8 + 0x24) = 2;
    } else {
        dx = 1;
        if(*(A8 + 4) >= 0) {
            edx = 4;
        }
        *(A8 + 0x24) = dx;
    }
    if(*(A8 + 8) == 0) {
        *(A8 + 0x26) = 2;
        return;
    }
    dx = 1;
    if(*(A8 + 8) >= 0) {
        edx = 4;
    }
    *(A8 + 0x26) = dx;
}

/*    Procedure: 0x00463FFE - 0x00464270
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00463FFE() // FUNC_001849
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x28);
        *(ebx + 0x28) = L004537B0(eax + *( *(ebp + 0x10) + 0x28));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x2c);
        *(ebx + 0x2c) = L004537B0(eax + *( *(ebp + 0x10) + 0x2c));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x30);
        *(ebx + 0x30) = L004537B0(eax + *( *(ebp + 0x10) + 0x30));
        edi = *( *(ebp + 0x18) * 4 + 0x504508);
        if(*(ebp + 0x18) > *(esi + 0x44)) {
            eax = *(ebp + 0x18);
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L00464204;
            }
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505c24;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505c26;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00464204:
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00464271 - 0x004644CA
 *    Argument size: 20
 *    Local size: 12
 *    Save regs size: 12
 */

L00464271(A8, Ac, A10, A14, A18) // FUNC_001850
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = A8;
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(Ac == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = Ac;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = Ac;
        }
        *(ebx + 0x28) = *(Ac + 0x28);
        *(ebx + 0x2c) = *(Ac + 0x2c);
        *(ebx + 0x30) = *(Ac + 0x30);
        edi = 0;
        if(A18 > *(Ac + 0x44)) {
            if(A18 <= *(A10 + 0x44)) {
                goto L00464433;
            }
            eax = *(Ac + 0x3c);
            *(ebx + 0x3c) = eax + *(A10 + 0x3c) >> 1;
            eax = *(Ac + 4);
            *(ebx + 4) = eax + *(A10 + 4) >> 1;
            eax = *(Ac + 8);
            *(ebx + 8) = eax + *(A10 + 8) >> 1;
            eax = *(Ac + 0xc);
            *(ebx + 0xc) = eax + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *Ac;
                eax = eax + *A10 >> 1;
                *ebx = ax;
                eax = *(Ac + 2);
                *(ebx + 2) = eax + *(A10 + 2) >> 1;
                eax = A14;
                if(*(eax + 0xc) > 0x40) {
                    ax = *(Ac + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    Vfffffff8 = eax;
                    ax = *Ac;
                    Vfffffff4 = ax :: *A10 > 0 & 1;
                    eax = *A14 - *Ac;
                    edx = *(A10 + 2) - *(Ac + 2);
                    asm("imul edx");
                    edx = *A10 - *Ac;
                    eax = eax :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    edx = Vfffffff8 << 4;
                    ecx = edx + 0x505c44;
                    *ebx = *ebx + *(ecx + Vfffffff4 * 8 + eax * 4);
                    edx = edx + 0x505c46;
                    *(ebx + 2) = *(ebx + 2) + *(edx + Vfffffff4 * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00464433:
            eax = *(Ac + 0x3c);
            Vfffffffc = eax + *(A10 + 0x3c) >> 1;
            *(ebx + 0x3c) = L00463EBC( *(Ac + 0x3c), *(A10 + 0x3c), A18) + Vfffffffc;
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(Ac + 4);
            *(ebx + 4) = eax + (edx + *(A10 + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(Ac + 8);
            *(ebx + 8) = eax + (edx + *(A10 + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(Ac + 0xc);
            *(ebx + 0xc) = eax + (edx + *(A10 + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
}

/*    Procedure: 0x004644CB - 0x00464730
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004644CB() // FUNC_001851
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        *(ebx + 0x28) = *(esi + 0x28);
        *(ebx + 0x2c) = *(esi + 0x2c);
        *(ebx + 0x30) = *(esi + 0x30);
        edi = 0;
        eax = eax ^ *( *(ebp + 0x10) + 0x3c) - 1;
        eax = !(eax = *(esi + 0x3c) - 1) ? *(ebp + 0x18) - 1 : *(ebp + 0x18);
        if(eax > *(esi + 0x44)) {
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L0046469d;
            }
            eax = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505c64;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505c66;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L0046469d:
            eax = L00463EBC( *(esi + 0x3c), *( *(ebp + 0x10) + 0x3c), *(ebp + 0x18));
            edx = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + (edx + *( *(ebp + 0x10) + 0x3c) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00464731 - 0x00464996
 *    Argument size: 20
 *    Local size: 12
 *    Save regs size: 12
 */

L00464731(A8, Ac, A10, A14, A18) // FUNC_001852
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edi = A8;
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(Ac == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = Ac;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = Ac;
        }
        *(ebx + 0x28) = *(Ac + 0x28);
        *(ebx + 0x2c) = *(Ac + 0x2c);
        *(ebx + 0x30) = *(Ac + 0x30);
        Vfffffffc = 0;
        if(A18 > *(Ac + 0x44)) {
            if(A18 <= *(A10 + 0x44)) {
                goto L004648f6;
            }
            eax = *(Ac + 0x3c);
            *(ebx + 0x3c) = eax + *(A10 + 0x3c) >> 1;
            eax = *(Ac + 4);
            *(ebx + 4) = eax + *(A10 + 4) >> 1;
            eax = *(Ac + 8);
            *(ebx + 8) = eax + *(A10 + 8) >> 1;
            eax = *(Ac + 0xc);
            *(ebx + 0xc) = eax + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *Ac;
                eax = eax + *A10 >> 1;
                *ebx = ax;
                eax = *(Ac + 2);
                *(ebx + 2) = eax + *(A10 + 2) >> 1;
                eax = A14;
                if(*(eax + 0xc) > 0x40) {
                    ax = *(Ac + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    Vfffffff8 = eax;
                    ax = *Ac;
                    Vfffffff4 = ax :: *A10 > 0 & 1;
                    eax = *A14 - *Ac;
                    edx = *(A10 + 2) - *(Ac + 2);
                    asm("imul edx");
                    edx = *A10 - *Ac;
                    eax = eax :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    edx = Vfffffff8 << 4;
                    ecx = edx + 0x505c84;
                    *ebx = *ebx + *(ecx + Vfffffff4 * 8 + eax * 4);
                    edx = edx + 0x505c86;
                    *(ebx + 2) = *(ebx + 2) + *(edx + Vfffffff4 * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L004648f6:
            edi = *(Ac + 0x3c);
            edi = edi + *(A10 + 0x3c) >> 1;
            *(ebx + 0x3c) = L00463EBC( *(Ac + 0x3c), *(A10 + 0x3c), A18) + edi;
            edi = ( *(ebx + 0x3c) - edi >> 3) + Vfffffffc;
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(Ac + 4);
            *(ebx + 4) = eax + (edx + *(A10 + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(Ac + 8);
            *(ebx + 8) = eax + (edx + *(A10 + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(Ac + 0xc);
            *(ebx + 0xc) = eax + (edx + *(A10 + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
}

/*    Procedure: 0x00464997 - 0x00464C43
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00464997() // FUNC_001853
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        *(ebx + 0x28) = *(esi + 0x28);
        *(ebx + 0x2c) = *(esi + 0x2c);
        *(ebx + 0x30) = *(esi + 0x30);
        edi = 0;
        eax = eax ^ *( *(ebp + 0x10) + 0x3c) - 1;
        eax = !(eax = *(esi + 0x3c) - 1) ? *(ebp + 0x18) - 1 : *(ebp + 0x18);
        if(eax > *(esi + 0x44)) {
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L00464b8e;
            }
            eax = *(esi + 0x40);
            if(eax != 0 || *( *(ebp + 0x10) + 0x40) != 0) {
                eax = eax + *( *(ebp + 0x10) + 0x40) >> 1;
                *(ebx + 0x40) = eax;
                *(ebx + 0x3c) = *(ebx + 0x40);
            } else {
                eax = *(esi + 0x3c);
                *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
                *(ebx + 0x40) = 0;
            }
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505ca4;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505ca6;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00464b8e:
            eax = L00463EBC( *(esi + 0x3c), *( *(ebp + 0x10) + 0x3c), *(ebp + 0x18));
            edx = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + (edx + *( *(ebp + 0x10) + 0x3c) >> 1);
            eax = *(ebx + 0x3c) >= 0 ? *(ebx + 0x3c) : 0;
            *(ebx + 0x40) = eax;
            edx = *(esi + 0x40);
            edi = edi + (eax - (edx + *( *(ebp + 0x10) + 0x40) >> 1) >> 3);
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00464C44 - 0x00464EFC
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 */

L00464C44(A8, Ac, A10, A14, A18) // FUNC_001854
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(A8 + 8);
    if(eax == 0) {
        eax = L00462434();
        *(A8 + 8) = eax;
        ebx = *(A8 + 8);
        if(Ac == *A8) {
            eax = L00462488();
            *(A8 + 4) = eax;
            *( *(A8 + 4)) = Ac;
            eax = L00462488();
            *(A8 + 0xc) = eax;
            *( *(A8 + 0xc)) = A10;
        } else {
            eax = L00462488();
            *(A8 + 4) = eax;
            *( *(A8 + 4)) = A10;
            eax = L00462488();
            *(A8 + 0xc) = eax;
            *( *(A8 + 0xc)) = Ac;
        }
        (save) *(A18 * 4 + 0x504588);
        eax = *(Ac + 0x28);
        *(ebx + 0x28) = L004537B0(eax + *(A10 + 0x28));
        (save) *(A18 * 4 + 0x504588);
        eax = *(Ac + 0x2c);
        *(ebx + 0x2c) = L004537B0(eax + *(A10 + 0x2c));
        (save) *(A18 * 4 + 0x504588);
        eax = *(Ac + 0x30);
        *(ebx + 0x30) = L004537B0(eax + *(A10 + 0x30));
        Vfffffffc = *(A18 * 4 + 0x504508);
        if(A18 > *(Ac + 0x44)) {
            if(A18 <= *(A10 + 0x44)) {
                goto L00464e5f;
            }
            eax = *(Ac + 0x3c);
            *(ebx + 0x3c) = eax + *(A10 + 0x3c) >> 1;
            eax = *(Ac + 4);
            *(ebx + 4) = eax + *(A10 + 4) >> 1;
            eax = *(Ac + 8);
            *(ebx + 8) = eax + *(A10 + 8) >> 1;
            eax = *(Ac + 0xc);
            *(ebx + 0xc) = eax + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *Ac;
                eax = eax + *A10 >> 1;
                *ebx = ax;
                eax = *(Ac + 2);
                *(ebx + 2) = eax + *(A10 + 2) >> 1;
                eax = A14;
                if(*(eax + 0xc) > 0x40) {
                    ax = *(Ac + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    Vfffffff4 = eax;
                    ax = *Ac;
                    Vfffffff0 = ax :: *A10 > 0 & 1;
                    eax = *A14 - *Ac;
                    edx = *(A10 + 2) - *(Ac + 2);
                    asm("imul edx");
                    edx = *A10 - *Ac;
                    eax = eax :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    edx = Vfffffff4 << 4;
                    ecx = edx + 0x505cc4;
                    *ebx = *ebx + *(ecx + Vfffffff0 * 8 + eax * 4);
                    edx = edx + 0x505cc6;
                    *(ebx + 2) = *(ebx + 2) + *(edx + Vfffffff0 * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00464e5f:
            eax = *(Ac + 0x3c);
            Vfffffff8 = eax + *(A10 + 0x3c) >> 1;
            *(ebx + 0x3c) = L00463EBC( *(Ac + 0x3c), *(A10 + 0x3c), A18) + Vfffffff8;
            (save)Vfffffffc;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(Ac + 4);
            *(ebx + 4) = eax + (edx + *(A10 + 4) >> 1);
            (save)Vfffffffc;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(Ac + 8);
            *(ebx + 8) = eax + (edx + *(A10 + 8) >> 1);
            (save)Vfffffffc;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(Ac + 0xc);
            *(ebx + 0xc) = eax + (edx + *(A10 + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
}

/*    Procedure: 0x00464EFD - 0x004651BA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00464EFD()	// FUNC_001855
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x28);
        *(ebx + 0x28) = L004537B0(eax + *( *(ebp + 0x10) + 0x28));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x2c);
        *(ebx + 0x2c) = L004537B0(eax + *( *(ebp + 0x10) + 0x2c));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x30);
        *(ebx + 0x30) = L004537B0(eax + *( *(ebp + 0x10) + 0x30));
        edi = *( *(ebp + 0x18) * 4 + 0x504508);
        eax = eax ^ *( *(ebp + 0x10) + 0x3c) - 1;
        eax = !(eax = *(esi + 0x3c) - 1) ? *(ebp + 0x18) - 1 : *(ebp + 0x18);
        if(eax > *(esi + 0x44)) {
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L00465127;
            }
            eax = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505ce4;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505ce6;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00465127:
            eax = L00463EBC( *(esi + 0x3c), *( *(ebp + 0x10) + 0x3c), *(ebp + 0x18));
            edx = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + (edx + *( *(ebp + 0x10) + 0x3c) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004651BB - 0x00465483
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 */

L004651BB(A8, Ac, A10, A14, A18) // FUNC_001856
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(A8 + 8);
    if(eax == 0) {
        eax = L00462434();
        *(A8 + 8) = eax;
        ebx = *(A8 + 8);
        if(Ac == *A8) {
            eax = L00462488();
            *(A8 + 4) = eax;
            *( *(A8 + 4)) = Ac;
            eax = L00462488();
            *(A8 + 0xc) = eax;
            *( *(A8 + 0xc)) = A10;
        } else {
            eax = L00462488();
            *(A8 + 4) = eax;
            *( *(A8 + 4)) = A10;
            eax = L00462488();
            *(A8 + 0xc) = eax;
            *( *(A8 + 0xc)) = Ac;
        }
        (save) *(A18 * 4 + 0x504588);
        eax = *(Ac + 0x28);
        *(ebx + 0x28) = L004537B0(eax + *(A10 + 0x28));
        (save) *(A18 * 4 + 0x504588);
        eax = *(Ac + 0x2c);
        *(ebx + 0x2c) = L004537B0(eax + *(A10 + 0x2c));
        (save) *(A18 * 4 + 0x504588);
        eax = *(Ac + 0x30);
        *(ebx + 0x30) = L004537B0(eax + *(A10 + 0x30));
        Vfffffffc = *(A18 * 4 + 0x504508);
        if(A18 > *(Ac + 0x44)) {
            if(A18 <= *(A10 + 0x44)) {
                goto L004653d7;
            }
            eax = *(Ac + 0x3c);
            *(ebx + 0x3c) = eax + *(A10 + 0x3c) >> 1;
            eax = *(Ac + 4);
            *(ebx + 4) = eax + *(A10 + 4) >> 1;
            eax = *(Ac + 8);
            *(ebx + 8) = eax + *(A10 + 8) >> 1;
            eax = *(Ac + 0xc);
            *(ebx + 0xc) = eax + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *Ac;
                eax = eax + *A10 >> 1;
                *ebx = ax;
                eax = *(Ac + 2);
                *(ebx + 2) = eax + *(A10 + 2) >> 1;
                eax = A14;
                if(*(eax + 0xc) > 0x40) {
                    ax = *(Ac + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    Vfffffff4 = eax;
                    ax = *Ac;
                    Vfffffff0 = ax :: *A10 > 0 & 1;
                    eax = *A14 - *Ac;
                    edx = *(A10 + 2) - *(Ac + 2);
                    asm("imul edx");
                    edx = *A10 - *Ac;
                    eax = eax :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    edx = Vfffffff4 << 4;
                    ecx = edx + 0x505d04;
                    *ebx = *ebx + *(ecx + Vfffffff0 * 8 + eax * 4);
                    edx = edx + 0x505d06;
                    *(ebx + 2) = *(ebx + 2) + *(edx + Vfffffff0 * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L004653d7:
            eax = *(Ac + 0x3c);
            Vfffffff8 = eax + *(A10 + 0x3c) >> 1;
            *(ebx + 0x3c) = L00463EBC( *(Ac + 0x3c), *(A10 + 0x3c), A18) + Vfffffff8;
            Vfffffff8 = ( *(ebx + 0x3c) - Vfffffff8 >> 3) + Vfffffffc;
            (save)Vfffffff8;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(Ac + 4);
            *(ebx + 4) = eax + (edx + *(A10 + 4) >> 1);
            (save)Vfffffff8;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(Ac + 8);
            *(ebx + 8) = eax + (edx + *(A10 + 8) >> 1);
            (save)Vfffffff8;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(Ac + 0xc);
            *(ebx + 0xc) = eax + (edx + *(A10 + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
}

/*    Procedure: 0x00465484 - 0x00465785
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00465484() FUNC_001857
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x28);
        *(ebx + 0x28) = L004537B0(eax + *( *(ebp + 0x10) + 0x28));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x2c);
        *(ebx + 0x2c) = L004537B0(eax + *( *(ebp + 0x10) + 0x2c));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x30);
        *(ebx + 0x30) = L004537B0(eax + *( *(ebp + 0x10) + 0x30));
        edi = *( *(ebp + 0x18) * 4 + 0x504508);
        eax = eax ^ *( *(ebp + 0x10) + 0x3c) - 1;
        eax = !(eax = *(esi + 0x3c) - 1) ? *(ebp + 0x18) - 1 : *(ebp + 0x18);
        if(eax > *(esi + 0x44)) {
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L004656d0;
            }
            eax = *(esi + 0x40);
            if(eax != 0 || *( *(ebp + 0x10) + 0x40) != 0) {
                eax = eax + *( *(ebp + 0x10) + 0x40) >> 1;
                *(ebx + 0x40) = eax;
                *(ebx + 0x3c) = *(ebx + 0x40);
            } else {
                eax = *(esi + 0x3c);
                *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
                *(ebx + 0x40) = 0;
            }
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505d24;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505d26;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L004656d0:
            eax = L00463EBC( *(esi + 0x3c), *( *(ebp + 0x10) + 0x3c), *(ebp + 0x18));
            edx = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + (edx + *( *(ebp + 0x10) + 0x3c) >> 1);
            eax = *(ebx + 0x3c) >= 0 ? *(ebx + 0x3c) : 0;
            *(ebx + 0x40) = eax;
            edx = *(esi + 0x40);
            edi = edi + (eax - (edx + *( *(ebp + 0x10) + 0x40) >> 1) >> 3);
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00465786 - 0x00465B8E
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 */

L00465786(A8, Ac, A10, A14, A18) FUNC_001858
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *(ebx + 8);
    if(eax != 0) {
        Vfffffffc = eax;
        esi = 0;
        ecx = Vfffffffc + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff4 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff4 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff4 = Vfffffff4 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(ebx + 8) = eax;
        Vfffffffc = *(ebx + 8);
        if(*ebx == Ac) {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = Vfffffffc + 0x34;
        eax = A10 + 0x34;
        ecx = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *ecx;
                ebx = ebx + *eax >> 1;
                *edx = bx;
                ebx = *(ecx + 2);
                ebx = ebx + *(eax + 2) >> 1;
                *(edx + 2) = bx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            ecx = ecx + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
        eax = Ac;
        edx = Vfffffffc;
        *(edx + 0x28) = *(eax + 0x28);
        *(edx + 0x2c) = *(eax + 0x2c);
        *(edx + 0x30) = *(eax + 0x30);
        Vfffffff8 = 0;
        if(*(Ac + 0x44) < A18) {
            if(*(A10 + 0x44) >= A18) {
                goto L00465a5a;
            }
            *(Vfffffffc + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
            *(Vfffffffc + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(Vfffffffc + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(Vfffffffc + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(Vfffffffc);
            } else {
                eax = *Ac + *A10 >> 1;
                *Vfffffffc = ax;
                *(Vfffffffc + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    edx = dx :: *A10 > 0 & 1;
                    ecx = *A14 - *Ac;
                    ecx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ebx = *A10 - *Ac;
                    ecx = ecx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    bx = *((eax << 4) + 0x505d44 + edx * 8 + ecx * 4);
                    *Vfffffffc = *Vfffffffc + bx;
                    ax = *((eax << 4) + 0x505d46 + edx * 8 + ecx * 4);
                    *(Vfffffffc + 2) = *(Vfffffffc + 2) + ax;
                }
                *L006c7340( *Vfffffffc);
                *(Vfffffffc + 0x24) = ax;
                *L006c7344( *(Vfffffffc + 2));
                *(Vfffffffc + 0x26) = ax;
            }
        } else {
L00465a5a:
            ebx = *(Ac + 0x3c);
            edi = ebx;
            esi = *(A10 + 0x3c);
            edi = edi + esi >> 1;
            edi = edi + L00463EBC(ebx, esi, A18);
            *(Vfffffffc + 0x3c) = edi;
            esi = 0;
            eax = Vfffffffc + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) >> 7;
                    ecx = *eax;
                    ecx = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ebx = *( *(edx + 4) + ecx) & 0xff;
                        edi = Vfffffffc;
                        *(edi + 0x3c) = *(edi + 0x3c) * *(edi + 0x3c);
                    }
                    ecx = *( *edx + ecx) << 0x15;
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) + ecx;
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            (save)Vfffffff8;
            *(Vfffffffc + 4) = L004537B0( *(Vfffffffc + 0x28)) + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 8) = L004537B0( *(Vfffffffc + 0x2c)) + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 0xc) = L004537B0( *(Vfffffffc + 0x30)) + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(Vfffffffc);
        }
        eax = L00462A34(Vfffffffc);
    }
}

/*    Procedure: 0x00465B8F - 0x00465FA9
 *    Argument size: 20
 *    Local size: 20
 *    Save regs size: 12
 */

L00465B8F(A8, Ac, A10, A14, A18) // FUNC_001859
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *(ebx + 8);
    if(eax != 0) {
        Vfffffffc = eax;
        esi = 0;
        ecx = Vfffffffc + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(ebx + 8) = eax;
        Vfffffffc = *(ebx + 8);
        if(*ebx == Ac) {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = Vfffffffc + 0x34;
        eax = A10 + 0x34;
        ecx = Ac + 0x34;
        Vffffffec = A18 * 8 + 6950788;
        do {
            if(*Vffffffec != 0) {
                ebx = *ecx;
                ebx = ebx + *eax >> 1;
                *edx = bx;
                ebx = *(ecx + 2);
                ebx = ebx + *(eax + 2) >> 1;
                *(edx + 2) = bx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            ecx = ecx + 4;
            Vffffffec = Vffffffec + 0x100;
        } while(esi < 2);
        eax = Ac;
        edx = Vfffffffc;
        *(edx + 0x28) = *(eax + 0x28);
        *(edx + 0x2c) = *(eax + 0x2c);
        *(edx + 0x30) = *(eax + 0x30);
        Vfffffff8 = 0;
        eax = *(Ac + 0x3c) - 1 ^ *(A10 + 0x3c) - 1;
        >= ? L00465ce0 : ;
        eax = A18 - 1;
        goto L00465ce3;
        eax = A18;
L00465ce3:
        if(eax > *(Ac + 0x44)) {
            if(eax <= *(A10 + 0x44)) {
                goto L00465e77;
            }
            *(Vfffffffc + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
            *(Vfffffffc + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(Vfffffffc + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(Vfffffffc + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(Vfffffffc);
            } else {
                eax = *Ac + *A10 >> 1;
                *Vfffffffc = ax;
                *(Vfffffffc + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    edx = dx :: *A10 > 0 & 1;
                    ecx = *A14 - *Ac;
                    ecx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ebx = *A10 - *Ac;
                    ecx = ecx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    bx = *((eax << 4) + 0x505d64 + edx * 8 + ecx * 4);
                    *Vfffffffc = *Vfffffffc + bx;
                    ax = *((eax << 4) + 0x505d66 + edx * 8 + ecx * 4);
                    *(Vfffffffc + 2) = *(Vfffffffc + 2) + ax;
                }
                *L006c7340( *Vfffffffc);
                *(Vfffffffc + 0x24) = ax;
                *L006c7344( *(Vfffffffc + 2));
                *(Vfffffffc + 0x26) = ax;
            }
        } else {
L00465e77:
            edi = *(A10 + 0x3c);
            esi = *(Ac + 0x3c);
            eax = L00463EBC(esi, edi, A18);
            eax = eax + (esi + edi >> 1);
            *(Vfffffffc + 0x3c) = eax;
            esi = 0;
            eax = Vfffffffc + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) >> 7;
                    ecx = *eax;
                    ecx = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ebx = *( *(edx + 4) + ecx) & 0xff;
                        edi = Vfffffffc;
                        *(edi + 0x3c) = *(edi + 0x3c) * *(edi + 0x3c);
                    }
                    ecx = *( *edx + ecx) << 0x15;
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) + ecx;
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            (save)Vfffffff8;
            *(Vfffffffc + 4) = L004537B0( *(Vfffffffc + 0x28)) + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 8) = L004537B0( *(Vfffffffc + 0x2c)) + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 0xc) = L004537B0( *(Vfffffffc + 0x30)) + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(Vfffffffc);
        }
        eax = L00462A34(Vfffffffc);
    }
}

/*    Procedure: 0x00465FAA - 0x004663C2
 *    Argument size: 20
 *    Local size: 20
 *    Save regs size: 12
 */

L00465FAA(A8, Ac, A10, A14, A18) // FUNC_001860
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *(ebx + 8);
    if(eax != 0) {
        Vfffffff8 = eax;
        esi = 0;
        ecx = Vfffffff8 + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(ebx + 8) = eax;
        Vfffffff8 = *(ebx + 8);
        if(*ebx == Ac) {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = Vfffffff8 + 0x34;
        eax = A10 + 0x34;
        ecx = Ac + 0x34;
        Vffffffec = A18 * 8 + 6950788;
        do {
            if(*Vffffffec != 0) {
                ebx = *ecx;
                ebx = ebx + *eax >> 1;
                *edx = bx;
                ebx = *(ecx + 2);
                ebx = ebx + *(eax + 2) >> 1;
                *(edx + 2) = bx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            ecx = ecx + 4;
            Vffffffec = Vffffffec + 0x100;
        } while(esi < 2);
        eax = Ac;
        edx = Vfffffff8;
        *(edx + 0x28) = *(eax + 0x28);
        *(edx + 0x2c) = *(eax + 0x2c);
        *(edx + 0x30) = *(eax + 0x30);
        Vfffffff4 = 0;
        if(*(Ac + 0x44) < A18) {
            if(*(A10 + 0x44) >= A18) {
                goto L0046627e;
            }
            *(Vfffffff8 + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
            *(Vfffffff8 + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(Vfffffff8 + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(Vfffffff8 + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(Vfffffff8);
            } else {
                eax = *Ac + *A10 >> 1;
                *Vfffffff8 = ax;
                *(Vfffffff8 + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    edx = dx :: *A10 > 0 & 1;
                    ecx = *A14 - *Ac;
                    ecx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ebx = *A10 - *Ac;
                    ecx = ecx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    bx = *((eax << 4) + 0x505d84 + edx * 8 + ecx * 4);
                    *Vfffffff8 = *Vfffffff8 + bx;
                    ax = *((eax << 4) + 0x505d86 + edx * 8 + ecx * 4);
                    *(Vfffffff8 + 2) = *(Vfffffff8 + 2) + ax;
                }
                *L006c7340( *Vfffffff8);
                *(Vfffffff8 + 0x24) = ax;
                *L006c7344( *(Vfffffff8 + 2));
                *(Vfffffff8 + 0x26) = ax;
            }
        } else {
L0046627e:
            esi = *(Ac + 0x3c);
            ebx = esi;
            edi = *(A10 + 0x3c);
            ebx = ebx + edi >> 1;
            eax = L00463EBC(esi, edi, A18) + ebx;
            *(Vfffffff8 + 0x3c) = eax;
            esi = 0;
            eax = Vfffffff8 + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(Vfffffff8 + 0x3c) = *(Vfffffff8 + 0x3c) >> 7;
                    ecx = *eax;
                    Vfffffffc = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ecx = *(edx + 4);
                        ecx = *(ecx + Vfffffffc) & 0xff;
                        edi = Vfffffff8;
                        *(edi + 0x3c) = *(edi + 0x3c) * *(edi + 0x3c);
                    }
                    ecx = *edx;
                    ecx = *(ecx + Vfffffffc) << 0x15;
                    *(Vfffffff8 + 0x3c) = *(Vfffffff8 + 0x3c) + ecx;
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            ebx = ( *(Vfffffff8 + 0x3c) - ebx >> 3) + Vfffffff4;
            (save)ebx;
            *(Vfffffff8 + 4) = L004537B0( *(Vfffffff8 + 0x28)) + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)ebx;
            *(Vfffffff8 + 8) = L004537B0( *(Vfffffff8 + 0x2c)) + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)ebx;
            *(Vfffffff8 + 0xc) = L004537B0( *(Vfffffff8 + 0x30)) + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(Vfffffff8);
        }
        eax = L00462A34(Vfffffff8);
    }
}

/*    Procedure: 0x004663C3 - 0x004667E7
 *    Argument size: 20
 *    Local size: 24
 *    Save regs size: 12
 */

L004663C3(A8, Ac, A10, A14, A18) // FUNC_001861
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A8;
    eax = *(esi + 8);
    if(eax != 0) {
        ebx = eax;
        esi = 0;
        ecx = ebx + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(esi + 8) = eax;
        ebx = *(esi + 8);
        if(*esi == Ac) {
            eax = L00462488();
            *(esi + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(esi + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(esi + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(esi + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = ebx + 0x34;
        eax = A10 + 0x34;
        Vffffffe8 = Ac + 0x34;
        Vffffffec = A18 * 8 + 6950788;
        do {
            if(*Vffffffec != 0) {
                ecx = *Vffffffe8 + *eax >> 1;
                *edx = cx;
                ecx = *(Vffffffe8 + 2) + *(eax + 2) >> 1;
                *(edx + 2) = cx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            Vffffffe8 = Vffffffe8 + 4;
            Vffffffec = Vffffffec + 0x100;
        } while(esi < 2);
        eax = Ac;
        *(ebx + 0x28) = *(eax + 0x28);
        *(ebx + 0x2c) = *(eax + 0x2c);
        *(ebx + 0x30) = *(eax + 0x30);
        Vfffffff8 = 0;
        eax = *(Ac + 0x3c) - 1 ^ *(A10 + 0x3c) - 1;
        >= ? L00466513 : ;
        eax = A18 - 1;
        goto L00466516;
        eax = A18;
L00466516:
        if(eax > *(Ac + 0x44)) {
            if(eax <= *(A10 + 0x44)) {
                goto L004666b4;
            }
            eax = *(Ac + 0x40);
            if(eax != 0 || *(A10 + 0x40) != 0) {
                eax = eax + *(A10 + 0x40) >> 1;
                *(ebx + 0x40) = eax;
                *(ebx + 0x3c) = *(ebx + 0x40);
            } else {
                *(ebx + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
                *(ebx + 0x40) = 0;
            }
            *(ebx + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(ebx + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(ebx + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *Ac + *A10 >> 1;
                *ebx = ax;
                *(ebx + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    Vfffffff4 = dx :: *A10 > 0 & 1;
                    edx = *A14 - *Ac;
                    edx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ecx = *A10 - *Ac;
                    edx = edx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    ecx = (eax << 4) + 0x505da4;
                    *ebx = *ebx + *(ecx + Vfffffff4 * 8 + edx * 4);
                    eax = (eax << 4) + 0x505da6;
                    *(ebx + 2) = *(ebx + 2) + *(eax + Vfffffff4 * 8 + edx * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L004666b4:
            edi = *(A10 + 0x3c);
            esi = *(Ac + 0x3c);
            eax = L00463EBC(esi, edi, A18);
            *(ebx + 0x3c) = eax + (esi + edi >> 1);
            esi = 0;
            eax = ebx + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(ebx + 0x3c) = *(ebx + 0x3c) >> 7;
                    ecx = *eax;
                    Vfffffffc = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ecx = *(edx + 4);
                        ecx = *(ecx + Vfffffffc) & 0xff;
                        *(ebx + 0x3c) = *(ebx + 0x3c) * *(ebx + 0x3c);
                    }
                    ecx = *edx;
                    *(ebx + 0x3c) = *(ebx + 0x3c) + ( *(ecx + Vfffffffc) << 0x15);
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            eax = *(ebx + 0x3c) >= 0 ? *(ebx + 0x3c) : 0;
            *(ebx + 0x40) = eax;
            esi = (eax - ( *(Ac + 0x40) + *(A10 + 0x40) >> 1) >> 3) + Vfffffff8;
            (save)esi;
            eax = L004537B0( *(ebx + 0x28));
            *(ebx + 4) = eax + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)esi;
            eax = L004537B0( *(ebx + 0x2c));
            *(ebx + 8) = eax + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)esi;
            eax = L004537B0( *(ebx + 0x30));
            *(ebx + 0xc) = eax + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
}

/*    Procedure: 0x004667E8 - 0x00466C50
 *    Argument size: 20
 *    Local size: 16
 *    Save regs size: 12
 */

L004667E8(A8, Ac, A10, A14, A18) // FUNC_001862
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *(ebx + 8);
    if(eax != 0) {
        Vfffffffc = eax;
        esi = 0;
        ecx = Vfffffffc + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff4 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff4 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff4 = Vfffffff4 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(ebx + 8) = eax;
        Vfffffffc = *(ebx + 8);
        if(*ebx == Ac) {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = Vfffffffc + 0x34;
        eax = A10 + 0x34;
        ecx = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *ecx;
                ebx = ebx + *eax >> 1;
                *edx = bx;
                ebx = *(ecx + 2);
                ebx = ebx + *(eax + 2) >> 1;
                *(edx + 2) = bx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            ecx = ecx + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffffc + 0x28) = L004537B0( *(Ac + 0x28) + *(A10 + 0x28));
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffffc + 0x2c) = L004537B0( *(Ac + 0x2c) + *(A10 + 0x2c));
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffffc + 0x30) = L004537B0( *(Ac + 0x30) + *(A10 + 0x30));
        Vfffffff8 = *(A18 * 4 + 0x504508);
        if(*(Ac + 0x44) < A18) {
            if(*(A10 + 0x44) >= A18) {
                goto L00466b1c;
            }
            *(Vfffffffc + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
            *(Vfffffffc + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(Vfffffffc + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(Vfffffffc + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(Vfffffffc);
            } else {
                eax = *Ac + *A10 >> 1;
                *Vfffffffc = ax;
                *(Vfffffffc + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    edx = dx :: *A10 > 0 & 1;
                    ecx = *A14 - *Ac;
                    ecx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ebx = *A10 - *Ac;
                    ecx = ecx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    bx = *((eax << 4) + 0x505dc4 + edx * 8 + ecx * 4);
                    *Vfffffffc = *Vfffffffc + bx;
                    ax = *((eax << 4) + 0x505dc6 + edx * 8 + ecx * 4);
                    *(Vfffffffc + 2) = *(Vfffffffc + 2) + ax;
                }
                *L006c7340( *Vfffffffc);
                *(Vfffffffc + 0x24) = ax;
                *L006c7344( *(Vfffffffc + 2));
                *(Vfffffffc + 0x26) = ax;
            }
        } else {
L00466b1c:
            ebx = *(Ac + 0x3c);
            edi = ebx;
            esi = *(A10 + 0x3c);
            edi = edi + esi >> 1;
            edi = edi + L00463EBC(ebx, esi, A18);
            *(Vfffffffc + 0x3c) = edi;
            esi = 0;
            eax = Vfffffffc + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) >> 7;
                    ecx = *eax;
                    ecx = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ebx = *( *(edx + 4) + ecx) & 0xff;
                        edi = Vfffffffc;
                        *(edi + 0x3c) = *(edi + 0x3c) * *(edi + 0x3c);
                    }
                    ecx = *( *edx + ecx) << 0x15;
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) + ecx;
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            (save)Vfffffff8;
            *(Vfffffffc + 4) = L004537B0( *(Vfffffffc + 0x28)) + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 8) = L004537B0( *(Vfffffffc + 0x2c)) + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 0xc) = L004537B0( *(Vfffffffc + 0x30)) + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(Vfffffffc);
        }
        eax = L00462A34(Vfffffffc);
    }
}

/*    Procedure: 0x00466C51 - 0x004670CF
 *    Argument size: 20
 *    Local size: 20
 *    Save regs size: 12
 */

L00466C51(A8, Ac, A10, A14, A18) // FUNC_001863
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *(ebx + 8);
    if(eax != 0) {
        Vfffffffc = eax;
        esi = 0;
        ecx = Vfffffffc + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(ebx + 8) = eax;
        Vfffffffc = *(ebx + 8);
        if(*ebx == Ac) {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = Vfffffffc + 0x34;
        eax = A10 + 0x34;
        ecx = Ac + 0x34;
        Vffffffec = A18 * 8 + 6950788;
        do {
            if(*Vffffffec != 0) {
                ebx = *ecx;
                ebx = ebx + *eax >> 1;
                *edx = bx;
                ebx = *(ecx + 2);
                ebx = ebx + *(eax + 2) >> 1;
                *(edx + 2) = bx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            ecx = ecx + 4;
            Vffffffec = Vffffffec + 0x100;
        } while(esi < 2);
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffffc + 0x28) = L004537B0( *(Ac + 0x28) + *(A10 + 0x28));
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffffc + 0x2c) = L004537B0( *(Ac + 0x2c) + *(A10 + 0x2c));
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffffc + 0x30) = L004537B0( *(Ac + 0x30) + *(A10 + 0x30));
        Vfffffff8 = *(A18 * 4 + 0x504508);
        eax = *(Ac + 0x3c) - 1 ^ *(A10 + 0x3c) - 1;
        >= ? L00466e06 : ;
        eax = A18 - 1;
        goto L00466e09;
        eax = A18;
L00466e09:
        if(eax > *(Ac + 0x44)) {
            if(eax <= *(A10 + 0x44)) {
                goto L00466f9d;
            }
            *(Vfffffffc + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
            *(Vfffffffc + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(Vfffffffc + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(Vfffffffc + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(Vfffffffc);
            } else {
                eax = *Ac + *A10 >> 1;
                *Vfffffffc = ax;
                *(Vfffffffc + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    edx = dx :: *A10 > 0 & 1;
                    ecx = *A14 - *Ac;
                    ecx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ebx = *A10 - *Ac;
                    ecx = ecx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    bx = *((eax << 4) + 0x505de4 + edx * 8 + ecx * 4);
                    *Vfffffffc = *Vfffffffc + bx;
                    ax = *((eax << 4) + 0x505de6 + edx * 8 + ecx * 4);
                    *(Vfffffffc + 2) = *(Vfffffffc + 2) + ax;
                }
                *L006c7340( *Vfffffffc);
                *(Vfffffffc + 0x24) = ax;
                *L006c7344( *(Vfffffffc + 2));
                *(Vfffffffc + 0x26) = ax;
            }
        } else {
L00466f9d:
            edi = *(A10 + 0x3c);
            esi = *(Ac + 0x3c);
            eax = L00463EBC(esi, edi, A18);
            eax = eax + (esi + edi >> 1);
            *(Vfffffffc + 0x3c) = eax;
            esi = 0;
            eax = Vfffffffc + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) >> 7;
                    ecx = *eax;
                    ecx = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ebx = *( *(edx + 4) + ecx) & 0xff;
                        edi = Vfffffffc;
                        *(edi + 0x3c) = *(edi + 0x3c) * *(edi + 0x3c);
                    }
                    ecx = *( *edx + ecx) << 0x15;
                    *(Vfffffffc + 0x3c) = *(Vfffffffc + 0x3c) + ecx;
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            (save)Vfffffff8;
            *(Vfffffffc + 4) = L004537B0( *(Vfffffffc + 0x28)) + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 8) = L004537B0( *(Vfffffffc + 0x2c)) + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)Vfffffff8;
            *(Vfffffffc + 0xc) = L004537B0( *(Vfffffffc + 0x30)) + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(Vfffffffc);
        }
        eax = L00462A34(Vfffffffc);
    }
}

/*    Procedure: 0x004670D0 - 0x00467548
 *    Argument size: 20
 *    Local size: 20
 *    Save regs size: 12
 */

L004670D0(A8, Ac, A10, A14, A18) // FUNC_001864
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    eax = *(ebx + 8);
    if(eax != 0) {
        Vfffffff8 = eax;
        esi = 0;
        ecx = Vfffffff8 + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(ebx + 8) = eax;
        Vfffffff8 = *(ebx + 8);
        if(*ebx == Ac) {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(ebx + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(ebx + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = Vfffffff8 + 0x34;
        eax = A10 + 0x34;
        ecx = Ac + 0x34;
        Vffffffec = A18 * 8 + 6950788;
        do {
            if(*Vffffffec != 0) {
                ebx = *ecx;
                ebx = ebx + *eax >> 1;
                *edx = bx;
                ebx = *(ecx + 2);
                ebx = ebx + *(eax + 2) >> 1;
                *(edx + 2) = bx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            ecx = ecx + 4;
            Vffffffec = Vffffffec + 0x100;
        } while(esi < 2);
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffff8 + 0x28) = L004537B0( *(Ac + 0x28) + *(A10 + 0x28));
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffff8 + 0x2c) = L004537B0( *(Ac + 0x2c) + *(A10 + 0x2c));
        (save) *(A18 * 4 + 0x504588);
        *(Vfffffff8 + 0x30) = L004537B0( *(Ac + 0x30) + *(A10 + 0x30));
        Vfffffff4 = *(A18 * 4 + 0x504508);
        if(*(Ac + 0x44) < A18) {
            if(*(A10 + 0x44) >= A18) {
                goto L00467404;
            }
            *(Vfffffff8 + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
            *(Vfffffff8 + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(Vfffffff8 + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(Vfffffff8 + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(Vfffffff8);
            } else {
                eax = *Ac + *A10 >> 1;
                *Vfffffff8 = ax;
                *(Vfffffff8 + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    edx = dx :: *A10 > 0 & 1;
                    ecx = *A14 - *Ac;
                    ecx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ebx = *A10 - *Ac;
                    ecx = ecx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    bx = *((eax << 4) + 0x505e04 + edx * 8 + ecx * 4);
                    *Vfffffff8 = *Vfffffff8 + bx;
                    ax = *((eax << 4) + 0x505e06 + edx * 8 + ecx * 4);
                    *(Vfffffff8 + 2) = *(Vfffffff8 + 2) + ax;
                }
                *L006c7340( *Vfffffff8);
                *(Vfffffff8 + 0x24) = ax;
                *L006c7344( *(Vfffffff8 + 2));
                *(Vfffffff8 + 0x26) = ax;
            }
        } else {
L00467404:
            esi = *(Ac + 0x3c);
            ebx = esi;
            edi = *(A10 + 0x3c);
            ebx = ebx + edi >> 1;
            eax = L00463EBC(esi, edi, A18) + ebx;
            *(Vfffffff8 + 0x3c) = eax;
            esi = 0;
            eax = Vfffffff8 + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(Vfffffff8 + 0x3c) = *(Vfffffff8 + 0x3c) >> 7;
                    ecx = *eax;
                    Vfffffffc = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ecx = *(edx + 4);
                        ecx = *(ecx + Vfffffffc) & 0xff;
                        edi = Vfffffff8;
                        *(edi + 0x3c) = *(edi + 0x3c) * *(edi + 0x3c);
                    }
                    ecx = *edx;
                    ecx = *(ecx + Vfffffffc) << 0x15;
                    *(Vfffffff8 + 0x3c) = *(Vfffffff8 + 0x3c) + ecx;
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            ebx = ( *(Vfffffff8 + 0x3c) - ebx >> 3) + Vfffffff4;
            (save)ebx;
            *(Vfffffff8 + 4) = L004537B0( *(Vfffffff8 + 0x28)) + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)ebx;
            *(Vfffffff8 + 8) = L004537B0( *(Vfffffff8 + 0x2c)) + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)ebx;
            *(Vfffffff8 + 0xc) = L004537B0( *(Vfffffff8 + 0x30)) + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(Vfffffff8);
        }
        eax = L00462A34(Vfffffff8);
    }
}

/*    Procedure: 0x00467549 - 0x004679CB
 *    Argument size: 20
 *    Local size: 24
 *    Save regs size: 12
 */

L00467549(A8, Ac, A10, A14, A18) // FUNC_001865
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A8;
    eax = *(esi + 8);
    if(eax != 0) {
        ebx = eax;
        esi = 0;
        ecx = ebx + 0x34;
        edx = A10 + 0x34;
        eax = Ac + 0x34;
        Vfffffff0 = A18 * 8 + 6950788;
        do {
            if(*Vfffffff0 != 0) {
                ebx = *eax;
                ebx = ebx + *edx >> 1;
                *ecx = bx;
                ebx = *(eax + 2);
                ebx = ebx + *(edx + 2) >> 1;
                *(ecx + 2) = bx;
            }
            esi = esi + 1;
            ecx = ecx + 4;
            edx = edx + 4;
            eax = eax + 4;
            Vfffffff0 = Vfffffff0 + 0x100;
        } while(esi < 2);
    } else {
        eax = L00462434();
        *(esi + 8) = eax;
        ebx = *(esi + 8);
        if(*esi == Ac) {
            eax = L00462488();
            *(esi + 4) = eax;
            *eax = Ac;
            eax = L00462488();
            *(esi + 0xc) = eax;
            *eax = A10;
        } else {
            eax = L00462488();
            *(esi + 4) = eax;
            *eax = A10;
            eax = L00462488();
            *(esi + 0xc) = eax;
            *eax = Ac;
        }
        esi = 0;
        edx = ebx + 0x34;
        eax = A10 + 0x34;
        Vffffffe8 = Ac + 0x34;
        Vffffffec = A18 * 8 + 6950788;
        do {
            if(*Vffffffec != 0) {
                ecx = *Vffffffe8 + *eax >> 1;
                *edx = cx;
                ecx = *(Vffffffe8 + 2) + *(eax + 2) >> 1;
                *(edx + 2) = cx;
            }
            esi = esi + 1;
            edx = edx + 4;
            eax = eax + 4;
            Vffffffe8 = Vffffffe8 + 4;
            Vffffffec = Vffffffec + 0x100;
        } while(esi < 2);
        (save) *(A18 * 4 + 0x504588);
        *(ebx + 0x28) = L004537B0( *(Ac + 0x28) + *(A10 + 0x28));
        (save) *(A18 * 4 + 0x504588);
        *(ebx + 0x2c) = L004537B0( *(Ac + 0x2c) + *(A10 + 0x2c));
        (save) *(A18 * 4 + 0x504588);
        *(ebx + 0x30) = L004537B0( *(Ac + 0x30) + *(A10 + 0x30));
        Vfffffff8 = *(A18 * 4 + 0x504508);
        eax = *(Ac + 0x3c) - 1 ^ *(A10 + 0x3c) - 1;
        >= ? L004676f7 : ;
        eax = A18 - 1;
        goto L004676fa;
        eax = A18;
L004676fa:
        if(eax > *(Ac + 0x44)) {
            if(eax <= *(A10 + 0x44)) {
                goto L00467898;
            }
            eax = *(Ac + 0x40);
            if(eax != 0 || *(A10 + 0x40) != 0) {
                eax = eax + *(A10 + 0x40) >> 1;
                *(ebx + 0x40) = eax;
                *(ebx + 0x3c) = *(ebx + 0x40);
            } else {
                *(ebx + 0x3c) = *(Ac + 0x3c) + *(A10 + 0x3c) >> 1;
                *(ebx + 0x40) = 0;
            }
            *(ebx + 4) = *(Ac + 4) + *(A10 + 4) >> 1;
            *(ebx + 8) = *(Ac + 8) + *(A10 + 8) >> 1;
            *(ebx + 0xc) = *(Ac + 0xc) + *(A10 + 0xc) >> 1;
            if(*(Ac + 0xc) < 0x40 || *(A10 + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *Ac + *A10 >> 1;
                *ebx = ax;
                *(ebx + 2) = *(Ac + 2) + *(A10 + 2) >> 1;
                if(*(A14 + 0xc) > 0x40) {
                    eax = Ac;
                    ax = *(eax + 2);
                    eax = ax :: *(A10 + 2) > 0 & 1;
                    edx = Ac;
                    dx = *edx;
                    Vfffffff4 = dx :: *A10 > 0 & 1;
                    edx = *A14 - *Ac;
                    edx = ( *(A10 + 2) - *(Ac + 2)) * ( *(A10 + 2) - *(Ac + 2));
                    ecx = *A10 - *Ac;
                    edx = edx :: ( *(A14 + 2) - *(Ac + 2)) * ( *(A14 + 2) - *(Ac + 2)) > 0 & 1;
                    ecx = (eax << 4) + 0x505e24;
                    *ebx = *ebx + *(ecx + Vfffffff4 * 8 + edx * 4);
                    eax = (eax << 4) + 0x505e26;
                    *(ebx + 2) = *(ebx + 2) + *(eax + Vfffffff4 * 8 + edx * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00467898:
            edi = *(A10 + 0x3c);
            esi = *(Ac + 0x3c);
            eax = L00463EBC(esi, edi, A18);
            *(ebx + 0x3c) = eax + (esi + edi >> 1);
            esi = 0;
            eax = ebx + 0x34;
            edx = A18 * 8 + 6950788;
            do {
                if(*edx != 0 && *eax < 0x80 && *(eax + 2) < 0x80) {
                    *(ebx + 0x3c) = *(ebx + 0x3c) >> 7;
                    ecx = *eax;
                    Vfffffffc = ecx + ( *(eax + 2) << 7);
                    if(*(edx + 4) != 0) {
                        ecx = *(edx + 4);
                        ecx = *(ecx + Vfffffffc) & 0xff;
                        *(ebx + 0x3c) = *(ebx + 0x3c) * *(ebx + 0x3c);
                    }
                    ecx = *edx;
                    *(ebx + 0x3c) = *(ebx + 0x3c) + ( *(ecx + Vfffffffc) << 0x15);
                }
                esi = esi + 1;
                eax = eax + 4;
                edx = edx + 0x100;
            } while(esi < 2);
            eax = *(ebx + 0x3c) >= 0 ? *(ebx + 0x3c) : 0;
            *(ebx + 0x40) = eax;
            esi = (eax - ( *(Ac + 0x40) + *(A10 + 0x40) >> 1) >> 3) + Vfffffff8;
            (save)esi;
            eax = L004537B0( *(ebx + 0x28));
            *(ebx + 4) = eax + ( *(Ac + 4) + *(A10 + 4) >> 1);
            (save)esi;
            eax = L004537B0( *(ebx + 0x2c));
            *(ebx + 8) = eax + ( *(Ac + 8) + *(A10 + 8) >> 1);
            (save)esi;
            eax = L004537B0( *(ebx + 0x30));
            *(ebx + 0xc) = eax + ( *(Ac + 0xc) + *(A10 + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
}

/*    Procedure: 0x004679CC - 0x00467C02
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004679CC() // FUNC_001866
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        *(ebx + 0x28) = *(esi + 0x28);
        *(ebx + 0x2c) = *(esi + 0x2c);
        *(ebx + 0x30) = *(esi + 0x30);
        edi = 0;
        if(*(ebp + 0x18) > *(esi + 0x44)) {
            eax = *(ebp + 0x18);
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L00467b88;
            }
            eax = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505e44;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505e46;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00467b88:
            eax = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00467C03 - 0x00467E90
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00467C03() // FUNC_001867
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0xc);
    edi = *(ebp + 8);
    eax = *(edi + 8);
    if(eax == 0) {
        eax = L00462434();
        *(edi + 8) = eax;
        ebx = *(edi + 8);
        if(esi == *edi) {
            eax = L00462488();
            *(edi + 4) = eax;
            *( *(edi + 4)) = esi;
            eax = L00462488();
            *(edi + 0xc) = eax;
            *eax = *(ebp + 0x10);
        } else {
            eax = L00462488();
            *(edi + 4) = eax;
            *eax = *(ebp + 0x10);
            eax = L00462488();
            *(edi + 0xc) = eax;
            *( *(edi + 0xc)) = esi;
        }
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x28);
        *(ebx + 0x28) = L004537B0(eax + *( *(ebp + 0x10) + 0x28));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x2c);
        *(ebx + 0x2c) = L004537B0(eax + *( *(ebp + 0x10) + 0x2c));
        (save) *( *(ebp + 0x18) * 4 + 0x504588);
        eax = *(esi + 0x30);
        *(ebx + 0x30) = L004537B0(eax + *( *(ebp + 0x10) + 0x30));
        edi = *( *(ebp + 0x18) * 4 + 0x504508);
        if(*(ebp + 0x18) > *(esi + 0x44)) {
            eax = *(ebp + 0x18);
            if(eax <= *( *(ebp + 0x10) + 0x44)) {
                goto L00467e16;
            }
            eax = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
            eax = *(esi + 4);
            *(ebx + 4) = eax + *( *(ebp + 0x10) + 4) >> 1;
            eax = *(esi + 8);
            *(ebx + 8) = eax + *( *(ebp + 0x10) + 8) >> 1;
            eax = *(esi + 0xc);
            *(ebx + 0xc) = eax + *( *(ebp + 0x10) + 0xc) >> 1;
            if(*(esi + 0xc) < 0x40 || *( *(ebp + 0x10) + 0xc) < 0x40) {
                *L006c7348(ebx);
            } else {
                eax = *esi;
                eax = eax + *( *(ebp + 0x10)) >> 1;
                *ebx = ax;
                eax = *(esi + 2);
                *(ebx + 2) = eax + *( *(ebp + 0x10) + 2) >> 1;
                eax = *(ebp + 0x14);
                if(*(eax + 0xc) > 0x40) {
                    ax = *(esi + 2);
                    eax = ax :: *( *(ebp + 0x10) + 2) > 0 & 1;
                    *(ebp - 4) = eax;
                    ax = *esi;
                    *(ebp - 8) = ax :: *( *(ebp + 0x10)) > 0 & 1;
                    eax = *( *(ebp + 0x14));
                    eax = eax - *esi;
                    edx = *( *(ebp + 0x10) + 2);
                    edx = edx - *(esi + 2);
                    asm("imul edx");
                    edx = *( *(ebp + 0x10));
                    edx = edx - *esi;
                    ecx = *( *(ebp + 0x14) + 2);
                    eax = eax :: (ecx - *(esi + 2)) * (ecx - *(esi + 2)) > 0 & 1;
                    edx = *(ebp - 4) << 4;
                    ecx = edx + 0x505e64;
                    *ebx = *ebx + *(ecx + *(ebp - 8) * 8 + eax * 4);
                    edx = edx + 0x505e66;
                    *(ebx + 2) = *(ebx + 2) + *(edx + *(ebp - 8) * 8 + eax * 4);
                }
                *L006c7340( *ebx);
                *(ebx + 0x24) = ax;
                *L006c7344( *(ebx + 2));
                *(ebx + 0x26) = ax;
            }
        } else {
L00467e16:
            eax = *(esi + 0x3c);
            *(ebx + 0x3c) = eax + *( *(ebp + 0x10) + 0x3c) >> 1;
            (save)edi;
            eax = L004537B0( *(ebx + 0x28));
            edx = *(esi + 4);
            *(ebx + 4) = eax + (edx + *( *(ebp + 0x10) + 4) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x2c));
            edx = *(esi + 8);
            *(ebx + 8) = eax + (edx + *( *(ebp + 0x10) + 8) >> 1);
            (save)edi;
            eax = L004537B0( *(ebx + 0x30));
            edx = *(esi + 0xc);
            *(ebx + 0xc) = eax + (edx + *( *(ebp + 0x10) + 0xc) >> 1);
            *L006c7348(ebx);
        }
        eax = L00462A34(ebx);
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00467E91 - 0x00467E93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00467E91()
{



}

/*    Procedure: 0x00467E94 - 0x0046881A
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462EF8()
 *        L00467E94()
 */

L00467E94(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -144;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = A20;
    if(esi < 0xa) {
        edi = A24;
    } else {
        if(*(Ac + 0x40) > *(A8 + 0x40)) {
            *(ebp - 0x24) = *(A8 + 0x40);
            edi = *(Ac + 0x40);
        } else {
            *(ebp - 0x24) = *(Ac + 0x40);
            edi = *(A8 + 0x40);
        }
        if(*(A10 + 0x40) < *(ebp - 0x24)) {
            *(ebp - 0x24) = *(A10 + 0x40);
        } else {
            if(edi < *(A10 + 0x40)) {
                edi = *(A10 + 0x40);
            }
        }
        (save)edi - *(ebp - 0x24) >> 3;
        edi = L004765BC( *(A8 + 0x28));
        edi = edi + L004765BC( *(A8 + 0x2c));
        edi = L004537B0(edi + L004765BC( *(A8 + 0x30))) + A24;
    }
    eax = *(A8 + 0xc) + edi;
    *(ebp - 0x1c) = eax;
    if(*(ebp - 0x1c) >= 0x40) {
        eax = L004765BC( *(A8 + 4)) - edi;
        if(eax <= *(ebp - 0x1c)) {
            eax = L004765BC( *(A8 + 8)) - edi;
            if(eax <= *(ebp - 0x1c)) {
                if(*(A8 + 0xc) < 0x40) {
                    goto L00468223;
                }
                eax = Ac;
                if(*(eax + 0xc) < 0x40) {
                    goto L00468223;
                }
                eax = A10;
                if(*(eax + 0xc) < 0x40) {
                    goto L00468223;
                }
                eax = *A10 - *A8;
                edx = *(Ac + 2) - *(A8 + 2);
                asm("imul edx");
                edx = *(A10 + 2) - *(A8 + 2);
                *(ebp - 0x44) = eax - ( *Ac - *A8) * ( *Ac - *A8);
                if(esi <= 0xd) {
                    if(esi <= *(A8 + 0x44) || esi <= *(Ac + 0x44)) {
                        goto L00467fe9;
                    }
                    if(esi <= *(A10 + 0x44)) {
L00467fe9:
                        if(*(ebp - 0x44) >= 0x96 || *(ebp - 0x44) < 0 || esi <= 8) {
                            goto L004680d7;
                        }
                    }
                }
                ax = *(Ac + 0x24) | *(A8 + 0x24);
                eax = ax | *(A10 + 0x24);
                if(*(eax * 4 + 0x5044c8) == 0) {
                    ax = *(Ac + 0x26) | *(A8 + 0x26);
                    eax = ax | *(A10 + 0x26);
                    if(*(eax * 4 + 0x5044c8) == 0 && *(ebp - 0x44) > 0) {
                        *(ebp + -132) = *(A8 + 4);
                        *(ebp - 0x80) = *(A8 + 8);
                        *(ebp - 0x7c) = *(A8 + 0xc);
                        *(ebp - 0x7c) = *(ebp - 0x7c) + M006a1190;
                        *(ebp - 0x48) = L00461430(M006a1184, ebp + -132);
                        M006c735c = esi;
                        L004627DC(ebp + -132, A8 + 4, Ac + 4, A10 + 4);
                        eax = *L006a11a4(A8, Ac, A10, ebp + -132, *(ebp - 0x48));
                        goto L00468814;
L004680d7:
                        if(esi >= 2) {
                            goto L004682dd;
                        }
                        L004627DC(ebp + -132, A8 + 4, Ac + 4, A10 + 4);
                        L00462760(ebp + -144, A8 + 4);
                        *(ebp - 0x20) = *L00501674(ebp + -144);
                        ecx = esi;
                        eax = -20480 >> cl;
                        asm("imul dword [ebp-0x20]");
                        edx = *(ebp + -132);
                        edx = *(ebp + -144) * *(ebp + -144);
                        ecx = *(ebp - 0x80);
                        edx = edx + *(ebp + -140) * *(ebp + -140);
                        ecx = *(ebp - 0x7c);
                        if(eax <= edx + *(ebp + -136) * *(ebp + -136)) {
                            goto L004682dd;
                        }
                        L00462760(ebp + -144, Ac + 4);
                        *(ebp - 0x20) = *L00501674(ebp + -144);
                        ecx = esi;
                        eax = -20480 >> cl;
                        asm("imul dword [ebp-0x20]");
                        edx = *(ebp + -132);
                        edx = *(ebp + -144) * *(ebp + -144);
                        ecx = *(ebp - 0x80);
                        edx = edx + *(ebp + -140) * *(ebp + -140);
                        ecx = *(ebp - 0x7c);
                        if(eax <= edx + *(ebp + -136) * *(ebp + -136)) {
                            goto L004682dd;
                        }
                        L00462760(ebp + -144, A10 + 4);
                        *(ebp - 0x20) = *L00501674(ebp + -144);
                        ecx = esi;
                        eax = -20480 >> cl;
                        asm("imul dword [ebp-0x20]");
                        edx = *(ebp + -132);
                        edx = *(ebp + -144) * *(ebp + -144);
                        ecx = *(ebp - 0x80);
                        edx = edx + *(ebp + -140) * *(ebp + -140);
                        ecx = *(ebp - 0x7c);
                        if(eax <= edx + *(ebp + -136) * *(ebp + -136)) {
                            goto L004682dd;
L00468223:
                            if(A24 >= 0x1f4) {
                                edi = L004765BC( *(A8 + 0xc));
                                *(ebp - 0x4c) = L004765BC( *(Ac + 0xc));
                                eax = L004765BC( *(A10 + 0xc));
                                if(edi >= *(A8 + 4) || *(Ac + 4) <= *(ebp - 0x4c)) {
                                    goto L00468275;
                                }
                                if(eax >= *(A10 + 4)) {
L00468275:
                                    if(~edi <= *(A8 + 4) || *(Ac + 4) >= ~( *(ebp - 0x4c))) {
                                        goto L0046829d;
                                    }
                                    edx = ~eax;
                                    if(edx <= *(A10 + 4)) {
L0046829d:
                                        if(edi >= *(A8 + 8) || *(Ac + 8) <= *(ebp - 0x4c)) {
                                            goto L004682b9;
                                        }
                                        if(eax >= *(A10 + 8)) {
L004682b9:
                                            if(~edi <= *(A8 + 8) || *(Ac + 8) >= ~( *(ebp - 0x4c))) {
                                                goto L004682dd;
                                            }
                                            eax = ~eax;
                                            if(eax <= *(A10 + 8)) {
L004682dd:
                                                if(A28 != 0) {
                                                    *(ebp - 0x24) = 0;
                                                    *(ebp - 0x78) = ebp - 0x40;
                                                    *(ebp - 0x74) = A10 + 0x34;
                                                    *(ebp - 0x70) = ebp - 0x38;
                                                    *(ebp - 0x6c) = Ac + 0x34;
                                                    *(ebp - 0x68) = ebp - 0x30;
                                                    *(ebp - 0x64) = A8 + 0x34;
                                                    *(ebp - 0x60) = 6950788;
                                                    *(ebp - 0x5c) = A28;
                                                    do {
                                                        if(*( *(ebp - 0x5c)) > 0) {
                                                            *(ebp - 0x50) = *( *(ebp - 0x5c));
                                                            *(ebp - 0x54) = ( *( *(ebp - 0x50)) << 2) + ( *( *(ebp - 0x50)) << 2) * 2 + 0x504608;
                                                            edi = *( *(ebp - 0x54) + 8) + esi - 1;
                                                            eax = *(ebp - 0x60) + edi * 8;
                                                            do {
                                                                *eax = *( *(ebp - 0x54));
                                                                *(eax + 4) = *( *(ebp - 0x54) + 4);
                                                                edi = edi - 1;
                                                                eax = eax - 8;
                                                            } while(esi <= edi);
                                                            eax = *( *(ebp - 0x64));
                                                            *( *(ebp - 0x68)) = eax;
                                                            eax = *( *(ebp - 0x6c));
                                                            *( *(ebp - 0x70)) = eax;
                                                            eax = *( *(ebp - 0x74));
                                                            *( *(ebp - 0x78)) = eax;
                                                            eax = *( *(ebp - 0x50) + 4);
                                                            *( *(ebp - 0x64)) = eax;
                                                            eax = *( *(ebp - 0x50) + 8);
                                                            *( *(ebp - 0x6c)) = eax;
                                                            eax = *( *(ebp - 0x50) + 0xc);
                                                            *( *(ebp - 0x74)) = eax;
                                                        }
                                                        *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                        *(ebp - 0x78) = *(ebp - 0x78) + 4;
                                                        *(ebp - 0x74) = *(ebp - 0x74) + 4;
                                                        *(ebp - 0x70) = *(ebp - 0x70) + 4;
                                                        *(ebp - 0x6c) = *(ebp - 0x6c) + 4;
                                                        *(ebp - 0x68) = *(ebp - 0x68) + 4;
                                                        *(ebp - 0x64) = *(ebp - 0x64) + 4;
                                                        *(ebp - 0x60) = *(ebp - 0x60) + 0x100;
                                                        *(ebp - 0x5c) = *(ebp - 0x5c) + 4;
                                                    } while(*(ebp - 0x24) < 2);
                                                }
                                                if(esi < 5) {
                                                    *L006c7338(A18, Ac, A10, A8, esi);
                                                    *L006c7338(A1c, A10, A8, Ac, esi);
                                                    *L006c7338(A14, A8, Ac, A10, esi);
                                                } else {
                                                    *L006c733c(A18, Ac, A10, A8, esi);
                                                    *L006c733c(A1c, A10, A8, Ac, esi);
                                                    *L006c733c(A14, A8, Ac, A10, esi);
                                                }
                                                *(ebp - 8) = L00462488();
                                                *( *(ebp - 8)) = *(A18 + 8);
                                                *(ebp - 0xc) = L00462488();
                                                *( *(ebp - 0xc)) = *(A1c + 8);
                                                *(ebp - 0x10) = L00462488();
                                                *( *(ebp - 0x10)) = *(A14 + 8);
                                                esi = esi + 1;
                                                A24 = A24 >> 1;
                                                if(A28 != 0) {
                                                    (save) *(A28 + 8);
                                                    (save)A24;
                                                    (save)esi;
                                                    eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                    (save)eax;
                                                    (save) *(ebp - 0x10);
                                                    eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                    (save)eax;
                                                    (save) *(A1c + 8);
                                                    (save) *(A14 + 8);
                                                    (save)A8;
                                                    L00467E94();
                                                    esp = esp + 0x24;
                                                    (save) *(A28 + 0xc);
                                                    (save)A24;
                                                    (save)esi;
                                                    eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                    (save)eax;
                                                    (save) *(ebp - 8);
                                                    eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                    (save)eax;
                                                    (save) *(A14 + 8);
                                                    (save) *(A18 + 8);
                                                    (save)Ac;
                                                    L00467E94();
                                                    esp = esp + 0x24;
                                                    (save) *(A28 + 0x10);
                                                    (save)A24;
                                                    (save)esi;
                                                    eax = *A18 == A10 ? *(A18 + 4) : *(A18 + 0xc);
                                                    (save)eax;
                                                    (save) *(ebp - 0xc);
                                                    eax = *A1c == A10 ? *(A1c + 4) : *(A1c + 0xc);
                                                    (save)eax;
                                                    (save) *(A18 + 8);
                                                    (save) *(A1c + 8);
                                                    (save)A10;
                                                    L00467E94();
                                                    esp = esp + 0x24;
                                                    L00467E94( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), esi, A24, *(A28 + 0x14));
                                                    esi = esi - 1;
                                                    *(ebp - 0x24) = 0;
                                                    *(ebp - 0x5c) = A10 + 0x34;
                                                    *(ebp - 0x60) = ebp - 0x40;
                                                    *(ebp - 0x64) = Ac + 0x34;
                                                    *(ebp - 0x68) = ebp - 0x38;
                                                    *(ebp - 0x6c) = A8 + 0x34;
                                                    *(ebp - 0x70) = ebp - 0x30;
                                                    *(ebp - 0x74) = 6950788;
                                                    *(ebp - 0x78) = A28;
                                                    do {
                                                        if(*( *(ebp - 0x78)) > 0) {
                                                            *(ebp - 0x58) = *( *(ebp - 0x78));
                                                            edi = *(( *( *(ebp - 0x58)) + *( *(ebp - 0x58)) * 2) * 4 + 0x504610) + esi - 1;
                                                            eax = *(ebp - 0x74) + edi * 8;
                                                            do {
                                                                *eax = 0;
                                                                *(eax + 4) = 0;
                                                                edi = edi - 1;
                                                                eax = eax - 8;
                                                            } while(esi <= edi);
                                                            eax = *( *(ebp - 0x70));
                                                            *( *(ebp - 0x6c)) = eax;
                                                            eax = *( *(ebp - 0x68));
                                                            *( *(ebp - 0x64)) = eax;
                                                            eax = *( *(ebp - 0x60));
                                                            *( *(ebp - 0x5c)) = eax;
                                                        }
                                                        *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                        *(ebp - 0x5c) = *(ebp - 0x5c) + 4;
                                                        *(ebp - 0x60) = *(ebp - 0x60) + 4;
                                                        *(ebp - 0x64) = *(ebp - 0x64) + 4;
                                                        *(ebp - 0x68) = *(ebp - 0x68) + 4;
                                                        *(ebp - 0x6c) = *(ebp - 0x6c) + 4;
                                                        *(ebp - 0x70) = *(ebp - 0x70) + 4;
                                                        *(ebp - 0x74) = *(ebp - 0x74) + 0x100;
                                                        *(ebp - 0x78) = *(ebp - 0x78) + 4;
                                                    } while(*(ebp - 0x24) < 2);
                                                } else {
                                                    (save)0;
                                                    (save)A24;
                                                    (save)esi;
                                                    eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                    (save)eax;
                                                    (save) *(ebp - 0x10);
                                                    eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                    (save)eax;
                                                    (save) *(A1c + 8);
                                                    (save) *(A14 + 8);
                                                    (save)A8;
                                                    L00467E94();
                                                    esp = esp + 0x24;
                                                    (save)0;
                                                    (save)A24;
                                                    (save)esi;
                                                    eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                    (save)eax;
                                                    (save) *(ebp - 8);
                                                    eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                    (save)eax;
                                                    (save) *(A14 + 8);
                                                    (save) *(A18 + 8);
                                                    (save)Ac;
                                                    L00467E94();
                                                    esp = esp + 0x24;
                                                    (save)0;
                                                    (save)A24;
                                                    (save)esi;
                                                    eax = *A18 == A10 ? *(A18 + 4) : *(A18 + 0xc);
                                                    (save)eax;
                                                    (save) *(ebp - 0xc);
                                                    eax = *A1c == A10 ? *(A1c + 4) : *(A1c + 0xc);
                                                    (save)eax;
                                                    (save) *(A18 + 8);
                                                    (save) *(A1c + 8);
                                                    (save)A10;
                                                    L00467E94();
                                                    esp = esp + 0x24;
                                                    L00467E94( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), esi, A24, 0);
                                                }
                                                L004624CC( *(ebp - 8));
                                                L004624CC( *(ebp - 0xc));
                                                eax = L004624CC( *(ebp - 0x10));
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L00468814:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0046881B - 0x0046881B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046881B()
{



}

/*    Procedure: 0x0046881C - 0x0046921D
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462EF8()
 *        L0046881C()
 */

L0046881C(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -148;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = A20;
    if(esi < 0xa) {
        edi = A24;
    } else {
        if(*(Ac + 0x40) > *(A8 + 0x40)) {
            *(ebp - 0x24) = *(A8 + 0x40);
            edi = *(Ac + 0x40);
        } else {
            *(ebp - 0x24) = *(Ac + 0x40);
            edi = *(A8 + 0x40);
        }
        if(*(A10 + 0x40) < *(ebp - 0x24)) {
            *(ebp - 0x24) = *(A10 + 0x40);
        } else {
            if(edi < *(A10 + 0x40)) {
                edi = *(A10 + 0x40);
            }
        }
        (save)edi - *(ebp - 0x24) >> 3;
        edi = L004765BC( *(A8 + 0x28));
        edi = edi + L004765BC( *(A8 + 0x2c));
        edi = L004537B0(edi + L004765BC( *(A8 + 0x30))) + A24;
    }
    eax = *(A8 + 0xc) + edi;
    *(ebp - 0x1c) = eax;
    if(*(ebp - 0x1c) >= 0x40) {
        eax = L004765BC( *(A8 + 4)) - edi;
        if(eax <= *(ebp - 0x1c)) {
            eax = L004765BC( *(A8 + 8)) - edi;
            if(eax <= *(ebp - 0x1c)) {
                if(*(A8 + 0xc) < 0x40) {
                    goto L00468c26;
                }
                eax = Ac;
                if(*(eax + 0xc) < 0x40) {
                    goto L00468c26;
                }
                eax = A10;
                if(*(eax + 0xc) < 0x40) {
                    goto L00468c26;
                }
                eax = *A10 - *A8;
                edx = *(Ac + 2) - *(A8 + 2);
                asm("imul edx");
                edx = *(A10 + 2) - *(A8 + 2);
                eax = eax - ( *Ac - *A8) * ( *Ac - *A8);
                *(ebp - 0x44) = eax;
                *(A8 + 0x3c) :: 0;
                asm("setng al");
                eax = eax & 1;
                edx = Ac;
                *(edx + 0x3c) :: 0;
                asm("setng dl");
                eax = eax + (edx & 1);
                edx = A10;
                *(edx + 0x3c) :: 0;
                asm("setng dl");
                eax = eax + (edx & 1);
                if(eax != 0) {
                    if(eax == 3) {
                        goto L0046898d;
                    }
                    eax = esi - 1;
                } else {
L0046898d:
                    eax = esi;
                }
                if(esi <= 0xd) {
                    if(eax <= *(A8 + 0x44) || eax <= *(Ac + 0x44)) {
                        goto L004689a9;
                    }
                    if(eax <= *(A10 + 0x44)) {
L004689a9:
                        if(*(ebp - 0x44) >= 0x96 || *(ebp - 0x44) < 0 || eax <= 8) {
                            goto L00468ad1;
                        }
                    }
                }
                ax = *(Ac + 0x24) | *(A8 + 0x24);
                eax = ax | *(A10 + 0x24);
                if(*(eax * 4 + 0x5044c8) == 0) {
                    ax = *(Ac + 0x26) | *(A8 + 0x26);
                    eax = ax | *(A10 + 0x26);
                    if(*(eax * 4 + 0x5044c8) == 0) {
                        *(A8 + 0x3c) :: 0;
                        asm("setng al");
                        eax = eax & 1;
                        edx = Ac;
                        *(edx + 0x3c) :: 0;
                        asm("setng dl");
                        eax = eax + (edx & 1);
                        edx = A10;
                        *(edx + 0x3c) :: 0;
                        asm("setng dl");
                        eax = eax + (edx & 1);
                        *(ebp - 0x48) = eax;
                        if(*(ebp - 0x48) == 1 || *(ebp - 0x48) == 2) {
                            goto L00468a50;
                        }
                        if(*(ebp - 0x44) > 0) {
L00468a50:
                            *(ebp + -136) = *(A8 + 4);
                            *(ebp + -132) = *(A8 + 8);
                            *(ebp - 0x80) = *(A8 + 0xc);
                            *(ebp - 0x80) = *(ebp - 0x80) + M006a1190;
                            *(ebp - 0x4c) = L00461430(M006a1184, ebp + -136);
                            M006c735c = esi;
                            L004627DC(ebp + -136, A8 + 4, Ac + 4, A10 + 4);
                            eax = *L006a11a4(A8, Ac, A10, ebp + -136, *(ebp - 0x4c));
                            goto L00469217;
L00468ad1:
                            if(esi >= 2) {
                                goto L00468ce0;
                            }
                            L004627DC(ebp + -136, A8 + 4, Ac + 4, A10 + 4);
                            L00462760(ebp + -148, A8 + 4);
                            *(ebp - 0x20) = *L00501674(ebp + -148);
                            ecx = esi;
                            eax = -20480 >> cl;
                            asm("imul dword [ebp-0x20]");
                            edx = *(ebp + -136);
                            edx = *(ebp + -148) * *(ebp + -148);
                            ecx = *(ebp + -132);
                            edx = edx + *(ebp + -144) * *(ebp + -144);
                            ecx = *(ebp - 0x80);
                            if(eax <= edx + *(ebp + -140) * *(ebp + -140)) {
                                goto L00468ce0;
                            }
                            L00462760(ebp + -148, Ac + 4);
                            *(ebp - 0x20) = *L00501674(ebp + -148);
                            ecx = esi;
                            eax = -20480 >> cl;
                            asm("imul dword [ebp-0x20]");
                            edx = *(ebp + -136);
                            edx = *(ebp + -148) * *(ebp + -148);
                            ecx = *(ebp + -132);
                            edx = edx + *(ebp + -144) * *(ebp + -144);
                            ecx = *(ebp - 0x80);
                            if(eax <= edx + *(ebp + -140) * *(ebp + -140)) {
                                goto L00468ce0;
                            }
                            L00462760(ebp + -148, A10 + 4);
                            *(ebp - 0x20) = *L00501674(ebp + -148);
                            ecx = esi;
                            eax = -20480 >> cl;
                            asm("imul dword [ebp-0x20]");
                            edx = *(ebp + -136);
                            edx = *(ebp + -148) * *(ebp + -148);
                            ecx = *(ebp + -132);
                            edx = edx + *(ebp + -144) * *(ebp + -144);
                            ecx = *(ebp - 0x80);
                            if(eax <= edx + *(ebp + -140) * *(ebp + -140)) {
                                goto L00468ce0;
L00468c26:
                                if(A24 >= 0x1f4) {
                                    edi = L004765BC( *(A8 + 0xc));
                                    *(ebp - 0x50) = L004765BC( *(Ac + 0xc));
                                    eax = L004765BC( *(A10 + 0xc));
                                    if(edi >= *(A8 + 4) || *(Ac + 4) <= *(ebp - 0x50)) {
                                        goto L00468c78;
                                    }
                                    if(eax >= *(A10 + 4)) {
L00468c78:
                                        if(~edi <= *(A8 + 4) || *(Ac + 4) >= ~( *(ebp - 0x50))) {
                                            goto L00468ca0;
                                        }
                                        edx = ~eax;
                                        if(edx <= *(A10 + 4)) {
L00468ca0:
                                            if(edi >= *(A8 + 8) || *(Ac + 8) <= *(ebp - 0x50)) {
                                                goto L00468cbc;
                                            }
                                            if(eax >= *(A10 + 8)) {
L00468cbc:
                                                if(~edi <= *(A8 + 8) || *(Ac + 8) >= ~( *(ebp - 0x50))) {
                                                    goto L00468ce0;
                                                }
                                                eax = ~eax;
                                                if(eax <= *(A10 + 8)) {
L00468ce0:
                                                    if(A28 != 0) {
                                                        *(ebp - 0x24) = 0;
                                                        *(ebp - 0x7c) = ebp - 0x40;
                                                        *(ebp - 0x78) = A10 + 0x34;
                                                        *(ebp - 0x74) = ebp - 0x38;
                                                        *(ebp - 0x70) = Ac + 0x34;
                                                        *(ebp - 0x6c) = ebp - 0x30;
                                                        *(ebp - 0x68) = A8 + 0x34;
                                                        *(ebp - 0x64) = 6950788;
                                                        *(ebp - 0x60) = A28;
                                                        do {
                                                            if(*( *(ebp - 0x60)) > 0) {
                                                                *(ebp - 0x54) = *( *(ebp - 0x60));
                                                                *(ebp - 0x58) = ( *( *(ebp - 0x54)) << 2) + ( *( *(ebp - 0x54)) << 2) * 2 + 0x504608;
                                                                edi = *( *(ebp - 0x58) + 8) + esi - 1;
                                                                eax = *(ebp - 0x64) + edi * 8;
                                                                do {
                                                                    *eax = *( *(ebp - 0x58));
                                                                    *(eax + 4) = *( *(ebp - 0x58) + 4);
                                                                    edi = edi - 1;
                                                                    eax = eax - 8;
                                                                } while(esi <= edi);
                                                                eax = *( *(ebp - 0x68));
                                                                *( *(ebp - 0x6c)) = eax;
                                                                eax = *( *(ebp - 0x70));
                                                                *( *(ebp - 0x74)) = eax;
                                                                eax = *( *(ebp - 0x78));
                                                                *( *(ebp - 0x7c)) = eax;
                                                                eax = *( *(ebp - 0x54) + 4);
                                                                *( *(ebp - 0x68)) = eax;
                                                                eax = *( *(ebp - 0x54) + 8);
                                                                *( *(ebp - 0x70)) = eax;
                                                                eax = *( *(ebp - 0x54) + 0xc);
                                                                *( *(ebp - 0x78)) = eax;
                                                            }
                                                            *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                            *(ebp - 0x7c) = *(ebp - 0x7c) + 4;
                                                            *(ebp - 0x78) = *(ebp - 0x78) + 4;
                                                            *(ebp - 0x74) = *(ebp - 0x74) + 4;
                                                            *(ebp - 0x70) = *(ebp - 0x70) + 4;
                                                            *(ebp - 0x6c) = *(ebp - 0x6c) + 4;
                                                            *(ebp - 0x68) = *(ebp - 0x68) + 4;
                                                            *(ebp - 0x64) = *(ebp - 0x64) + 0x100;
                                                            *(ebp - 0x60) = *(ebp - 0x60) + 4;
                                                        } while(*(ebp - 0x24) < 2);
                                                    }
                                                    if(esi < 5) {
                                                        *L006c7338(A18, Ac, A10, A8, esi);
                                                        *L006c7338(A1c, A10, A8, Ac, esi);
                                                        *L006c7338(A14, A8, Ac, A10, esi);
                                                    } else {
                                                        *L006c733c(A18, Ac, A10, A8, esi);
                                                        *L006c733c(A1c, A10, A8, Ac, esi);
                                                        *L006c733c(A14, A8, Ac, A10, esi);
                                                    }
                                                    *(ebp - 8) = L00462488();
                                                    *( *(ebp - 8)) = *(A18 + 8);
                                                    *(ebp - 0xc) = L00462488();
                                                    *( *(ebp - 0xc)) = *(A1c + 8);
                                                    *(ebp - 0x10) = L00462488();
                                                    *( *(ebp - 0x10)) = *(A14 + 8);
                                                    esi = esi + 1;
                                                    A24 = A24 >> 1;
                                                    if(A28 != 0) {
                                                        (save) *(A28 + 8);
                                                        (save)A24;
                                                        (save)esi;
                                                        eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                        (save)eax;
                                                        (save) *(ebp - 0x10);
                                                        eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                        (save)eax;
                                                        (save) *(A1c + 8);
                                                        (save) *(A14 + 8);
                                                        (save)A8;
                                                        L0046881C();
                                                        esp = esp + 0x24;
                                                        (save) *(A28 + 0xc);
                                                        (save)A24;
                                                        (save)esi;
                                                        eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                        (save)eax;
                                                        (save) *(ebp - 8);
                                                        eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                        (save)eax;
                                                        (save) *(A14 + 8);
                                                        (save) *(A18 + 8);
                                                        (save)Ac;
                                                        L0046881C();
                                                        esp = esp + 0x24;
                                                        (save) *(A28 + 0x10);
                                                        (save)A24;
                                                        (save)esi;
                                                        eax = *A18 == A10 ? *(A18 + 4) : *(A18 + 0xc);
                                                        (save)eax;
                                                        (save) *(ebp - 0xc);
                                                        eax = *A1c == A10 ? *(A1c + 4) : *(A1c + 0xc);
                                                        (save)eax;
                                                        (save) *(A18 + 8);
                                                        (save) *(A1c + 8);
                                                        (save)A10;
                                                        L0046881C();
                                                        esp = esp + 0x24;
                                                        L0046881C( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), esi, A24, *(A28 + 0x14));
                                                        esi = esi - 1;
                                                        *(ebp - 0x24) = 0;
                                                        *(ebp - 0x60) = A10 + 0x34;
                                                        *(ebp - 0x64) = ebp - 0x40;
                                                        *(ebp - 0x68) = Ac + 0x34;
                                                        *(ebp - 0x6c) = ebp - 0x38;
                                                        *(ebp - 0x70) = A8 + 0x34;
                                                        *(ebp - 0x74) = ebp - 0x30;
                                                        *(ebp - 0x78) = 6950788;
                                                        *(ebp - 0x7c) = A28;
                                                        do {
                                                            if(*( *(ebp - 0x7c)) > 0) {
                                                                *(ebp - 0x5c) = *( *(ebp - 0x7c));
                                                                edi = *(( *( *(ebp - 0x5c)) + *( *(ebp - 0x5c)) * 2) * 4 + 0x504610) + esi - 1;
                                                                eax = *(ebp - 0x78) + edi * 8;
                                                                do {
                                                                    *eax = 0;
                                                                    *(eax + 4) = 0;
                                                                    edi = edi - 1;
                                                                    eax = eax - 8;
                                                                } while(esi <= edi);
                                                                eax = *( *(ebp - 0x74));
                                                                *( *(ebp - 0x70)) = eax;
                                                                eax = *( *(ebp - 0x6c));
                                                                *( *(ebp - 0x68)) = eax;
                                                                eax = *( *(ebp - 0x64));
                                                                *( *(ebp - 0x60)) = eax;
                                                            }
                                                            *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                            *(ebp - 0x60) = *(ebp - 0x60) + 4;
                                                            *(ebp - 0x64) = *(ebp - 0x64) + 4;
                                                            *(ebp - 0x68) = *(ebp - 0x68) + 4;
                                                            *(ebp - 0x6c) = *(ebp - 0x6c) + 4;
                                                            *(ebp - 0x70) = *(ebp - 0x70) + 4;
                                                            *(ebp - 0x74) = *(ebp - 0x74) + 4;
                                                            *(ebp - 0x78) = *(ebp - 0x78) + 0x100;
                                                            *(ebp - 0x7c) = *(ebp - 0x7c) + 4;
                                                        } while(*(ebp - 0x24) < 2);
                                                    } else {
                                                        (save)0;
                                                        (save)A24;
                                                        (save)esi;
                                                        eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                        (save)eax;
                                                        (save) *(ebp - 0x10);
                                                        eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                        (save)eax;
                                                        (save) *(A1c + 8);
                                                        (save) *(A14 + 8);
                                                        (save)A8;
                                                        L0046881C();
                                                        esp = esp + 0x24;
                                                        (save)0;
                                                        (save)A24;
                                                        (save)esi;
                                                        eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                        (save)eax;
                                                        (save) *(ebp - 8);
                                                        eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                        (save)eax;
                                                        (save) *(A14 + 8);
                                                        (save) *(A18 + 8);
                                                        (save)Ac;
                                                        L0046881C();
                                                        esp = esp + 0x24;
                                                        (save)0;
                                                        (save)A24;
                                                        (save)esi;
                                                        eax = *A18 == A10 ? *(A18 + 4) : *(A18 + 0xc);
                                                        (save)eax;
                                                        (save) *(ebp - 0xc);
                                                        eax = *A1c == A10 ? *(A1c + 4) : *(A1c + 0xc);
                                                        (save)eax;
                                                        (save) *(A18 + 8);
                                                        (save) *(A1c + 8);
                                                        (save)A10;
                                                        L0046881C();
                                                        esp = esp + 0x24;
                                                        L0046881C( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), esi, A24, 0);
                                                    }
                                                    L004624CC( *(ebp - 8));
                                                    L004624CC( *(ebp - 0xc));
                                                    eax = L004624CC( *(ebp - 0x10));
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L00469217:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0046921E - 0x0046921F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046921E()
{



}

/*    Procedure: 0x00469220 - 0x0046A4F2
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462EF8()
 *        L00469220()
 */

L00469220(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -272;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = A10;
    if(A20 < 0xa) {
        *(ebp - 0x44) = A24;
    } else {
        eax = *(A8 + 0x40);
        if(eax < *(Ac + 0x40)) {
            *(ebp - 0x24) = *(A8 + 0x40);
            edi = *(Ac + 0x40);
        } else {
            *(ebp - 0x24) = *(Ac + 0x40);
            edi = *(A8 + 0x40);
        }
        if(*(esi + 0x40) < *(ebp - 0x24)) {
            *(ebp - 0x24) = *(esi + 0x40);
        } else {
            if(edi < *(esi + 0x40)) {
                edi = *(esi + 0x40);
            }
        }
        (save)edi - *(ebp - 0x24) >> 3;
        edi = L004765BC( *(A8 + 0x28));
        edi = edi + L004765BC( *(A8 + 0x2c));
        *(ebp - 0x44) = L004537B0(edi + L004765BC( *(A8 + 0x30))) + A24;
    }
    *(ebp - 0x1c) = *(A8 + 0xc) + *(ebp - 0x44);
    if(*(ebp - 0x1c) < 0x40) {
        ax = *(A8 + 0x24);
        eax = ax | *(Ac + 0x24) | *(esi + 0x24);
        if(*(eax * 4 + 0x5044c8) == 0) {
            ax = *(A8 + 0x26);
            eax = ax | *(Ac + 0x26) | *(esi + 0x26);
            if(*(eax * 4 + 0x5044c8) == 0) {
                eax = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
                edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
                eax = eax | edx;
                edx = *(A8 + 0xc) < 0 ? ~( *(A8 + 0xc)) : *(A8 + 0xc);
                eax = eax | edx;
                edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
                eax = eax | edx;
                edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
                eax = eax | edx;
                edx = *(Ac + 0xc) < 0 ? ~( *(Ac + 0xc)) : *(Ac + 0xc);
                eax = eax | edx;
                edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
                eax = eax | edx;
                edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
                eax = eax | edx;
                edx = *(esi + 0xc) < 0 ? ~( *(esi + 0xc)) : *(esi + 0xc);
                edi = L00459CEC(eax | edx) - 0xd;
                if(edi > 0) {
                    ecx = edi;
                    *(ebp + -212) = *(A8 + 4) >> cl;
                    ecx = edi;
                    *(ebp + -208) = *(A8 + 8) >> cl;
                    ecx = edi;
                    *(ebp + -204) = *(A8 + 0xc) >> cl;
                    ecx = edi;
                    *(ebp + -224) = *(Ac + 4) >> cl;
                    ecx = edi;
                    *(ebp + -220) = *(Ac + 8) >> cl;
                    ecx = edi;
                    *(ebp + -216) = *(Ac + 0xc) >> cl;
                    ecx = edi;
                    *(ebp + -236) = *(esi + 4) >> cl;
                    ecx = edi;
                    *(ebp + -232) = *(esi + 8) >> cl;
                    ecx = edi;
                    *(ebp + -228) = *(esi + 0xc) >> cl;
                } else {
                    *(ebp + -212) = *(A8 + 4);
                    *(ebp + -208) = *(A8 + 8);
                    *(ebp + -204) = *(A8 + 0xc);
                    eax = Ac;
                    *(ebp + -224) = *(eax + 4);
                    *(ebp + -220) = *(eax + 8);
                    *(ebp + -216) = *(eax + 0xc);
                    *(ebp + -236) = *(esi + 4);
                    *(ebp + -232) = *(esi + 8);
                    *(ebp + -228) = *(esi + 0xc);
                    edi = 0;
                }
                eax = *(ebp + -212) - *(ebp + -236);
                asm("imul dword [ebp+0xffffff24]");
                edx = *(ebp + -224) - *(ebp + -212);
                eax = eax + *(ebp + -232) * *(ebp + -232);
                edx = *(ebp + -236) - *(ebp + -224);
                *(ebp - 0x48) = eax + *(ebp + -208) * *(ebp + -208);
                eax = *(ebp + -212) - *(ebp + -224);
                asm("imul dword [ebp+0xffffff18]");
                edx = *(ebp + -236) - *(ebp + -212);
                eax = eax + *(ebp + -220) * *(ebp + -220);
                edx = *(ebp + -224) - *(ebp + -236);
                eax = eax + *(ebp + -208) * *(ebp + -208);
                *(ebp - 0x4c) = eax;
                if(*(ebp - 0x48) != 0 && *(ebp - 0x4c) != 0) {
                    eax = *(ebp + -212);
                    asm("imul dword [ebp+0xffffff24]");
                    edx = *(ebp + -224);
                    *(ebp - 0x50) = eax - *(ebp + -208) * *(ebp + -208);
                    eax = *(ebp + -212);
                    asm("imul dword [ebp+0xffffff18]");
                    edx = *(ebp + -236);
                    *(ebp - 0x54) = eax - *(ebp + -208) * *(ebp + -208);
                    eax = *(ebp - 0x54) < 0 ? ~( *(ebp - 0x54)) : *(ebp - 0x54);
                    eax = L00459CEC(eax);
                    esi = 0x1e - eax;
                    if(esi < 0) {
                        esi = 0;
                    }
                    if(esi > 0xf) {
                        esi = 0xf;
                    }
                    if(esi >= 0xf) {
                        goto L004695ce;
                    }
                    ecx = 0xf - esi;
                    *(ebp - 0x4c) = *(ebp - 0x4c) >> cl;
                    if(*(ebp - 0x4c) != 0 && *(ebp - 0x4c) != -1) {
L004695ce:
                        ecx = esi;
                        eax = *(ebp - 0x54) << cl;
                        asm("cdq");
                        *(ebp - 0x4c) = *(ebp - 0x4c) / *(ebp - 0x4c);
                        edx = *(ebp - 0x4c) % *(ebp - 0x4c);
                        *(ebp - 0x58) = eax;
                        eax = *(ebp - 0x50) < 0 ? ~( *(ebp - 0x50)) : *(ebp - 0x50);
                        eax = L00459CEC(eax);
                        esi = 0x1e - eax;
                        if(esi < 0) {
                            esi = 0;
                        }
                        if(esi > 0xf) {
                            esi = 0xf;
                        }
                        if(esi >= 0xf) {
                            goto L0046962d;
                        }
                        ecx = 0xf - esi;
                        *(ebp - 0x48) = *(ebp - 0x48) >> cl;
                        if(*(ebp - 0x48) != 0 && *(ebp - 0x48) != -1) {
L0046962d:
                            ecx = esi;
                            eax = *(ebp - 0x50) << cl;
                            asm("cdq");
                            *(ebp - 0x48) = *(ebp - 0x48) / *(ebp - 0x48);
                            edx = *(ebp - 0x48) % *(ebp - 0x48);
                            *(ebp - 0x5c) = eax;
                            if(*(ebp - 0x58) >= 0 && *(ebp - 0x5c) >= 0) {
                                eax = *(ebp - 0x58) + *(ebp - 0x5c);
                                if(eax <= 32768) {
                                    if(edi < 0xf) {
                                        ecx = 0xf - edi;
                                        eax = *(ebp + -216) - *(ebp + -204);
                                        asm("imul dword [ebp-0x58]");
                                        edx = *(ebp + -228) - *(ebp + -204);
                                        *(ebp - 0x60) = (eax + *(ebp - 0x5c) * *(ebp - 0x5c) >> cl) + *(A8 + 0xc);
                                    } else {
                                        ecx = edi - 0xf;
                                        eax = *(ebp + -216) - *(ebp + -204);
                                        asm("imul dword [ebp-0x58]");
                                        edx = *(ebp + -228) - *(ebp + -204);
                                        *(ebp - 0x60) = (eax + *(ebp - 0x5c) * *(ebp - 0x5c) << cl) + *(A8 + 0xc);
                                    }
                                    eax = *(ebp - 0x60);
                                    if(eax < M006c734c) {
                                        goto L004696db;
                                    }
                                    if(M006c7350 != 0) {
L004696db:
                                        M006c734c = *(ebp - 0x60);
                                        eax = 0;
                                        M006c7350 = 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
        eax = *(A8 + 0xc) - *(ebp - 0x44);
        if(eax <= M006c7354) {
            eax = L004765BC( *(A8 + 4)) - *(ebp - 0x44);
            if(eax <= 0) {
                eax = L004765BC( *(A8 + 8)) - *(ebp - 0x44);
                if(eax <= 0) {
                    if(*(A8 + 0xc) < 0x40) {
                        goto L00469e1c;
                    }
                    eax = Ac;
                    if(*(eax + 0xc) < 0x40 || *(esi + 0xc) < 0x40) {
                        goto L00469e1c;
                    }
                    eax = *esi;
                    eax = eax - *A8;
                    edx = *(Ac + 2) - *(A8 + 2);
                    asm("imul edx");
                    edx = *(esi + 2);
                    edx = edx - *(A8 + 2);
                    *(ebp - 0x64) = eax - ( *Ac - *A8) * ( *Ac - *A8);
                    if(A20 <= 9) {
                        if(A20 <= *(A8 + 0x44) || A20 <= *(Ac + 0x44)) {
                            goto L004697a1;
                        }
                        if(A20 <= *(esi + 0x44)) {
L004697a1:
                            if(*(ebp - 0x64) >= 0x96 || *(ebp - 0x64) < 0 || A20 <= 8) {
                                goto L00469cc0;
                            }
                        }
                    }
                    ax = *(A8 + 0x24);
                    eax = ax | *(Ac + 0x24) | *(esi + 0x24);
                    if(*(eax * 4 + 0x5044c8) == 0) {
                        ax = *(A8 + 0x26);
                        eax = ax | *(Ac + 0x26) | *(esi + 0x26);
                        if(*(eax * 4 + 0x5044c8) == 0) {
                            eax = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
                            edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
                            eax = eax | edx;
                            edx = *(A8 + 0xc) < 0 ? ~( *(A8 + 0xc)) : *(A8 + 0xc);
                            eax = eax | edx;
                            edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
                            eax = eax | edx;
                            edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
                            eax = eax | edx;
                            edx = *(Ac + 0xc) < 0 ? ~( *(Ac + 0xc)) : *(Ac + 0xc);
                            eax = eax | edx;
                            edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
                            eax = eax | edx;
                            edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
                            eax = eax | edx;
                            edx = *(esi + 0xc) < 0 ? ~( *(esi + 0xc)) : *(esi + 0xc);
                            edi = L00459CEC(eax | edx) - 0xd;
                            if(edi > 0) {
                                ecx = edi;
                                *(ebp + -248) = *(A8 + 4) >> cl;
                                ecx = edi;
                                *(ebp + -244) = *(A8 + 8) >> cl;
                                ecx = edi;
                                *(ebp + -240) = *(A8 + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -260) = *(Ac + 4) >> cl;
                                ecx = edi;
                                *(ebp + -256) = *(Ac + 8) >> cl;
                                ecx = edi;
                                *(ebp + -252) = *(Ac + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -272) = *(esi + 4) >> cl;
                                ecx = edi;
                                *(ebp + -268) = *(esi + 8) >> cl;
                                ecx = edi;
                                *(ebp + -264) = *(esi + 0xc) >> cl;
                            } else {
                                *(ebp + -248) = *(A8 + 4);
                                *(ebp + -244) = *(A8 + 8);
                                *(ebp + -240) = *(A8 + 0xc);
                                eax = Ac;
                                *(ebp + -260) = *(eax + 4);
                                *(ebp + -256) = *(eax + 8);
                                *(ebp + -252) = *(eax + 0xc);
                                *(ebp + -272) = *(esi + 4);
                                *(ebp + -268) = *(esi + 8);
                                *(ebp + -264) = *(esi + 0xc);
                                edi = 0;
                            }
                            eax = *(ebp + -248) - *(ebp + -272);
                            asm("imul dword [ebp+0xffffff00]");
                            edx = *(ebp + -260) - *(ebp + -248);
                            eax = eax + *(ebp + -268) * *(ebp + -268);
                            edx = *(ebp + -272) - *(ebp + -260);
                            *(ebp - 0x68) = eax + *(ebp + -244) * *(ebp + -244);
                            eax = *(ebp + -248) - *(ebp + -260);
                            asm("imul dword [ebp+0xfffffef4]");
                            edx = *(ebp + -272) - *(ebp + -248);
                            eax = eax + *(ebp + -256) * *(ebp + -256);
                            edx = *(ebp + -260) - *(ebp + -272);
                            eax = eax + *(ebp + -244) * *(ebp + -244);
                            *(ebp - 0x6c) = eax;
                            if(*(ebp - 0x68) != 0 && *(ebp - 0x6c) != 0) {
                                eax = *(ebp + -248);
                                asm("imul dword [ebp+0xffffff00]");
                                edx = *(ebp + -260);
                                *(ebp - 0x70) = eax - *(ebp + -244) * *(ebp + -244);
                                eax = *(ebp + -248);
                                asm("imul dword [ebp+0xfffffef4]");
                                edx = *(ebp + -272);
                                *(ebp - 0x74) = eax - *(ebp + -244) * *(ebp + -244);
                                eax = *(ebp - 0x74) < 0 ? ~( *(ebp - 0x74)) : *(ebp - 0x74);
                                eax = L00459CEC(eax);
                                esi = 0x1e - eax;
                                if(esi < 0) {
                                    esi = 0;
                                }
                                if(esi > 0xf) {
                                    esi = 0xf;
                                }
                                if(esi >= 0xf) {
                                    goto L00469ac6;
                                }
                                ecx = 0xf - esi;
                                *(ebp - 0x6c) = *(ebp - 0x6c) >> cl;
                                if(*(ebp - 0x6c) != 0 && *(ebp - 0x6c) != -1) {
L00469ac6:
                                    ecx = esi;
                                    eax = *(ebp - 0x74) << cl;
                                    asm("cdq");
                                    *(ebp - 0x6c) = *(ebp - 0x6c) / *(ebp - 0x6c);
                                    edx = *(ebp - 0x6c) % *(ebp - 0x6c);
                                    *(ebp - 0x78) = eax;
                                    eax = *(ebp - 0x70) < 0 ? ~( *(ebp - 0x70)) : *(ebp - 0x70);
                                    eax = L00459CEC(eax);
                                    esi = 0x1e - eax;
                                    if(esi < 0) {
                                        esi = 0;
                                    }
                                    if(esi > 0xf) {
                                        esi = 0xf;
                                    }
                                    if(esi >= 0xf) {
                                        goto L00469b25;
                                    }
                                    ecx = 0xf - esi;
                                    *(ebp - 0x68) = *(ebp - 0x68) >> cl;
                                    if(*(ebp - 0x68) != 0 && *(ebp - 0x68) != -1) {
L00469b25:
                                        ecx = esi;
                                        eax = *(ebp - 0x70) << cl;
                                        asm("cdq");
                                        *(ebp - 0x68) = *(ebp - 0x68) / *(ebp - 0x68);
                                        edx = *(ebp - 0x68) % *(ebp - 0x68);
                                        if(*(ebp - 0x78) < 0 || eax < 0 || *(ebp - 0x78) + eax > 32768) {
                                            goto L00469bda;
                                        }
                                        if(edi < 0xf) {
                                            ecx = 0xf - edi;
                                            edx = *(ebp + -252) - *(ebp + -240);
                                            edx = *(ebp - 0x78) * *(ebp - 0x78);
                                            esi = *(ebp + -264) - *(ebp + -240);
                                            eax = (edx + eax * eax >> cl) + *(A8 + 0xc);
                                        } else {
                                            ecx = edi - 0xf;
                                            edx = *(ebp + -252) - *(ebp + -240);
                                            edx = *(ebp - 0x78) * *(ebp - 0x78);
                                            esi = *(ebp + -264) - *(ebp + -240);
                                            eax = (edx + eax * eax << cl) + *(A8 + 0xc);
                                        }
                                        if(eax < M006c734c) {
                                            goto L00469bc9;
                                        }
                                        if(M006c7350 != 0) {
L00469bc9:
                                            M006c734c = eax;
                                            eax = 0;
                                            M006c7350 = 0;
                                            goto L0046a4ec;
L00469bda:
                                            if(*(ebp - 0x78) < 0) {
                                                edx = ~( *(ebp - 0x78));
                                                if(eax < *(ebp - 0x78)) {
                                                    edx = ~eax;
                                                } else {
                                                    if(edx < *(ebp - 0x78) + eax + -32768) {
                                                        edx = *(ebp - 0x78) + eax + -32768;
                                                    }
                                                }
                                            } else {
                                                if(eax >= 0) {
                                                    goto L00469c30;
                                                }
                                                edx = ~eax;
                                                if(edx < *(ebp - 0x78) + eax + -32768) {
                                                    edx = *(ebp - 0x78) + eax + -32768;
                                                    goto L00469c3b;
L00469c30:
                                                    edx = *(ebp - 0x78) + eax + -32768;
                                                }
                                            }
L00469c3b:
                                            if(edx < M006c7350) {
                                                if(edi < 0xf) {
                                                    esi = *(ebp + -252) - *(ebp + -240);
                                                    esi = *(ebp - 0x78) * *(ebp - 0x78);
                                                    ecx = *(ebp + -264) - *(ebp + -240);
                                                    esi = esi + eax * eax;
                                                    eax = (esi >> 0xf - edi) + *(A8 + 0xc);
                                                } else {
                                                    esi = *(ebp + -252) - *(ebp + -240);
                                                    esi = *(ebp - 0x78) * *(ebp - 0x78);
                                                    ecx = *(ebp + -264) - *(ebp + -240);
                                                    esi = esi + eax * eax;
                                                    eax = (esi << edi - 0xf) + *(A8 + 0xc);
                                                }
                                                if(eax > 0) {
                                                    M006c734c = eax;
                                                    M006c7350 = edx;
                                                    goto L0046a4ec;
L00469cc0:
                                                    if(A20 >= 2) {
                                                        goto L00469eea;
                                                    }
                                                    L004627DC(ebp + -188, A8 + 4, Ac + 4, esi + 4);
                                                    L00462760(ebp + -200, A8 + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -200);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -188);
                                                    edx = *(ebp + -200) * *(ebp + -200);
                                                    ecx = *(ebp + -184);
                                                    edx = edx + *(ebp + -196) * *(ebp + -196);
                                                    ecx = *(ebp + -180);
                                                    if(eax <= edx + *(ebp + -192) * *(ebp + -192)) {
                                                        goto L00469eea;
                                                    }
                                                    L00462760(ebp + -200, Ac + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -200);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -188);
                                                    edx = *(ebp + -200) * *(ebp + -200);
                                                    ecx = *(ebp + -184);
                                                    edx = edx + *(ebp + -196) * *(ebp + -196);
                                                    ecx = *(ebp + -180);
                                                    if(eax <= edx + *(ebp + -192) * *(ebp + -192)) {
                                                        goto L00469eea;
                                                    }
                                                    L00462760(ebp + -200, esi + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -200);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -188);
                                                    edx = *(ebp + -200) * *(ebp + -200);
                                                    ecx = *(ebp + -184);
                                                    edx = edx + *(ebp + -196) * *(ebp + -196);
                                                    ecx = *(ebp + -180);
                                                    if(eax <= edx + *(ebp + -192) * *(ebp + -192)) {
                                                        goto L00469eea;
L00469e1c:
                                                        if(A24 >= 0x1f4) {
                                                            *(ebp - 0x7c) = L004765BC( *(A8 + 0xc));
                                                            *(ebp - 0x80) = L004765BC( *(Ac + 0xc));
                                                            *(ebp + -132) = L004765BC( *(esi + 0xc));
                                                            if(*(A8 + 4) <= *(ebp - 0x7c) || *(Ac + 4) <= *(ebp - 0x80)) {
                                                                goto L00469e78;
                                                            }
                                                            eax = *(esi + 4);
                                                            if(eax <= *(ebp + -132)) {
L00469e78:
                                                                if(~( *(ebp - 0x7c)) <= *(A8 + 4)) {
                                                                    goto L00469ea0;
                                                                }
                                                                eax = ~( *(ebp - 0x80));
                                                                if(eax <= *(Ac + 4)) {
                                                                    goto L00469ea0;
                                                                }
                                                                eax = ~( *(ebp + -132));
                                                                if(eax <= *(esi + 4)) {
L00469ea0:
                                                                    if(*(A8 + 8) <= *(ebp - 0x7c) || *(Ac + 8) <= *(ebp - 0x80)) {
                                                                        goto L00469ec2;
                                                                    }
                                                                    eax = *(esi + 8);
                                                                    if(eax <= *(ebp + -132)) {
L00469ec2:
                                                                        if(~( *(ebp - 0x7c)) <= *(A8 + 8)) {
                                                                            goto L00469eea;
                                                                        }
                                                                        eax = ~( *(ebp - 0x80));
                                                                        if(eax <= *(Ac + 8)) {
                                                                            goto L00469eea;
                                                                        }
                                                                        eax = ~( *(ebp + -132));
                                                                        if(eax <= *(esi + 8)) {
L00469eea:
                                                                            if(A28 != 0) {
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp + -176) = ebp - 0x40;
                                                                                *(ebp + -172) = esi + 0x34;
                                                                                *(ebp + -168) = ebp - 0x38;
                                                                                *(ebp + -164) = Ac + 0x34;
                                                                                *(ebp + -160) = ebp - 0x30;
                                                                                *(ebp + -156) = A8 + 0x34;
                                                                                *(ebp + -152) = 6950788;
                                                                                *(ebp + -148) = A28;
                                                                                do {
                                                                                    if(*( *(ebp + -148)) > 0) {
                                                                                        *(ebp + -136) = *( *(ebp + -148));
                                                                                        *(ebp + -140) = ( *( *(ebp + -136)) << 2) + ( *( *(ebp + -136)) << 2) * 2 + 0x504608;
                                                                                        edi = *( *(ebp + -140) + 8) + A20 - 1;
                                                                                        eax = *(ebp + -152) + edi * 8;
                                                                                        do {
                                                                                            *eax = *( *(ebp + -140));
                                                                                            *(eax + 4) = *( *(ebp + -140) + 4);
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp + -156));
                                                                                        *( *(ebp + -160)) = eax;
                                                                                        eax = *( *(ebp + -164));
                                                                                        *( *(ebp + -168)) = eax;
                                                                                        eax = *( *(ebp + -172));
                                                                                        *( *(ebp + -176)) = eax;
                                                                                        eax = *( *(ebp + -136) + 4);
                                                                                        *( *(ebp + -156)) = eax;
                                                                                        eax = *( *(ebp + -136) + 8);
                                                                                        *( *(ebp + -164)) = eax;
                                                                                        eax = *( *(ebp + -136) + 0xc);
                                                                                        *( *(ebp + -172)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp + -176) = *(ebp + -176) + 4;
                                                                                    *(ebp + -172) = *(ebp + -172) + 4;
                                                                                    *(ebp + -168) = *(ebp + -168) + 4;
                                                                                    *(ebp + -164) = *(ebp + -164) + 4;
                                                                                    *(ebp + -160) = *(ebp + -160) + 4;
                                                                                    *(ebp + -156) = *(ebp + -156) + 4;
                                                                                    *(ebp + -152) = *(ebp + -152) + 0x100;
                                                                                    *(ebp + -148) = *(ebp + -148) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            }
                                                                            if(A20 < 5) {
                                                                                *L006c7338(A18, Ac, esi, A8, A20);
                                                                                *L006c7338(A1c, esi, A8, Ac, A20);
                                                                                *L006c7338(A14, A8, Ac, esi, A20);
                                                                            } else {
                                                                                *L006c733c(A18, Ac, esi, A8, A20);
                                                                                *L006c733c(A1c, esi, A8, Ac, A20);
                                                                                *L006c733c(A14, A8, Ac, esi, A20);
                                                                            }
                                                                            *(ebp - 8) = L00462488();
                                                                            *( *(ebp - 8)) = *(A18 + 8);
                                                                            *(ebp - 0xc) = L00462488();
                                                                            *( *(ebp - 0xc)) = *(A1c + 8);
                                                                            *(ebp - 0x10) = L00462488();
                                                                            *( *(ebp - 0x10)) = *(A14 + 8);
                                                                            A20 = A20 + 1;
                                                                            A24 = A24 >> 1;
                                                                            if(A28 != 0) {
                                                                                (save) *(A28 + 8);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L00469220();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0xc);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L00469220();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0x10);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L00469220();
                                                                                esp = esp + 0x24;
                                                                                L00469220( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, *(A28 + 0x14));
                                                                                A20 = A20 - 1;
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp + -148) = esi + 0x34;
                                                                                *(ebp + -152) = ebp - 0x40;
                                                                                *(ebp + -156) = Ac + 0x34;
                                                                                *(ebp + -160) = ebp - 0x38;
                                                                                *(ebp + -164) = A8 + 0x34;
                                                                                *(ebp + -168) = ebp - 0x30;
                                                                                *(ebp + -172) = 6950788;
                                                                                *(ebp + -176) = A28;
                                                                                do {
                                                                                    if(*( *(ebp + -176)) > 0) {
                                                                                        *(ebp + -144) = *( *(ebp + -176));
                                                                                        edi = *(( *( *(ebp + -144)) + *( *(ebp + -144)) * 2) * 4 + 0x504610) + A20 - 1;
                                                                                        eax = *(ebp + -172) + edi * 8;
                                                                                        do {
                                                                                            *eax = 0;
                                                                                            *(eax + 4) = 0;
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp + -168));
                                                                                        *( *(ebp + -164)) = eax;
                                                                                        eax = *( *(ebp + -160));
                                                                                        *( *(ebp + -156)) = eax;
                                                                                        eax = *( *(ebp + -152));
                                                                                        *( *(ebp + -148)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp + -148) = *(ebp + -148) + 4;
                                                                                    *(ebp + -152) = *(ebp + -152) + 4;
                                                                                    *(ebp + -156) = *(ebp + -156) + 4;
                                                                                    *(ebp + -160) = *(ebp + -160) + 4;
                                                                                    *(ebp + -164) = *(ebp + -164) + 4;
                                                                                    *(ebp + -168) = *(ebp + -168) + 4;
                                                                                    *(ebp + -172) = *(ebp + -172) + 0x100;
                                                                                    *(ebp + -176) = *(ebp + -176) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            } else {
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L00469220();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L00469220();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L00469220();
                                                                                esp = esp + 0x24;
                                                                                L00469220( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, 0);
                                                                            }
                                                                            L004624CC( *(ebp - 8));
                                                                            L004624CC( *(ebp - 0xc));
                                                                            eax = L004624CC( *(ebp - 0x10));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0046a4ec:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0046A4F3 - 0x0046A4F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046A4F3()
{



}

/*    Procedure: 0x0046A4F4 - 0x0046B7D5
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462EF8()
 *        L0046A4F4()
 */

L0046A4F4(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -276;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = A10;
    if(A20 < 0xa) {
        *(ebp - 0x48) = A24;
    } else {
        eax = *(A8 + 0x40);
        if(eax < *(Ac + 0x40)) {
            *(ebp - 0x24) = *(A8 + 0x40);
            edi = *(Ac + 0x40);
        } else {
            *(ebp - 0x24) = *(Ac + 0x40);
            edi = *(A8 + 0x40);
        }
        if(*(esi + 0x40) < *(ebp - 0x24)) {
            *(ebp - 0x24) = *(esi + 0x40);
        } else {
            if(edi < *(esi + 0x40)) {
                edi = *(esi + 0x40);
            }
        }
        (save)edi - *(ebp - 0x24) >> 3;
        edi = L004765BC( *(A8 + 0x28));
        edi = edi + L004765BC( *(A8 + 0x2c));
        *(ebp - 0x48) = L004537B0(edi + L004765BC( *(A8 + 0x30))) + A24;
    }
    *(ebp - 0x1c) = *(A8 + 0xc) + *(ebp - 0x48);
    if(*(ebp - 0x1c) < 0x40) {
        ax = *(A8 + 0x24);
        eax = ax | *(Ac + 0x24) | *(esi + 0x24);
        if(*(eax * 4 + 0x5044c8) == 0) {
            ax = *(A8 + 0x26);
            eax = ax | *(Ac + 0x26) | *(esi + 0x26);
            if(*(eax * 4 + 0x5044c8) == 0) {
                eax = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
                edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
                eax = eax | edx;
                edx = *(A8 + 0xc) < 0 ? ~( *(A8 + 0xc)) : *(A8 + 0xc);
                eax = eax | edx;
                edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
                eax = eax | edx;
                edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
                eax = eax | edx;
                edx = *(Ac + 0xc) < 0 ? ~( *(Ac + 0xc)) : *(Ac + 0xc);
                eax = eax | edx;
                edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
                eax = eax | edx;
                edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
                eax = eax | edx;
                edx = *(esi + 0xc) < 0 ? ~( *(esi + 0xc)) : *(esi + 0xc);
                edi = L00459CEC(eax | edx) - 0xd;
                if(edi > 0) {
                    ecx = edi;
                    *(ebp + -216) = *(A8 + 4) >> cl;
                    ecx = edi;
                    *(ebp + -212) = *(A8 + 8) >> cl;
                    ecx = edi;
                    *(ebp + -208) = *(A8 + 0xc) >> cl;
                    ecx = edi;
                    *(ebp + -228) = *(Ac + 4) >> cl;
                    ecx = edi;
                    *(ebp + -224) = *(Ac + 8) >> cl;
                    ecx = edi;
                    *(ebp + -220) = *(Ac + 0xc) >> cl;
                    ecx = edi;
                    *(ebp + -240) = *(esi + 4) >> cl;
                    ecx = edi;
                    *(ebp + -236) = *(esi + 8) >> cl;
                    ecx = edi;
                    *(ebp + -232) = *(esi + 0xc) >> cl;
                } else {
                    *(ebp + -216) = *(A8 + 4);
                    *(ebp + -212) = *(A8 + 8);
                    *(ebp + -208) = *(A8 + 0xc);
                    eax = Ac;
                    *(ebp + -228) = *(eax + 4);
                    *(ebp + -224) = *(eax + 8);
                    *(ebp + -220) = *(eax + 0xc);
                    *(ebp + -240) = *(esi + 4);
                    *(ebp + -236) = *(esi + 8);
                    *(ebp + -232) = *(esi + 0xc);
                    edi = 0;
                }
                eax = *(ebp + -216) - *(ebp + -240);
                asm("imul dword [ebp+0xffffff20]");
                edx = *(ebp + -228) - *(ebp + -216);
                eax = eax + *(ebp + -236) * *(ebp + -236);
                edx = *(ebp + -240) - *(ebp + -228);
                *(ebp - 0x4c) = eax + *(ebp + -212) * *(ebp + -212);
                eax = *(ebp + -216) - *(ebp + -228);
                asm("imul dword [ebp+0xffffff14]");
                edx = *(ebp + -240) - *(ebp + -216);
                eax = eax + *(ebp + -224) * *(ebp + -224);
                edx = *(ebp + -228) - *(ebp + -240);
                eax = eax + *(ebp + -212) * *(ebp + -212);
                *(ebp - 0x50) = eax;
                if(*(ebp - 0x4c) != 0 && *(ebp - 0x50) != 0) {
                    eax = *(ebp + -216);
                    asm("imul dword [ebp+0xffffff20]");
                    edx = *(ebp + -228);
                    *(ebp - 0x54) = eax - *(ebp + -212) * *(ebp + -212);
                    eax = *(ebp + -216);
                    asm("imul dword [ebp+0xffffff14]");
                    edx = *(ebp + -240);
                    *(ebp - 0x58) = eax - *(ebp + -212) * *(ebp + -212);
                    eax = *(ebp - 0x58) < 0 ? ~( *(ebp - 0x58)) : *(ebp - 0x58);
                    eax = L00459CEC(eax);
                    esi = 0x1e - eax;
                    if(esi < 0) {
                        esi = 0;
                    }
                    if(esi > 0xf) {
                        esi = 0xf;
                    }
                    if(esi >= 0xf) {
                        goto L0046a8a2;
                    }
                    ecx = 0xf - esi;
                    *(ebp - 0x50) = *(ebp - 0x50) >> cl;
                    if(*(ebp - 0x50) != 0 && *(ebp - 0x50) != -1) {
L0046a8a2:
                        ecx = esi;
                        eax = *(ebp - 0x58) << cl;
                        asm("cdq");
                        *(ebp - 0x50) = *(ebp - 0x50) / *(ebp - 0x50);
                        edx = *(ebp - 0x50) % *(ebp - 0x50);
                        *(ebp - 0x5c) = eax;
                        eax = *(ebp - 0x54) < 0 ? ~( *(ebp - 0x54)) : *(ebp - 0x54);
                        eax = L00459CEC(eax);
                        esi = 0x1e - eax;
                        if(esi < 0) {
                            esi = 0;
                        }
                        if(esi > 0xf) {
                            esi = 0xf;
                        }
                        if(esi >= 0xf) {
                            goto L0046a901;
                        }
                        ecx = 0xf - esi;
                        *(ebp - 0x4c) = *(ebp - 0x4c) >> cl;
                        if(*(ebp - 0x4c) != 0 && *(ebp - 0x4c) != -1) {
L0046a901:
                            ecx = esi;
                            eax = *(ebp - 0x54) << cl;
                            asm("cdq");
                            *(ebp - 0x4c) = *(ebp - 0x4c) / *(ebp - 0x4c);
                            edx = *(ebp - 0x4c) % *(ebp - 0x4c);
                            *(ebp - 0x60) = eax;
                            if(*(ebp - 0x5c) >= 0 && *(ebp - 0x60) >= 0) {
                                eax = *(ebp - 0x5c) + *(ebp - 0x60);
                                if(eax <= 32768) {
                                    if(edi < 0xf) {
                                        ecx = 0xf - edi;
                                        eax = *(ebp + -220) - *(ebp + -208);
                                        asm("imul dword [ebp-0x5c]");
                                        edx = *(ebp + -232) - *(ebp + -208);
                                        *(ebp - 0x64) = (eax + *(ebp - 0x60) * *(ebp - 0x60) >> cl) + *(A8 + 0xc);
                                    } else {
                                        ecx = edi - 0xf;
                                        eax = *(ebp + -220) - *(ebp + -208);
                                        asm("imul dword [ebp-0x5c]");
                                        edx = *(ebp + -232) - *(ebp + -208);
                                        *(ebp - 0x64) = (eax + *(ebp - 0x60) * *(ebp - 0x60) << cl) + *(A8 + 0xc);
                                    }
                                    eax = *(ebp - 0x64);
                                    if(eax < M006c734c) {
                                        goto L0046a9af;
                                    }
                                    if(M006c7350 != 0) {
L0046a9af:
                                        M006c734c = *(ebp - 0x64);
                                        eax = 0;
                                        M006c7350 = 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
        eax = *(A8 + 0xc) - *(ebp - 0x48);
        if(eax <= M006c7354) {
            eax = L004765BC( *(A8 + 4)) - *(ebp - 0x48);
            if(eax <= 0) {
                eax = L004765BC( *(A8 + 8)) - *(ebp - 0x48);
                if(eax <= 0) {
                    if(*(A8 + 0xc) < 0x40) {
                        goto L0046b0f0;
                    }
                    eax = Ac;
                    if(*(eax + 0xc) < 0x40 || *(esi + 0xc) < 0x40) {
                        goto L0046b0f0;
                    }
                    eax = *esi;
                    eax = eax - *A8;
                    edx = *(Ac + 2) - *(A8 + 2);
                    asm("imul edx");
                    edx = *(esi + 2);
                    edx = edx - *(A8 + 2);
                    *(ebp - 0x68) = eax - ( *Ac - *A8) * ( *Ac - *A8);
                    if(A20 <= 9) {
                        if(A20 <= *(A8 + 0x44) || A20 <= *(Ac + 0x44)) {
                            goto L0046aa75;
                        }
                        if(A20 <= *(esi + 0x44)) {
L0046aa75:
                            if(*(ebp - 0x68) >= 0x96 || *(ebp - 0x68) < 0 || A20 <= 8) {
                                goto L0046af94;
                            }
                        }
                    }
                    ax = *(A8 + 0x24);
                    eax = ax | *(Ac + 0x24) | *(esi + 0x24);
                    if(*(eax * 4 + 0x5044c8) == 0) {
                        ax = *(A8 + 0x26);
                        eax = ax | *(Ac + 0x26) | *(esi + 0x26);
                        if(*(eax * 4 + 0x5044c8) == 0) {
                            eax = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
                            edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
                            eax = eax | edx;
                            edx = *(A8 + 0xc) < 0 ? ~( *(A8 + 0xc)) : *(A8 + 0xc);
                            eax = eax | edx;
                            edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
                            eax = eax | edx;
                            edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
                            eax = eax | edx;
                            edx = *(Ac + 0xc) < 0 ? ~( *(Ac + 0xc)) : *(Ac + 0xc);
                            eax = eax | edx;
                            edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
                            eax = eax | edx;
                            edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
                            eax = eax | edx;
                            edx = *(esi + 0xc) < 0 ? ~( *(esi + 0xc)) : *(esi + 0xc);
                            edi = L00459CEC(eax | edx) - 0xd;
                            if(edi > 0) {
                                ecx = edi;
                                *(ebp + -252) = *(A8 + 4) >> cl;
                                ecx = edi;
                                *(ebp + -248) = *(A8 + 8) >> cl;
                                ecx = edi;
                                *(ebp + -244) = *(A8 + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -264) = *(Ac + 4) >> cl;
                                ecx = edi;
                                *(ebp + -260) = *(Ac + 8) >> cl;
                                ecx = edi;
                                *(ebp + -256) = *(Ac + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -276) = *(esi + 4) >> cl;
                                ecx = edi;
                                *(ebp + -272) = *(esi + 8) >> cl;
                                ecx = edi;
                                *(ebp + -268) = *(esi + 0xc) >> cl;
                            } else {
                                *(ebp + -252) = *(A8 + 4);
                                *(ebp + -248) = *(A8 + 8);
                                *(ebp + -244) = *(A8 + 0xc);
                                eax = Ac;
                                *(ebp + -264) = *(eax + 4);
                                *(ebp + -260) = *(eax + 8);
                                *(ebp + -256) = *(eax + 0xc);
                                *(ebp + -276) = *(esi + 4);
                                *(ebp + -272) = *(esi + 8);
                                *(ebp + -268) = *(esi + 0xc);
                                edi = 0;
                            }
                            eax = *(ebp + -252) - *(ebp + -276);
                            asm("imul dword [ebp+0xfffffefc]");
                            edx = *(ebp + -264) - *(ebp + -252);
                            eax = eax + *(ebp + -272) * *(ebp + -272);
                            edx = *(ebp + -276) - *(ebp + -264);
                            *(ebp - 0x6c) = eax + *(ebp + -248) * *(ebp + -248);
                            eax = *(ebp + -252) - *(ebp + -264);
                            asm("imul dword [ebp+0xfffffef0]");
                            edx = *(ebp + -276) - *(ebp + -252);
                            eax = eax + *(ebp + -260) * *(ebp + -260);
                            edx = *(ebp + -264) - *(ebp + -276);
                            eax = eax + *(ebp + -248) * *(ebp + -248);
                            *(ebp - 0x70) = eax;
                            if(*(ebp - 0x6c) != 0 && *(ebp - 0x70) != 0) {
                                eax = *(ebp + -252);
                                asm("imul dword [ebp+0xfffffefc]");
                                edx = *(ebp + -264);
                                *(ebp - 0x74) = eax - *(ebp + -248) * *(ebp + -248);
                                eax = *(ebp + -252);
                                asm("imul dword [ebp+0xfffffef0]");
                                edx = *(ebp + -276);
                                *(ebp - 0x78) = eax - *(ebp + -248) * *(ebp + -248);
                                eax = *(ebp - 0x78) < 0 ? ~( *(ebp - 0x78)) : *(ebp - 0x78);
                                eax = L00459CEC(eax);
                                esi = 0x1e - eax;
                                if(esi < 0) {
                                    esi = 0;
                                }
                                if(esi > 0xf) {
                                    esi = 0xf;
                                }
                                if(esi >= 0xf) {
                                    goto L0046ad9a;
                                }
                                ecx = 0xf - esi;
                                *(ebp - 0x70) = *(ebp - 0x70) >> cl;
                                if(*(ebp - 0x70) != 0 && *(ebp - 0x70) != -1) {
L0046ad9a:
                                    ecx = esi;
                                    eax = *(ebp - 0x78) << cl;
                                    asm("cdq");
                                    *(ebp - 0x70) = *(ebp - 0x70) / *(ebp - 0x70);
                                    edx = *(ebp - 0x70) % *(ebp - 0x70);
                                    *(ebp - 0x7c) = eax;
                                    eax = *(ebp - 0x74) < 0 ? ~( *(ebp - 0x74)) : *(ebp - 0x74);
                                    eax = L00459CEC(eax);
                                    esi = 0x1e - eax;
                                    if(esi < 0) {
                                        esi = 0;
                                    }
                                    if(esi > 0xf) {
                                        esi = 0xf;
                                    }
                                    if(esi >= 0xf) {
                                        goto L0046adf9;
                                    }
                                    ecx = 0xf - esi;
                                    *(ebp - 0x6c) = *(ebp - 0x6c) >> cl;
                                    if(*(ebp - 0x6c) != 0 && *(ebp - 0x6c) != -1) {
L0046adf9:
                                        ecx = esi;
                                        eax = *(ebp - 0x74) << cl;
                                        asm("cdq");
                                        *(ebp - 0x6c) = *(ebp - 0x6c) / *(ebp - 0x6c);
                                        edx = *(ebp - 0x6c) % *(ebp - 0x6c);
                                        if(*(ebp - 0x7c) < 0 || eax < 0 || *(ebp - 0x7c) + eax > 32768) {
                                            goto L0046aeae;
                                        }
                                        if(edi < 0xf) {
                                            ecx = 0xf - edi;
                                            edx = *(ebp + -256) - *(ebp + -244);
                                            edx = *(ebp - 0x7c) * *(ebp - 0x7c);
                                            esi = *(ebp + -268) - *(ebp + -244);
                                            eax = (edx + eax * eax >> cl) + *(A8 + 0xc);
                                        } else {
                                            ecx = edi - 0xf;
                                            edx = *(ebp + -256) - *(ebp + -244);
                                            edx = *(ebp - 0x7c) * *(ebp - 0x7c);
                                            esi = *(ebp + -268) - *(ebp + -244);
                                            eax = (edx + eax * eax << cl) + *(A8 + 0xc);
                                        }
                                        if(eax < M006c734c) {
                                            goto L0046ae9d;
                                        }
                                        if(M006c7350 != 0) {
L0046ae9d:
                                            M006c734c = eax;
                                            eax = 0;
                                            M006c7350 = 0;
                                            goto L0046b7cf;
L0046aeae:
                                            if(*(ebp - 0x7c) < 0) {
                                                edx = ~( *(ebp - 0x7c));
                                                if(eax < *(ebp - 0x7c)) {
                                                    edx = ~eax;
                                                } else {
                                                    if(edx < *(ebp - 0x7c) + eax + -32768) {
                                                        edx = *(ebp - 0x7c) + eax + -32768;
                                                    }
                                                }
                                            } else {
                                                if(eax >= 0) {
                                                    goto L0046af04;
                                                }
                                                edx = ~eax;
                                                if(edx < *(ebp - 0x7c) + eax + -32768) {
                                                    edx = *(ebp - 0x7c) + eax + -32768;
                                                    goto L0046af0f;
L0046af04:
                                                    edx = *(ebp - 0x7c) + eax + -32768;
                                                }
                                            }
L0046af0f:
                                            if(edx < M006c7350) {
                                                if(edi < 0xf) {
                                                    esi = *(ebp + -256) - *(ebp + -244);
                                                    esi = *(ebp - 0x7c) * *(ebp - 0x7c);
                                                    ecx = *(ebp + -268) - *(ebp + -244);
                                                    esi = esi + eax * eax;
                                                    eax = (esi >> 0xf - edi) + *(A8 + 0xc);
                                                } else {
                                                    esi = *(ebp + -256) - *(ebp + -244);
                                                    esi = *(ebp - 0x7c) * *(ebp - 0x7c);
                                                    ecx = *(ebp + -268) - *(ebp + -244);
                                                    esi = esi + eax * eax;
                                                    eax = (esi << edi - 0xf) + *(A8 + 0xc);
                                                }
                                                if(eax > 0) {
                                                    M006c734c = eax;
                                                    M006c7350 = edx;
                                                    goto L0046b7cf;
L0046af94:
                                                    if(A20 >= 2) {
                                                        goto L0046b1cd;
                                                    }
                                                    L004627DC(ebp + -192, A8 + 4, Ac + 4, esi + 4);
                                                    L00462760(ebp + -204, A8 + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -204);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -192);
                                                    edx = *(ebp + -204) * *(ebp + -204);
                                                    ecx = *(ebp + -188);
                                                    edx = edx + *(ebp + -200) * *(ebp + -200);
                                                    ecx = *(ebp + -184);
                                                    if(eax <= edx + *(ebp + -196) * *(ebp + -196)) {
                                                        goto L0046b1cd;
                                                    }
                                                    L00462760(ebp + -204, Ac + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -204);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -192);
                                                    edx = *(ebp + -204) * *(ebp + -204);
                                                    ecx = *(ebp + -188);
                                                    edx = edx + *(ebp + -200) * *(ebp + -200);
                                                    ecx = *(ebp + -184);
                                                    if(eax <= edx + *(ebp + -196) * *(ebp + -196)) {
                                                        goto L0046b1cd;
                                                    }
                                                    L00462760(ebp + -204, esi + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -204);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -192);
                                                    edx = *(ebp + -204) * *(ebp + -204);
                                                    ecx = *(ebp + -188);
                                                    edx = edx + *(ebp + -200) * *(ebp + -200);
                                                    ecx = *(ebp + -184);
                                                    if(eax <= edx + *(ebp + -196) * *(ebp + -196)) {
                                                        goto L0046b1cd;
L0046b0f0:
                                                        if(A24 >= 0x1f4) {
                                                            *(ebp - 0x80) = L004765BC( *(A8 + 0xc));
                                                            *(ebp + -132) = L004765BC( *(Ac + 0xc));
                                                            *(ebp + -136) = L004765BC( *(esi + 0xc));
                                                            if(*(A8 + 4) <= *(ebp - 0x80) || *(Ac + 4) <= *(ebp + -132)) {
                                                                goto L0046b152;
                                                            }
                                                            eax = *(esi + 4);
                                                            if(eax <= *(ebp + -136)) {
L0046b152:
                                                                if(~( *(ebp - 0x80)) <= *(A8 + 4)) {
                                                                    goto L0046b17d;
                                                                }
                                                                eax = ~( *(ebp + -132));
                                                                if(eax <= *(Ac + 4)) {
                                                                    goto L0046b17d;
                                                                }
                                                                eax = ~( *(ebp + -136));
                                                                if(eax <= *(esi + 4)) {
L0046b17d:
                                                                    if(*(A8 + 8) <= *(ebp - 0x80) || *(Ac + 8) <= *(ebp + -132)) {
                                                                        goto L0046b1a2;
                                                                    }
                                                                    eax = *(esi + 8);
                                                                    if(eax <= *(ebp + -136)) {
L0046b1a2:
                                                                        if(~( *(ebp - 0x80)) <= *(A8 + 8)) {
                                                                            goto L0046b1cd;
                                                                        }
                                                                        eax = ~( *(ebp + -132));
                                                                        if(eax <= *(Ac + 8)) {
                                                                            goto L0046b1cd;
                                                                        }
                                                                        eax = ~( *(ebp + -136));
                                                                        if(eax <= *(esi + 8)) {
L0046b1cd:
                                                                            if(A28 != 0) {
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp + -180) = ebp - 0x40;
                                                                                *(ebp + -176) = esi + 0x34;
                                                                                *(ebp + -172) = ebp - 0x38;
                                                                                *(ebp + -168) = Ac + 0x34;
                                                                                *(ebp + -164) = ebp - 0x30;
                                                                                *(ebp + -160) = A8 + 0x34;
                                                                                *(ebp + -156) = 6950788;
                                                                                *(ebp + -152) = A28;
                                                                                do {
                                                                                    if(*( *(ebp + -152)) > 0) {
                                                                                        *(ebp + -140) = *( *(ebp + -152));
                                                                                        *(ebp + -144) = ( *( *(ebp + -140)) << 2) + ( *( *(ebp + -140)) << 2) * 2 + 0x504608;
                                                                                        edi = *( *(ebp + -144) + 8) + A20 - 1;
                                                                                        eax = *(ebp + -156) + edi * 8;
                                                                                        do {
                                                                                            *eax = *( *(ebp + -144));
                                                                                            *(eax + 4) = *( *(ebp + -144) + 4);
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp + -160));
                                                                                        *( *(ebp + -164)) = eax;
                                                                                        eax = *( *(ebp + -168));
                                                                                        *( *(ebp + -172)) = eax;
                                                                                        eax = *( *(ebp + -176));
                                                                                        *( *(ebp + -180)) = eax;
                                                                                        eax = *( *(ebp + -140) + 4);
                                                                                        *( *(ebp + -160)) = eax;
                                                                                        eax = *( *(ebp + -140) + 8);
                                                                                        *( *(ebp + -168)) = eax;
                                                                                        eax = *( *(ebp + -140) + 0xc);
                                                                                        *( *(ebp + -176)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp + -180) = *(ebp + -180) + 4;
                                                                                    *(ebp + -176) = *(ebp + -176) + 4;
                                                                                    *(ebp + -172) = *(ebp + -172) + 4;
                                                                                    *(ebp + -168) = *(ebp + -168) + 4;
                                                                                    *(ebp + -164) = *(ebp + -164) + 4;
                                                                                    *(ebp + -160) = *(ebp + -160) + 4;
                                                                                    *(ebp + -156) = *(ebp + -156) + 0x100;
                                                                                    *(ebp + -152) = *(ebp + -152) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            }
                                                                            if(A20 < 5) {
                                                                                *L006c7338(A18, Ac, esi, A8, A20);
                                                                                *L006c7338(A1c, esi, A8, Ac, A20);
                                                                                *L006c7338(A14, A8, Ac, esi, A20);
                                                                            } else {
                                                                                *L006c733c(A18, Ac, esi, A8, A20);
                                                                                *L006c733c(A1c, esi, A8, Ac, A20);
                                                                                *L006c733c(A14, A8, Ac, esi, A20);
                                                                            }
                                                                            *(ebp - 8) = L00462488();
                                                                            *( *(ebp - 8)) = *(A18 + 8);
                                                                            *(ebp - 0xc) = L00462488();
                                                                            *( *(ebp - 0xc)) = *(A1c + 8);
                                                                            *(ebp - 0x10) = L00462488();
                                                                            *( *(ebp - 0x10)) = *(A14 + 8);
                                                                            A20 = A20 + 1;
                                                                            A24 = A24 >> 1;
                                                                            if(A28 != 0) {
                                                                                (save) *(A28 + 8);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L0046A4F4();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0xc);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L0046A4F4();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0x10);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L0046A4F4();
                                                                                esp = esp + 0x24;
                                                                                L0046A4F4( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, *(A28 + 0x14));
                                                                                A20 = A20 - 1;
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp + -152) = esi + 0x34;
                                                                                *(ebp + -156) = ebp - 0x40;
                                                                                *(ebp + -160) = Ac + 0x34;
                                                                                *(ebp + -164) = ebp - 0x38;
                                                                                *(ebp + -168) = A8 + 0x34;
                                                                                *(ebp + -172) = ebp - 0x30;
                                                                                *(ebp + -176) = 6950788;
                                                                                *(ebp + -180) = A28;
                                                                                do {
                                                                                    if(*( *(ebp + -180)) > 0) {
                                                                                        *(ebp + -148) = *( *(ebp + -180));
                                                                                        edi = *(( *( *(ebp + -148)) + *( *(ebp + -148)) * 2) * 4 + 0x504610) + A20 - 1;
                                                                                        eax = *(ebp + -176) + edi * 8;
                                                                                        do {
                                                                                            *eax = 0;
                                                                                            *(eax + 4) = 0;
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp + -172));
                                                                                        *( *(ebp + -168)) = eax;
                                                                                        eax = *( *(ebp + -164));
                                                                                        *( *(ebp + -160)) = eax;
                                                                                        eax = *( *(ebp + -156));
                                                                                        *( *(ebp + -152)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp + -152) = *(ebp + -152) + 4;
                                                                                    *(ebp + -156) = *(ebp + -156) + 4;
                                                                                    *(ebp + -160) = *(ebp + -160) + 4;
                                                                                    *(ebp + -164) = *(ebp + -164) + 4;
                                                                                    *(ebp + -168) = *(ebp + -168) + 4;
                                                                                    *(ebp + -172) = *(ebp + -172) + 4;
                                                                                    *(ebp + -176) = *(ebp + -176) + 0x100;
                                                                                    *(ebp + -180) = *(ebp + -180) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            } else {
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L0046A4F4();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L0046A4F4();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L0046A4F4();
                                                                                esp = esp + 0x24;
                                                                                L0046A4F4( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, 0);
                                                                            }
                                                                            L004624CC( *(ebp - 8));
                                                                            L004624CC( *(ebp - 0xc));
                                                                            eax = L004624CC( *(ebp - 0x10));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0046b7cf:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0046B7D6 - 0x0046B7D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046B7D6()
{



}

/*    Procedure: 0x0046B7D8 - 0x0046C5FF
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462EF8()
 *        L0046B7D8()
 */

L0046B7D8(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -204;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = A10;
    if(A20 < 0xa) {
        edi = A24;
    } else {
        eax = *(A8 + 0x40);
        if(eax < *(Ac + 0x40)) {
            *(ebp - 0x24) = *(A8 + 0x40);
            edi = *(Ac + 0x40);
        } else {
            *(ebp - 0x24) = *(Ac + 0x40);
            edi = *(A8 + 0x40);
        }
        if(*(esi + 0x40) < *(ebp - 0x24)) {
            *(ebp - 0x24) = *(esi + 0x40);
        } else {
            if(edi < *(esi + 0x40)) {
                edi = *(esi + 0x40);
            }
        }
        (save)edi - *(ebp - 0x24) >> 3;
        edi = L004765BC( *(A8 + 0x28));
        edi = edi + L004765BC( *(A8 + 0x2c));
        edi = L004537B0(edi + L004765BC( *(A8 + 0x30))) + A24;
    }
    eax = *(A8 + 0xc) + edi;
    *(ebp - 0x1c) = eax;
    if(*(ebp - 0x1c) >= 0x40) {
        eax = *(A8 + 0xc) - edi;
        if(eax <= M006c7354) {
            eax = L004765BC( *(A8 + 4)) - edi;
            if(eax <= 0) {
                eax = L004765BC( *(A8 + 8)) - edi;
                if(eax <= 0) {
                    if(*(A8 + 0xc) < 0x40) {
                        goto L0046bfa7;
                    }
                    eax = Ac;
                    if(*(eax + 0xc) < 0x40 || *(esi + 0xc) < 0x40) {
                        goto L0046bfa7;
                    }
                    eax = *esi;
                    eax = eax - *A8;
                    edx = *(Ac + 2) - *(A8 + 2);
                    asm("imul edx");
                    edx = *(esi + 2);
                    edx = edx - *(A8 + 2);
                    *(ebp - 0x44) = eax - ( *Ac - *A8) * ( *Ac - *A8);
                    if(A20 <= 9) {
                        if(A20 <= *(A8 + 0x44) || A20 <= *(Ac + 0x44)) {
                            goto L0046b92c;
                        }
                        if(A20 <= *(esi + 0x44)) {
L0046b92c:
                            if(*(ebp - 0x44) >= 0x96 || *(ebp - 0x44) < 0 || A20 <= 8) {
                                goto L0046be4b;
                            }
                        }
                    }
                    ax = *(A8 + 0x24);
                    eax = ax | *(Ac + 0x24) | *(esi + 0x24);
                    if(*(eax * 4 + 0x5044c8) == 0) {
                        ax = *(A8 + 0x26);
                        eax = ax | *(Ac + 0x26) | *(esi + 0x26);
                        if(*(eax * 4 + 0x5044c8) == 0) {
                            eax = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
                            edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
                            eax = eax | edx;
                            edx = *(A8 + 0xc) < 0 ? ~( *(A8 + 0xc)) : *(A8 + 0xc);
                            eax = eax | edx;
                            edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
                            eax = eax | edx;
                            edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
                            eax = eax | edx;
                            edx = *(Ac + 0xc) < 0 ? ~( *(Ac + 0xc)) : *(Ac + 0xc);
                            eax = eax | edx;
                            edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
                            eax = eax | edx;
                            edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
                            eax = eax | edx;
                            edx = *(esi + 0xc) < 0 ? ~( *(esi + 0xc)) : *(esi + 0xc);
                            edi = L00459CEC(eax | edx) - 0xd;
                            if(edi > 0) {
                                ecx = edi;
                                *(ebp + -180) = *(A8 + 4) >> cl;
                                ecx = edi;
                                *(ebp + -176) = *(A8 + 8) >> cl;
                                ecx = edi;
                                *(ebp + -172) = *(A8 + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -192) = *(Ac + 4) >> cl;
                                ecx = edi;
                                *(ebp + -188) = *(Ac + 8) >> cl;
                                ecx = edi;
                                *(ebp + -184) = *(Ac + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -204) = *(esi + 4) >> cl;
                                ecx = edi;
                                *(ebp + -200) = *(esi + 8) >> cl;
                                ecx = edi;
                                *(ebp + -196) = *(esi + 0xc) >> cl;
                            } else {
                                *(ebp + -180) = *(A8 + 4);
                                *(ebp + -176) = *(A8 + 8);
                                *(ebp + -172) = *(A8 + 0xc);
                                eax = Ac;
                                *(ebp + -192) = *(eax + 4);
                                *(ebp + -188) = *(eax + 8);
                                *(ebp + -184) = *(eax + 0xc);
                                *(ebp + -204) = *(esi + 4);
                                *(ebp + -200) = *(esi + 8);
                                *(ebp + -196) = *(esi + 0xc);
                                edi = 0;
                            }
                            eax = *(ebp + -180) - *(ebp + -204);
                            asm("imul dword [ebp+0xffffff44]");
                            edx = *(ebp + -192) - *(ebp + -180);
                            eax = eax + *(ebp + -200) * *(ebp + -200);
                            edx = *(ebp + -204) - *(ebp + -192);
                            *(ebp - 0x48) = eax + *(ebp + -176) * *(ebp + -176);
                            eax = *(ebp + -180) - *(ebp + -192);
                            asm("imul dword [ebp+0xffffff38]");
                            edx = *(ebp + -204) - *(ebp + -180);
                            eax = eax + *(ebp + -188) * *(ebp + -188);
                            edx = *(ebp + -192) - *(ebp + -204);
                            eax = eax + *(ebp + -176) * *(ebp + -176);
                            *(ebp - 0x4c) = eax;
                            if(*(ebp - 0x48) != 0 && *(ebp - 0x4c) != 0) {
                                eax = *(ebp + -180);
                                asm("imul dword [ebp+0xffffff44]");
                                edx = *(ebp + -192);
                                *(ebp - 0x50) = eax - *(ebp + -176) * *(ebp + -176);
                                eax = *(ebp + -180);
                                asm("imul dword [ebp+0xffffff38]");
                                edx = *(ebp + -204);
                                *(ebp - 0x54) = eax - *(ebp + -176) * *(ebp + -176);
                                eax = *(ebp - 0x54) < 0 ? ~( *(ebp - 0x54)) : *(ebp - 0x54);
                                eax = L00459CEC(eax);
                                esi = 0x1e - eax;
                                if(esi < 0) {
                                    esi = 0;
                                }
                                if(esi > 0xf) {
                                    esi = 0xf;
                                }
                                if(esi >= 0xf) {
                                    goto L0046bc51;
                                }
                                ecx = 0xf - esi;
                                *(ebp - 0x4c) = *(ebp - 0x4c) >> cl;
                                if(*(ebp - 0x4c) != 0 && *(ebp - 0x4c) != -1) {
L0046bc51:
                                    ecx = esi;
                                    eax = *(ebp - 0x54) << cl;
                                    asm("cdq");
                                    *(ebp - 0x4c) = *(ebp - 0x4c) / *(ebp - 0x4c);
                                    edx = *(ebp - 0x4c) % *(ebp - 0x4c);
                                    *(ebp - 0x58) = eax;
                                    eax = *(ebp - 0x50) < 0 ? ~( *(ebp - 0x50)) : *(ebp - 0x50);
                                    eax = L00459CEC(eax);
                                    esi = 0x1e - eax;
                                    if(esi < 0) {
                                        esi = 0;
                                    }
                                    if(esi > 0xf) {
                                        esi = 0xf;
                                    }
                                    if(esi >= 0xf) {
                                        goto L0046bcb0;
                                    }
                                    ecx = 0xf - esi;
                                    *(ebp - 0x48) = *(ebp - 0x48) >> cl;
                                    if(*(ebp - 0x48) != 0 && *(ebp - 0x48) != -1) {
L0046bcb0:
                                        ecx = esi;
                                        eax = *(ebp - 0x50) << cl;
                                        asm("cdq");
                                        *(ebp - 0x48) = *(ebp - 0x48) / *(ebp - 0x48);
                                        edx = *(ebp - 0x48) % *(ebp - 0x48);
                                        if(*(ebp - 0x58) < 0 || eax < 0 || *(ebp - 0x58) + eax > 32768) {
                                            goto L0046bd65;
                                        }
                                        if(edi < 0xf) {
                                            ecx = 0xf - edi;
                                            edx = *(ebp + -184) - *(ebp + -172);
                                            edx = *(ebp - 0x58) * *(ebp - 0x58);
                                            esi = *(ebp + -196) - *(ebp + -172);
                                            eax = (edx + eax * eax >> cl) + *(A8 + 0xc);
                                        } else {
                                            ecx = edi - 0xf;
                                            edx = *(ebp + -184) - *(ebp + -172);
                                            edx = *(ebp - 0x58) * *(ebp - 0x58);
                                            esi = *(ebp + -196) - *(ebp + -172);
                                            eax = (edx + eax * eax << cl) + *(A8 + 0xc);
                                        }
                                        if(eax < M006c734c) {
                                            goto L0046bd54;
                                        }
                                        if(M006c7350 != 0) {
L0046bd54:
                                            M006c734c = eax;
                                            eax = 0;
                                            M006c7350 = 0;
                                            goto L0046c5f9;
L0046bd65:
                                            if(*(ebp - 0x58) < 0) {
                                                edx = ~( *(ebp - 0x58));
                                                if(eax < *(ebp - 0x58)) {
                                                    edx = ~eax;
                                                } else {
                                                    if(edx < *(ebp - 0x58) + eax + -32768) {
                                                        edx = *(ebp - 0x58) + eax + -32768;
                                                    }
                                                }
                                            } else {
                                                if(eax >= 0) {
                                                    goto L0046bdbb;
                                                }
                                                edx = ~eax;
                                                if(edx < *(ebp - 0x58) + eax + -32768) {
                                                    edx = *(ebp - 0x58) + eax + -32768;
                                                    goto L0046bdc6;
L0046bdbb:
                                                    edx = *(ebp - 0x58) + eax + -32768;
                                                }
                                            }
L0046bdc6:
                                            if(edx < M006c7350) {
                                                if(edi < 0xf) {
                                                    esi = *(ebp + -184) - *(ebp + -172);
                                                    esi = *(ebp - 0x58) * *(ebp - 0x58);
                                                    ecx = *(ebp + -196) - *(ebp + -172);
                                                    esi = esi + eax * eax;
                                                    eax = (esi >> 0xf - edi) + *(A8 + 0xc);
                                                } else {
                                                    esi = *(ebp + -184) - *(ebp + -172);
                                                    esi = *(ebp - 0x58) * *(ebp - 0x58);
                                                    ecx = *(ebp + -196) - *(ebp + -172);
                                                    esi = esi + eax * eax;
                                                    eax = (esi << edi - 0xf) + *(A8 + 0xc);
                                                }
                                                if(eax > 0) {
                                                    M006c734c = eax;
                                                    M006c7350 = edx;
                                                    goto L0046c5f9;
L0046be4b:
                                                    if(A20 >= 2) {
                                                        goto L0046c066;
                                                    }
                                                    L004627DC(ebp + -156, A8 + 4, Ac + 4, esi + 4);
                                                    L00462760(ebp + -168, A8 + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -168);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -156);
                                                    edx = *(ebp + -168) * *(ebp + -168);
                                                    ecx = *(ebp + -152);
                                                    edx = edx + *(ebp + -164) * *(ebp + -164);
                                                    ecx = *(ebp + -148);
                                                    if(eax <= edx + *(ebp + -160) * *(ebp + -160)) {
                                                        goto L0046c066;
                                                    }
                                                    L00462760(ebp + -168, Ac + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -168);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -156);
                                                    edx = *(ebp + -168) * *(ebp + -168);
                                                    ecx = *(ebp + -152);
                                                    edx = edx + *(ebp + -164) * *(ebp + -164);
                                                    ecx = *(ebp + -148);
                                                    if(eax <= edx + *(ebp + -160) * *(ebp + -160)) {
                                                        goto L0046c066;
                                                    }
                                                    L00462760(ebp + -168, esi + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -168);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -156);
                                                    edx = *(ebp + -168) * *(ebp + -168);
                                                    ecx = *(ebp + -152);
                                                    edx = edx + *(ebp + -164) * *(ebp + -164);
                                                    ecx = *(ebp + -148);
                                                    if(eax <= edx + *(ebp + -160) * *(ebp + -160)) {
                                                        goto L0046c066;
L0046bfa7:
                                                        if(A24 >= 0x1f4) {
                                                            *(ebp - 0x5c) = L004765BC( *(A8 + 0xc));
                                                            *(ebp - 0x60) = L004765BC( *(Ac + 0xc));
                                                            *(ebp - 0x64) = L004765BC( *(esi + 0xc));
                                                            if(*(A8 + 4) <= *(ebp - 0x5c) || *(Ac + 4) <= *(ebp - 0x60)) {
                                                                goto L0046bffd;
                                                            }
                                                            eax = *(esi + 4);
                                                            if(eax <= *(ebp - 0x64)) {
L0046bffd:
                                                                if(~( *(ebp - 0x5c)) <= *(A8 + 4)) {
                                                                    goto L0046c022;
                                                                }
                                                                eax = ~( *(ebp - 0x60));
                                                                if(eax <= *(Ac + 4)) {
                                                                    goto L0046c022;
                                                                }
                                                                eax = ~( *(ebp - 0x64));
                                                                if(eax <= *(esi + 4)) {
L0046c022:
                                                                    if(*(A8 + 8) <= *(ebp - 0x5c) || *(Ac + 8) <= *(ebp - 0x60)) {
                                                                        goto L0046c041;
                                                                    }
                                                                    eax = *(esi + 8);
                                                                    if(eax <= *(ebp - 0x64)) {
L0046c041:
                                                                        if(~( *(ebp - 0x5c)) <= *(A8 + 8)) {
                                                                            goto L0046c066;
                                                                        }
                                                                        eax = ~( *(ebp - 0x60));
                                                                        if(eax <= *(Ac + 8)) {
                                                                            goto L0046c066;
                                                                        }
                                                                        eax = ~( *(ebp - 0x64));
                                                                        if(eax <= *(esi + 8)) {
L0046c066:
                                                                            if(A28 != 0) {
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp + -144) = ebp - 0x40;
                                                                                *(ebp + -140) = esi + 0x34;
                                                                                *(ebp + -136) = ebp - 0x38;
                                                                                *(ebp + -132) = Ac + 0x34;
                                                                                *(ebp - 0x80) = ebp - 0x30;
                                                                                *(ebp - 0x7c) = A8 + 0x34;
                                                                                *(ebp - 0x78) = 6950788;
                                                                                *(ebp - 0x74) = A28;
                                                                                do {
                                                                                    if(*( *(ebp - 0x74)) > 0) {
                                                                                        *(ebp - 0x68) = *( *(ebp - 0x74));
                                                                                        *(ebp - 0x6c) = ( *( *(ebp - 0x68)) << 2) + ( *( *(ebp - 0x68)) << 2) * 2 + 0x504608;
                                                                                        edi = *( *(ebp - 0x6c) + 8) + A20 - 1;
                                                                                        eax = *(ebp - 0x78) + edi * 8;
                                                                                        do {
                                                                                            *eax = *( *(ebp - 0x6c));
                                                                                            *(eax + 4) = *( *(ebp - 0x6c) + 4);
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp - 0x7c));
                                                                                        *( *(ebp - 0x80)) = eax;
                                                                                        eax = *( *(ebp + -132));
                                                                                        *( *(ebp + -136)) = eax;
                                                                                        eax = *( *(ebp + -140));
                                                                                        *( *(ebp + -144)) = eax;
                                                                                        eax = *( *(ebp - 0x68) + 4);
                                                                                        *( *(ebp - 0x7c)) = eax;
                                                                                        eax = *( *(ebp - 0x68) + 8);
                                                                                        *( *(ebp + -132)) = eax;
                                                                                        eax = *( *(ebp - 0x68) + 0xc);
                                                                                        *( *(ebp + -140)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp + -144) = *(ebp + -144) + 4;
                                                                                    *(ebp + -140) = *(ebp + -140) + 4;
                                                                                    *(ebp + -136) = *(ebp + -136) + 4;
                                                                                    *(ebp + -132) = *(ebp + -132) + 4;
                                                                                    *(ebp - 0x80) = *(ebp - 0x80) + 4;
                                                                                    *(ebp - 0x7c) = *(ebp - 0x7c) + 4;
                                                                                    *(ebp - 0x78) = *(ebp - 0x78) + 0x100;
                                                                                    *(ebp - 0x74) = *(ebp - 0x74) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            }
                                                                            if(A20 < 5) {
                                                                                *L006c7338(A18, Ac, esi, A8, A20);
                                                                                *L006c7338(A1c, esi, A8, Ac, A20);
                                                                                *L006c7338(A14, A8, Ac, esi, A20);
                                                                            } else {
                                                                                *L006c733c(A18, Ac, esi, A8, A20);
                                                                                *L006c733c(A1c, esi, A8, Ac, A20);
                                                                                *L006c733c(A14, A8, Ac, esi, A20);
                                                                            }
                                                                            *(ebp - 8) = L00462488();
                                                                            *( *(ebp - 8)) = *(A18 + 8);
                                                                            *(ebp - 0xc) = L00462488();
                                                                            *( *(ebp - 0xc)) = *(A1c + 8);
                                                                            *(ebp - 0x10) = L00462488();
                                                                            *( *(ebp - 0x10)) = *(A14 + 8);
                                                                            A20 = A20 + 1;
                                                                            A24 = A24 >> 1;
                                                                            if(A28 != 0) {
                                                                                (save) *(A28 + 8);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L0046B7D8();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0xc);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L0046B7D8();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0x10);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L0046B7D8();
                                                                                esp = esp + 0x24;
                                                                                L0046B7D8( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, *(A28 + 0x14));
                                                                                A20 = A20 - 1;
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp - 0x74) = esi + 0x34;
                                                                                *(ebp - 0x78) = ebp - 0x40;
                                                                                *(ebp - 0x7c) = Ac + 0x34;
                                                                                *(ebp - 0x80) = ebp - 0x38;
                                                                                *(ebp + -132) = A8 + 0x34;
                                                                                *(ebp + -136) = ebp - 0x30;
                                                                                *(ebp + -140) = 6950788;
                                                                                *(ebp + -144) = A28;
                                                                                do {
                                                                                    if(*( *(ebp + -144)) > 0) {
                                                                                        *(ebp - 0x70) = *( *(ebp + -144));
                                                                                        edi = *(( *( *(ebp - 0x70)) + *( *(ebp - 0x70)) * 2) * 4 + 0x504610) + A20 - 1;
                                                                                        eax = *(ebp + -140) + edi * 8;
                                                                                        do {
                                                                                            *eax = 0;
                                                                                            *(eax + 4) = 0;
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp + -136));
                                                                                        *( *(ebp + -132)) = eax;
                                                                                        eax = *( *(ebp - 0x80));
                                                                                        *( *(ebp - 0x7c)) = eax;
                                                                                        eax = *( *(ebp - 0x78));
                                                                                        *( *(ebp - 0x74)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp - 0x74) = *(ebp - 0x74) + 4;
                                                                                    *(ebp - 0x78) = *(ebp - 0x78) + 4;
                                                                                    *(ebp - 0x7c) = *(ebp - 0x7c) + 4;
                                                                                    *(ebp - 0x80) = *(ebp - 0x80) + 4;
                                                                                    *(ebp + -132) = *(ebp + -132) + 4;
                                                                                    *(ebp + -136) = *(ebp + -136) + 4;
                                                                                    *(ebp + -140) = *(ebp + -140) + 0x100;
                                                                                    *(ebp + -144) = *(ebp + -144) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            } else {
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L0046B7D8();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L0046B7D8();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L0046B7D8();
                                                                                esp = esp + 0x24;
                                                                                L0046B7D8( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, 0);
                                                                            }
                                                                            L004624CC( *(ebp - 8));
                                                                            L004624CC( *(ebp - 0xc));
                                                                            eax = L004624CC( *(ebp - 0x10));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0046c5f9:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0046C600 - 0x0046D439
 *    Argument size: 36
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00462EF8()
 *        L0046C600()
 */

L0046C600(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{



    esp = esp + -208;
    (save)A8;
    (save)esi;
    (save)edi;
    esi = A10;
    if(A20 < 0xa) {
        edi = A24;
    } else {
        eax = *(A8 + 0x40);
        if(eax < *(Ac + 0x40)) {
            *(ebp - 0x24) = *(A8 + 0x40);
            edi = *(Ac + 0x40);
        } else {
            *(ebp - 0x24) = *(Ac + 0x40);
            edi = *(A8 + 0x40);
        }
        if(*(esi + 0x40) < *(ebp - 0x24)) {
            *(ebp - 0x24) = *(esi + 0x40);
        } else {
            if(edi < *(esi + 0x40)) {
                edi = *(esi + 0x40);
            }
        }
        (save)edi - *(ebp - 0x24) >> 3;
        edi = L004765BC( *(A8 + 0x28));
        edi = edi + L004765BC( *(A8 + 0x2c));
        edi = L004537B0(edi + L004765BC( *(A8 + 0x30))) + A24;
    }
    eax = *(A8 + 0xc) + edi;
    *(ebp - 0x1c) = eax;
    if(*(ebp - 0x1c) >= 0x40) {
        eax = *(A8 + 0xc) - edi;
        if(eax <= M006c7354) {
            eax = L004765BC( *(A8 + 4)) - edi;
            if(eax <= 0) {
                eax = L004765BC( *(A8 + 8)) - edi;
                if(eax <= 0) {
                    if(*(A8 + 0xc) < 0x40) {
                        goto L0046cdcf;
                    }
                    eax = Ac;
                    if(*(eax + 0xc) < 0x40 || *(esi + 0xc) < 0x40) {
                        goto L0046cdcf;
                    }
                    eax = *esi;
                    eax = eax - *A8;
                    edx = *(Ac + 2) - *(A8 + 2);
                    asm("imul edx");
                    edx = *(esi + 2);
                    edx = edx - *(A8 + 2);
                    *(ebp - 0x48) = eax - ( *Ac - *A8) * ( *Ac - *A8);
                    if(A20 <= 9) {
                        if(A20 <= *(A8 + 0x44) || A20 <= *(Ac + 0x44)) {
                            goto L0046c754;
                        }
                        if(A20 <= *(esi + 0x44)) {
L0046c754:
                            if(*(ebp - 0x48) >= 0x96 || *(ebp - 0x48) < 0 || A20 <= 8) {
                                goto L0046cc73;
                            }
                        }
                    }
                    ax = *(A8 + 0x24);
                    eax = ax | *(Ac + 0x24) | *(esi + 0x24);
                    if(*(eax * 4 + 0x5044c8) == 0) {
                        ax = *(A8 + 0x26);
                        eax = ax | *(Ac + 0x26) | *(esi + 0x26);
                        if(*(eax * 4 + 0x5044c8) == 0) {
                            eax = *(A8 + 4) < 0 ? ~( *(A8 + 4)) : *(A8 + 4);
                            edx = *(A8 + 8) < 0 ? ~( *(A8 + 8)) : *(A8 + 8);
                            eax = eax | edx;
                            edx = *(A8 + 0xc) < 0 ? ~( *(A8 + 0xc)) : *(A8 + 0xc);
                            eax = eax | edx;
                            edx = *(Ac + 4) < 0 ? ~( *(Ac + 4)) : *(Ac + 4);
                            eax = eax | edx;
                            edx = *(Ac + 8) < 0 ? ~( *(Ac + 8)) : *(Ac + 8);
                            eax = eax | edx;
                            edx = *(Ac + 0xc) < 0 ? ~( *(Ac + 0xc)) : *(Ac + 0xc);
                            eax = eax | edx;
                            edx = *(esi + 4) < 0 ? ~( *(esi + 4)) : *(esi + 4);
                            eax = eax | edx;
                            edx = *(esi + 8) < 0 ? ~( *(esi + 8)) : *(esi + 8);
                            eax = eax | edx;
                            edx = *(esi + 0xc) < 0 ? ~( *(esi + 0xc)) : *(esi + 0xc);
                            edi = L00459CEC(eax | edx) - 0xd;
                            if(edi > 0) {
                                ecx = edi;
                                *(ebp + -184) = *(A8 + 4) >> cl;
                                ecx = edi;
                                *(ebp + -180) = *(A8 + 8) >> cl;
                                ecx = edi;
                                *(ebp + -176) = *(A8 + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -196) = *(Ac + 4) >> cl;
                                ecx = edi;
                                *(ebp + -192) = *(Ac + 8) >> cl;
                                ecx = edi;
                                *(ebp + -188) = *(Ac + 0xc) >> cl;
                                ecx = edi;
                                *(ebp + -208) = *(esi + 4) >> cl;
                                ecx = edi;
                                *(ebp + -204) = *(esi + 8) >> cl;
                                ecx = edi;
                                *(ebp + -200) = *(esi + 0xc) >> cl;
                            } else {
                                *(ebp + -184) = *(A8 + 4);
                                *(ebp + -180) = *(A8 + 8);
                                *(ebp + -176) = *(A8 + 0xc);
                                eax = Ac;
                                *(ebp + -196) = *(eax + 4);
                                *(ebp + -192) = *(eax + 8);
                                *(ebp + -188) = *(eax + 0xc);
                                *(ebp + -208) = *(esi + 4);
                                *(ebp + -204) = *(esi + 8);
                                *(ebp + -200) = *(esi + 0xc);
                                edi = 0;
                            }
                            eax = *(ebp + -184) - *(ebp + -208);
                            asm("imul dword [ebp+0xffffff40]");
                            edx = *(ebp + -196) - *(ebp + -184);
                            eax = eax + *(ebp + -204) * *(ebp + -204);
                            edx = *(ebp + -208) - *(ebp + -196);
                            *(ebp - 0x4c) = eax + *(ebp + -180) * *(ebp + -180);
                            eax = *(ebp + -184) - *(ebp + -196);
                            asm("imul dword [ebp+0xffffff34]");
                            edx = *(ebp + -208) - *(ebp + -184);
                            eax = eax + *(ebp + -192) * *(ebp + -192);
                            edx = *(ebp + -196) - *(ebp + -208);
                            eax = eax + *(ebp + -180) * *(ebp + -180);
                            *(ebp - 0x50) = eax;
                            if(*(ebp - 0x4c) != 0 && *(ebp - 0x50) != 0) {
                                eax = *(ebp + -184);
                                asm("imul dword [ebp+0xffffff40]");
                                edx = *(ebp + -196);
                                *(ebp - 0x54) = eax - *(ebp + -180) * *(ebp + -180);
                                eax = *(ebp + -184);
                                asm("imul dword [ebp+0xffffff34]");
                                edx = *(ebp + -208);
                                *(ebp - 0x58) = eax - *(ebp + -180) * *(ebp + -180);
                                eax = *(ebp - 0x58) < 0 ? ~( *(ebp - 0x58)) : *(ebp - 0x58);
                                eax = L00459CEC(eax);
                                esi = 0x1e - eax;
                                if(esi < 0) {
                                    esi = 0;
                                }
                                if(esi > 0xf) {
                                    esi = 0xf;
                                }
                                if(esi >= 0xf) {
                                    goto L0046ca79;
                                }
                                ecx = 0xf - esi;
                                *(ebp - 0x50) = *(ebp - 0x50) >> cl;
                                if(*(ebp - 0x50) != 0 && *(ebp - 0x50) != -1) {
L0046ca79:
                                    ecx = esi;
                                    eax = *(ebp - 0x58) << cl;
                                    asm("cdq");
                                    *(ebp - 0x50) = *(ebp - 0x50) / *(ebp - 0x50);
                                    edx = *(ebp - 0x50) % *(ebp - 0x50);
                                    *(ebp - 0x5c) = eax;
                                    eax = *(ebp - 0x54) < 0 ? ~( *(ebp - 0x54)) : *(ebp - 0x54);
                                    eax = L00459CEC(eax);
                                    esi = 0x1e - eax;
                                    if(esi < 0) {
                                        esi = 0;
                                    }
                                    if(esi > 0xf) {
                                        esi = 0xf;
                                    }
                                    if(esi >= 0xf) {
                                        goto L0046cad8;
                                    }
                                    ecx = 0xf - esi;
                                    *(ebp - 0x4c) = *(ebp - 0x4c) >> cl;
                                    if(*(ebp - 0x4c) != 0 && *(ebp - 0x4c) != -1) {
L0046cad8:
                                        ecx = esi;
                                        eax = *(ebp - 0x54) << cl;
                                        asm("cdq");
                                        *(ebp - 0x4c) = *(ebp - 0x4c) / *(ebp - 0x4c);
                                        edx = *(ebp - 0x4c) % *(ebp - 0x4c);
                                        if(*(ebp - 0x5c) < 0 || eax < 0 || *(ebp - 0x5c) + eax > 32768) {
                                            goto L0046cb8d;
                                        }
                                        if(edi < 0xf) {
                                            ecx = 0xf - edi;
                                            edx = *(ebp + -188) - *(ebp + -176);
                                            edx = *(ebp - 0x5c) * *(ebp - 0x5c);
                                            esi = *(ebp + -200) - *(ebp + -176);
                                            eax = (edx + eax * eax >> cl) + *(A8 + 0xc);
                                        } else {
                                            ecx = edi - 0xf;
                                            edx = *(ebp + -188) - *(ebp + -176);
                                            edx = *(ebp - 0x5c) * *(ebp - 0x5c);
                                            esi = *(ebp + -200) - *(ebp + -176);
                                            eax = (edx + eax * eax << cl) + *(A8 + 0xc);
                                        }
                                        if(eax < M006c734c) {
                                            goto L0046cb7c;
                                        }
                                        if(M006c7350 != 0) {
L0046cb7c:
                                            M006c734c = eax;
                                            eax = 0;
                                            M006c7350 = 0;
                                            goto L0046d433;
L0046cb8d:
                                            if(*(ebp - 0x5c) < 0) {
                                                edx = ~( *(ebp - 0x5c));
                                                if(eax < *(ebp - 0x5c)) {
                                                    edx = ~eax;
                                                } else {
                                                    if(edx < *(ebp - 0x5c) + eax + -32768) {
                                                        edx = *(ebp - 0x5c) + eax + -32768;
                                                    }
                                                }
                                            } else {
                                                if(eax >= 0) {
                                                    goto L0046cbe3;
                                                }
                                                edx = ~eax;
                                                if(edx < *(ebp - 0x5c) + eax + -32768) {
                                                    edx = *(ebp - 0x5c) + eax + -32768;
                                                    goto L0046cbee;
L0046cbe3:
                                                    edx = *(ebp - 0x5c) + eax + -32768;
                                                }
                                            }
L0046cbee:
                                            if(edx < M006c7350) {
                                                if(edi < 0xf) {
                                                    esi = *(ebp + -188) - *(ebp + -176);
                                                    esi = *(ebp - 0x5c) * *(ebp - 0x5c);
                                                    ecx = *(ebp + -200) - *(ebp + -176);
                                                    esi = esi + eax * eax;
                                                    eax = (esi >> 0xf - edi) + *(A8 + 0xc);
                                                } else {
                                                    esi = *(ebp + -188) - *(ebp + -176);
                                                    esi = *(ebp - 0x5c) * *(ebp - 0x5c);
                                                    ecx = *(ebp + -200) - *(ebp + -176);
                                                    esi = esi + eax * eax;
                                                    eax = (esi << edi - 0xf) + *(A8 + 0xc);
                                                }
                                                if(eax > 0) {
                                                    M006c734c = eax;
                                                    M006c7350 = edx;
                                                    goto L0046d433;
L0046cc73:
                                                    if(A20 >= 2) {
                                                        goto L0046ce8e;
                                                    }
                                                    L004627DC(ebp + -160, A8 + 4, Ac + 4, esi + 4);
                                                    L00462760(ebp + -172, A8 + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -172);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -160);
                                                    edx = *(ebp + -172) * *(ebp + -172);
                                                    ecx = *(ebp + -156);
                                                    edx = edx + *(ebp + -168) * *(ebp + -168);
                                                    ecx = *(ebp + -152);
                                                    if(eax <= edx + *(ebp + -164) * *(ebp + -164)) {
                                                        goto L0046ce8e;
                                                    }
                                                    L00462760(ebp + -172, Ac + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -172);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -160);
                                                    edx = *(ebp + -172) * *(ebp + -172);
                                                    ecx = *(ebp + -156);
                                                    edx = edx + *(ebp + -168) * *(ebp + -168);
                                                    ecx = *(ebp + -152);
                                                    if(eax <= edx + *(ebp + -164) * *(ebp + -164)) {
                                                        goto L0046ce8e;
                                                    }
                                                    L00462760(ebp + -172, esi + 4);
                                                    *(ebp - 0x20) = *L00501674(ebp + -172);
                                                    eax = -20480 >> A20;
                                                    asm("imul dword [ebp-0x20]");
                                                    edx = *(ebp + -160);
                                                    edx = *(ebp + -172) * *(ebp + -172);
                                                    ecx = *(ebp + -156);
                                                    edx = edx + *(ebp + -168) * *(ebp + -168);
                                                    ecx = *(ebp + -152);
                                                    if(eax <= edx + *(ebp + -164) * *(ebp + -164)) {
                                                        goto L0046ce8e;
L0046cdcf:
                                                        if(A24 >= 0x1f4) {
                                                            *(ebp - 0x60) = L004765BC( *(A8 + 0xc));
                                                            *(ebp - 0x64) = L004765BC( *(Ac + 0xc));
                                                            *(ebp - 0x68) = L004765BC( *(esi + 0xc));
                                                            if(*(A8 + 4) <= *(ebp - 0x60) || *(Ac + 4) <= *(ebp - 0x64)) {
                                                                goto L0046ce25;
                                                            }
                                                            eax = *(esi + 4);
                                                            if(eax <= *(ebp - 0x68)) {
L0046ce25:
                                                                if(~( *(ebp - 0x60)) <= *(A8 + 4)) {
                                                                    goto L0046ce4a;
                                                                }
                                                                eax = ~( *(ebp - 0x64));
                                                                if(eax <= *(Ac + 4)) {
                                                                    goto L0046ce4a;
                                                                }
                                                                eax = ~( *(ebp - 0x68));
                                                                if(eax <= *(esi + 4)) {
L0046ce4a:
                                                                    if(*(A8 + 8) <= *(ebp - 0x60) || *(Ac + 8) <= *(ebp - 0x64)) {
                                                                        goto L0046ce69;
                                                                    }
                                                                    eax = *(esi + 8);
                                                                    if(eax <= *(ebp - 0x68)) {
L0046ce69:
                                                                        if(~( *(ebp - 0x60)) <= *(A8 + 8)) {
                                                                            goto L0046ce8e;
                                                                        }
                                                                        eax = ~( *(ebp - 0x64));
                                                                        if(eax <= *(Ac + 8)) {
                                                                            goto L0046ce8e;
                                                                        }
                                                                        eax = ~( *(ebp - 0x68));
                                                                        if(eax <= *(esi + 8)) {
L0046ce8e:
                                                                            if(A28 != 0) {
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp + -148) = ebp - 0x40;
                                                                                *(ebp + -144) = esi + 0x34;
                                                                                *(ebp + -140) = ebp - 0x38;
                                                                                *(ebp + -136) = Ac + 0x34;
                                                                                *(ebp + -132) = ebp - 0x30;
                                                                                *(ebp - 0x80) = A8 + 0x34;
                                                                                *(ebp - 0x7c) = 6950788;
                                                                                *(ebp - 0x78) = A28;
                                                                                do {
                                                                                    if(*( *(ebp - 0x78)) > 0) {
                                                                                        *(ebp - 0x6c) = *( *(ebp - 0x78));
                                                                                        *(ebp - 0x70) = ( *( *(ebp - 0x6c)) << 2) + ( *( *(ebp - 0x6c)) << 2) * 2 + 0x504608;
                                                                                        edi = *( *(ebp - 0x70) + 8) + A20 - 1;
                                                                                        eax = *(ebp - 0x7c) + edi * 8;
                                                                                        do {
                                                                                            *eax = *( *(ebp - 0x70));
                                                                                            *(eax + 4) = *( *(ebp - 0x70) + 4);
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp - 0x80));
                                                                                        *( *(ebp + -132)) = eax;
                                                                                        eax = *( *(ebp + -136));
                                                                                        *( *(ebp + -140)) = eax;
                                                                                        eax = *( *(ebp + -144));
                                                                                        *( *(ebp + -148)) = eax;
                                                                                        eax = *( *(ebp - 0x6c) + 4);
                                                                                        *( *(ebp - 0x80)) = eax;
                                                                                        eax = *( *(ebp - 0x6c) + 8);
                                                                                        *( *(ebp + -136)) = eax;
                                                                                        eax = *( *(ebp - 0x6c) + 0xc);
                                                                                        *( *(ebp + -144)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp + -148) = *(ebp + -148) + 4;
                                                                                    *(ebp + -144) = *(ebp + -144) + 4;
                                                                                    *(ebp + -140) = *(ebp + -140) + 4;
                                                                                    *(ebp + -136) = *(ebp + -136) + 4;
                                                                                    *(ebp + -132) = *(ebp + -132) + 4;
                                                                                    *(ebp - 0x80) = *(ebp - 0x80) + 4;
                                                                                    *(ebp - 0x7c) = *(ebp - 0x7c) + 0x100;
                                                                                    *(ebp - 0x78) = *(ebp - 0x78) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            }
                                                                            if(A20 < 5) {
                                                                                *L006c7338(A18, Ac, esi, A8, A20);
                                                                                *L006c7338(A1c, esi, A8, Ac, A20);
                                                                                *L006c7338(A14, A8, Ac, esi, A20);
                                                                            } else {
                                                                                *L006c733c(A18, Ac, esi, A8, A20);
                                                                                *L006c733c(A1c, esi, A8, Ac, A20);
                                                                                *L006c733c(A14, A8, Ac, esi, A20);
                                                                            }
                                                                            *(ebp - 8) = L00462488();
                                                                            *( *(ebp - 8)) = *(A18 + 8);
                                                                            *(ebp - 0xc) = L00462488();
                                                                            *( *(ebp - 0xc)) = *(A1c + 8);
                                                                            *(ebp - 0x10) = L00462488();
                                                                            *( *(ebp - 0x10)) = *(A14 + 8);
                                                                            A20 = A20 + 1;
                                                                            A24 = A24 >> 1;
                                                                            if(A28 != 0) {
                                                                                (save) *(A28 + 8);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L0046C600();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0xc);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L0046C600();
                                                                                esp = esp + 0x24;
                                                                                (save) *(A28 + 0x10);
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L0046C600();
                                                                                esp = esp + 0x24;
                                                                                L0046C600( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, *(A28 + 0x14));
                                                                                A20 = A20 - 1;
                                                                                *(ebp - 0x24) = 0;
                                                                                *(ebp - 0x78) = esi + 0x34;
                                                                                *(ebp - 0x7c) = ebp - 0x40;
                                                                                *(ebp - 0x80) = Ac + 0x34;
                                                                                *(ebp + -132) = ebp - 0x38;
                                                                                *(ebp + -136) = A8 + 0x34;
                                                                                *(ebp + -140) = ebp - 0x30;
                                                                                *(ebp + -144) = 6950788;
                                                                                *(ebp + -148) = A28;
                                                                                do {
                                                                                    if(*( *(ebp + -148)) > 0) {
                                                                                        *(ebp - 0x74) = *( *(ebp + -148));
                                                                                        edi = *(( *( *(ebp - 0x74)) + *( *(ebp - 0x74)) * 2) * 4 + 0x504610) + A20 - 1;
                                                                                        eax = *(ebp + -144) + edi * 8;
                                                                                        do {
                                                                                            *eax = 0;
                                                                                            *(eax + 4) = 0;
                                                                                            edi = edi - 1;
                                                                                            eax = eax - 8;
                                                                                        } while(edi >= A20);
                                                                                        eax = *( *(ebp + -140));
                                                                                        *( *(ebp + -136)) = eax;
                                                                                        eax = *( *(ebp + -132));
                                                                                        *( *(ebp - 0x80)) = eax;
                                                                                        eax = *( *(ebp - 0x7c));
                                                                                        *( *(ebp - 0x78)) = eax;
                                                                                    }
                                                                                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                                                                                    *(ebp - 0x78) = *(ebp - 0x78) + 4;
                                                                                    *(ebp - 0x7c) = *(ebp - 0x7c) + 4;
                                                                                    *(ebp - 0x80) = *(ebp - 0x80) + 4;
                                                                                    *(ebp + -132) = *(ebp + -132) + 4;
                                                                                    *(ebp + -136) = *(ebp + -136) + 4;
                                                                                    *(ebp + -140) = *(ebp + -140) + 4;
                                                                                    *(ebp + -144) = *(ebp + -144) + 0x100;
                                                                                    *(ebp + -148) = *(ebp + -148) + 4;
                                                                                } while(*(ebp - 0x24) < 2);
                                                                            } else {
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = A8 == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0x10);
                                                                                eax = A8 == *A14 ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A1c + 8);
                                                                                (save) *(A14 + 8);
                                                                                (save)A8;
                                                                                L0046C600();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = *A14 == Ac ? *(A14 + 4) : *(A14 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 8);
                                                                                eax = *A18 == Ac ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A14 + 8);
                                                                                (save) *(A18 + 8);
                                                                                (save)Ac;
                                                                                L0046C600();
                                                                                esp = esp + 0x24;
                                                                                (save)0;
                                                                                (save)A24;
                                                                                (save)A20;
                                                                                eax = esi == *A18 ? *(A18 + 4) : *(A18 + 0xc);
                                                                                (save)eax;
                                                                                (save) *(ebp - 0xc);
                                                                                eax = esi == *A1c ? *(A1c + 4) : *(A1c + 0xc);
                                                                                (save)eax;
                                                                                (save) *(A18 + 8);
                                                                                (save) *(A1c + 8);
                                                                                (save)esi;
                                                                                L0046C600();
                                                                                esp = esp + 0x24;
                                                                                L0046C600( *(A18 + 8), *(A1c + 8), *(A14 + 8), *(ebp - 0xc), *(ebp - 0x10), *(ebp - 8), A20, A24, 0);
                                                                            }
                                                                            L004624CC( *(ebp - 8));
                                                                            L004624CC( *(ebp - 0xc));
                                                                            eax = L004624CC( *(ebp - 0x10));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0046d433:
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*    Procedure: 0x0046D43A - 0x0046D5EF
 *    Argument size: 8
 *    Local size: 44
 *    Save regs size: 12
 */

L0046D43A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(Ac + 2) + *(Ac + 2) * 8;
    eax = *(M00655aec + eax * 4 + 0x14);
    esi = eax == *(A8 + 0xf0) ? ( *(Ac + 2) << 2) + ( *(Ac + 2) << 2) * 8 + M00655aec : *L00501688(A8, *(Ac + 2));
    eax = *(Ac + 3) + *(Ac + 3) * 8;
    eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(Ac + 3) << 2) + ( *(Ac + 3) << 2) * 8 + M00655aec : *L00501684(A8, *(Ac + 3));
    Vfffffffc = eax;
    eax = *(Ac + 4) + *(Ac + 4) * 8;
    eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(Ac + 4) << 2) + ( *(Ac + 4) << 2) * 8 + M00655aec : *L00501684(A8, *(Ac + 4));
    Vfffffff8 = eax;
    eax = *(Ac + 5) + *(Ac + 5) * 8;
    eax = *(M00655aec + eax * 4 + 0x14) != 0 ? ( *(Ac + 5) << 2) + ( *(Ac + 5) << 2) * 8 + M00655aec : *L00501684(A8, *(Ac + 5));
    Vffffffd4 = *(Vfffffffc + 0x18) + ~( *(esi + 0x18));
    Vffffffd8 = *(Vfffffffc + 0x1c) + ~( *(esi + 0x1c));
    Vffffffdc = *(Vfffffffc + 0x20) + ~( *(esi + 0x20));
    Vffffffe0 = *(Vfffffff8 + 0x18) + ~( *(esi + 0x18));
    Vffffffe4 = *(Vfffffff8 + 0x1c) + ~( *(esi + 0x1c));
    Vffffffe8 = *(Vfffffff8 + 0x20) + ~( *(esi + 0x20));
    edx = *(eax + 0x18);
    Vffffffec = edx + ~( *(esi + 0x18));
    edx = *(eax + 0x1c);
    Vfffffff0 = edx + ~( *(esi + 0x1c));
    eax = *(eax + 0x20);
    Vfffffff4 = eax + ~( *(esi + 0x20));
    return L0046D648(0, 0, *(A8 + 0x14c), A8, Ac + 0xc, esi + 4, & Vffffffd4, *(Ac + 6), *(Ac + 0xa), *(Ac + 8) << 0x10, *Ac, 0);
}

/*    Procedure: 0x0046D5F0 - 0x0046D647
 *    Argument size: 8
 *    Local size: 24
 *    Save regs size: 8
 *    Called by:
 *        L0046D648()
 */

L0046D5F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    (save) *(Ac + 4);
    L0044EBFB( & Vfffffff8, *A8);
    (save) *Ac;
    L0044EBFB( & Vfffffff0, *(A8 + 4));
    (save)Vfffffff4;
    L0044EB80( & Vffffffe8, Vfffffff8, Vfffffffc, Vfffffff0);
    return Vffffffec >> 0x1f;
}

/*    Procedure: 0x0046D648 - 0x0046E894
 *    Argument size: 48
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004287E4()
 *        L00433318()
 *        L0046D43A()
 */

L0046D648(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c, A30, A34)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
{



    esp = esp + -2472;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = 0x505f14;
    edi = ebp + -636;
    ecx = 0x78;
    asm("rep movsd");
    esi = 0x5060f4;
    edi = ebp + -2316;
    ecx = 0x3c;
    asm("rep movsd");
    *(ebp - 4) = *(A10 + 0xa0);
    if(A34 != 0) {
        M006c734c = 2147483647;
        M006c7354 = Ac;
        M006c7350 = 16384;
    } else {
        *(ebp - 0x10) = *(A14 + 0x148) - 8;
        A28 = *(ebp - 0x10) < 0 ? A28 >> ~( *(ebp - 0x10)) : A28 << *(ebp - 0x10);
        L0045BA4C(ebp - 0x30, A30);
        eax = ebp - 0x30;
        (save) *(eax + 0xc);
        (save) *(eax + 8);
        L0045B9E8(6950784, *eax, *(eax + 4));
        L0046E898(A14, A1c, A20, M006a0f80, A2c, A28);
    }
    *(ebp - 0x10) = L00462720(A20) - 0xe;
    if(*(ebp - 0x10) > 0) {
        ecx = *(ebp - 0x10);
        eax = *A20 >> cl;
        ecx = *(ebp - 0x10);
        edx = *A20 >> cl;
        asm("imul edx");
        ecx = *(ebp - 0x10);
        edx = *(A20 + 4) >> cl;
        ecx = *(ebp - 0x10);
        eax = eax + ( *(A20 + 4) >> cl) * ( *(A20 + 4) >> cl);
        ecx = *(ebp - 0x10);
        edx = *(A20 + 8) >> cl;
        ecx = *(ebp - 0x10);
        eax = *L00501670(eax + ( *(A20 + 8) >> cl) * ( *(A20 + 8) >> cl));
        *(ebp - 0xc) = eax << *(ebp - 0x10);
    } else {
        eax = *A20;
        edx = A20;
        asm("imul dword [edx]");
        edx = *(A20 + 4);
        eax = eax + *(A20 + 4) * *(A20 + 4);
        edx = *(A20 + 8);
        *(ebp - 0xc) = *L00501670(eax + *(A20 + 8) * *(A20 + 8));
    }
    *(ebp - 0x10) = L00462720(A20 + 0xc) - 0xe;
    if(*(ebp - 0x10) > 0) {
        ecx = *(ebp - 0x10);
        eax = *(A20 + 0xc) >> cl;
        ecx = *(ebp - 0x10);
        edx = *(A20 + 0xc) >> cl;
        asm("imul edx");
        ecx = *(ebp - 0x10);
        edx = *(A20 + 0x10) >> cl;
        ecx = *(ebp - 0x10);
        eax = eax + ( *(A20 + 0x10) >> cl) * ( *(A20 + 0x10) >> cl);
        ecx = *(ebp - 0x10);
        edx = *(A20 + 0x14) >> cl;
        ecx = *(ebp - 0x10);
        eax = *L00501670(eax + ( *(A20 + 0x14) >> cl) * ( *(A20 + 0x14) >> cl));
        *(ebp - 8) = eax << *(ebp - 0x10);
    } else {
        eax = *(A20 + 0xc);
        edx = A20;
        asm("imul dword [edx+0xc]");
        edx = *(A20 + 0x10);
        eax = eax + *(A20 + 0x10) * *(A20 + 0x10);
        edx = *(A20 + 0x14);
        *(ebp - 8) = *L00501670(eax + *(A20 + 0x14) * *(A20 + 0x14));
    }
    if(*(ebp - 8) > *(ebp - 0xc)) {
        *(ebp - 0xc) = *(ebp - 8);
    }
    *(ebp - 0x10) = L00462720(A20 + 0x18) - 0xe;
    if(*(ebp - 0x10) > 0) {
        ecx = *(ebp - 0x10);
        eax = *(A20 + 0x18) >> cl;
        ecx = *(ebp - 0x10);
        edx = *(A20 + 0x18) >> cl;
        asm("imul edx");
        ecx = *(ebp - 0x10);
        edx = *(A20 + 0x1c) >> cl;
        ecx = *(ebp - 0x10);
        eax = eax + ( *(A20 + 0x1c) >> cl) * ( *(A20 + 0x1c) >> cl);
        ecx = *(ebp - 0x10);
        edx = *(A20 + 0x20) >> cl;
        ecx = *(ebp - 0x10);
        eax = *L00501670(eax + ( *(A20 + 0x20) >> cl) * ( *(A20 + 0x20) >> cl));
        *(ebp - 8) = eax << *(ebp - 0x10);
    } else {
        eax = *(A20 + 0x18);
        edx = A20;
        asm("imul dword [edx+0x18]");
        edx = *(A20 + 0x1c);
        eax = eax + *(A20 + 0x1c) * *(A20 + 0x1c);
        edx = *(A20 + 0x20);
        *(ebp - 8) = *L00501670(eax + *(A20 + 0x20) * *(A20 + 0x20));
    }
    if(*(ebp - 8) > *(ebp - 0xc)) {
        *(ebp - 0xc) = *(ebp - 8);
    }
    (save)1409286144;
    *(ebp - 8) = L004537B0( *(ebp - 0xc)) + L004537B0( *(ebp - 0xc));
    if(A34 == 0) {
        M005044c4 = M00644bb4 - 1;
        *(ebp - 0x38) = L00462720(A1c) - 0xe;
        if(*(ebp - 0x38) < 0) {
            *(ebp - 0x38) = 0;
        }
        ecx = *(ebp - 0x38);
        eax = *A1c >> cl;
        ecx = *(ebp - 0x38);
        edx = *A1c >> cl;
        asm("imul edx");
        ecx = *(ebp - 0x38);
        edx = *(A1c + 4) >> cl;
        ecx = *(ebp - 0x38);
        eax = eax + ( *(A1c + 4) >> cl) * ( *(A1c + 4) >> cl);
        ecx = *(ebp - 0x38);
        edx = *(A1c + 8) >> cl;
        ecx = *(ebp - 0x38);
        eax = *L00501670(eax + ( *(A1c + 8) >> cl) * ( *(A1c + 8) >> cl));
        *(ebp - 0x34) = eax << *(ebp - 0x38);
        if(( *(ebp - 0xc) >> 4) + *(ebp - 0xc) < *(ebp - 0x34)) {
            M005044c4 = M005044c4 + 1;
            if(( *(ebp - 0xc) >> 3) + *(ebp - 0xc) < *(ebp - 0x34)) {
                M005044c4 = M005044c4 + 1;
            }
        }
    } else {
        M005044c4 = M00644bb4 - 1;
    }
    M006a11a0 = L00459CEC( *(ebp - 8)) + M005044c4;
    ebx = 0;
    edi = ebp + -2072;
    esi = 0x505e84;
    do {
        (save) *A20;
        (save)L004537B0( *esi);
        (save) *(A20 + 0xc);
        eax = L004537B0( *(esi + 4));
        (restore)edx;
        (save)edx + eax;
        (save) *(A20 + 0x18);
        eax = L004537B0( *(esi + 8));
        (restore)edx;
        *edi = edx + eax;
        (save) *(A20 + 4);
        (save)L004537B0( *esi);
        (save) *(A20 + 0x10);
        eax = L004537B0( *(esi + 4));
        (restore)edx;
        (save)edx + eax;
        (save) *(A20 + 0x1c);
        eax = L004537B0( *(esi + 8));
        (restore)edx;
        *(edi + 4) = edx + eax;
        (save) *(A20 + 8);
        (save)L004537B0( *esi);
        (save) *(A20 + 0x14);
        eax = L004537B0( *(esi + 4));
        (restore)edx;
        (save)edx + eax;
        (save) *(A20 + 0x20);
        eax = L004537B0( *(esi + 8));
        (restore)edx;
        *(edi + 8) = edx + eax;
        *(edi + 0x24) = *edi;
        *(edi + 0x28) = *(edi + 4);
        *(edi + 0x2c) = *(edi + 8);
        *edi = *edi + *A1c;
        *(edi + 4) = *(edi + 4) + *(A1c + 4);
        *(edi + 8) = *(edi + 8) + *(A1c + 8);
        if(A34 != 1) {
            eax = (ebx << 3) + (ebx << 3) * 8;
            eax = (ebx << 3) + (ebx << 3) * 8;
            L00452681(eax + ebp + -2076, eax + ebp + -2072);
        }
        *(ebp - 4) = L004626FC( *(ebp - 4));
        *(edi + 0x38) = *((A24 + A24 + (A24 + A24) * 2) * 8 + 0x5046b0) == 0x463be0 ? ( *(esi + 4) >> 5) + 67108864 : *(ebp - 4) >> 4;
        ebx = ebx + 1;
        edi = edi + 0x48;
        esi = esi + 0xc;
    } while(ebx < 0xc);
    A18 = L00462528(ebp - 0x14, A18);
    *(ebp - 0x18) = *(A1c + 8) > *(ebp - 0xc) + *(ebp - 0xc) ? 1 : 0;
    eax = L004782A4(6951336);
    *(ebp - 0x20) = eax;
    if(*(ebp - 0x20) != 0) {
        L0046242C();
        eax = A18;
    } else {
        L004623AC();
        ebx = 0;
        esi = ebp + -2316;
        edi = ebp + -2436;
        do {
            *edi = L00462488();
            eax = ( *esi << 3) + ( *esi << 3) * 8;
            eax = eax + ebp + -2076;
            *( *edi) = eax;
            ebx = ebx + 1;
            esi = esi + 8;
            edi = edi + 4;
        } while(ebx < 0x1e);
        *(ebp - 0x1c) = L00462C28(A14, *(ebp - 8), A24, A34);
        if(A34 == 1) {
            ebx = 0;
            do {
                *(ebp - 0x60) = *( *(ebp - 0x14) + ebx * 4 + 8);
                eax = ( *(ebp + (ebx + ebx * 2) * 8 + -628) << 3) + ( *(ebp + (ebx + ebx * 2) * 8 + -628) << 3) * 8;
                eax = ( *(ebp + (ebx + ebx * 2) * 8 + -632) << 3) + ( *(ebp + (ebx + ebx * 2) * 8 + -632) << 3) * 8;
                eax = ( *(ebp + (ebx + ebx * 2) * 8 + -636) << 3) + ( *(ebp + (ebx + ebx * 2) * 8 + -636) << 3) * 8;
                L00462CB8(eax + ebp + -2076, eax + ebp + -2076, eax + ebp + -2076, *(ebp - 0x60), *(ebp - 0x18), *(ebp - 0x1c));
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -636) + *(ebp + (ebx + ebx * 2) * 8 + -636) * 8) * 8 + -2072);
                *(ebp + -2448) = eax + ~( *A1c);
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -636) + *(ebp + (ebx + ebx * 2) * 8 + -636) * 8) * 8 + -2068);
                *(ebp + -2444) = eax + ~( *(A1c + 4));
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -636) + *(ebp + (ebx + ebx * 2) * 8 + -636) * 8) * 8 + -2064);
                *(ebp + -2440) = eax + ~( *(A1c + 8));
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -632) + *(ebp + (ebx + ebx * 2) * 8 + -632) * 8) * 8 + -2072);
                *(ebp + -2460) = eax + ~( *A1c);
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -632) + *(ebp + (ebx + ebx * 2) * 8 + -632) * 8) * 8 + -2068);
                *(ebp + -2456) = eax + ~( *(A1c + 4));
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -632) + *(ebp + (ebx + ebx * 2) * 8 + -632) * 8) * 8 + -2064);
                *(ebp + -2452) = eax + ~( *(A1c + 8));
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -628) + *(ebp + (ebx + ebx * 2) * 8 + -628) * 8) * 8 + -2072);
                *(ebp + -2472) = eax + ~( *A1c);
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -628) + *(ebp + (ebx + ebx * 2) * 8 + -628) * 8) * 8 + -2068);
                *(ebp + -2468) = eax + ~( *(A1c + 4));
                eax = *(ebp + ( *(ebp + (ebx + ebx * 2) * 8 + -628) + *(ebp + (ebx + ebx * 2) * 8 + -628) * 8) * 8 + -2064);
                *(ebp + -2464) = eax + ~( *(A1c + 8));
                *(ebp - 0x3c) = L0046D5F0(ebp + -2448, ebp + -2460);
                *(ebp - 0x40) = L0046D5F0(ebp + -2460, ebp + -2472);
                *(ebp - 0x44) = L0046D5F0(ebp + -2472, ebp + -2448);
                if(*(ebp - 0x3c) >= 0 && *(ebp - 0x40) >= 0 && *(ebp - 0x44) >= 0) {
                    goto L0046de6f;
                }
                ebx = ebx + 1;
            } while(ebx < 0x14);
            goto L0046e7c9;
L0046de6f:
            eax = ( *(ebp + (ebx + ebx * 2) * 8 + -636) << 3) + ( *(ebp + (ebx + ebx * 2) * 8 + -636) << 3) * 8;
            *(ebp - 0x48) = eax + ebp + -2076;
            eax = ( *(ebp + (ebx + ebx * 2) * 8 + -632) << 3) + ( *(ebp + (ebx + ebx * 2) * 8 + -632) << 3) * 8;
            *(ebp - 0x4c) = eax + ebp + -2076;
            eax = ( *(ebp + (ebx + ebx * 2) * 8 + -628) << 3) + ( *(ebp + (ebx + ebx * 2) * 8 + -628) << 3) * 8;
            *(ebp - 0x50) = eax + ebp + -2076;
            *(ebp - 0x54) = *(ebp + *(ebp + (ebx + ebx * 2) * 8 + -624) * 4 + -2436);
            *(ebp - 0x58) = *(ebp + *(ebp + (ebx + ebx * 2) * 8 + -620) * 4 + -2436);
            *(ebp - 0x5c) = *(ebp + *(ebp + (ebx + ebx * 2) * 8 + -616) * 4 + -2436);
            for(*(ebp - 0x10) = 0; *(ebp - 0x10) <= 9 && ( *( *(ebp - 0x48) + 0x44) >= *(ebp - 0x10) || *( *(ebp - 0x4c) + 0x44) >= *(ebp - 0x10) || *( *(ebp - 0x50) + 0x44) >= *(ebp - 0x10)); *(ebp - 0x10) = *(ebp - 0x10) + 1) {
                if(*(ebp - 0x60) != 0) {
                    ebx = 0;
                    *(ebp + -156) = *(ebp - 0x50) + 0x34;
                    *(ebp + -152) = *(ebp - 0x4c) + 0x34;
                    *(ebp + -148) = *(ebp - 0x48) + 0x34;
                    *(ebp + -144) = 6950788;
                    *(ebp + -140) = *(ebp - 0x60);
                    do {
                        if(*( *(ebp + -140)) > 0) {
                            *(ebp - 0x68) = *( *(ebp + -140));
                            ecx = ( *( *(ebp - 0x68)) << 2) + ( *( *(ebp - 0x68)) << 2) * 2 + 0x504608;
                            eax = *(ecx + 8) + *(ebp - 0x10) - 1;
                            edx = *(ebp + -144) + eax * 8;
                            do {
                                *edx = *ecx;
                                *(edx + 4) = *(ecx + 4);
                                eax = eax - 1;
                                edx = edx - 8;
                            } while(eax >= *(ebp - 0x10));
                            eax = *( *(ebp - 0x68) + 4);
                            *( *(ebp + -148)) = eax;
                            eax = *( *(ebp - 0x68) + 8);
                            *( *(ebp + -152)) = eax;
                            eax = *( *(ebp - 0x68) + 0xc);
                            *( *(ebp + -156)) = eax;
                        }
                        ebx = ebx + 1;
                        *(ebp + -156) = *(ebp + -156) + 4;
                        *(ebp + -152) = *(ebp + -152) + 4;
                        *(ebp + -148) = *(ebp + -148) + 4;
                        *(ebp + -144) = *(ebp + -144) + 0x100;
                        *(ebp + -140) = *(ebp + -140) + 4;
                    } while(ebx < 2);
                }
                if(*(ebp - 0x10) >= 5) {
                    *L006c733c( *(ebp - 0x58), *(ebp - 0x4c), *(ebp - 0x50), *(ebp - 0x48), *(ebp - 0x10));
                    *L006c733c( *(ebp - 0x5c), *(ebp - 0x50), *(ebp - 0x48), *(ebp - 0x4c), *(ebp - 0x10));
                    *L006c733c( *(ebp - 0x54), *(ebp - 0x48), *(ebp - 0x4c), *(ebp - 0x50), *(ebp - 0x10));
                } else {
                    *L006c7338( *(ebp - 0x58), *(ebp - 0x4c), *(ebp - 0x50), *(ebp - 0x48), *(ebp - 0x10));
                    *L006c7338( *(ebp - 0x5c), *(ebp - 0x50), *(ebp - 0x48), *(ebp - 0x4c), *(ebp - 0x10));
                    *L006c7338( *(ebp - 0x54), *(ebp - 0x48), *(ebp - 0x4c), *(ebp - 0x50), *(ebp - 0x10));
                }
                eax = *( *(ebp - 0x58) + 8);
                ecx = *(eax + 4);
                edx = ~( *A1c);
                *(ebp + -2448) = ecx + edx;
                ebx = *(eax + 8);
                ecx = ~( *(A1c + 4));
                *(ebp + -2444) = ebx + ecx;
                eax = *(eax + 0xc);
                *(ebp + -2440) = eax + ~( *(A1c + 8));
                eax = *( *(ebp - 0x5c) + 8);
                ebx = *(eax + 4);
                esi = ~( *A1c);
                *(ebp + -2460) = ebx + edx;
                ebx = *(eax + 8);
                esi = ~( *(A1c + 4));
                *(ebp + -2456) = ebx + ecx;
                eax = *(eax + 0xc);
                *(ebp + -2452) = eax + ~( *(A1c + 8));
                eax = *( *( *(ebp - 0x54) + 8) + 4);
                ebx = ~( *A1c);
                *(ebp + -2472) = eax + edx;
                eax = *( *( *(ebp - 0x54) + 8) + 8);
                edx = ~( *(A1c + 4));
                *(ebp + -2468) = eax + ecx;
                eax = *( *( *(ebp - 0x54) + 8) + 0xc);
                *(ebp + -2464) = eax + ~( *(A1c + 8));
                if(L0046D5F0(ebp + -2472, ebp + -2460) < 0) {
                    if(L0046D5F0(ebp + -2448, ebp + -2472) >= 0) {
                        goto L0046e209;
                    }
                    if(L0046D5F0(ebp + -2460, ebp + -2448) >= 0) {
                        goto L0046e292;
                    }
                    esi = L00462488();
                    *esi = *( *(ebp - 0x5c) + 8);
                    ebx = L00462488();
                    *ebx = *( *(ebp - 0x54) + 8);
                    eax = L00462488();
                    *eax = *( *(ebp - 0x58) + 8);
                    *(ebp - 0x48) = *( *(ebp - 0x58) + 8);
                    *(ebp - 0x4c) = *( *(ebp - 0x5c) + 8);
                    *(ebp - 0x50) = *( *(ebp - 0x54) + 8);
                    if(*(ebp - 0x60) != 0) {
                        *(ebp - 0x60) = *( *(ebp - 0x60) + 0x14);
                        goto L0046e34a;
L0046e292:
                        esi = *( *(ebp - 0x5c)) != *(ebp - 0x50) ? *( *(ebp - 0x5c) + 0xc) : *( *(ebp - 0x5c) + 4);
                        ebx = L00462488();
                        *ebx = *( *(ebp - 0x5c) + 8);
                        eax = *( *(ebp - 0x58)) != *(ebp - 0x50) ? *( *(ebp - 0x58) + 0xc) : *( *(ebp - 0x58) + 4);
                        *(ebp - 0x48) = *(ebp - 0x50);
                        *(ebp - 0x4c) = *( *(ebp - 0x5c) + 8);
                        *(ebp - 0x50) = *( *(ebp - 0x58) + 8);
                        if(*(ebp - 0x60) != 0) {
                            *(ebp - 0x60) = *( *(ebp - 0x60) + 0x10);
                            goto L0046e34a;
L0046e209:
                            esi = *( *(ebp - 0x58)) != *(ebp - 0x4c) ? *( *(ebp - 0x58) + 0xc) : *( *(ebp - 0x58) + 4);
                            ebx = L00462488();
                            *ebx = *( *(ebp - 0x58) + 8);
                            eax = *( *(ebp - 0x54)) != *(ebp - 0x4c) ? *( *(ebp - 0x54) + 0xc) : *( *(ebp - 0x54) + 4);
                            *(ebp - 0x48) = *(ebp - 0x4c);
                            *(ebp - 0x4c) = *( *(ebp - 0x58) + 8);
                            *(ebp - 0x50) = *( *(ebp - 0x54) + 8);
                            if(*(ebp - 0x60) != 0) {
                                *(ebp - 0x60) = *( *(ebp - 0x60) + 0xc);
                            }
                        }
                    }
                } else {
                    esi = *( *(ebp - 0x54)) != *(ebp - 0x48) ? *( *(ebp - 0x54) + 0xc) : *( *(ebp - 0x54) + 4);
                    ebx = L00462488();
                    *ebx = *( *(ebp - 0x54) + 8);
                    eax = *( *(ebp - 0x5c)) != *(ebp - 0x48) ? *( *(ebp - 0x5c) + 0xc) : *( *(ebp - 0x5c) + 4);
                    0;
                    *(ebp - 0x4c) = *( *(ebp - 0x54) + 8);
                    *(ebp - 0x50) = *( *(ebp - 0x5c) + 8);
                    if(*(ebp - 0x60) != 0) {
                        *(ebp - 0x60) = *( *(ebp - 0x60) + 8);
                    }
                }
L0046e34a:
                *(ebp - 0x54) = esi;
                *(ebp - 0x58) = ebx;
                *(ebp - 0x5c) = eax;
            }
            eax = *( *(ebp - 0x48) + 4) < 0 ? ~( *( *(ebp - 0x48) + 4)) : *( *(ebp - 0x48) + 4);
            edx = *( *(ebp - 0x48) + 8) < 0 ? ~( *( *(ebp - 0x48) + 8)) : *( *(ebp - 0x48) + 8);
            eax = eax | edx;
            edx = *( *(ebp - 0x48) + 0xc) < 0 ? ~( *( *(ebp - 0x48) + 0xc)) : *( *(ebp - 0x48) + 0xc);
            eax = eax | edx;
            edx = *( *(ebp - 0x4c) + 4) < 0 ? ~( *( *(ebp - 0x4c) + 4)) : *( *(ebp - 0x4c) + 4);
            eax = eax | edx;
            edx = *( *(ebp - 0x4c) + 8) < 0 ? ~( *( *(ebp - 0x4c) + 8)) : *( *(ebp - 0x4c) + 8);
            eax = eax | edx;
            edx = *( *(ebp - 0x4c) + 0xc) < 0 ? ~( *( *(ebp - 0x4c) + 0xc)) : *( *(ebp - 0x4c) + 0xc);
            eax = eax | edx;
            edx = *( *(ebp - 0x50) + 4) < 0 ? ~( *( *(ebp - 0x50) + 4)) : *( *(ebp - 0x50) + 4);
            eax = eax | edx;
            edx = *( *(ebp - 0x50) + 8) < 0 ? ~( *( *(ebp - 0x50) + 8)) : *( *(ebp - 0x50) + 8);
            eax = eax | edx;
            edx = *( *(ebp - 0x50) + 0xc) < 0 ? ~( *( *(ebp - 0x50) + 0xc)) : *( *(ebp - 0x50) + 0xc);
            *(ebp - 0x6c) = L00459CEC(eax | edx) - 0xd;
            if(*(ebp - 0x6c) > 0) {
                ecx = *(ebp - 0x6c);
                *(ebp + -2448) = *( *(ebp - 0x48) + 4) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2444) = *( *(ebp - 0x48) + 8) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2440) = *( *(ebp - 0x48) + 0xc) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2460) = *( *(ebp - 0x4c) + 4) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2456) = *( *(ebp - 0x4c) + 8) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2452) = *( *(ebp - 0x4c) + 0xc) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2472) = *( *(ebp - 0x50) + 4) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2468) = *( *(ebp - 0x50) + 8) >> cl;
                ecx = *(ebp - 0x6c);
                *(ebp + -2464) = *( *(ebp - 0x50) + 0xc) >> cl;
            } else {
                eax = *(ebp - 0x48);
                *(ebp + -2448) = *(eax + 4);
                *(ebp + -2444) = *(eax + 8);
                *(ebp + -2440) = *(eax + 0xc);
                eax = *(ebp - 0x4c);
                *(ebp + -2460) = *(eax + 4);
                *(ebp + -2456) = *(eax + 8);
                *(ebp + -2452) = *(eax + 0xc);
                eax = *(ebp - 0x50);
                *(ebp + -2472) = *(eax + 4);
                *(ebp + -2468) = *(eax + 8);
                *(ebp + -2464) = *(eax + 0xc);
                *(ebp - 0x6c) = 0;
            }
            eax = *(ebp + -2448) - *(ebp + -2472);
            asm("imul dword [ebp+0xfffff668]");
            edx = *(ebp + -2460) - *(ebp + -2448);
            eax = eax + *(ebp + -2468) * *(ebp + -2468);
            edx = *(ebp + -2472) - *(ebp + -2460);
            *(ebp - 0x70) = eax + *(ebp + -2444) * *(ebp + -2444);
            eax = *(ebp + -2448) - *(ebp + -2460);
            asm("imul dword [ebp+0xfffff65c]");
            edx = *(ebp + -2472) - *(ebp + -2448);
            eax = eax + *(ebp + -2456) * *(ebp + -2456);
            edx = *(ebp + -2460) - *(ebp + -2472);
            *(ebp - 0x74) = eax + *(ebp + -2444) * *(ebp + -2444);
            eax = *(ebp + -2448);
            asm("imul dword [ebp+0xfffff668]");
            edx = *(ebp + -2460);
            *(ebp - 0x78) = eax - *(ebp + -2444) * *(ebp + -2444);
            eax = *(ebp + -2448);
            asm("imul dword [ebp+0xfffff65c]");
            edx = *(ebp + -2472);
            *(ebp - 0x7c) = eax - *(ebp + -2444) * *(ebp + -2444);
            eax = *(ebp - 0x7c) < 0 ? ~( *(ebp - 0x7c)) : *(ebp - 0x7c);
            eax = L00459CEC(eax);
            ebx = 0x1e - eax;
            if(ebx < 0) {
                ebx = 0;
            }
            if(ebx > 0xf) {
                ebx = 0xf;
            }
            if(ebx < 0xf) {
                ecx = 0xf - ebx;
                *(ebp - 0x74) = *(ebp - 0x74) >> cl;
                if(*(ebp - 0x74) == 0) {
                    *(ebp - 0x74) = 1;
                }
            }
            ecx = ebx;
            eax = *(ebp - 0x7c) << cl;
            asm("cdq");
            *(ebp - 0x74) = *(ebp - 0x74) / *(ebp - 0x74);
            edx = *(ebp - 0x74) % *(ebp - 0x74);
            *(ebp - 0x80) = eax;
            eax = *(ebp - 0x78) < 0 ? ~( *(ebp - 0x78)) : *(ebp - 0x78);
            eax = L00459CEC(eax);
            ebx = 0x1e - eax;
            if(ebx < 0) {
                ebx = 0;
            }
            if(ebx > 0xf) {
                ebx = 0xf;
            }
            if(ebx < 0xf) {
                ecx = 0xf - ebx;
                *(ebp - 0x70) = *(ebp - 0x70) >> cl;
                if(*(ebp - 0x70) == 0) {
                    *(ebp - 0x70) = 1;
                }
            }
            ecx = ebx;
            eax = *(ebp - 0x78) << cl;
            asm("cdq");
            *(ebp - 0x70) = *(ebp - 0x70) / *(ebp - 0x70);
            edx = *(ebp - 0x70) % *(ebp - 0x70);
            *(ebp + -132) = eax;
            if(*(ebp - 0x6c) < 0xf) {
                ecx = 0xf - *(ebp - 0x6c);
                eax = *(ebp + -2452) - *(ebp + -2440);
                asm("imul dword [ebp-0x80]");
                edx = *(ebp + -2464) - *(ebp + -2440);
                eax = eax + *(ebp + -132) * *(ebp + -132) >> cl;
                *(ebp + -136) = eax + *( *(ebp - 0x48) + 0xc);
            } else {
                ecx = *(ebp - 0x6c) - 0xf;
                eax = *(ebp + -2452) - *(ebp + -2440);
                asm("imul dword [ebp-0x80]");
                edx = *(ebp + -2464) - *(ebp + -2440);
                eax = eax + *(ebp + -132) * *(ebp + -132) << cl;
                *(ebp + -136) = eax + *( *(ebp - 0x48) + 0xc);
            }
            M006c734c = *(ebp + -136);
            M006c7350 = 0;
            ebx = 0;
            *(ebp + -156) = 6950788;
            do {
                eax = 0;
                edx = *(ebp + -156);
                do {
                    *edx = 0;
                    *(edx + 4) = 0;
                    eax = eax + 1;
                    edx = edx + 8;
                } while(eax < 0x20);
                ebx = ebx + 1;
                *(ebp + -156) = *(ebp + -156) + 0x100;
            } while(ebx < 2);
            goto L0046e855;
L0046e7c9:
        } else {
            ebx = 0;
            esi = ebp + -636;
            do {
                eax = ( *(esi + 8) << 3) + ( *(esi + 8) << 3) * 8;
                eax = ( *(esi + 4) << 3) + ( *(esi + 4) << 3) * 8;
                eax = ( *esi << 3) + ( *esi << 3) * 8;
                L00462EF8(eax + ebp + -2076, eax + ebp + -2076, eax + ebp + -2076, *(ebp + *(esi + 0xc) * 4 + -2436), *(ebp + *(esi + 0x10) * 4 + -2436), *(ebp + *(esi + 0x14) * 4 + -2436), *(ebp - 8), *( *(ebp - 0x14) + ebx * 4 + 8), *(ebp - 0x18), *(ebp - 0x1c), A34);
                ebx = ebx + 1;
                esi = esi + 0x18;
            } while(ebx < 0x14);
        }
L0046e855:
        L0046242C();
        if(A34 != 0) {
            *A8 = M006c734c == 2147483647 || M006c734c > Ac ? Ac : M006c734c;
        }
        eax = A18;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0046E895 - 0x0046E897
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046E895()
{



}

/*    Procedure: 0x0046E898 - 0x0046F830
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046D648()
 */

L0046E898(A8, Ac, A10, A14, A15, A16, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A15;
/* unknown */ void  A16;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    esp = esp + -292;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = Ac;
    M006a1188 = A18;
    eax = A1c;
    M006a1198 = eax;
    if(A18 != 0) {
        M006a1194 = A14;
        M006a1196 = A16;
        *(ebp - 0x30) = -1;
        L00471198(ebp - 0x64, 0, 0x24);
        *(ebp - 0x2c) = A10;
        ebx = 0;
        esi = 0x5061e4;
        do {
            eax = *esi + *esi * 2;
            (save)L004765BC( *( *(ebp - 0x2c) + eax * 4));
            eax = L004765BC( *(ebp - 0x64));
            (restore)edx;
            if(edx > eax) {
                eax = *(esi + 4) + *(esi + 4) * 2;
                (save)L004765BC( *( *(ebp - 0x2c) + eax * 4 + 4));
                eax = L004765BC( *(ebp - 0x54));
                (restore)edx;
                if(edx > eax) {
                    eax = *(esi + 8) + *(esi + 8) * 2;
                    (save)L004765BC( *( *(ebp - 0x2c) + eax * 4 + 8));
                    eax = L004765BC( *(ebp - 0x44));
                    (restore)edx;
                    if(edx > eax) {
                        eax = *esi + *esi * 2;
                        edx = *(ebp - 0x2c);
                        *(ebp - 0x64) = *(edx + eax * 4);
                        *(ebp - 0x60) = *(edx + eax * 4 + 4);
                        *(ebp - 0x5c) = *(edx + eax * 4 + 8);
                        eax = *(esi + 4) + *(esi + 4) * 2;
                        edx = *(ebp - 0x2c);
                        *(ebp - 0x58) = *(edx + eax * 4);
                        *(ebp - 0x54) = *(edx + eax * 4 + 4);
                        *(ebp - 0x50) = *(edx + eax * 4 + 8);
                        eax = *(esi + 8) + *(esi + 8) * 2;
                        edx = *(ebp - 0x2c);
                        *(ebp - 0x4c) = *(edx + eax * 4);
                        *(ebp - 0x48) = *(edx + eax * 4 + 4);
                        *(ebp - 0x44) = *(edx + eax * 4 + 8);
                    }
                }
            }
            ebx = ebx + 1;
            esi = esi + 0xc;
        } while(ebx < 6);
        *(ebp + -184) = ~( *edi);
        *(ebp + -180) = ~( *(edi + 4));
        eax = ~( *(edi + 8));
        *(ebp + -176) = eax;
        if(*(ebp - 0x64) != 0) {
            (save)edi;
            esi = ebp - 0x64;
            edi = ebp + -172;
            ecx = 9;
            asm("rep movsd");
            (restore)edi;
            *(ebp + -136) = *(ebp - 0x64);
            *(ebp + -132) = *(ebp - 0x60);
            *(ebp - 0x80) = *(ebp - 0x5c);
            *(ebp - 0x7c) = *(ebp - 0x58);
            *(ebp - 0x78) = *(ebp - 0x54);
            *(ebp - 0x74) = *(ebp - 0x50);
            *(ebp - 0x70) = *(ebp - 0x4c);
            *(ebp - 0x6c) = *(ebp - 0x48);
            *(ebp - 0x68) = *(ebp - 0x44);
            *(ebp + -196) = *(ebp + -184);
            *(ebp + -192) = *(ebp + -180);
            *(ebp + -188) = *(ebp + -176);
            *(ebp - 0x80) = *(ebp - 0x80) / *(ebp - 0x68);
            *(ebp - 0x74) = *(ebp - 0x74) / *(ebp - 0x68);
            *(ebp + -188) = *(ebp + -188) / *(ebp - 0x68);
            (fsave) *(ebp - 0x80) * *(ebp - 0x6c);
            asm("fsubr dword [ebp+0xffffff7c]");
            *(ebp + -132) = ((frestore));
            (fsave) *(ebp - 0x80) * *(ebp - 0x70);
            asm("fsubr dword [ebp+0xffffff78]");
            *(ebp + -136) = ((frestore));
            (fsave) *(ebp - 0x74) * *(ebp - 0x6c);
            asm("fsubr dword [ebp-0x78]");
            *(ebp - 0x78) = ((frestore));
            (fsave) *(ebp - 0x74) * *(ebp - 0x70);
            asm("fsubr dword [ebp-0x7c]");
            *(ebp - 0x7c) = ((frestore));
            (fsave) *(ebp + -188) * *(ebp - 0x6c);
            asm("fsubr dword [ebp+0xffffff40]");
            *(ebp + -192) = ((frestore));
            (fsave) *(ebp + -188) * *(ebp - 0x70);
            asm("fsubr dword [ebp+0xffffff3c]");
            *(ebp + -196) = ((frestore));
            *(ebp + -132) = *(ebp + -132) / *(ebp - 0x78);
            *(ebp + -192) = *(ebp + -192) / *(ebp - 0x78);
            (fsave) *(ebp + -132) * *(ebp - 0x7c);
            asm("fsubr dword [ebp+0xffffff78]");
            *(ebp + -136) = ((frestore));
            (fsave) *(ebp + -192) * *(ebp - 0x7c);
            asm("fsubr dword [ebp+0xffffff3c]");
            *(ebp + -196) = ((frestore));
            *(ebp + -196) = *(ebp + -196) / *(ebp + -136);
            (fsave) *(ebp + -196) * *(ebp + -132);
            asm("fsubr dword [ebp+0xffffff40]");
            *(ebp + -192) = ((frestore));
            (fsave) *(ebp + -196) * *(ebp - 0x80);
            asm("fsubr dword [ebp+0xffffff44]");
            *(ebp + -188) = ((frestore));
            (fsave) *(ebp + -192) * *(ebp - 0x74);
            asm("fsubr dword [ebp+0xffffff44]");
            *(ebp + -188) = ((frestore));
            (fsave) *(ebp + -196) * M0046f834;
            *(ebp + -184) = L00476414();
            (fsave) *(ebp + -192) * M0046f834;
            *(ebp + -180) = L00476414();
            (fsave) *(ebp + -188) * M0046f834;
            *(ebp + -176) = L00476414();
            ebx = L004765BC( *(ebp + -184));
            ebx = ebx + L004765BC( *(ebp + -180));
            if(ebx + L004765BC( *(ebp + -176)) >= 8388608) {
                eax = 0;
                M006a1188 = 0;
            } else {
                *(ebp - 0x34) = L00462720(ebp + -184) - 0xd;
                if(*(ebp - 0x34) > 0) {
                    ecx = *(ebp - 0x34);
                    *(ebp + -184) = *(ebp + -184) >> cl;
                    ecx = *(ebp - 0x34);
                    *(ebp + -180) = *(ebp + -180) >> cl;
                    *(ebp + -176) = *(ebp + -176) >> *(ebp - 0x34);
                } else {
                    eax = 0;
                    M006a1188 = 0;
                    goto L0046f82a;
                }
                eax = *(ebp + -184);
                asm("imul dword [ebp+0xffffff48]");
                edx = *(ebp + -180);
                eax = eax + *(ebp + -180) * *(ebp + -180);
                edx = *(ebp + -176);
                *(ebp - 0x28) = eax + *(ebp + -176) * *(ebp + -176);
                esi = *L00501670( *(ebp - 0x28));
                ecx = *(ebp - 0x34);
                if(esi << cl < 34816) {
                    ecx = *(ebp - 0x34);
                    esi = esi << cl;
                    eax = *(ebp + -184);
                    edx = eax;
                    eax = (eax << 4) + edx << 0xb;
                    asm("cdq");
                    esi = esi / esi;
                    edx = esi % esi;
                    *(ebp + -184) = eax;
                    eax = *(ebp + -180);
                    edx = eax;
                    eax = (eax << 4) + edx << 0xb;
                    asm("cdq");
                    esi = esi / esi;
                    edx = esi % esi;
                    *(ebp + -180) = eax;
                    eax = *(ebp + -176);
                    edx = eax;
                    eax = (eax << 4) + edx << 0xb;
                    asm("cdq");
                    edx = esi / esi % esi / esi;
                    *(ebp + -176) = eax;
                    ecx = *(ebp - 0x34) + *(ebp - 0x34);
                    *(ebp - 0x28) = 1212153856 >> cl;
                    ecx = *(ebp - 0x34);
                    esi = 34816 >> cl;
                }
                ebx = L004765BC( *(ebp + -184));
                if(ebx + L004765BC( *(ebp + -180)) > 0x1f4) {
                    eax = *(ebp + -180);
                    asm("imul dword [ebp+0xffffff4c]");
                    edx = *(ebp + -184);
                    ebx = *L00501670(eax + *(ebp + -184) * *(ebp + -184));
                    eax = *(ebp + -180) << 0xf;
                    asm("cdq");
                    ebx = ebx / ebx;
                    edx = ebx % ebx;
                    *(ebp + -208) = eax;
                    eax = ~( *(ebp + -184)) << 0xf;
                    asm("cdq");
                    edx = ebx / ebx % ebx / ebx;
                    *(ebp + -204) = eax;
                    *(ebp + -200) = 0;
                } else {
                    *(ebp + -208) = 32768;
                    *(ebp + -204) = 0;
                    *(ebp + -200) = 0;
                }
                eax = *(ebp + -204);
                asm("imul dword [ebp+0xffffff50]");
                edx = *(ebp + -200);
                *(ebp + -220) = eax - *(ebp + -180) * *(ebp + -180) >> 0xf;
                eax = *(ebp + -200);
                asm("imul dword [ebp+0xffffff48]");
                edx = *(ebp + -208);
                *(ebp + -216) = eax - *(ebp + -176) * *(ebp + -176) >> 0xf;
                eax = *(ebp + -208);
                asm("imul dword [ebp+0xffffff4c]");
                edx = *(ebp + -204);
                *(ebp + -212) = eax - *(ebp + -184) * *(ebp + -184) >> 0xf;
                ecx = *(ebp - 0x34) + *(ebp - 0x34);
                eax = 1073741824 >> cl;
                ebx = *(ebp - 0x28) - eax;
                if(ebx >= 0) {
                    ebx = *L00501670(ebx);
                    eax = *(ebp + -208);
                    asm("imul ebx");
                    ecx = esi + 1;
                    asm("cdq");
                    ecx = ecx / ecx;
                    edx = ecx % ecx;
                    *(ebp + -208) = eax;
                    eax = *(ebp + -204);
                    asm("imul ebx");
                    asm("cdq");
                    ecx = ecx / ecx;
                    edx = ecx % ecx;
                    *(ebp + -204) = eax;
                    eax = *(ebp + -200);
                    asm("imul ebx");
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -200) = eax;
                    eax = *(ebp + -220);
                    asm("imul ebx");
                    ecx = ( *(ebp - 0x28) >> 0xf) + 1;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -220) = eax;
                    eax = *(ebp + -216);
                    asm("imul ebx");
                    ecx = ( *(ebp - 0x28) >> 0xf) + 1;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -216) = eax;
                    eax = *(ebp + -212);
                    asm("imul ebx");
                    ecx = ( *(ebp - 0x28) >> 0xf) + 1;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -212) = eax;
                    ecx = *(ebp - 0x34);
                    eax = esi << cl;
                    if(eax > (A18 >> 0x10) + 32768) {
                        (save)(A18 >> 1) + 1073741824;
                        eax = *(ebp + -184) << 0xf;
                        asm("cdq");
                        esi = esi / esi;
                        edx = esi % esi;
                        *(ebp + -232) = L004537B0(eax) << 0x10;
                        (save)(A18 >> 1) + 1073741824;
                        eax = *(ebp + -180) << 0xf;
                        asm("cdq");
                        esi = esi / esi;
                        edx = esi % esi;
                        *(ebp + -228) = L004537B0(eax) << 0x10;
                        (save)(A18 >> 1) + 1073741824;
                        eax = *(ebp + -176) << 0xf;
                        asm("cdq");
                        edx = esi / esi % esi / esi;
                        *(ebp + -224) = L004537B0(eax) << 0x10;
                        (save) *(ebp + -232);
                        ebx = L004537B0( *(ebp + -172));
                        (save) *(ebp + -228);
                        ebx = ebx + L004537B0( *(ebp + -160));
                        (save) *(ebp + -224);
                        *(ebp + -244) = ebx + L004537B0( *(ebp + -148)) + ebx + L004537B0( *(ebp + -148)) + *edi;
                        (save) *(ebp + -232);
                        ebx = L004537B0( *(ebp + -168));
                        (save) *(ebp + -228);
                        ebx = ebx + L004537B0( *(ebp + -156));
                        (save) *(ebp + -224);
                        *(ebp + -240) = ebx + L004537B0( *(ebp + -144)) + ebx + L004537B0( *(ebp + -144)) + *(edi + 4);
                        (save) *(ebp + -232);
                        ebx = L004537B0( *(ebp + -164));
                        (save) *(ebp + -228);
                        ebx = ebx + L004537B0( *(ebp + -152));
                        (save) *(ebp + -224);
                        *(ebp + -236) = ebx + L004537B0( *(ebp + -140)) + ebx + L004537B0( *(ebp + -140)) + *(edi + 8);
                        ebx = L00462720(ebp + -244) - 0xd;
                        if(ebx > 0) {
                            ecx = ebx;
                            *(ebp + -244) = *(ebp + -244) >> cl;
                            ecx = ebx;
                            *(ebp + -240) = *(ebp + -240) >> cl;
                            *(ebp + -236) = *(ebp + -236) >> ebx;
                        } else {
                            ebx = 0;
                        }
                        eax = *(ebp + -244);
                        asm("imul dword [ebp+0xffffff0c]");
                        edx = *(ebp + -240);
                        eax = eax + *(ebp + -240) * *(ebp + -240);
                        edx = *(ebp + -236);
                        eax = *L00501670(eax + *(ebp + -236) * *(ebp + -236));
                        M006a118c = eax << ebx;
                        *(ebp + -244) = *edi;
                        *(ebp + -240) = *(edi + 4);
                        *(ebp + -236) = *(edi + 8);
                        ebx = L00462720(ebp + -244) - 0xd;
                        if(ebx > 0) {
                            ecx = ebx;
                            *(ebp + -244) = *(ebp + -244) >> cl;
                            ecx = ebx;
                            *(ebp + -240) = *(ebp + -240) >> cl;
                            *(ebp + -236) = *(ebp + -236) >> ebx;
                        } else {
                            ebx = 0;
                        }
                        eax = *(ebp + -244);
                        asm("imul dword [ebp+0xffffff0c]");
                        edx = *(ebp + -240);
                        eax = eax + *(ebp + -240) * *(ebp + -240);
                        edx = *(ebp + -236);
                        eax = *L00501670(eax + *(ebp + -236) * *(ebp + -236));
                        ebx = eax << ebx;
                        (fsave)M006a1198;
                        *(ebp + -288) = ebx;
                        (fsave) *(ebp + -288);
                        asm("fmulp st1");
                        *(ebp + -292) = ebx - M006a118c;
                        (fsave) *(ebp + -292);
                        asm("fdivp st1,st0");
                        M006a1198 = L00476414();
                        if(M006a1198 < 1) {
                            M006a1198 = 1;
                        }
                        *(ebp - 0x40) = M00644bc4;
                        *(ebp - 0x3e) = M00644bc6;
                    } else {
                        M006a118c = 0;
                        ecx = *(ebp - 0x34);
                        eax = (esi << cl) + -32768 << 0xf;
                        ecx = A18 >> 0x10;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        ebx = eax;
                        eax = 32768 - ebx;
                        edx = A14 & 0xff;
                        asm("imul edx");
                        eax = eax + eax * 2 >> 0xf;
                        *(ebp - 0x40) = al;
                        eax = 32768 - ebx;
                        edx = A15 & 0xff;
                        asm("imul edx");
                        eax = eax + eax * 2 >> 0xf;
                        *(ebp - 0x3f) = al;
                        eax = 32768 - ebx;
                        edx = A16 & 0xff;
                        asm("imul edx");
                        eax = eax + eax * 2;
                        *(ebp - 0x3e) = eax + (ebx << 2) >> 0xf;
                    }
                    ecx = 0xf - *(ebp - 0x34);
                    (save)( *(ebp - 0x28) >> cl) + 1;
                    eax = *(ebp + -184) << 0xf;
                    (restore)edx;
                    ecx = edx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -184) = eax;
                    ecx = 0xf - *(ebp - 0x34);
                    (save)( *(ebp - 0x28) >> cl) + 1;
                    eax = *(ebp + -180) << 0xf;
                    (restore)edx;
                    ecx = edx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -180) = eax;
                    ecx = 0xf - *(ebp - 0x34);
                    (save)( *(ebp - 0x28) >> cl) + 1;
                    eax = *(ebp + -176) << 0xf;
                    (restore)edx;
                    ecx = edx;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    *(ebp + -176) = eax;
                    if(M006a118c == 0) {
                        *(ebp + -232) = *(ebp + -184) << 0xf;
                        *(ebp + -228) = *(ebp + -180) << 0xf;
                        *(ebp + -224) = *(ebp + -176) << 0xf;
                        (save) *(ebp + -232);
                        esi = L004537B0( *(ebp + -172));
                        (save) *(ebp + -228);
                        esi = esi + L004537B0( *(ebp + -160));
                        (save) *(ebp + -224);
                        *(ebp + -256) = esi + L004537B0( *(ebp + -148)) + esi + L004537B0( *(ebp + -148));
                        (save) *(ebp + -232);
                        esi = L004537B0( *(ebp + -168));
                        (save) *(ebp + -228);
                        esi = esi + L004537B0( *(ebp + -156));
                        (save) *(ebp + -224);
                        *(ebp + -252) = esi + L004537B0( *(ebp + -144)) + esi + L004537B0( *(ebp + -144));
                        (save) *(ebp + -232);
                        esi = L004537B0( *(ebp + -164));
                        (save) *(ebp + -228);
                        esi = esi + L004537B0( *(ebp + -152));
                        (save) *(ebp + -224);
                        *(ebp + -248) = esi + L004537B0( *(ebp + -140)) + esi + L004537B0( *(ebp + -140));
                        *(ebp - 0x38) = L0046F838(A8, ebp + -256);
                        if(*(ebp - 0x38) == 0) {
                            *(ebp - 0x40) = M00644bc4;
                            *(ebp - 0x3e) = M00644bc6;
                        } else {
                            eax = *(ebp - 0x38) & 0xff;
                            edx = 32768 - ebx;
                            asm("imul edx");
                            if(eax < 0) {
                                eax = eax + 16383;
                            }
                            *(ebp - 0x40) = *(ebp - 0x40) + (eax >> 0xe);
                            eax = *(ebp - 0x37) & 0xff;
                            edx = 32768 - ebx;
                            asm("imul edx");
                            if(eax < 0) {
                                eax = eax + 16383;
                            }
                            *(ebp - 0x3f) = *(ebp - 0x3f) + (eax >> 0xe);
                            eax = *(ebp - 0x36) & 0xff;
                            edx = 32768 - ebx;
                            asm("imul edx");
                            if(eax < 0) {
                                eax = eax + 16383;
                            }
                            *(ebp - 0x3e) = *(ebp - 0x3e) + (eax >> 0xe);
                            if(*(ebp - 0x40) > 0xf) {
                                *(ebp - 0x40) = 0xf;
                            }
                            if(*(ebp - 0x3f) > 0xf) {
                                *(ebp - 0x3f) = 0xf;
                            }
                            if(*(ebp - 0x3e) > 0xf) {
                                *(ebp - 0x3e) = 0xf;
                            }
                            M00644bc0 = -1;
                            M00644bc4 = *(ebp - 0x40);
                            M00644bc6 = *(ebp - 0x3e);
                        }
                    }
                    L00461528(1, *(ebp - 0x30));
                    ebx = 0;
                    esi = ebp + -284;
                    do {
                        eax = A14 & 0xff;
                        ecx = 6 - ebx;
                        asm("imul ecx");
                        edx = *(ebp - 0x40) & 0xff;
                        eax = eax + ebx * ebx;
                        (save)ecx;
                        ecx = 6;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        *esi = al;
                        eax = A15 & 0xff;
                        asm("imul ecx");
                        edx = *(ebp - 0x3f) & 0xff;
                        eax = eax + ebx * ebx;
                        (save)ecx;
                        ecx = 6;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        *(esi + 1) = al;
                        eax = A16 & 0xff;
                        asm("imul ecx");
                        edx = *(ebp - 0x3e) & 0xff;
                        eax = eax + ebx * ebx;
                        ecx = 6;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        *(esi + 2) = al;
                        ebx = ebx + 1;
                        esi = esi + 4;
                    } while(ebx < 7);
                    ebx = 0;
                    do {
                        esi = ebx + 16384;
                        eax = L00470ADC(esi);
                        asm("imul dword [ebp+0xffffff30]");
                        (save)eax;
                        eax = L00470ADC(ebx);
                        asm("imul dword [ebp+0xffffff24]");
                        (restore)edx;
                        edx = edx + eax;
                        *(ebp + -232) = edx + ( *(ebp + -184) << 0xf);
                        eax = L00470ADC(esi);
                        asm("imul dword [ebp+0xffffff34]");
                        (save)eax;
                        eax = L00470ADC(ebx);
                        asm("imul dword [ebp+0xffffff28]");
                        (restore)edx;
                        edx = edx + eax;
                        *(ebp + -228) = edx + ( *(ebp + -180) << 0xf);
                        eax = L00470ADC(esi);
                        asm("imul dword [ebp+0xffffff38]");
                        (save)eax;
                        eax = L00470ADC(ebx);
                        asm("imul dword [ebp+0xffffff2c]");
                        (restore)edx;
                        edx = edx + eax;
                        *(ebp + -224) = edx + ( *(ebp + -176) << 0xf);
                        (save) *(ebp + -232);
                        esi = L004537B0( *(ebp + -172));
                        (save) *(ebp + -228);
                        esi = esi + L004537B0( *(ebp + -160));
                        (save) *(ebp + -224);
                        *(ebp + -256) = esi + L004537B0( *(ebp + -148)) + esi + L004537B0( *(ebp + -148));
                        (save) *(ebp + -232);
                        esi = L004537B0( *(ebp + -168));
                        (save) *(ebp + -228);
                        esi = esi + L004537B0( *(ebp + -156));
                        (save) *(ebp + -224);
                        *(ebp + -252) = esi + L004537B0( *(ebp + -144)) + esi + L004537B0( *(ebp + -144));
                        (save) *(ebp + -232);
                        esi = L004537B0( *(ebp + -164));
                        (save) *(ebp + -228);
                        esi = esi + L004537B0( *(ebp + -152));
                        (save) *(ebp + -224);
                        esi = esi + L004537B0( *(ebp + -140)) + esi + L004537B0( *(ebp + -140));
                        *(ebp + -248) = esi;
                        *(ebp + -244) = *(ebp + -256) + *edi;
                        *(ebp + -240) = *(ebp + -252) + *(edi + 4);
                        *(ebp + -236) = esi + *(edi + 8);
                        if(L00452681(ebp - 0x20, ebp + -244) != 0) {
                            *(ebp - 0x1e) = 32770;
                            *(ebp - 0x20) = 32770;
                        }
                        (save)A18;
                        esi = *(ebp + -256);
                        *(ebp + -244) = L004537B0(esi) + esi + *edi;
                        (save)A18;
                        esi = *(ebp + -252);
                        *(ebp + -240) = L004537B0(esi) + esi + *(edi + 4);
                        (save)A18;
                        esi = *(ebp + -248);
                        *(ebp + -236) = L004537B0(esi) + esi + *(edi + 8);
                        if(L00452681(ebp - 0x24, ebp + -244) != 0) {
                            *(ebp - 0x22) = 32770;
                            *(ebp - 0x24) = 32770;
                        }
                        eax = *(ebp + -256);
                        *(ebp + -244) = eax - (eax >> 3) + *edi;
                        eax = *(ebp + -252);
                        *(ebp + -240) = eax - (eax >> 3) + *(edi + 4);
                        eax = *(ebp + -248);
                        *(ebp + -236) = eax - (eax >> 3) + *(edi + 8);
                        if(L00452681(ebp - 0x1c, ebp + -244) != 0) {
                            *(ebp - 0x1a) = 32770;
                            *(ebp - 0x1c) = 32770;
                        }
                        if(ebx != 0) {
                            L0046F8F4(A8, ebp - 0x10, ebp - 0x14, ebp - 0x18, ebp - 0x1c, ebp - 0x20, ebp - 0x24, ebp + -284, ebp + -256);
                        } else {
                            *(ebp - 4) = *(ebp - 0x1c);
                            *(ebp - 8) = *(ebp - 0x20);
                            *(ebp - 0xc) = *(ebp - 0x24);
                        }
                        *(ebp - 0x10) = *(ebp - 0x1c);
                        *(ebp - 0x14) = *(ebp - 0x20);
                        *(ebp - 0x18) = *(ebp - 0x24);
                        ebx = ebx + 0x800;
                    } while(ebx < 65536);
                    L0046F8F4(A8, ebp - 4, ebp - 8, ebp - 0xc, ebp - 0x10, ebp - 0x14, ebp - 0x18, ebp + -284, ebp + -256);
                    eax = L00461528(0, 0);
                }
            }
        }
    }
L0046f82a:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0046F831 - 0x0046F837
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046F831()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    edi = edi + 1;
}

/*    Procedure: 0x0046F838 - 0x0046F8F1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0046E898()
 *        L0046F8F4()
 */

L0046F838(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  esi;



    esi = L00462720(Ac) - 0xe;
    if(esi > 0) {
        ecx = esi;
        *Ac = *Ac >> cl;
        ecx = esi;
        *(Ac + 4) = *(Ac + 4) >> cl;
        *(Ac + 8) = *(Ac + 8) >> esi;
    }
    esi = *L00501674(Ac) + 1;
    eax = *Ac << 0xf;
    asm("cdq");
    esi = esi / esi;
    A8 = esi % esi;
    *Ac = eax;
    eax = *(Ac + 4) << 0xf;
    asm("cdq");
    esi = esi / esi;
    A8 = esi % esi;
    *(Ac + 4) = eax;
    eax = *(Ac + 8) << 0xf;
    asm("cdq");
    A8 = esi / esi % esi / esi;
    ecx = eax;
    *(Ac + 8) = ecx;
    eax = *(A8 + 0x134);
    asm("imul dword [ebx]");
    A8 = *(A8 + 0x138);
    eax = eax + *(Ac + 4) * *(Ac + 4);
    A8 = *(A8 + 0x13c);
    eax = eax + ecx * ecx;
    if(eax < 0) {
        eax = eax >> 0x1b;
        if(eax < 0x18) {
            eax = 0;
        }
        eax = (eax & 7) + (eax & 7) * 2;
        *(ebp - 4) = *(A8 + eax + 0x84);
        *(ebp - 2) = *(A8 + eax + 0x86);
    } else {
        *(ebp - 4) = 0;
    }
    return *(ebp - 4);
}

/*    Procedure: 0x0046F8F2 - 0x0046F8F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046F8F2()
{



}

/*    Procedure: 0x0046F8F4 - 0x0046FB7A
 *    Argument size: 36
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0046E898()
 */

L0046F8F4(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffff9;
    /* unknown */ void  Vfffffffa;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;



    ebx = A24;
    esi = A14;
    eax = A10;
    if(*eax != 32770) {
        eax = A1c;
        if(*eax != 32770) {
            Vfffffff8 = *(ebx + 4) > 8 || *(ebx + 5) > 8 || *(ebx + 6) > 8 ? 0 : L0046F838(A8, A28);
            Vfffffffc = *ebx + Vfffffff8;
            *L004f80a0(Vfffffffc);
            Vfffffff4 = ax & 65535;
            edi = L0045DA14( *A10);
            edi = edi | L0045DA14( *esi);
            edi = edi | L0045DA14( *A20);
            if(*((edi | L0045DA14( *A1c)) * 4 + 0x5044c8) == 0) {
                edi = L0045DA48( *(A10 + 2));
                edi = edi | L0045DA48( *(esi + 2));
                edi = edi | L0045DA48( *(A20 + 2));
                if(*((edi | L0045DA48( *(A1c + 2))) * 4 + 0x5044c8) == 0) {
                    eax = L004614B8(0xd, 0, 0);
                    *eax = 0x461d0c;
                    *(eax + 4) = *esi;
                    *(eax + 8) = *A10;
                    *(eax + 0xc) = *A1c;
                    *(eax + 0x10) = *A20;
                    *(eax + 0x14) = 0x43;
                    *(eax + 0x18) = Vfffffff4;
                    esi = 1;
                    edi = eax + 0x1c;
                    ebx = ebx + 4;
                    do {
                        eax = Vfffffff8 & 0xff;
                        ecx = 6 - esi;
                        asm("imul ecx");
                        (save)ecx;
                        ecx = 6;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        Vfffffffc = al + *ebx;
                        eax = Vfffffff9 & 0xff;
                        asm("imul ecx");
                        (save)ecx;
                        ecx = 6;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        (restore)ecx;
                        Vfffffffd = al + *(ebx + 1);
                        eax = Vfffffffa & 0xff;
                        asm("imul ecx");
                        ecx = 6;
                        asm("cdq");
                        edx = ecx / ecx % ecx / ecx;
                        Vfffffffe = al + *(ebx + 2);
                        *L004f80a0(Vfffffffc);
                        *edi = ax & 65535;
                        esi = esi + 1;
                        edi = edi + 4;
                        ebx = ebx + 4;
                    } while(esi < 7);
                }
            }
            ebx = L0045DA14( *A10);
            ebx = ebx | L0045DA14( *Ac);
            ebx = ebx | L0045DA14( *A18);
            eax = L0045DA14( *A1c);
            if(*((ebx | eax) * 4 + 0x5044c8) == 0) {
                ebx = L0045DA48( *(A10 + 2));
                ebx = ebx | L0045DA48( *(Ac + 2));
                ebx = ebx | L0045DA48( *(A18 + 2));
                eax = L0045DA48( *(A1c + 2));
                if(*((ebx | eax) * 4 + 0x5044c8) == 0) {
                    eax = L004614B8(6, 0, 0);
                    *eax = 0x462060;
                    *(eax + 4) = *A10;
                    *(eax + 8) = *Ac;
                    *(eax + 0xc) = *A18;
                    *(eax + 0x10) = *A1c;
                    *(eax + 0x14) = Vfffffff4;
                }
            }
        }
    }
}

/*    Procedure: 0x0046FB7B - 0x0046FB7B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FB7B()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0046FB7C - 0x0046FC5A
 *    Argument size: 0
 *    Local size: 48
 *    Save regs size: 12
 *    Called by:
 *        L00458424()
 */

L0046FB7C()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd6;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vfffffffc;



    ebx = & Vffffffdc;
    *(ebx + 1) = 0xf;
    L00470FE8(0x10, ebx, ebx);
    M006c7360 = al & 0x7f;
    *ebx = 0x13;
    L00470FE8(0x10, ebx, ebx);
    *ebx = 2;
    *(ebx + 4) = 40960;
    L00470FE8(0x31, ebx, ebx);
    *ebx = 6;
    *(ebx + 4) = *ebx & 65535;
    L00470FE8(0x31, ebx, ebx);
    edi = ( *(ebx + 8) & 65535) << 0x10;
    edi = edi + ( *(ebx + 0xc) & 65535);
    L004710EC( & Vffffffd0);
    esi = Vffffffd6 & 65535;
    *ebx = 6;
    *(ebx + 4) = si;
    L00470FE8(0x31, ebx, ebx);
    eax = ( *(ebx + 8) & 65535) << 0x10;
    Vfffffffc = eax + ( *(ebx + 0xc) & 65535);
    *ebx = 8;
    *(ebx + 4) = si;
    *(ebx + 8) = edi + 65536 - 1 - Vfffffffc >> 0x10;
    *(ebx + 0xc) = ax;
    eax = L00470FE8(0x31, ebx, ebx);
    M00502e9c = edi - Vfffffffc;
}

/*    Procedure: 0x0046FC5B - 0x0046FC79
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FC5B()
{



    do {
        L00470FDC(0x3da);
    } while(al & 8);
    do {
    } while(L00470FDC(0x3da) & 8);
}

/*    Procedure: 0x0046FC7A - 0x0046FC93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00458384()
 */

L0046FC7A()
{



    return L00471128(M00502e9c, M00502e6c, 64000);
}

/*    Procedure: 0x0046FC94 - 0x0046FCCD
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041D8B4()
 */

L0046FC94(A8)
/* unknown */ void  A8;
{



    return L00471128((A8 << 6) + (A8 << 6) * 4 + M00502e9c, (A8 << 6) + (A8 << 6) * 4 + M00502e6c, (0xc8 - A8 << 6) + (0xc8 - A8 << 6) * 4);
}

/*    Procedure: 0x0046FCCE - 0x0046FD15
 *    Argument size: -32
 *    Local size: 32
 *    Save regs size: 0
 *    Called by:
 *        L00419838()
 *        L0045397C()
 */

L0046FCCE()
{
    /* unknown */ void  Vffffffe0;



    L004710DD(0x3ce, 65288);
    L004710DD(0x3ce, 5);
    Vffffffe0 = M006c7360;
    return L00470FE8(0x10, & Vffffffe0, & Vffffffe0);
}

/*    Procedure: 0x0046FD16 - 0x0046FD17
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD16()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0046FD18 - 0x0046FD1F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00417FC0()
 */

L0046FD18()
{



    M006dcda0 = 0;
    return 0;
}

/*    Procedure: 0x0046FD20 - 0x0046FD20
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD20()
{



}

/*    Procedure: 0x0046FD21 - 0x0046FD26
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046FD72()
 */

L0046FD21()
{



    return M006dcda0;
}

/*    Procedure: 0x0046FD27 - 0x0046FD27
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD27()
{



}

/*    Procedure: 0x0046FD28 - 0x0046FD28
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD28()
{



}

/*    Procedure: 0x0046FD29 - 0x0046FD44
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0046FD72()
 */

L0046FD29()
{
    /* unknown */ void  ebx;



    ecx = 0x19;
    eax = M006dcda0 + 1;
    asm("cdq");
    M006dcda0 = ecx / ecx % ecx / ecx;
}

/*    Procedure: 0x0046FD45 - 0x0046FD45
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD45()
{



}

/*    Procedure: 0x0046FD46 - 0x0046FD4D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00417FC0()
 */

L0046FD46()
{



    M006dcda4 = 0;
    return 0;
}

/*    Procedure: 0x0046FD4E - 0x0046FD4E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD4E()
{



}

/*    Procedure: 0x0046FD4F - 0x0046FD55
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046FD72()
 */

L0046FD4F()
{



    M006dcda4 = M006dcda4 + 1;
}

/*    Procedure: 0x0046FD56 - 0x0046FD56
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD56()
{



}

/*    Procedure: 0x0046FD57 - 0x0046FD70
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418264()
 */

L0046FD57()
{



    edx = M006dcda4;
    M006dcda4 = 1;
    return M006dcda4;
}

/*    Procedure: 0x0046FD71 - 0x0046FD71
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD71()
{



}

/*    Procedure: 0x0046FD72 - 0x0046FDF1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FD72(A10)
/* unknown */ void  A10;
{



    *(L0046FD21() * 0x1b6 * 8 + 7111092) = 0;
    L0046FD29();
    if(*(L0046FD21() * 0x1b6 * 8 + 7111092) > 0) {
        M00506234 = *(L0046FD21() * 0x1b6 * 8 + 7111092);
        M0050622c = L0046FD21() * 0xdb0 + 7107592;
        L0044C059(M006dca68, A10, 0x50622c);
        L0046FD4F();
    }
    return L0044B89F();
}

/*    Procedure: 0x0046FDF2 - 0x0046FDF2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FDF2()
{



}

/*    Procedure: 0x0046FDF3 - 0x0046FECE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0046FECF()
 */

L0046FDF3()
{



    if(L0044AE51(0x46fd71, 0x81) != 0 || L0044AE51(7107592, 87600) != 0 || L0044AE51(0x46fd20, 7) != 0 || L0044AE51(7196064, 4) != 0 || L0044AE51(0x46fd28, 0x1d) != 0 || L0044AE51(0x50622c, 0x74) != 0 || L0044AE51(0x46fd4e, 8) != 0 || L0044AE51(7196068, 4) != 0) {
        L00473DA8("Failed to lock DIGICallback stuff\n");
        eax = L004539E4();
    }
}

/*    Procedure: 0x0046FECF - 0x0046FF48
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045381C()
 */

L0046FECF()
{



    L00419720();
    L00410074();
    if(M00506374 != 0 && M0050637c != 0) {
        L00470837();
        M0050622c = 7107592;
        M00506248 = 0x46fd72;
        L0046FDF3();
        M00506254 = 0x80;
        eax = 0;
        do {
            *(eax * 8 + 7195984) = -1;
            *(eax * 8 + 7195988) = -1;
            eax = eax + 1;
        } while(eax < 0xa);
    }
    L004469FB(0x7f);
    M00649ed8 = -1;
    return 1;
}

/*    Procedure: 0x0046FF49 - 0x00470049
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0046FF49()
{



    if(L0047122C(7195200, "PC_SPEAKER") == 0) {
        M006dca54 = 57607;
        M00506374 = 1;
        eax = 0;
        M00506378 = 0;
        M0050637c = 1;
    } else {
        eax = L0047122C(7195200, "SOUND_BLASTER");
        if(eax == 0) {
            M006dca54 = 57344;
            M00506374 = 1;
            M00506378 = 1;
            M0050637c = 1;
        } else {
            eax = L0047122C(7195200, "SOUND_BLASTER_16");
            if(eax == 0) {
                M006dca54 = 57367;
                M00506374 = 1;
                M00506378 = 1;
                M0050637c = 1;
            } else {
                eax = L0047122C(7195200, "GRAVIS_ULTRASOUND");
                if(eax == 0) {
                    M006dca54 = 57385;
                    M00506374 = 1;
                    M00506378 = 1;
                    M0050637c = 1;
                }
            }
        }
    }
    return M006dca54;
}

/*    Procedure: 0x0047004A - 0x004700B3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004700B4()
 */

L0047004A(A8)
/* unknown */ void  A8;
{



    if(M00506378 != 0) {
        L0047017D();
        L00474830(7195728, "music\");
        L00473C18(7195472, 6641547, 7195728, *(A8 * 4 + 0x506380), "hmp");
        eax = L004111F4(7195472);
        M006c7404 = eax;
        if(eax == -1) {
            L00410F2C();
            eax = L00419838();
        }
    }
}

/*    Procedure: 0x004700B4 - 0x0047017C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041C00E()
 *        L0041C1F3()
 *        L00420318()
 *        L0042043C()
 *        L0042CB40()
 *        L0042FA73()
 *        L0043C5F2()
 *        L00444610()
 */

L004700B4(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = A8;
    edi = 6572964;
    if(*L00648B01 != 0 && M00506378 != 0 && M00506374 != 0 && ebx < 0x11) {
        if(ebx >= 0) {
            goto L00470132;
        }
        esi = 0;
        eax = *L004eeed4(0x10);
        for(ebx = eax; ebx < 0x10 && esi < 0xa && ( *(edi + ebx + 16230) == 0 || ebx == *(edi + 21300)); esi = esi + 1) {
            eax = *L004eeed4(0x10);
            ebx = eax;
        }
        if(esi < 0xa) {
L00470132:
            if(*(edi + ebx + 16230) != 0 && ebx != *(edi + 21300)) {
                L0047004A(ebx);
                if(L00446781(M006c7404) != 0) {
                    eax = L0047017D();
                } else {
                    eax = L00447C7C(M006c7404, 0x7f);
                    *(edi + 21300) = ebx;
                }
            }
        }
    }
}

/*    Procedure: 0x0047017D - 0x00470182
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041A3C5()
 *        L0041C1F3()
 *        L0042FA73()
 *        L00430410()
 *        L0043C40C()
 *        L0043C5F2()
 *        L00442609()
 *        L004444DE()
 *        L0047004A()
 *        L004700B4()
 */

L0047017D()
{



    return L00470183();
}

/*    Procedure: 0x00470183 - 0x004701BC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041B0F8()
 *        L0043C567()
 *        L0045397C()
 *        L0047017D()
 *        L00470A94()
 */

L00470183()
{



    if(M00506378 != 0 && M00649ed8 >= 0) {
        L004467D4(M006c7404);
        L00446760(M006c7404);
        eax = L00411348();
        M00649ed8 = -1;
    }
}

/*    Procedure: 0x004701BD - 0x004701BD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0045397C()
 */

L004701BD()
{



}

/*    Procedure: 0x004701BE - 0x004703BF
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00419530()
 *        L0041ADE9()
 *        L0041B118()
 *        L0041C1F3()
 *        L0041EF5C()
 *        L00421ED0()
 *        L004223B4()
 *        L0042273C()
 *        L00422960()
 *        L0042296D()
 *        L0042E38F()
 *        L0042FA73()
 *        L0043BD9F()
 *        L0043DA28()
 *        L0043F76E()
 *        L00440DAC()
 *        L00440F30()
 *        L00440F61()
 *        L0044110C()
 *        L0044155E()
 *        L00441700()
 *        L0044191C()
 *        L00441964()
 *        L00441A7C()
 *        L00442EC4()
 *        L00443922()
 *        L00443A0B()
 *        L00443AD0()
 *        L00443B90()
 *        L0044421C()
 *        L00444870()
 *        L00445590()
 *        L004462A8()
 */

L004701BE(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = A8;
    edi = 7195984;
    if(M00648b00 != 0 && M0050637c != 0 && M00506374 != 0) {
        if(ebx != 0x14) {
            goto L00470205;
        }
        if(M00648b08 != 0) {
L00470205:
            if(ebx != 0x10) {
                goto L00470217;
            }
            if(M00648b02 != 0) {
L00470217:
                if(ebx != 0xf) {
                    goto L00470229;
                }
                if(M00648b04 != 0) {
L00470229:
                    if(ebx != 0xe && ebx != 0x25) {
                        goto L00470240;
                    }
                    if(M00648b06 != 0) {
L00470240:
                        if(ebx < 0x28) {
                            if(ebx == 0x1f) {
                                esi = 0;
                                if(*(edi + 4) < 0) {
                                    goto L004702fe;
                                }
                                eax = L0044BEA5(M0060c10c, *edi);
                                if(eax != 0) {
                                    goto L004702fe;
                                }
                                eax = L0044C0FB(M0060c10c, *(edi + esi * 8));
                                goto L004702fe;
                            }
                            esi = 0;
                            do {
                                if(ebx == *(edi + esi * 8 + 4)) {
                                    goto L0047028f;
                                }
                                if(*(edi + esi * 8) == -1 || (eax = L0044BEA5(M0060c10c, *(edi + esi * 8)) - 1)) {
                                    break;
                                }
                                esi = esi + 1;
                            } while(esi < 0xa);
                            goto L004702fe;
L0047028f:
                            if(ebx != 0x1e && ebx != 0x10 && ebx != 0xf && ebx != 0x19 && ebx != 0x1a && ebx != 0xe && ebx != 0x25) {
                                goto L004702cb;
                            }
                            eax = L0044BEA5(M0060c10c, *(edi + esi * 8));
                            if(eax != 0) {
L004702cb:
                                eax = L0044C0FB(M0060c10c, *(edi + esi * 8));
L004702fe:
                                if(esi < 0xa) {
                                    if(ebx == 0xe || ebx == 0x25) {
                                        ebx = 0xe;
                                        if(*L004eeed4(4) >= 1) {
                                            ebx = ebx + 0x17;
                                        }
                                    }
                                    *(edi + esi * 8) = L0044BF25(M0060c10c, *(ebx * 4 + 7107428));
                                    *(edi + esi * 8 + 4) = ebx;
                                    if(ebx == 0xe || ebx == 0x25) {
                                        L0044DB48(M0060c10c, *(edi + esi * 8), *L004eeed4(16383));
                                        eax = L0044DD79(M0060c10c, *(edi + esi * 8), *L004eeed4(16384) + 24576);
                                    } else {
                                        eax = L0044DB48(M0060c10c, *(edi + esi * 8), 32767);
                                    }
                                    if(ebx == 0x1f) {
                                        eax = L00470711(0, 0, 0, 0);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x004703C0 - 0x00470591
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0042E746()
 *        L0042E7CB()
 *        L0042F78E()
 *        L0043CF50()
 *        L0043D588()
 *        L0043D654()
 *        L0043DA28()
 *        L0043DD28()
 *        L0043E288()
 */

L004703C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = Ac;
    if(M00648b00 != 0 && M0050637c != 0 && M00506374 != 0) {
        if(A8 != 0x10) {
            goto L00470405;
        }
        if(M00648b02 != 0) {
L00470405:
            if(A8 != 0xf) {
                goto L00470417;
            }
            if(M00648b04 != 0) {
L00470417:
                if(A8 != 0xe && A8 != 0x25) {
                    goto L0047042e;
                }
                if(M00648b06 != 0) {
L0047042e:
                    if(edi <= 0xf) {
                        if(edi < 0) {
                            edi = 0;
                        }
                        edi = edi >> 2;
                        ebx = 0;
                        do {
                            if(A8 == *(ebx * 8 + 7195988)) {
                                goto L0047044b;
                            }
                            if(*(ebx * 8 + 7195984) == -1 || (eax = L0044BEA5(M0060c10c, *(ebx * 8 + 7195984)) - 1)) {
                                break;
                            }
                            ebx = ebx + 1;
                        } while(ebx < 0xa);
                        goto L004704e9;
L0047044b:
                        if(A8 != 0x10 && A8 != 0xf && A8 != 0x19 && A8 != 0x1a && A8 != 0xe && A8 != 0x25) {
                            goto L004704a6;
                        }
                        if(L0044BEA5(M0060c10c, *(ebx * 8 + 7195984)) == 0) {
                            ecx = edi;
                            eax = L0044DB48(M0060c10c, *(ebx * 8 + 7195984), 32767 >> cl);
                        } else {
L004704a6:
                            eax = L0044C0FB(M0060c10c, *(ebx * 8 + 7195984));
L004704e9:
                            if(ebx < 0xa) {
                                goto L00470527;
                            }
                            if(A8 == 0x1f && !(edi = edi - 1)) {
                                L00470711(0, 0, 0, 0);
                                eax = L0044C0FB(M0060c10c, *L006DCD50);
                                goto L0047058d;
L00470527:
                                *(ebx * 8 + 7195984) = L0044BF25(M0060c10c, *(A8 * 4 + 7107428));
                                *(ebx * 8 + 7195988) = A8;
                                ecx = edi;
                                eax = L0044DB48(M0060c10c, *(ebx * 8 + 7195984), 32767 >> cl);
                                if(A8 == 0x1f && !(edi = edi - 1)) {
                                    L00470592(0xf, 0);
                                    eax = L00470711(0, 0, 0, 0);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0047058d:
}

/*    Procedure: 0x00470592 - 0x004706D3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00444534()
 *        L0045FFDE()
 *        L004703C0()
 */

L00470592(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 7195984;
    if(M00648b00 != 0 && M0050637c != 0 && M00506374 != 0) {
        if(A8 != 0x10) {
            goto L004705d9;
        }
        if(M00648b02 != 0) {
L004705d9:
            if(A8 != 0xf) {
                goto L004705eb;
            }
            if(M00648b04 != 0) {
L004705eb:
                if(A8 != 0xe && A8 != 0x25) {
                    goto L00470602;
                }
                if(M00648b06 != 0) {
L00470602:
                    ebx = 0;
                    do {
                        if(A8 == *(edi + ebx * 8 + 4)) {
                            goto L0047060a;
                        }
                        if(*(edi + ebx * 8) == -1 || (eax = L0044BEA5(M0060c10c, *(edi + ebx * 8)) - 1)) {
                            break;
                        }
                        ebx = ebx + 1;
                    } while(ebx < 0xa);
                    goto L00470691;
L0047060a:
                    if(A8 == 0x10 || A8 == 0xf || A8 == 0x19 || A8 == 0x1a || A8 == 0xe || A8 == 0x25) {
                        L0044BEA5(M0060c10c, *(edi + ebx * 8)) :: 0;
                        eax = L0044DB48(M0060c10c, *(edi + ebx * 8), Ac << 9 & 32767);
                    } else {
                        eax = L0044C0FB(M0060c10c, *(edi + ebx * 8));
L00470691:
                        if(ebx < 0xa) {
                            *(edi + ebx * 8) = L0044BF25(M0060c10c, *(A8 * 4 + 7107428));
                            *(edi + ebx * 8 + 4) = A8;
                            eax = L0044DB48(M0060c10c, *(edi + ebx * 8), Ac << 9 & 32767);
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x004706D4 - 0x00470710
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0043C567()
 */

L004706D4()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 7195984;
    if(M0050637c != 0 && M00506374 != 0) {
        ebx = 0;
        do {
            eax = L0044C0FB(M0060c10c, *(esi + ebx * 8));
            *(esi + ebx * 8 + 4) = -1;
            ebx = ebx + 1;
        } while(ebx < 0xa);
    }
}

/*    Procedure: 0x00470711 - 0x00470836
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0044230C()
 *        L0044237C()
 *        L004424FC()
 *        L004701BE()
 *        L004703C0()
 */

L00470711(Ac)
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;



    edi = 7195984;
    if(M00648b00 != 0 && M0050637c != 0 && M00506374 != 0 && M00648b02 != 0) {
        ebx = 0;
        do {
            if(*(edi + ebx * 8 + 4) == 0x10) {
                goto L00470765;
            }
            if(*(edi + ebx * 8) == -1 || (eax = L0044BEA5(M0060c10c, *(edi + ebx * 8)) - 1)) {
                break;
            }
            ebx = ebx + 1;
        } while(ebx < 0xa);
        goto L004707e4;
L00470765:
        eax = L0044BEA5(M0060c10c, *(edi + ebx * 8));
        if(eax == 0) {
            if(Ac <= 2) {
                eax = L0044C0FB(M0060c10c, *(edi + ebx * 8));
                *(edi + ebx * 8 + 4) = -1;
            } else {
                L0044DB48(M0060c10c, *(edi + ebx * 8), Ac);
                eax = L0044DD79(M0060c10c, *(edi + ebx * 8), Ac + 65536);
            }
        } else {
L004707e4:
            if(ebx < 0xa) {
                *(edi + ebx * 8) = L0044BF25(M0060c10c, M006c73a4);
                *(edi + ebx * 8 + 4) = 0x10;
                L0044DB48(M0060c10c, *(edi + ebx * 8), Ac);
                eax = L0044DD79(M0060c10c, *(edi + ebx * 8), Ac + 65536);
            }
        }
    }
}

/*    Procedure: 0x00470837 - 0x00470A91
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0046FECF()
 */

L00470837()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 7107428;
    ebx = 0;
    do {
        if(!(eax = ebx - 0xd)) {
            if(eax = eax - 3) {
                *(esi + ebx * 4) = L0047777C(0x74);
                L00471128( *(esi + ebx * 4), *(esi + 0x3c), 0x74);
                if(L0044AE51( *(esi + ebx * 4), 0x74) == 0) {
                    goto L004709e9;
                }
                L00473DA8("Failed to lock sample group 3\n");
                L004539E4();
                goto L004709e9;
            }
            if(!(eax = eax - 2 - 2)) {
                goto L00470858;
            }
        }
        *(esi + ebx * 4) = L0047777C(0x74);
        L00471128( *(esi + ebx * 4), *(esi + 0x30), 0x74);
        if(L0044AE51( *(esi + ebx * 4), 0x74) != 0) {
            L00473DA8("Failed to lock sample group 1\n");
            L004539E4();
            goto L004709e9;
L00470858:
            if(!(eax = eax - 0x11)) {
                goto L00470931;
            }
            *(esi + ebx * 4) = L0047777C(0x74);
            L00471128( *(esi + ebx * 4), *(esi + 0x38), 0x74);
            if(L0044AE51( *(esi + ebx * 4), 0x74) != 0) {
                L00473DA8("Failed to lock sample group 2\n");
                L004539E4();
                goto L004709e9;
L00470931:
                L00474830(7195728, "FX\");
                L00473C18(7195472, 6641547, 7195728, *(ebx * 4 + 0x5063c4), "raw");
                eax = L004110F4(7195472);
                *(esi + ebx * 4) = eax;
                if(*(esi + ebx * 4) == 0) {
                    eax = L004110F4(7195472);
                    *(esi + ebx * 4) = eax;
                    if(*(esi + ebx * 4) == 0) {
                        eax = L004110F4(7195472);
                        *(esi + ebx * 4) = eax;
                        if(*(esi + ebx * 4) == 0) {
                            eax = L004110F4(7195472);
                            *(esi + ebx * 4) = eax;
                            if(*(esi + ebx * 4) == 0) {
                                eax = L004110F4(7195472);
                                *(esi + ebx * 4) = eax;
                                if(*(esi + ebx * 4) == 0) {
                                    L00473DA8("Fatal read error. (disc not responding)\n", 7195472);
                                    L00410F2C();
                                    L00477E60(1);
                                }
                            }
                        }
                    }
                }
                *( *(esi + ebx * 4) + 0x28) = 0x180;
            }
        }
L004709e9:
        ebx = ebx + 1;
    } while(ebx < 0x28);
    *( *(esi + 0x38) + 0x28) = *( *(esi + 0x38) + 0x28) | 0x400;
    *( *(esi + 0x38) + 0x38) = 32768;
    *( *(esi + 0x94) + 0x28) = *( *(esi + 0x94) + 0x28) | 0x400;
    *( *(esi + 0x94) + 0x38) = 16384;
    *( *(esi + 0x3c) + 0x28) = *( *(esi + 0x3c) + 0x28) | 16384;
    *( *(esi + 0x3c) + 0xc) = 0x32;
    *( *(esi + 0x78) + 0x28) = *( *(esi + 0x78) + 0x28) | 16384;
    *( *(esi + 0x78) + 0xc) = 3;
    *( *(esi + 0x64) + 0x28) = *( *(esi + 0x64) + 0x28) | 16384;
    *( *(esi + 0x64) + 0xc) = 2;
    *( *(esi + 0x68) + 0x28) = *( *(esi + 0x68) + 0x28) | 16384;
    *( *(esi + 0x68) + 0xc) = 2;
    *( *(esi + 0x40) + 0x28) = *( *(esi + 0x40) + 0x28) | 17408;
    *( *(esi + 0x40) + 0x38) = 65536;
    eax = *(esi + 0x40);
    *(eax + 0xc) = 0x32;
}

/*    Procedure: 0x00470A92 - 0x00470A92
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470A92()
{



}

/*    Procedure: 0x00470A93 - 0x00470A93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470A93()
{



}

/*    Procedure: 0x00470A94 - 0x00470AD9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041C00E()
 *        L0043C5F2()
 */

L00470A94()
{
    /* unknown */ void  ebx;



    if(M00649ed8 == -1) {
        return 1;
    }
    if(M00506374 == 0 || M00506378 == 0) {
        return 1;
    }
    ebx = L00446CCD(M006c7404);
    if(ebx == 1) {
        L00470183();
    }
    return ebx;
}

/*    Procedure: 0x00470ADA - 0x00470ADB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470ADA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00470ADC - 0x00470B40
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0042FA02()
 *        L00452F67()
 *        L0045A552()
 *        L0045A5DA()
 *        L0046E898()
 */

L00470ADC(A8)
/* unknown */ void  A8;
{



    eax = A8;
    edx = eax & 16383;
    if(!(eax = (eax >> 0xe & 3) - 1)) {
        == ? L00470b0b : ;
        if(eax = eax - 1) {
            goto L00470b1e;
        }
        if(eax = eax - 1) {
            goto L00470b2c;
        }
        return;
    }
    return *(edx * 4 + 0x5066e0) >> 0x10;
    return *((16383 - edx) * 4 + 0x5066e0) >> 0x10;
L00470b1e:
    return ~( *(edx * 4 + 0x5066e0) >> 0x10);
L00470b2c:
    return ~( *((16383 - edx) * 4 + 0x5066e0) >> 0x10);
}

/*    Procedure: 0x00470B41 - 0x00470B99
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00452FC4()
 *        L0045347D()
 *        L0045AF4C()
 *        L0045AFF0()
 *        L0045B08C()
 *        L0045F23C()
 *        L0045FE30()
 */

L00470B41(A8)
/* unknown */ void  A8;
{



    eax = A8;
    edx = eax & 16383;
    if(!(eax = (eax >> 0xe & 3) - 1)) {
        == ? L00470b6d : ;
        if(eax = eax - 1) {
            goto L00470b7d;
        }
        if(eax = eax - 1) {
            goto L00470b88;
        }
        return;
    }
    return *(edx * 4 + 0x5066e0);
    return *((16383 - edx) * 4 + 0x5066e0);
L00470b7d:
    return ~( *(edx * 4 + 0x5066e0));
L00470b88:
    return ~( *((16383 - edx) * 4 + 0x5066e0));
}

/*    Procedure: 0x00470B9A - 0x00470BA2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470B9A()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    asm("int 0x0");
}

/*    Procedure: 0x00470BA3 - 0x00470BA6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BA3()
{



    asm("int 0x1");
}

/*    Procedure: 0x00470BA7 - 0x00470BAA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BA7()
{



    asm("int 0x2");
}

/*    Procedure: 0x00470BAB - 0x00470BAE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BAB()
{



    asm("int 0x3");
}

/*    Procedure: 0x00470BAF - 0x00470BB2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BAF()
{



    asm("int 0x4");
}

/*    Procedure: 0x00470BB3 - 0x00470BB6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BB3()
{



    asm("int 0x5");
}

/*    Procedure: 0x00470BB7 - 0x00470BBA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BB7()
{



    asm("int 0x6");
}

/*    Procedure: 0x00470BBB - 0x00470BBE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BBB()
{



    asm("int 0x7");
}

/*    Procedure: 0x00470BBF - 0x00470BC2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BBF()
{



    asm("int 0x8");
}

/*    Procedure: 0x00470BC3 - 0x00470BC6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BC3()
{



    asm("int 0x9");
}

/*    Procedure: 0x00470BC7 - 0x00470BCA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BC7()
{



    asm("int 0xa");
}

/*    Procedure: 0x00470BCB - 0x00470BCE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BCB()
{



    asm("int 0xb");
}

/*    Procedure: 0x00470BCF - 0x00470BD2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BCF()
{



    asm("int 0xc");
}

/*    Procedure: 0x00470BD3 - 0x00470BD6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BD3()
{



    asm("int 0xd");
}

/*    Procedure: 0x00470BD7 - 0x00470BDA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BD7()
{



    asm("int 0xe");
}

/*    Procedure: 0x00470BDB - 0x00470BDE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BDB()
{



    asm("int 0xf");
}

/*    Procedure: 0x00470BDF - 0x00470BE2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BDF()
{



    asm("int 0x10");
}

/*    Procedure: 0x00470BE3 - 0x00470BE6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BE3()
{



    asm("int 0x11");
}

/*    Procedure: 0x00470BE7 - 0x00470BEA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BE7()
{



    asm("int 0x12");
}

/*    Procedure: 0x00470BEB - 0x00470BEE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BEB()
{



    asm("int 0x13");
}

/*    Procedure: 0x00470BEF - 0x00470BF2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BEF()
{



    asm("int 0x14");
}

/*    Procedure: 0x00470BF3 - 0x00470BF6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BF3()
{



    asm("int 0x15");
}

/*    Procedure: 0x00470BF7 - 0x00470BFA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BF7()
{



    asm("int 0x16");
}

/*    Procedure: 0x00470BFB - 0x00470BFE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BFB()
{



    asm("int 0x17");
}

/*    Procedure: 0x00470BFF - 0x00470C02
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470BFF()
{



    asm("int 0x18");
}

/*    Procedure: 0x00470C03 - 0x00470C06
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C03()
{



    asm("int 0x19");
}

/*    Procedure: 0x00470C07 - 0x00470C0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C07()
{



    asm("int 0x1a");
}

/*    Procedure: 0x00470C0B - 0x00470C0E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C0B()
{



    asm("int 0x1b");
}

/*    Procedure: 0x00470C0F - 0x00470C12
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C0F()
{



    asm("int 0x1c");
}

/*    Procedure: 0x00470C13 - 0x00470C16
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C13()
{



    asm("int 0x1d");
}

/*    Procedure: 0x00470C17 - 0x00470C1A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C17()
{



    asm("int 0x1e");
}

/*    Procedure: 0x00470C1B - 0x00470C1E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C1B()
{



    asm("int 0x1f");
}

/*    Procedure: 0x00470C1F - 0x00470C22
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C1F()
{



    asm("int 0x20");
}

/*    Procedure: 0x00470C23 - 0x00470C26
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C23()
{



    asm("int 0x21");
}

/*    Procedure: 0x00470C27 - 0x00470C2A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C27()
{



    asm("int 0x22");
}

/*    Procedure: 0x00470C2B - 0x00470C2E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C2B()
{



    asm("int 0x23");
}

/*    Procedure: 0x00470C2F - 0x00470C32
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C2F()
{



    asm("int 0x24");
}

/*    Procedure: 0x00470C33 - 0x00470C36
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C33()
{



    asm("int 0x25");
}

/*    Procedure: 0x00470C37 - 0x00470C3A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C37()
{



    asm("int 0x26");
}

/*    Procedure: 0x00470C3B - 0x00470C3E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C3B()
{



    asm("int 0x27");
}

/*    Procedure: 0x00470C3F - 0x00470C42
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C3F()
{



    asm("int 0x28");
}

/*    Procedure: 0x00470C43 - 0x00470C46
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C43()
{



    asm("int 0x29");
}

/*    Procedure: 0x00470C47 - 0x00470C4A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C47()
{



    asm("int 0x2a");
}

/*    Procedure: 0x00470C4B - 0x00470C4E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C4B()
{



    asm("int 0x2b");
}

/*    Procedure: 0x00470C4F - 0x00470C52
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C4F()
{



    asm("int 0x2c");
}

/*    Procedure: 0x00470C53 - 0x00470C56
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C53()
{



    asm("int 0x2d");
}

/*    Procedure: 0x00470C57 - 0x00470C5A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C57()
{



    asm("int 0x2e");
}

/*    Procedure: 0x00470C5B - 0x00470C5E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C5B()
{



    asm("int 0x2f");
}

/*    Procedure: 0x00470C5F - 0x00470C62
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C5F()
{



    asm("int 0x30");
}

/*    Procedure: 0x00470C63 - 0x00470C66
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C63()
{



    asm("int 0x31");
}

/*    Procedure: 0x00470C67 - 0x00470C6A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C67()
{



    asm("int 0x32");
}

/*    Procedure: 0x00470C6B - 0x00470C6E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C6B()
{



    asm("int 0x33");
}

/*    Procedure: 0x00470C6F - 0x00470C72
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C6F()
{



    asm("int 0x34");
}

/*    Procedure: 0x00470C73 - 0x00470C76
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C73()
{



    asm("int 0x35");
}

/*    Procedure: 0x00470C77 - 0x00470C7A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C77()
{



    asm("int 0x36");
}

/*    Procedure: 0x00470C7B - 0x00470C7E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C7B()
{



    asm("int 0x37");
}

/*    Procedure: 0x00470C7F - 0x00470C82
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C7F()
{



    asm("int 0x38");
}

/*    Procedure: 0x00470C83 - 0x00470C86
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C83()
{



    asm("int 0x39");
}

/*    Procedure: 0x00470C87 - 0x00470C8A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C87()
{



    asm("int 0x3a");
}

/*    Procedure: 0x00470C8B - 0x00470C8E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C8B()
{



    asm("int 0x3b");
}

/*    Procedure: 0x00470C8F - 0x00470C92
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C8F()
{



    asm("int 0x3c");
}

/*    Procedure: 0x00470C93 - 0x00470C96
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C93()
{



    asm("int 0x3d");
}

/*    Procedure: 0x00470C97 - 0x00470C9A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C97()
{



    asm("int 0x3e");
}

/*    Procedure: 0x00470C9B - 0x00470C9E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C9B()
{



    asm("int 0x3f");
}

/*    Procedure: 0x00470C9F - 0x00470CA2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470C9F()
{



    asm("int 0x40");
}

/*    Procedure: 0x00470CA3 - 0x00470CA6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CA3()
{



    asm("int 0x41");
}

/*    Procedure: 0x00470CA7 - 0x00470CAA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CA7()
{



    asm("int 0x42");
}

/*    Procedure: 0x00470CAB - 0x00470CAE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CAB()
{



    asm("int 0x43");
}

/*    Procedure: 0x00470CAF - 0x00470CB2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CAF()
{



    asm("int 0x44");
}

/*    Procedure: 0x00470CB3 - 0x00470CB6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CB3()
{



    asm("int 0x45");
}

/*    Procedure: 0x00470CB7 - 0x00470CBA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CB7()
{



    asm("int 0x46");
}

/*    Procedure: 0x00470CBB - 0x00470CBE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CBB()
{



    asm("int 0x47");
}

/*    Procedure: 0x00470CBF - 0x00470CC2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CBF()
{



    asm("int 0x48");
}

/*    Procedure: 0x00470CC3 - 0x00470CC6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CC3()
{



    asm("int 0x49");
}

/*    Procedure: 0x00470CC7 - 0x00470CCA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CC7()
{



    asm("int 0x4a");
}

/*    Procedure: 0x00470CCB - 0x00470CCE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CCB()
{



    asm("int 0x4b");
}

/*    Procedure: 0x00470CCF - 0x00470CD2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CCF()
{



    asm("int 0x4c");
}

/*    Procedure: 0x00470CD3 - 0x00470CD6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CD3()
{



    asm("int 0x4d");
}

/*    Procedure: 0x00470CD7 - 0x00470CDA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CD7()
{



    asm("int 0x4e");
}

/*    Procedure: 0x00470CDB - 0x00470CDE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CDB()
{



    asm("int 0x4f");
}

/*    Procedure: 0x00470CDF - 0x00470CE2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CDF()
{



    asm("int 0x50");
}

/*    Procedure: 0x00470CE3 - 0x00470CE6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CE3()
{



    asm("int 0x51");
}

/*    Procedure: 0x00470CE7 - 0x00470CEA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CE7()
{



    asm("int 0x52");
}

/*    Procedure: 0x00470CEB - 0x00470CEE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CEB()
{



    asm("int 0x53");
}

/*    Procedure: 0x00470CEF - 0x00470CF2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CEF()
{



    asm("int 0x54");
}

/*    Procedure: 0x00470CF3 - 0x00470CF6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CF3()
{



    asm("int 0x55");
}

/*    Procedure: 0x00470CF7 - 0x00470CFA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CF7()
{



    asm("int 0x56");
}

/*    Procedure: 0x00470CFB - 0x00470CFE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CFB()
{



    asm("int 0x57");
}

/*    Procedure: 0x00470CFF - 0x00470D02
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470CFF()
{



    asm("int 0x58");
}

/*    Procedure: 0x00470D03 - 0x00470D06
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D03()
{



    asm("int 0x59");
}

/*    Procedure: 0x00470D07 - 0x00470D0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D07()
{



    asm("int 0x5a");
}

/*    Procedure: 0x00470D0B - 0x00470D0E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D0B()
{



    asm("int 0x5b");
}

/*    Procedure: 0x00470D0F - 0x00470D12
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D0F()
{



    asm("int 0x5c");
}

/*    Procedure: 0x00470D13 - 0x00470D16
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D13()
{



    asm("int 0x5d");
}

/*    Procedure: 0x00470D17 - 0x00470D1A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D17()
{



    asm("int 0x5e");
}

/*    Procedure: 0x00470D1B - 0x00470D1E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D1B()
{



    asm("int 0x5f");
}

/*    Procedure: 0x00470D1F - 0x00470D22
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D1F()
{



    asm("int 0x60");
}

/*    Procedure: 0x00470D23 - 0x00470D26
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D23()
{



    asm("int 0x61");
}

/*    Procedure: 0x00470D27 - 0x00470D2A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D27()
{



    asm("int 0x62");
}

/*    Procedure: 0x00470D2B - 0x00470D2E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D2B()
{



    asm("int 0x63");
}

/*    Procedure: 0x00470D2F - 0x00470D32
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D2F()
{



    asm("int 0x64");
}

/*    Procedure: 0x00470D33 - 0x00470D36
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D33()
{



    asm("int 0x65");
}

/*    Procedure: 0x00470D37 - 0x00470D3A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D37()
{



    asm("int 0x66");
}

/*    Procedure: 0x00470D3B - 0x00470D3E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D3B()
{



    asm("int 0x67");
}

/*    Procedure: 0x00470D3F - 0x00470D42
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D3F()
{



    asm("int 0x68");
}

/*    Procedure: 0x00470D43 - 0x00470D46
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D43()
{



    asm("int 0x69");
}

/*    Procedure: 0x00470D47 - 0x00470D4A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D47()
{



    asm("int 0x6a");
}

/*    Procedure: 0x00470D4B - 0x00470D4E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D4B()
{



    asm("int 0x6b");
}

/*    Procedure: 0x00470D4F - 0x00470D52
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D4F()
{



    asm("int 0x6c");
}

/*    Procedure: 0x00470D53 - 0x00470D56
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D53()
{



    asm("int 0x6d");
}

/*    Procedure: 0x00470D57 - 0x00470D5A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D57()
{



    asm("int 0x6e");
}

/*    Procedure: 0x00470D5B - 0x00470D5E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D5B()
{



    asm("int 0x6f");
}

/*    Procedure: 0x00470D5F - 0x00470D62
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D5F()
{



    asm("int 0x70");
}

/*    Procedure: 0x00470D63 - 0x00470D66
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D63()
{



    asm("int 0x71");
}

/*    Procedure: 0x00470D67 - 0x00470D6A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D67()
{



    asm("int 0x72");
}

/*    Procedure: 0x00470D6B - 0x00470D6E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D6B()
{



    asm("int 0x73");
}

/*    Procedure: 0x00470D6F - 0x00470D72
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D6F()
{



    asm("int 0x74");
}

/*    Procedure: 0x00470D73 - 0x00470D76
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D73()
{



    asm("int 0x75");
}

/*    Procedure: 0x00470D77 - 0x00470D7A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D77()
{



    asm("int 0x76");
}

/*    Procedure: 0x00470D7B - 0x00470D7E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D7B()
{



    asm("int 0x77");
}

/*    Procedure: 0x00470D7F - 0x00470D82
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D7F()
{



    asm("int 0x78");
}

/*    Procedure: 0x00470D83 - 0x00470D86
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D83()
{



    asm("int 0x79");
}

/*    Procedure: 0x00470D87 - 0x00470D8A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D87()
{



    asm("int 0x7a");
}

/*    Procedure: 0x00470D8B - 0x00470D8E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D8B()
{



    asm("int 0x7b");
}

/*    Procedure: 0x00470D8F - 0x00470D92
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D8F()
{



    asm("int 0x7c");
}

/*    Procedure: 0x00470D93 - 0x00470D96
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D93()
{



    asm("int 0x7d");
}

/*    Procedure: 0x00470D97 - 0x00470D9A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D97()
{



    asm("int 0x7e");
}

/*    Procedure: 0x00470D9B - 0x00470D9E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D9B()
{



    asm("int 0x7f");
}

/*    Procedure: 0x00470D9F - 0x00470DA2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470D9F()
{



    asm("int 0x80");
}

/*    Procedure: 0x00470DA3 - 0x00470DA6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DA3()
{



    asm("int 0x81");
}

/*    Procedure: 0x00470DA7 - 0x00470DAA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DA7()
{



    asm("int 0x82");
}

/*    Procedure: 0x00470DAB - 0x00470DAE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DAB()
{



    asm("int 0x83");
}

/*    Procedure: 0x00470DAF - 0x00470DB2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DAF()
{



    asm("int 0x84");
}

/*    Procedure: 0x00470DB3 - 0x00470DB6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DB3()
{



    asm("int 0x85");
}

/*    Procedure: 0x00470DB7 - 0x00470DBA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DB7()
{



    asm("int 0x86");
}

/*    Procedure: 0x00470DBB - 0x00470DBE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DBB()
{



    asm("int 0x87");
}

/*    Procedure: 0x00470DBF - 0x00470DC2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DBF()
{



    asm("int 0x88");
}

/*    Procedure: 0x00470DC3 - 0x00470DC6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DC3()
{



    asm("int 0x89");
}

/*    Procedure: 0x00470DC7 - 0x00470DCA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DC7()
{



    asm("int 0x8a");
}

/*    Procedure: 0x00470DCB - 0x00470DCE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DCB()
{



    asm("int 0x8b");
}

/*    Procedure: 0x00470DCF - 0x00470DD2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DCF()
{



    asm("int 0x8c");
}

/*    Procedure: 0x00470DD3 - 0x00470DD6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DD3()
{



    asm("int 0x8d");
}

/*    Procedure: 0x00470DD7 - 0x00470DDA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DD7()
{



    asm("int 0x8e");
}

/*    Procedure: 0x00470DDB - 0x00470DDE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DDB()
{



    asm("int 0x8f");
}

/*    Procedure: 0x00470DDF - 0x00470DE2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DDF()
{



    asm("int 0x90");
}

/*    Procedure: 0x00470DE3 - 0x00470DE6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DE3()
{



    asm("int 0x91");
}

/*    Procedure: 0x00470DE7 - 0x00470DEA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DE7()
{



    asm("int 0x92");
}

/*    Procedure: 0x00470DEB - 0x00470DEE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DEB()
{



    asm("int 0x93");
}

/*    Procedure: 0x00470DEF - 0x00470DF2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DEF()
{



    asm("int 0x94");
}

/*    Procedure: 0x00470DF3 - 0x00470DF6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DF3()
{



    asm("int 0x95");
}

/*    Procedure: 0x00470DF7 - 0x00470DFA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DF7()
{



    asm("int 0x96");
}

/*    Procedure: 0x00470DFB - 0x00470DFE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DFB()
{



    asm("int 0x97");
}

/*    Procedure: 0x00470DFF - 0x00470E02
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470DFF()
{



    asm("int 0x98");
}

/*    Procedure: 0x00470E03 - 0x00470E06
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E03()
{



    asm("int 0x99");
}

/*    Procedure: 0x00470E07 - 0x00470E0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E07()
{



    asm("int 0x9a");
}

/*    Procedure: 0x00470E0B - 0x00470E0E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E0B()
{



    asm("int 0x9b");
}

/*    Procedure: 0x00470E0F - 0x00470E12
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E0F()
{



    asm("int 0x9c");
}

/*    Procedure: 0x00470E13 - 0x00470E16
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E13()
{



    asm("int 0x9d");
}

/*    Procedure: 0x00470E17 - 0x00470E1A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E17()
{



    asm("int 0x9e");
}

/*    Procedure: 0x00470E1B - 0x00470E1E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E1B()
{



    asm("int 0x9f");
}

/*    Procedure: 0x00470E1F - 0x00470E22
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E1F()
{



    asm("int 0xa0");
}

/*    Procedure: 0x00470E23 - 0x00470E26
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E23()
{



    asm("int 0xa1");
}

/*    Procedure: 0x00470E27 - 0x00470E2A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E27()
{



    asm("int 0xa2");
}

/*    Procedure: 0x00470E2B - 0x00470E2E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E2B()
{



    asm("int 0xa3");
}

/*    Procedure: 0x00470E2F - 0x00470E32
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E2F()
{



    asm("int 0xa4");
}

/*    Procedure: 0x00470E33 - 0x00470E36
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E33()
{



    asm("int 0xa5");
}

/*    Procedure: 0x00470E37 - 0x00470E3A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E37()
{



    asm("int 0xa6");
}

/*    Procedure: 0x00470E3B - 0x00470E3E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E3B()
{



    asm("int 0xa7");
}

/*    Procedure: 0x00470E3F - 0x00470E42
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E3F()
{



    asm("int 0xa8");
}

/*    Procedure: 0x00470E43 - 0x00470E46
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E43()
{



    asm("int 0xa9");
}

/*    Procedure: 0x00470E47 - 0x00470E4A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E47()
{



    asm("int 0xaa");
}

/*    Procedure: 0x00470E4B - 0x00470E4E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E4B()
{



    asm("int 0xab");
}

/*    Procedure: 0x00470E4F - 0x00470E52
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E4F()
{



    asm("int 0xac");
}

/*    Procedure: 0x00470E53 - 0x00470E56
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E53()
{



    asm("int 0xad");
}

/*    Procedure: 0x00470E57 - 0x00470E5A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E57()
{



    asm("int 0xae");
}

/*    Procedure: 0x00470E5B - 0x00470E5E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E5B()
{



    asm("int 0xaf");
}

/*    Procedure: 0x00470E5F - 0x00470E62
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E5F()
{



    asm("int 0xb0");
}

/*    Procedure: 0x00470E63 - 0x00470E66
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E63()
{



    asm("int 0xb1");
}

/*    Procedure: 0x00470E67 - 0x00470E6A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E67()
{



    asm("int 0xb2");
}

/*    Procedure: 0x00470E6B - 0x00470E6E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E6B()
{



    asm("int 0xb3");
}

/*    Procedure: 0x00470E6F - 0x00470E72
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E6F()
{



    asm("int 0xb4");
}

/*    Procedure: 0x00470E73 - 0x00470E76
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E73()
{



    asm("int 0xb5");
}

/*    Procedure: 0x00470E77 - 0x00470E7A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E77()
{



    asm("int 0xb6");
}

/*    Procedure: 0x00470E7B - 0x00470E7E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E7B()
{



    asm("int 0xb7");
}

/*    Procedure: 0x00470E7F - 0x00470E82
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E7F()
{



    asm("int 0xb8");
}

/*    Procedure: 0x00470E83 - 0x00470E86
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E83()
{



    asm("int 0xb9");
}

/*    Procedure: 0x00470E87 - 0x00470E8A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E87()
{



    asm("int 0xba");
}

/*    Procedure: 0x00470E8B - 0x00470E8E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E8B()
{



    asm("int 0xbb");
}

/*    Procedure: 0x00470E8F - 0x00470E92
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E8F()
{



    asm("int 0xbc");
}

/*    Procedure: 0x00470E93 - 0x00470E96
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E93()
{



    asm("int 0xbd");
}

/*    Procedure: 0x00470E97 - 0x00470E9A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E97()
{



    asm("int 0xbe");
}

/*    Procedure: 0x00470E9B - 0x00470E9E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E9B()
{



    asm("int 0xbf");
}

/*    Procedure: 0x00470E9F - 0x00470EA2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470E9F()
{



    asm("int 0xc0");
}

/*    Procedure: 0x00470EA3 - 0x00470EA6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EA3()
{



    asm("int 0xc1");
}

/*    Procedure: 0x00470EA7 - 0x00470EAA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EA7()
{



    asm("int 0xc2");
}

/*    Procedure: 0x00470EAB - 0x00470EAE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EAB()
{



    asm("int 0xc3");
}

/*    Procedure: 0x00470EAF - 0x00470EB2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EAF()
{



    asm("int 0xc4");
}

/*    Procedure: 0x00470EB3 - 0x00470EB6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EB3()
{



    asm("int 0xc5");
}

/*    Procedure: 0x00470EB7 - 0x00470EBA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EB7()
{



    asm("int 0xc6");
}

/*    Procedure: 0x00470EBB - 0x00470EBE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EBB()
{



    asm("int 0xc7");
}

/*    Procedure: 0x00470EBF - 0x00470EC2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EBF()
{



    asm("int 0xc8");
}

/*    Procedure: 0x00470EC3 - 0x00470EC6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EC3()
{



    asm("int 0xc9");
}

/*    Procedure: 0x00470EC7 - 0x00470ECA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EC7()
{



    asm("int 0xca");
}

/*    Procedure: 0x00470ECB - 0x00470ECE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470ECB()
{



    asm("int 0xcb");
}

/*    Procedure: 0x00470ECF - 0x00470ED2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470ECF()
{



    asm("int 0xcc");
}

/*    Procedure: 0x00470ED3 - 0x00470ED6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470ED3()
{



    asm("int 0xcd");
}

/*    Procedure: 0x00470ED7 - 0x00470EDA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470ED7()
{



    asm("int 0xce");
}

/*    Procedure: 0x00470EDB - 0x00470EDE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EDB()
{



    asm("int 0xcf");
}

/*    Procedure: 0x00470EDF - 0x00470EE2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EDF()
{



    asm("int 0xd0");
}

/*    Procedure: 0x00470EE3 - 0x00470EE6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EE3()
{



    asm("int 0xd1");
}

/*    Procedure: 0x00470EE7 - 0x00470EEA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EE7()
{



    asm("int 0xd2");
}

/*    Procedure: 0x00470EEB - 0x00470EEE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EEB()
{



    asm("int 0xd3");
}

/*    Procedure: 0x00470EEF - 0x00470EF2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EEF()
{



    asm("int 0xd4");
}

/*    Procedure: 0x00470EF3 - 0x00470EF6
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EF3()
{



    asm("int 0xd5");
}

/*    Procedure: 0x00470EF7 - 0x00470EFA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EF7()
{



    asm("int 0xd6");
}

/*    Procedure: 0x00470EFB - 0x00470EFE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EFB()
{



    asm("int 0xd7");
}

/*    Procedure: 0x00470EFF - 0x00470F02
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470EFF()
{



    asm("int 0xd8");
}

/*    Procedure: 0x00470F03 - 0x00470F06
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F03()
{



    asm("int 0xd9");
}

/*    Procedure: 0x00470F07 - 0x00470F0A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F07()
{



    asm("int 0xda");
}

/*    Procedure: 0x00470F0B - 0x00470F0E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F0B()
{



    asm("int 0xdb");
}

/*    Procedure: 0x00470F0F - 0x00470F12
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F0F()
{



    asm("int 0xdc");
}

/*    Procedure: 0x00470F13 - 0x00470F16
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F13()
{



    asm("int 0xdd");
}

/*    Procedure: 0x00470F17 - 0x00470F1A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F17()
{



    asm("int 0xde");
}

/*    Procedure: 0x00470F1B - 0x00470F1E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F1B()
{



    asm("int 0xdf");
}

/*    Procedure: 0x00470F1F - 0x00470F22
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F1F()
{



    asm("int 0xe0");
}

/*    Procedure: 0x00470F23 - 0x00470F26
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F23()
{



    asm("int 0xe1");
}

/*    Procedure: 0x00470F27 - 0x00470F2A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F27()
{



    asm("int 0xe2");
}

/*    Procedure: 0x00470F2B - 0x00470F2E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F2B()
{



    asm("int 0xe3");
}

/*    Procedure: 0x00470F2F - 0x00470F32
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F2F()
{



    asm("int 0xe4");
}

/*    Procedure: 0x00470F33 - 0x00470F36
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F33()
{



    asm("int 0xe5");
}

/*    Procedure: 0x00470F37 - 0x00470F3A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F37()
{



    asm("int 0xe6");
}

/*    Procedure: 0x00470F3B - 0x00470F3E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F3B()
{



    asm("int 0xe7");
}

/*    Procedure: 0x00470F3F - 0x00470F42
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F3F()
{



    asm("int 0xe8");
}

/*    Procedure: 0x00470F43 - 0x00470F46
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F43()
{



    asm("int 0xe9");
}

/*    Procedure: 0x00470F47 - 0x00470F4A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F47()
{



    asm("int 0xea");
}

/*    Procedure: 0x00470F4B - 0x00470F4E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F4B()
{



    asm("int 0xeb");
}

/*    Procedure: 0x00470F4F - 0x00470F52
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F4F()
{



    asm("int 0xec");
}

/*    Procedure: 0x00470F53 - 0x00470F56
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F53()
{



    asm("int 0xed");
}

/*    Procedure: 0x00470F57 - 0x00470F5A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F57()
{



    asm("int 0xee");
}

/*    Procedure: 0x00470F5B - 0x00470F5E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F5B()
{



    asm("int 0xef");
}

/*    Procedure: 0x00470F5F - 0x00470F62
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F5F()
{



    asm("int 0xf0");
}

/*    Procedure: 0x00470F63 - 0x00470F66
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F63()
{



    asm("int 0xf1");
}

/*    Procedure: 0x00470F67 - 0x00470F6A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F67()
{



    asm("int 0xf2");
}

/*    Procedure: 0x00470F6B - 0x00470F6E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F6B()
{



    asm("int 0xf3");
}

/*    Procedure: 0x00470F6F - 0x00470F72
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F6F()
{



    asm("int 0xf4");
}

/*    Procedure: 0x00470F73 - 0x00470F76
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F73()
{



    asm("int 0xf5");
}

/*    Procedure: 0x00470F77 - 0x00470F7A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F77()
{



    asm("int 0xf6");
}

/*    Procedure: 0x00470F7B - 0x00470F7E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F7B()
{



    asm("int 0xf7");
}

/*    Procedure: 0x00470F7F - 0x00470F82
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F7F()
{



    asm("int 0xf8");
}

/*    Procedure: 0x00470F83 - 0x00470F86
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F83()
{



    asm("int 0xf9");
}

/*    Procedure: 0x00470F87 - 0x00470F8A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F87()
{



    asm("int 0xfa");
}

/*    Procedure: 0x00470F8B - 0x00470F8E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F8B()
{



    asm("int 0xfb");
}

/*    Procedure: 0x00470F8F - 0x00470F92
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F8F()
{



    asm("int 0xfc");
}

/*    Procedure: 0x00470F93 - 0x00470F96
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F93()
{



    asm("int 0xfd");
}

/*    Procedure: 0x00470F97 - 0x00470F9A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F97()
{



    asm("int 0xfe");
}

/*    Procedure: 0x00470F9B - 0x00470F9E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F9B()
{



    asm("int 0xff");
}

/*    Procedure: 0x00470F9F - 0x00470F9F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00470F9F()
{



}

/*    Procedure: 0x00470FA0 - 0x00470FB5
 *    Argument size: 4
 *    Local size: 4
 *    Save regs size: 4
 *    Called by:
 *        L0047100F()
 */

L00470FA0(Ac)
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    eax = 0x470ba0 + (Ac << 2);
    asm("xchg eax,[esp+0x4]");
}

/*    Procedure: 0x00470FB6 - 0x00470FC2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00470FB6(A8)
/* unknown */ void  A8;
{



    eax = 0;
    asm("in ax,dx");
}

/*    Procedure: 0x00470FC3 - 0x00470FCE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00470FC3(A8)
/* unknown */ void  A8;
{



    eax = 0;
    asm("in al,dx");
}

/*    Procedure: 0x00470FCF - 0x00470FDB
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00470FCF(A8)
/* unknown */ void  A8;
{



    eax = 0;
    asm("in ax,dx");
}

/*    Procedure: 0x00470FDC - 0x00470FE7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044FB75()
 *        L0044FCE0()
 *        L0044FF28()
 *        L004506F0()
 *        L00450BF0()
 *        L00458480()
 *        L00458580()
 *        L00458614()
 *        L0046FC5B()
 */

L00470FDC(A8)
/* unknown */ void  A8;
{



    eax = 0;
    asm("in al,dx");
}

/*    Procedure: 0x00470FE8 - 0x0047100E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043CA54()
 *        L0044F898()
 *        L0044F8D0()
 *        L0044F938()
 *        L004501E4()
 *        L004502D0()
 *        L0045035C()
 *        L0046FB7C()
 *        L0046FCCE()
 */

L00470FE8()
{



    asm("enter 0xc,0x0");
    L004710EC(ebp - 0xc);
    eax = L0047100F( *(ebp + 8), *(ebp + 0xc), *(ebp + 0x10), ebp - 0xc);
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x0047100F - 0x00471094
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00470FE8()
 */

L0047100F()
{



    asm("enter 0x4,0x0");
    (save)ebx;
    (save)edi;
    (save)esi;
    (save)es;
    (save)ds;
    (save)fs;
    (save)gs;
    esi = *(ebp + 0x14);
    es = *esi;
    fs = *(esi + 8);
    gs = *(esi + 0xa);
    ds = *(esi + 6);
    esi = *(ebp + 0xc);
    eax = *esi;
    ebx = *(esi + 4);
    ecx = *(esi + 8);
    edx = *(esi + 0xc);
    edi = *(esi + 0x14);
    esi = *(esi + 0x10);
    asm("clc");
    eax = L00470FA0( *(ebp + 8));
    asm("pushf");
    (restore) *(ebp - 4);
    esi = *(ebp + 0x10);
    *esi = eax;
    *(esi + 4) = ebx;
    *(esi + 8) = ecx;
    *(esi + 0xc) = edx;
    *(esi + 0x10) = esi;
    *(esi + 0x14) = edi;
    ebx = *(ebp - 4);
    *(esi + 0x1c) = ebx;
    ebx = *(esi + 0x1c) & 1;
    *(esi + 0x18) = ebx;
    esi = *(ebp + 0x14);
    *esi = es;
    *(esi + 6) = ds;
    *(esi + 8) = fs;
    *(esi + 0xa) = gs;
    (restore)gs;
    (restore)fs;
    (restore)ds;
    (restore)es;
    if(ebx == 0) {
        M0060beac = eax;
        M006dcf24 = eax;
    }
    (restore)esi;
    (restore)edi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x00471095 - 0x004710AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471095()
{



    if(M006dd144 != 2) {
        eax = L00477D58("This DPMI32 module cannot be run on Win32");
    }
}

/*    Procedure: 0x004710B0 - 0x004710BE
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004710B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    asm("out dx,ax");
}

/*    Procedure: 0x004710BF - 0x004710CB
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004710BF(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    asm("out dx,al");
}

/*    Procedure: 0x004710CC - 0x004710DC
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L004710CC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac & 65535;
    asm("out dx,ax");
}

/*    Procedure: 0x004710DD - 0x004710EB
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00419838()
 *        L0044EA8A()
 *        L0044FB75()
 *        L0044FCE0()
 *        L0044FF28()
 *        L0044FFA9()
 *        L004506F0()
 *        L00450BF0()
 *        L0045397C()
 *        L00458480()
 *        L00458580()
 *        L00458614()
 *        L0046FCCE()
 */

L004710DD(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac & 0xff;
    asm("out dx,al");
}

/*    Procedure: 0x004710EC - 0x00471104
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0044F8D0()
 *        L0046FB7C()
 *        L00470FE8()
 */

L004710EC(A8)
/* unknown */ void  A8;
{



    *A8 = es;
    *(A8 + 2) = cs;
    *(A8 + 4) = ss;
    *(A8 + 6) = ds;
    *(A8 + 8) = fs;
    *(A8 + 0xa) = gs;
}

/*    Procedure: 0x00471105 - 0x00471107
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471105()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00471108 - 0x00471127
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004751A8()
 *        L00475214()
 *        L00475344()
 */

L00471108(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    asm("jecxz 0x471122");
    asm("cld");
    asm("repne scasb");
    != ? 0x471122 : ;
    eax = A8 - 1;
L0047111f:
    return;
    eax = 0;
    goto L0047111f;
    *eax = *eax + Ac;
}

/*    Procedure: 0x00471128 - 0x0047114B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00418C88()
 *        L00419D8C()
 *        L00419E48()
 *        L0041B7DE()
 *        L0041F15A()
 *        L0041FB3C()
 *        L0041FED9()
 *        L0043980C()
 *        L0043B150()
 *        L0043B2D8()
 *        L0043E5D5()
 *        L0043E750()
 *        L00443C33()
 *        L0044ED3C()
 *        L00453A70()
 *        L00453CC8()
 *        L00457D34()
 *        L00457D58()
 *        L00457FA8()
 *        L00458204()
 *        L004582E8()
 *        L00459C38()
 *        L0045B2CC()
 *        L0045B69C()
 *        L0045B778()
 *        L0045ED38()
 *        L0046FC7A()
 *        L0046FC94()
 *        L00470837()
 *        L004713AC()
 *        L00471428()
 *        L00471926()
 *        L00471DC2()
 *        L00473584()
 *        L00473694()
 *        L00474805()
 *        L004751A8()
 *        L00475344()
 *        L00475CA9()
 */

L00471128(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    ecx = A10;
    edx = ecx;
    ecx = ecx >> 1 >> 1;
    asm("cld");
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
}

/*    Procedure: 0x0047114C - 0x00471195
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00410568()
 *        L00410694()
 *        L004108C1()
 *        L00410928()
 *        L00410A36()
 *        L00410B1B()
 *        L00420AEC()
 *        L0042BCF4()
 *        L00475D3D()
 *        L00477980()
 */

L0047114C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A8;
    esi = Ac;
    ecx = A10;
    edx = ecx;
    if(edi >= esi) {
        == ? L0047118f : ;
        asm("std");
        esi = esi + ecx - 1;
        edi = edi + ecx - 1;
        ecx = ecx & 3;
        asm("rep movsb");
        ecx = edx >> 1 >> 1;
        esi = esi - 3;
        edi = edi - 3;
        asm("rep movsd");
        asm("cld");
    } else {
        asm("cld");
        ecx = ecx >> 1 >> 1;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
    }
    return A8;
}

/*    Procedure: 0x00471196 - 0x00471197
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471196()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00471198 - 0x004711C5
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410CA8()
 *        L004110F4()
 *        L004111F4()
 *        L00417479()
 *        L004192F0()
 *        L0041B0A0()
 *        L00422408()
 *        L0043C5F2()
 *        L0043E5D5()
 *        L0043FF64()
 *        L0044E3E3()
 *        L00455DF4()
 *        L00457D88()
 *        L00457DA4()
 *        L00458010()
 *        L0046E898()
 *        L004713AC()
 *        L00471DC2()
 *        L00473DC8()
 *        L00476883()
 *        L00477014()
 */

L00471198(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = Ac << 0x10;
    ecx = A10;
    edx = ecx;
    ecx = ecx >> 1 >> 1;
    asm("cld");
    asm("rep stosd");
    ecx = edx & 3;
    asm("rep stosb");
    return A8;
}

/*    Procedure: 0x004711C6 - 0x004711C7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004711C6()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004711C8 - 0x00471203
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419BF3()
 *        L0041AAA6()
 *        L0041AE31()
 *        L00435957()
 *        L00437090()
 *        L0043A374()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 *        L00473C98()
 *        L004781A8()
 */

L004711C8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A8;
    ecx = -1;
    al = 0;
    asm("cld");
    asm("repne scasb");
    esi = edi - 1;
    edi = Ac;
    ecx = -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    edx = ecx;
    ecx = ecx >> 1 >> 1;
    asm("cld");
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    return A8;
}

/*    Procedure: 0x00471204 - 0x0047122B
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L00471204(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    ecx = -1;
    Ac = 0;
    asm("cld");
    asm("repne scasb");
    ecx = !ecx;
    edi = A8;
    asm("repne scasb");
    != ? 0x471228 : ;
    eax = edi - 1;
L00471225:
    return;
    eax = 0;
    goto L00471225;
}

/*    Procedure: 0x0047122C - 0x00471256
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0046FF49()
 *        L004729EE()
 */

L0047122C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    asm("cld");
    eax = 0;
    edx = 0;
    A8 = Ac;
    ecx = -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = A8;
    asm("repe cmpsb");
    al = *(A8 - 1);
    return eax - *(edi - 1);
}

/*    Procedure: 0x00471257 - 0x00471257
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471257()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00471258 - 0x00471286
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004341CA()
 *        L00435860()
 *        L0044712B()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044C49B()
 *        L0044CF4B()
 *        L0044ED0F()
 */

L00471258(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    ecx = -1;
    al = 0;
    asm("cld");
    asm("repne scasb");
    ecx = !ecx;
    edx = ecx;
    ecx = ecx >> 1 >> 1;
    asm("cld");
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
}

/*    Procedure: 0x00471287 - 0x00471287
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471287()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00471288 - 0x004712A0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00410568()
 *        L00410694()
 *        L0041099F()
 *        L00410A36()
 *        L00410B1B()
 *        L00410C34()
 *        L00412C5C()
 *        L00415010()
 *        L004164E4()
 *        L0041656C()
 *        L00418FCC()
 *        L00419ABC()
 *        L00419BA6()
 *        L0041AA3C()
 *        L0041B7DE()
 *        L0041D8B4()
 *        L00430CB0()
 *        L004341CA()
 *        L00435957()
 *        L004395C8()
 *        L0043A374()
 *        L0043B65D()
 *        L0044ED0F()
 *        L0044F173()
 *        L0044F37B()
 *        L004713AC()
 *        L004713FC()
 *        L00471428()
 *        L00473654()
 *        L004745AC()
 *        L0047463C()
 *        L00474A14()
 *        L004759F0()
 *        L00477C98()
 *        L00477EB0()
 *        L00477EFF()
 *        L004780B4()
 *        L004781A8()
 */

L00471288(A8)
/* unknown */ void  A8;
{



    ecx = -1;
    al = 0;
    asm("cld");
    asm("repne scasb");
    return !ecx - 1;
}

/*    Procedure: 0x004712A1 - 0x004712A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004712A1()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004712A4 - 0x004712EE
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419BA6()
 *        L0041B7DE()
 */

L004712A4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A8;
    edx = edi;
    ecx = -1;
    al = 0;
    asm("cld");
    asm("repne scasb");
    esi = edi - 1;
    edi = Ac;
    ecx = -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    ecx = ecx - 1;
    if(ecx > A10) {
        ecx = A10;
    }
    edx = ecx;
    ecx = ecx >> 1 >> 1;
    asm("cld");
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    *edi = 0;
    edi = edi + 1;
    return A8;
}

/*    Procedure: 0x004712EF - 0x004712EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004712EF()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004712F0 - 0x00471322
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00477EB0()
 */

L004712F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    asm("cld");
    A8 = Ac;
    eax = A10;
    ecx = eax;
    asm("jecxz 0x47131f");
    edx = eax;
    al = 0;
    asm("repne scasb");
    ecx = edx - ecx;
    edi = A8;
    asm("repe cmpsb");
    eax = *(A8 - 1) & 0xff;
    eax = eax - ( *(edi - 1) & 0xff);
}

/*    Procedure: 0x00471323 - 0x00471323
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471323()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00471324 - 0x00471364
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004728FB()
 */

L00471324(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ecx = A10;
    eax = A8;
    edx = Ac;
    if(ecx == 0) {
        return 0;
L00471344:
        eax = *eax & 0xff;
        edx = *edx & 0xff;
        return eax - edx;
    }
    while(1) {
        ebx = ecx;
        ecx = ecx - 1;
        if(ebx == 0) {
            break;
        }
        if(*eax != *edx) {
            goto L00471344;
        }
        eax = eax + 1;
        edx = edx + 1;
    }
    eax = *(eax - 1) & 0xff;
    return eax - ( *(edx - 1) & 0xff);
}

/*    Procedure: 0x00471365 - 0x00471367
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471365()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00471368 - 0x004713A8
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0041078F()
 */

L00471368(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = Ac;
    for(esi = A8; 1; edi = edi + 1) {
        ebx = L00476380( *esi);
        L00476380( *edi);
        *(ebp - 1) = al;
        if(bl != al || bl == 0) {
            break;
        }
        esi = esi + 1;
    }
    eax = bl;
    return eax - *(ebp - 1);
}

/*    Procedure: 0x004713A9 - 0x004713AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004713A9()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004713AC - 0x004713FA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041C97C()
 *        L00436B28()
 *        L004745AC()
 *        L0047463C()
 */

L004713AC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = L00471288(Ac);
    if(ebx > A10) {
        L00471128(A8, Ac, A10);
    } else {
        L00471128(A8, Ac, ebx);
        L00471198(ebx + A8, 0, A10 - ebx);
    }
    return A8;
}

/*    Procedure: 0x004713FB - 0x004713FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004713FB()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004713FC - 0x00471424
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00419B44()
 *        L00477C98()
 */

L004713FC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = L00471288(A8) + A8;
    goto L0047141b;
L00471416:
    eax = 0;
    goto L00471421;
L0047141b:
    while(1) {
        edx = Ac;
        if(dl == *eax) {
            break;
        }
        if(A8 == eax) {
            goto L00471416;
        }
        eax = eax - 1;
    }
L00471421:
}

/*    Procedure: 0x00471425 - 0x00471427
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00471425()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00471428 - 0x00471453
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00473C18()
 *        L00473C98()
 */

L00471428(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = L00471288(Ac);
    L00471128(A8, Ac, ebx + 1);
    return ebx + A8;
}

/*    Procedure: 0x00471454 - 0x0047145A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004720FB()
 */

L00471454()
{



    esp = ebx;
    ebp = ecx;
    goto ( *eax);
}

/*    Procedure: 0x0047145B - 0x00471473
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00472A3A()
 */

L0047145B(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return "<notype>";
    }
    return A8 + ( *(A8 + 6) & 65535);
}

/*    Procedure: 0x00471474 - 0x004714D9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004714DA()
 *        L004715D4()
 *        L00471CE0()
 *        L00471DC2()
 *        L004729B8()
 *        L00472A89()
 *        L00472C00()
 */

L00471474(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = Ac;
    eax = A8;
    if(edx == eax) {
        return 1;
    }
    if(*(eax + 4) != *(edx + 4) || *eax != *edx) {
        return 0;
    }
    if(!(( *(eax + 4) | *(edx + 4)) & 0x80)) {
        return 0;
    }
    eax = eax + ( *(eax + 6) & 65535);
    edx = edx + ( *(edx + 6) & 65535);
    do {
        ecx = *eax;
        eax = eax + 1;
        ebx = *edx;
        edx = edx + 1;
        if(ebx != ecx) {
            goto L004714cd;
        }
    } while(ecx != 0);
    return 1;
L004714cd:
    return 0;
    return 1;
}

/*    Procedure: 0x004714DA - 0x004715D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004714DA()
 *        L004715D4()
 */

L004714DA()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 0xc);
    for(ebx = ( *( *(ebp + 8) + 0x12) & 65535) + *(ebp + 8); 1; ebx = ebx + 0xc) {
        esi = *ebx;
        if(esi == 0) {
            goto L0047155d;
        }
        if(!( *(ebx + 8) & 8)) {
            if(*(ebp + 0x14) != 0) {
                if(( *(ebx + 8) & 3) != 3) {
                    goto L0047150d;
                }
                eax = 1;
            } else {
L0047150d:
                eax = 0;
            }
            *(ebp - 4) = eax;
            if(L00471474(edi, esi) != 0 && *(ebp - 4) != 0) {
                break;
            }
            if(!( *(esi + 0xc) & 4) && L004714DA(esi, edi, *(ebp + 0x10), *(ebp - 4)) != 0) {
                goto L00471551;
            }
        }
    }
    eax = 1;
    goto L004715cd;
L00471551:
    eax = 1;
    goto L004715cd;
L0047155d:
    for(ebx = ( *( *(ebp + 8) + 0x10) & 65535) + *(ebp + 8); 1; ebx = ebx + 0xc) {
        esi = *ebx;
        if(esi == 0) {
            goto L004715cb;
        }
        if(*(ebp + 0x14) != 0) {
            if(( *(ebx + 8) & 3) != 3) {
                goto L0047157e;
            }
            eax = 1;
        } else {
L0047157e:
            eax = 0;
        }
        *(ebp - 8) = eax;
        if(L00471474(edi, esi) != 0 && *(ebp - 8) != 0) {
            break;
        }
        if(!( *(esi + 0xc) & 4) && L004714DA(esi, edi, *(ebp + 0x10), *(ebp - 8)) != 0) {
            goto L004715bf;
        }
    }
    eax = 1;
    goto L004715cd;
L004715bf:
    eax = 1;
    goto L004715cd;
L004715cb:
    eax = 0;
L004715cd:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004715D4 - 0x004716E2
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0047175A()
 */

L004715D4(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    eax = A10;
    esi = Ac;
    for(ebx = A8; esi != ebx; esi = *(esi + 8)) {
        edi = *(ebx + 4) & 65535;
        *(ebp - 4) = *(esi + 4) & 65535;
        edx = *(ebp - 4) & edi;
        if(dl & 0x10) {
            edx = *(ebp - 4) & edi;
            if(dh & 4) {
                goto L004716a1;
            }
            if(*(ebx + 0xc) != *(esi + 0xc) && (eax != 0 || !(eax = *(ebx + 0xc) | *(esi + 0xc)))) {
                goto L0047168d;
            }
            eax = 1;
            ebx = *(ebx + 8);
            esi = *(esi + 8);
            continue;
        }
        edi = edi & 0x300;
        *(ebp - 4) = *(ebp - 4) & 0x300;
        if(edi != *(ebp - 4)) {
            if(eax != 0) {
                goto L0047165b;
            }
            eax = edi & 0x300;
            if(eax == ( *(ebp - 4) & 0x300)) {
                goto L0047165b;
            }
            eax = !( *(ebp - 4) & 0x300) & edi;
            if(!(ah & 3)) {
                goto L00471642;
            }
            *(ebp - 4) = *(ebp - 4) | 0x300;
            if((edi | 0x300) != *(ebp - 4)) {
                goto L0047165b;
            }
        }
        eax = 1;
        ebx = *(ebx + 8);
    }
    eax = 1;
    goto L004716dd;
L00471642:
    eax = 0;
    goto L004716dd;
L0047165b:
    eax = 0;
    goto L004716dd;
L0047168d:
    eax = 0;
    goto L004716dd;
L004716a1:
    if(L00471474(ebx, esi) != 0) {
        eax = 1;
    } else {
        if(!(edi & 2)) {
            if(*(ebp - 4) & 1 || *(ebx + 0xc) & 4) {
                goto L004716db;
            }
            eax = L004714DA(ebx, esi, A14, 1);
        } else {
L004716db:
            eax = 0;
        }
    }
L004716dd:
}

/*    Procedure: 0x004716E3 - 0x0047172C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00471926()
 */

L004716E3(A8)
/* unknown */ void  A8;
{



    eax = L0047777C(A8);
    if(eax == 0) {
        if(A8 > 0x80 || !( *( *( *fs:0x4] - 8) + 4) & 1)) {
            L00477DC8();
        }
        *( *( *fs:0x4] - 8) + 4) = *( *( *fs:0x4] - 8) + 4) | 1;
        eax = *( *( *fs:0x4] - 8) + 0x1c);
    }
}

/*    Procedure: 0x0047172D - 0x00471759
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L0047172D(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax == *( *( *fs:0x4] - 8) + 0x1c)) {
        eax = *( *fs:0x4] - 8);
        *(eax + 4) = *(eax + 4) & -2;
        return;
    }
    return L00477640(eax);
}

/*    Procedure: 0x0047175A - 0x0047181A
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L004720B4()
 *        L004720FB()
 */

L0047175A(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A10;
    if(L004715D4(A8, esi, 0, Ac) != 0) {
        eax = 1;
    } else {
        *(ebp - 4) = *(A8 + 4) & 65535;
        ebx = *(esi + 4) & 65535;
        if(!(bl & 0x20)) {
            if(L004715D4(A8, *(esi + 8), 1, Ac) != 0) {
                eax = 1;
            } else {
                esi = *(esi + 8);
                ebx = *(esi + 4) & 65535;
                if(!(bl & 0x10)) {
                    eax = 0;
                } else {
                    if(L004715D4(A8, esi, 0, Ac) == 0) {
                        goto L004717da;
                    }
                    eax = 1;
                }
            }
        } else {
L004717da:
            if(!(bl & 0x10)) {
                if(!(A14 & 1)) {
                    eax = 1;
                } else {
                    if(!( *(ebp - 4) & 0x10)) {
                        eax = 0;
                    } else {
                        if(bl & 0x40) {
                            goto L00471813;
                        }
                        eax = *(ebp - 4) & 0x300;
                        eax = 0;
                    }
                }
            } else {
L00471813:
                eax = 0;
            }
        }
    }
}

/*    Procedure: 0x0047181B - 0x0047189E
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00471926()
 *        L00471DC2()
 */

L0047181B(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = A8;
    if(!(A14 & 0x10)) {
        if(!(eax = (eax & 7) - 1)) {
            if(eax = eax - 1) {
                goto L0047184f;
            }
            if(eax = eax - 1) {
                goto L00471858;
            }
            if(eax = eax - 2) {
                goto L00471861;
            }
            goto L0047189c;
        }
        return *A10(edx, 0, Ac);
L0047184f:
        return *A10(edx, Ac, 0);
L00471858:
        eax = 0;
        asm("xchg ecx,edx");
        return *A10();
L00471861:
        return *A10(edx, 0, Ac);
    }
    if(!(eax = (eax & 7) - 1)) {
        if(eax = eax - 1) {
            goto L00471888;
        }
        if(eax = eax - 1) {
            goto L0047188f;
        }
        if(eax = eax - 2) {
            goto L00471898;
        }
        return;
    }
    return *A10(edx, Ac);
L00471888:
    return *A10(Ac, edx);
L0047188f:
    eax = edx;
    edx = Ac;
    return *A10();
L00471898:
    eax = *A10(edx, Ac);
L0047189c:
}

/*    Procedure: 0x0047189F - 0x004718EB
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00471926()
 *        L00471BE9()
 *        L00472383()
 */

L0047189F(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = 2;
    if(A14 == 0) {
        eax = 0;
    }
    if(!(A8 = (A10 & 7) - 1)) {
        if(A8 = A8 - 1) {
            goto L004718d2;
        }
        if(A8 = A8 - 1) {
            goto L004718db;
        }
        if(A8 = A8 - 2) {
            goto L004718e3;
        }
        return;
    }
    return Ac(A8, eax);
L004718d2:
    return Ac(A8, eax);
L004718db:
    return Ac();
L004718e3:
    return Ac(A8, eax);
}

/*    Procedure: 0x004718EC - 0x00471925
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047268A()
 */

L004718EC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(!(A8 = (A10 & 7) - 1)) {
        if(A8 = A8 - 1) {
            goto L0047190e;
        }
        if(A8 = A8 - 1) {
            goto L00471916;
        }
        if(A8 = A8 - 2) {
            goto L0047191e;
        }
        return;
    }
    return Ac(A8);
L0047190e:
    return Ac(A8);
L00471916:
    return Ac();
L0047191e:
    return Ac(A8);
}

/*    Procedure: 0x00471926 - 0x00471B2B
 *    Argument size: 40
 *    Local size: 60
 *    Save regs size: 12
 *    Called by:
 *        L00471B2C()
 *        L00471B59()
 */

L00471926(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    DWORD Vffffffc4;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vffffffcc;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;



    eax = 0x60ae64;
    L00472D5C();
    Vffffffdc = A8;
    *( *( *fs:0x4] - 8) + 0x18) = ( *(Vffffffdc + 6) & 65535) + Vffffffdc;
    *( *( *fs:0x4] - 8) + 0x14) = A20;
    *( *( *fs:0x4] - 8) + 0x10) = A24;
    esi = Vffffffdc;
    ebx = *Vffffffdc;
    edi = *(Vffffffdc + 4) & 65535;
    eax = !(edi & 2) ? *(Vffffffdc + 0xc) : 0;
    Vffffffd8 = eax;
    if(!(edi & 0x30)) {
        esi = *(esi + 8);
    }
    Vffffffd4 = L004716E3(ebx + 0x46);
    *Vffffffd4 = *( *( *fs:0x4] - 8));
    *( *( *fs:0x4] - 8)) = Vffffffd4;
    *(Vffffffd4 + 4) = Vffffffdc;
    *(Vffffffd4 + 0xc) = A1c;
    *(Vffffffd4 + 0x10) = ebx;
    *(Vffffffd4 + 0x18) = di;
    *(Vffffffd4 + 0x1a) = Vffffffd8;
    *(Vffffffd4 + 0x14) = esi;
    *(Vffffffd4 + 8) = A10;
    *(Vffffffd4 + 0x28) = 0;
    *(Vffffffd4 + 0x2c) = 0;
    *(Vffffffd4 + 0x1c) = 0x47172d;
    *(Vffffffd4 + 0x34) = A20;
    *(Vffffffd4 + 0x38) = A24;
    *(Vffffffd4 + 0x20) = A14;
    *(Vffffffd4 + 0x24) = A18;
    *(Vffffffd4 + 0x45) = 0;
    *(Vffffffd4 + 0x44) = 1;
    L00471128(Vffffffd4 + 0x46, Ac, ebx);
    if(!(Vffffffd8 & 1)) {
        Vffffffd0 = *M006dcdb8;
        Vfffffff0 = 8;
        L0047181B(Vffffffd4 + 0x46, Ac, A14, A18);
        Vfffffff0 = 0;
        goto L00471aa6;
        L00472DC7();
        L00471CA7();
L00471aa6:
        *M006dcdb8 = Vffffffd0;
    }
    if(A2c == 0 && !(Vffffffd8 & 2)) {
        Vfffffff0 = 0x14;
        L0047189F(Ac, *(Vffffffdc + 0x28), *(Vffffffdc + 0x2c) & 65535, 1);
        Vfffffff0 = 0;
        goto L00471aef;
        L00472DC7();
        L00471CA7();
    }
L00471aef:
    Vffffffc4 = *( *( *fs:0x4] - 8) + 0x18);
    Vffffffc8 = A28;
    Vffffffcc = Vffffffd4;
    RaiseException(250608334, 1, 3, & Vffffffc4);
    eax = Vffffffe0;
    *fs:0x0] = eax;
    return *fs:0x0];
}

/*    Procedure: 0x00471B2C - 0x00471B58
 *    Argument size: 32
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047295B()
 *        L00472A4B()
 *        L00472C00()
 */

L00471B2C(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{



    return L00471926(A8, Ac, A10, A14, A18, A1c, A20, A24, *(ebp + 4), 0);
}

/*    Procedure: 0x00471B59 - 0x00471BA9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00471B59(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = *(ebp + 4);
    ebx = *( *( *fs:0x4] - 8));
    if(ebx == 0) {
        L00472DC7();
    }
    (save)1;
    (save)esi;
    (save)Ac;
    (save)A8;
    (save) *(ebx + 0xc);
    (save) *(ebx + 0x24);
    (save) *(ebx + 0x20);
    (save) *(ebx + 8);
    eax = *(ebx + 0x44) != 0 ? ebx + 0x46 : *(ebx + 0x40);
    (save)eax;
    (save) *(ebx + 4);
    esp = esp + 0x28;
    return L00471926();
}

/*    Procedure: 0x00471BAA - 0x00471BE8
 *    Argument size: -72
 *    Local size: 80
 *    Save regs size: 0
 *    Called by:
 *        L004720FB()
 */

L00471BAA(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffb4;
    /* unknown */ void  Vffffffc0;



    ecx = Ac;
    if(ecx == 0) {
        Vffffffb0 = 0x26;
        Vffffffb4 = 2;
        Vffffffc0 = 0;
        ecx = & Vffffffb0;
    }
    *(ecx + 4) = *(ecx + 4) | 2;
    A8 = 0x7b;
    edx = 0x7b;
    edx = ecx;
    return L0047308E();
}

/*    Procedure: 0x00471BE9 - 0x00471C36
 *    Argument size: 12
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L00471C37()
 *        L00471DC2()
 */

L00471BE9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;



    eax = 0x60aea4;
    L00472D5C();
    Vfffffff0 = 8;
    L0047189F(A8, Ac, A10, 1);
    Vfffffff0 = 0;
    goto L00471c27;
    L00472DC7();
    L00471CA7();
L00471c27:
    eax = Vffffffe0;
    *fs:0x0] = eax;
    return *fs:0x0];
}

/*    Procedure: 0x00471C37 - 0x00471CA6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00471CA7()
 *        L00471F76()
 */

L00471C37(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    if(*(A8 + 0x44) != 0) {
        if(!( *(A8 + 0x1a) & 2)) {
            esi = *M006dcdb8;
            L00471BE9(A8 + 0x46, *( *(A8 + 4) + 0x28), *( *(A8 + 4) + 0x2c) & 65535);
            eax = M006dcdb8;
            *eax = esi;
        }
        *(A8 + 0x44) = 0;
    }
    if(*(A8 + 0x45) != 0) {
        eax = *(A8 + 0x3c);
        if(!( *(eax + 4) & 2) && !( *(eax + 0xc) & 2)) {
            eax = L00471BE9( *(A8 + 0x40), *(eax + 0x28), *(eax + 0x2c) & 65535);
        }
        *(A8 + 0x45) = 0;
    }
}

/*    Procedure: 0x00471CA7 - 0x00471CDF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00471926()
 *        L00471BE9()
 *        L00472383()
 *        L00472DC7()
 */

L00471CA7()
{
    /* unknown */ void  ebx;



    ebx = *( *( *fs:0x4] - 8));
    *( *( *fs:0x4] - 8)) = *ebx;
    eax = *(ebx + 0x28);
    edx = *(eax + 0x10) & 65535;
    *(eax + 0x10) = *( *(eax + 8) + edx);
    L00471C37(ebx);
    return *(ebx + 0x1c)(ebx);
}

/*    Procedure: 0x00471CE0 - 0x00471D65
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00471CE0()
 *        L00471D66()
 */

L00471CE0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    for(esi = A8; 1; esi = esi + 0xc) {
        ebx = *esi;
        if(ebx == 0) {
            break;
        }
        *(ebp - 4) = *A14 + *(esi + 4);
        if(Ac != 0) {
            *(ebp - 4) = *( *(ebp - 4));
        }
        if(L00471474(ebx, A10) != 0) {
            goto L00471d20;
        }
        if(!( *(ebx + 4) & 2)) {
            ebx = ebx + ( *(ebx + 0x10) & 65535);
            if(ebx != 0 && L00471CE0(ebx, 0, A10, ebp - 4) != 0) {
                goto L00471d52;
            }
        }
    }
    eax = 0;
    goto L00471d60;
L00471d20:
    *A14 = *(ebp - 4);
    eax = 1;
    goto L00471d60;
L00471d52:
    *A14 = *(ebp - 4);
    eax = 1;
L00471d60:
}

/*    Procedure: 0x00471D66 - 0x00471DC1
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00471DC2()
 */

L00471D66(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;



    if(A8 == 0) {
        eax = A8;
    } else {
        esi = ( *(Ac + 0x10) & 65535) + Ac;
        if(L00471CE0(esi, 0, A10, & A8) != 0) {
            eax = A8;
        } else {
            esi = ( *(Ac + 0x12) & 65535) + Ac;
            eax = L00471CE0(esi, 1, A10, & A8) != 0 ? A8 : 0;
        }
    }
}

/*    Procedure: 0x00471DC2 - 0x00471F75
 *    Argument size: 20
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L004720FB()
 */

L00471DC2(A8, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = *(A8 + 4);
    *(A10 + 0x3c) = eax;
    if(eax != 0 && !( *(A8 + 8) & 0x80)) {
        edx = *(A8 + 8) & 1;
        edx :: 1;
        asm("sbb edx,edx");
        Vfffffff8 = ~edx;
        Vfffffffc = A10 + 0x46;
        *(A10 + 0x45) = 1;
        *(A10 + 0x40) = *A14 + A18;
        esi = eax;
        edi = *esi;
        edx = *(esi + 4) & 65535;
        if(!(al & 0x30)) {
            esi = *(esi + 8);
            edx = *(esi + 4) & 65535;
        }
        if(!(al & 0x10)) {
            if(*(A10 + 0xc) & 1) {
                goto L00471e4d;
            }
            eax = L00471198( *(A10 + 0x40), 0, edi);
            Vfffffff8 = 1;
        } else {
L00471e4d:
            if(!(dl & 1)) {
                if(al & 0x30) {
                    goto L00471eb7;
                }
                if(!(al & 0x20)) {
                    Vfffffff8 = 1;
                } else {
                    Vfffffffc = *Vfffffffc;
                }
                if(L00471474( *(A10 + 0x14), esi) == 0) {
                    Vfffffff4 = Vfffffffc;
                    Vfffffffc = L00471D66(Vfffffffc, *(A10 + 0x14), esi);
                    if(Vfffffffc != Vfffffff4) {
                        Vfffffff8 = 1;
                    }
                }
                eax = L00471128( *(A10 + 0x40), & Vfffffffc, edi);
            } else {
L00471eb7:
                if(!( *(A10 + 0x18) & 1)) {
                    if(L00471474( *(A10 + 0x14), esi) == 0) {
                        Vfffffffc = L00471D66(Vfffffffc, *(A10 + 0x14), esi);
                        Vfffffff8 = 1;
                    }
                    if(!( *(esi + 0xc) & 1)) {
                        eax = L0047181B( *(A10 + 0x40), Vfffffffc, *(A8 + 0xc), *(A8 + 0x10));
                        Vfffffff8 = 1;
                    } else {
                        eax = L00471128( *(A10 + 0x40), Vfffffffc, edi);
                    }
                } else {
                    if(!(al & 0x20)) {
                        eax = L00471128( *(A10 + 0x40), & Vfffffffc, edi);
                        Vfffffff8 = 1;
                    } else {
                        eax = L00471128( *(A10 + 0x40), Vfffffffc, edi);
                    }
                }
            }
        }
        if(Vfffffff8 == 0) {
            if(!( *(esi + 0xc) & 2)) {
                eax = L00471BE9(Vfffffffc, *(esi + 0x28), *(esi + 0x2c) & 65535);
            }
            *(A10 + 0x44) = 0;
        }
    }
}

/*    Procedure: 0x00471F76 - 0x00472083
 *    Argument size: 8
 *    Local size: 12
 *    Save regs size: 8
 *    Called by:
 *        L00472084()
 *        L00472097()
 *        L004720FB()
 */

L00471F76(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff4 = 0;
    Vfffffffc = *(A8 + 8);
    Vfffffff8 = A8 - *(Vfffffffc + 4);
    eax = A8;
    edx = *(eax + 0x10) & 65535;
    goto L00472071;
    eax = *( *fs:0x4] - 8);
    goto L00472032;
L00472023:
    if(*(ebx + 0x28) != A8 || edx != *(ebx + 0x30)) {
        eax = ebx;
L00472032:
        ebx = *eax;
        if(ebx != 0) {
            goto L00472023;
        }
    }
    *eax = *ebx;
    L00471C37(ebx);
    eax = *(ebx + 0x1c)(ebx);
    goto L0047206f;
L00472071:
    while(edx != 0 && edx != Ac) {
        eax = edx;
        esi = *(Vfffffffc + eax) & 65535;
        eax = eax + 2;
        ecx = *(Vfffffffc + eax) & 65535;
        eax = eax + 2;
        ebx = A8;
        *(ebx + 0x10) = si;
        if(ecx = ecx - 1) {
            M006dcda8 = *(Vfffffffc + eax + 4);
            *(A8 + 0x12) = 1;
            (save)ebx;
            (save)ebp;
            (save)esi;
            (save)edi;
            ecx = 0x7b;
            ebx = 0x7b;
            ecx = Vfffffff8;
            ebx = 7196072;
            L004730A3();
            (restore)edi;
            (restore)esi;
            (restore)ebp;
            (restore)ebx;
            eax = A8;
            *(eax + 0x12) = 0;
        } else {
            if(!(ecx = ecx - 3)) {
                == ? L00472018 : ;
                if(ecx = ecx - 1) {
                    edx = *(Vfffffffc + eax);
                    eax = eax + 4;
                    eax = *(Vfffffffc + eax);
                    eax = L0047268A(eax, edx + Vfffffff4, A8, Vfffffff8);
                    Vfffffff4 = eax;
                }
            }
        }
L0047206f:
        edx = esi;
    }
}

/*    Procedure: 0x00472084 - 0x00472096
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00472084(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00471F76(A8, Ac);
}

/*    Procedure: 0x00472097 - 0x004720B3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00472097(A8)
/* unknown */ void  A8;
{



    L00471F76(A8, 0);
    eax = *A8;
    *fs:0x0] = eax;
    return *fs:0x0];
}

/*    Procedure: 0x004720B4 - 0x004720FA
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004720FB()
 */

L004720B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = A8 + 8;
    goto L004720ef;
L004720cc:
    eax = ebx;
    goto L004720f6;
L004720e8:
    eax = ebx;
    goto L004720f6;
L004720ef:
    while(*ebx != 0) {
        esi = *(ebx + 4);
        if(esi == 0) {
            goto L004720cc;
        }
        (save)0;
        if(L0047175A( *(Ac + 4), *(Ac + 8), esi, *(Ac + 0xc)) != 0) {
            goto L004720e8;
        }
        ebx = ebx + 0x14;
    }
    eax = 0;
L004720f6:
}

/*    Procedure: 0x004720FB - 0x00472382
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004720FB()
{



    ch = ch - *edx;
    edx = edx + 1;
    if(!(ebx = ebx + 1 + 1)) {
        *(ebp - 0x75) = *(ebp - 0x75) ^ edx;
        asm("in al,dx");
        esp = esp - 0x34;
        (save)ebx;
        (save)esi;
        (save)edi;
        *(ebp - 4) = *(ebp + 8);
        *(ebp - 8) = *(ebp + 0xc);
        *(ebp - 0xc) = *(ebp + 0x10);
        *(ebp - 0x10) = *( *(ebp - 4) + 0x1c);
        edi = *( *(ebp - 8) + 8);
        *(ebp - 0x18) = *(ebp - 8) - *(edi + 4);
        *(ebp - 0x1c) = *( *(ebp - 8) + 0xc);
        if(*( *(ebp - 4) + 4) & 6) {
            goto L004721ba;
        }
        L00471F76( *(ebp - 8), 0);
        if(*( *(ebp - 4)) != 250608334) {
            goto L004721b0;
        }
        ebx = *edi;
        if(ebx == 0) {
            goto L004721b0;
        }
        goto L0047218d;
L00472168:
        (save)1;
    }
    if(L0047175A( *( *(ebp - 0x10) + 4), *( *(ebp - 0x10) + 8), *ebx, *( *(ebp - 0x10) + 0xc)) == 0) {
        ebx = ebx + 4;
L0047218d:
        if(*ebx != 0) {
            goto L00472168;
        }
        ebx = *fs:0x0];
        *fs:0x0] = *( *(ebp - 8));
        L00472E40();
        *fs:0x0] = ebx;
    }
L004721b0:
    eax = 1;
    goto L0047237c;
L004721ba:
    ebx = *( *(ebp - 8) + 0x10) & 65535;
    if(ebx != 0) {
        do {
            esi = ebx;
            *(ebp - 0x14) = *(edi + esi) & 65535;
            esi = esi + 2;
            *(ebp - 0x20) = *(edi + esi) & 65535;
            esi = esi + 2;
            eax = *(ebp - 0x20);
            if(eax <= 5) {
                switch(eax) {
                    case 0:
                        goto L0047236c;
                    case 1:
                        goto L004722c0;
                    case 2:
                        goto L00472318;
                    case 3:
                        goto L0047220a;
                    case 4:
                        goto L0047236c;
                    case 5:
                        goto L0047236c;
                }
L0047220a:
                if(*( *(ebp - 4)) == 250608334) {
                    *(ebp - 0x28) = *(edi + esi);
                    esi = esi + 4;
                    *(ebp - 0x24) = L004720B4( *(ebp - 0x28), *(ebp - 0x10));
                    if(*(ebp - 0x24) != 0) {
                        eax = *(ebp - 0x10);
                        *(eax + 0x28) = *(ebp - 8);
                        eax = *(ebp - 0x10);
                        *(eax + 0x2c) = *(ebp - 0x24);
                        *( *(ebp - 0x10) + 0x30) = esi;
                        *(ebp - 0x2c) = esi;
                        esi = *( *(ebp - 0x24));
                        goto L0047225d;
L00472318:
                        if(*( *(ebp - 4)) != 250608334) {
                            eax = *( *(ebp - 4));
                            *( *(ebp - 8) + 0x14) = eax;
                            eax = *(edi + esi);
                            goto L00472331;
L004722c0:
                            if(*( *(ebp - 4)) != 250608334) {
                                *(ebp - 0x34) = *(ebp - 4);
                                *(ebp - 0x30) = *(ebp - 0xc);
                                eax = *( *(ebp - 4));
                                *( *(ebp - 8) + 0x14) = eax;
                                eax = ebp - 0x34;
                                *( *(ebp - 8) + 0x18) = eax;
                                M006dcdac = *(edi + esi);
                                ecx = 0x7b;
                                ebx = 0x7b;
                                ecx = *(ebp - 0x18);
                                ebx = 7196076;
                                eax = L004730A3(edi, esi, ebp, ebx);
                                (restore)edi;
                                (restore)esi;
                                (restore)ebp;
                                (restore)ebx;
L00472331:
                                if(eax < 0) {
                                    goto L00472338;
                                }
                                if(eax != 0) {
                                    eax = *(ebp - 8);
                                    *(eax + 0x18) = 0;
                                    esi = esi + 4;
                                    eax = *(ebp - 0x14);
                                    *(ebp - 0x2c) = eax;
                                    ebx = *(ebp - 0x2c);
                                    esi = *(edi + esi);
L0047225d:
                                    (save) *(ebp - 4);
                                    (save) *(ebp - 8);
                                    L00471BAA();
                                    L00471F76( *(ebp - 8), ebx);
                                    eax = *(ebp - 8);
                                    *(eax + 0x10) = *(ebp - 0x2c);
                                    if(*(ebp - 0x20) == 3) {
                                        L00471DC2( *(ebp - 0x24), *(ebp - 8), *(ebp - 0x10), *(ebp - 0x28), *(ebp - 0x18));
                                    }
                                    eax = 0x7b;
                                    ebx = 0x7b;
                                    ecx = 0x7b;
                                    eax = esi;
                                    ebx = *(ebp - 0x1c);
                                    ecx = *(ebp - 0x18);
                                    L00471454();
                                }
                            }
                        }
                    }
                }
            }
L0047236c:
            ebx = *(ebp - 0x14);
        } while(ebx != 0);
        goto L00472377;
L00472338:
        if(!( *( *(ebp - 4) + 4) & 1)) {
            eax = *(ebp - 8);
            *(eax + 0x10) = *(ebp - 0x14);
        }
        eax = 0;
    } else {
L00472377:
        eax = 1;
    }
L0047237c:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x00472383 - 0x004723EE
 *    Argument size: 12
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L00472434()
 */

L00472383(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;



    eax = 0x60aef8;
    L00472D5C();
    Vfffffff0 = 8;
    Vfffffff0 = 0x14;
    L0047189F(A8, *(Ac + 0x28), *(Ac + 0x2c) & 65535, A10);
    Vfffffff0 = 8;
    goto L004723cd;
    L00472DC7();
    L00471CA7();
L004723cd:
    Vfffffff0 = 0;
    goto L004723df;
    L00472DC7();
    L00471CA7();
L004723df:
    eax = Vffffffe0;
    *fs:0x0] = eax;
    return *fs:0x0];
}

/*    Procedure: 0x004723EF - 0x00472433
 *    Argument size: 24
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00472434()
 */

L004723EF(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A14;
    for(ebx = Ac; 1; esi = 0) {
        ebx = ebx - 0xc;
        if(ebx < A10) {
            break;
        }
        eax = *(ebx + 4) + A8;
        if(A18 != 0) {
            eax = *eax;
        }
        edx = *ebx;
        if(*(edx + 0xc) & 2) {
            continue;
        }
        eax = L00472434(eax, edx, esi, 0, A1c);
    }
}

/*    Procedure: 0x00472434 - 0x004725D9
 *    Argument size: 20
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L004723EF()
 *        L00472434()
 *        L004725DA()
 *        L0047268A()
 */

L00472434(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    edx = A10;
    eax = A14 != 0 ? *(Ac + 0x20) : *(Ac + 0x24);
    if(edx == 0 || eax <= edx) {
        eax = L00472383(A8, Ac, A14);
    } else {
        eax = edx;
        edx = ( *(Ac + 0x12) & 65535) + Ac;
        Vfffffff4 = edx;
        Vfffffff8 = Vfffffff4;
        if(A14 != 0) {
            while(1) {
                edx = *Vfffffff4;
                if(edx == 0) {
                    goto L004724c9;
                }
                if(!( *(edx + 0xc) & 2)) {
                    edx = *(edx + 0x24);
                    if(eax <= edx) {
                        break;
                    }
                    eax = eax - edx;
                }
                Vfffffff4 = Vfffffff4 + 0xc;
            }
            eax = L004723EF(A8, Vfffffff4 + 0xc, Vfffffff8, eax, 1, A18);
        } else {
L004724c9:
            edi = ( *(Ac + 0x10) & 65535) + Ac;
            for(Vfffffffc = edi; 1; edi = edi + 0xc) {
                edx = *edi;
                if(edx == 0) {
                    goto L0047252b;
                }
                if(!( *(edx + 0xc) & 2)) {
                    edx = *(edx + 0x24);
                    if(eax <= edx) {
                        break;
                    }
                    eax = eax - edx;
                }
            }
            eax = L004723EF(A8, edi + 0xc, Vfffffffc, eax, 0, A18);
            if(A14 != 0) {
                eax = L004723EF(A8, Vfffffff4, Vfffffff8, 0, 1, A18);
                goto L004725d3;
L0047252b:
                ebx = ( *(Ac + 0x2e) & 65535) + Ac;
                for(Vfffffff0 = ebx; 1; ebx = ebx + 8) {
                    edx = *ebx;
                    Vffffffec = 1;
                    if(!( *(edx + 5) & 4)) {
                        Vffffffec = *(edx + 0xc);
                        edx = *(edx + 8);
                    }
                    edx = *(edx + 0x20);
                    edx = Vffffffec * Vffffffec;
                    if(eax <= edx) {
                        break;
                    }
                    eax = eax - edx;
                }
                do {
                    edx = A8 + *(ebx + 4);
                    Vffffffe8 = *ebx;
                    if(Vffffffec <= 1) {
                        L00472434(edx, Vffffffe8, eax, 1, A18);
                    } else {
                        L004725DA(edx, *ebx, eax, A18);
                    }
                    eax = 0;
                    ebx = ebx - 8;
                } while(ebx >= Vfffffff0);
                eax = L004723EF(A8, edi, Vfffffffc, 0, 0, A18);
                if(A14 != 0) {
                    eax = L004723EF(A8, Vfffffff4, Vfffffff8, 0, 1, A18);
                }
            }
        }
    }
L004725d3:
}

/*    Procedure: 0x004725DA - 0x0047264B
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00472434()
 *        L0047268A()
 */

L004725DA(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ecx = A10;
    esi = A8;
    ebx = Ac;
    eax = *(ebx + 0xc);
    ebx = *(ebx + 8);
    edi = *(ebx + 0x20);
    if(ecx == 0) {
        ecx = edi;
        ecx = eax * eax;
    }
    eax = ecx;
    edx = 0;
    edi = edi / edi;
    edx = edi % edi;
    *(ebp - 4) = eax;
    eax = *(ebp - 4);
    asm("imul edi");
    ecx = ecx - eax;
    eax = *(ebp - 4);
    asm("imul dword [ebx]");
    esi = esi + eax;
    if(ecx != 0) {
        L00472434(esi, ebx, ecx, 1, A14);
    }
    while(1) {
        eax = *(ebp - 4);
        *(ebp - 4) = *(ebp - 4) - 1;
        if(eax == 0) {
            break;
        }
        esi = esi - *ebx;
        L00472434(esi, ebx, edi, 1, A14);
    }
}

/*    Procedure: 0x0047264C - 0x00472689
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0047268A()
 */

L0047264C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    edx = A8;
    eax = *Ac;
    if(( *(eax + 0xc) & 0x50) != 0x50) {
        return edx;
    }
    if(*(eax + 8) == -1) {
        return edx;
    }
    eax = *( *(eax + 8) + edx);
    edx = edx - *(eax - 8);
    *Ac = *(eax - *(eax - 4) - 0xc);
    return edx;
}

/*    Procedure: 0x0047268A - 0x004728FA
 *    Argument size: 16
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00471F76()
 */

L0047268A(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffffc = 0;
    if(A8 == 0) {
        eax = 0;
    } else {
        edi = *M006dcdb8 - *(A10 + 0x1c) - Ac;
        if(!( *(A8 + 4) & 0x20)) {
            edi = *( *( *A8 + 8) + 0x20);
        }
        if(!( *(A8 + 5) & 1)) {
            eax = *( *A8 + 0x24);
        } else {
            if(edi <= 0) {
                if(( *(A8 + 4) & 3) == 3) {
                    ebx = A8;
                    Vfffffffc = Vfffffffc + 1;
                    goto L004727ad;
                }
                eax = 0;
            } else {
                for(ebx = A8; *ebx != 0; ebx = ebx + 0xc) {
                    eax = *ebx;
                    Vfffffff8 = eax;
                    esi = 1;
                    if(!( *(Vfffffff8 + 4) & 0x10)) {
                        eax = *(Vfffffff8 + 8);
                        Vfffffff8 = eax;
                        if(!( *(Vfffffff8 + 4) & 2) && !( *(Vfffffff8 + 0xc) & 0x20) && !( *(ebx + 4) & 8)) {
                            Vfffffff4 = *(ebx + 4) & 4 ? *(ebx + 8) : A14 + *(ebx + 8);
                            Vfffffff4 = *Vfffffff4;
                            if(!( *(ebx + 4) & 0x40)) {
                                Vfffffff4 = Vfffffff4 + 4;
                            }
                            Vfffffff4 = L0047264C(Vfffffff4, & Vfffffff8);
                            eax = Vfffffff8;
                        }
                    }
                    if(!( *(Vfffffff8 + 5) & 4)) {
                        esi = *(eax + 0xc);
                        eax = *(eax + 8);
                    }
                    eax = *(eax + 0x20);
                    esi = esi * esi;
                    if(edi <= esi) {
                        goto L004727ad;
                    }
                    edi = edi - esi;
                }
                ebx = ebx - 0xc;
L004727ad:
                do {
                    Vfffffff0 = *ebx;
                    esi = *(ebx + 4);
                    Vffffffec = esi & 4 ? *(ebx + 8) : A14 + *(ebx + 8);
                    if(!(esi & 0x11)) {
                        Vfffffff0 = *(Vfffffff0 + 8);
                        Vffffffec = *Vffffffec;
                        Vffffffe8 = Vffffffec;
                        if((esi & 0x48) == 0x40) {
                            Vffffffec = Vffffffec + 4;
                        }
                        if(!( *(Vfffffff0 + 4) & 2) && !( *(Vfffffff0 + 0xc) & 0x20) && !(esi & 8)) {
                            Vffffffec = L0047264C(Vffffffec, & Vfffffff0);
                        }
                    }
                    if(Vfffffffc == 0) {
                        if(*(Vfffffff0 + 5) & 4) {
                            L00472434(Vffffffec, Vfffffff0, edi, 1, A14);
                        } else {
                            L004725DA(Vffffffec, Vfffffff0, edi, A14);
                        }
                    }
                    if((esi & 3) == 3) {
                        if((esi & 0x48) == 0x48) {
                            Vffffffe8 = Vffffffe8 - 4;
                        }
                        if(*(Vfffffff0 + 5) & 4) {
                            if(*(Vfffffff0 + 0x14) == 0) {
                                L00477AF4(Vffffffe8);
                            } else {
                                L004718EC(Vffffffe8, *(Vfffffff0 + 0x14), *(Vfffffff0 + 0x18) & 65535);
                            }
                        } else {
                            Vfffffff0 = *(Vfffffff0 + 8);
                            if(*(Vfffffff0 + 0x1c) == 0) {
                                L00477B04(Vffffffe8);
                            } else {
                                L004718EC(Vffffffe8, *(Vfffffff0 + 0x1c), *(Vfffffff0 + 0x1a) & 65535);
                            }
                        }
                    }
                    edi = 0;
                    eax = ebx;
                    ebx = ebx - 0xc;
                } while(eax > A8);
                eax = 0;
            }
        }
    }
}

/*    Procedure: 0x004728FB - 0x00472933
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004782A4()
 */

L004728FB(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    if(A8 == -1) {
        eax = eax | -1;
    } else {
        eax = L00471324( *(A8 + 4) - 8, "**BCCxh1", 8);
        eax = eax != 0 ? eax | -1 : *(A8 + 0x10) & 65535;
    }
}

/*    Procedure: 0x00472934 - 0x00472940
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472934()
{



    return *( *( *fs:0x4] - 8) + 0x10);
}

/*    Procedure: 0x00472941 - 0x0047294D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472941()
{



    return *( *( *fs:0x4] - 8) + 0x14);
}

/*    Procedure: 0x0047294E - 0x0047295A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047294E()
{



    return *( *( *fs:0x4] - 8) + 0x18);
}

/*    Procedure: 0x0047295B - 0x00472990
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 */

L0047295B(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    *A8 = 0x60af38;
    *(ebp - 4) = 0;
    L00471B2C(0x472cc5, ebp - 4, 0, 0, 0, 0, 0, 0);
    return A8;
}

/*    Procedure: 0x00472991 - 0x00472998
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00472991(A8)
/* unknown */ void  A8;
{



    return A8;
}

/*    Procedure: 0x00472999 - 0x004729B7
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00472999(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    if(eax != 0) {
        *eax = 0x60af38;
        if(!(Ac & 1)) {
            eax = L00477AF4(eax);
        }
    }
}

/*    Procedure: 0x004729B8 - 0x004729D0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004729D1()
 */

L004729B8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00471474( *(A8 + 4), *(Ac + 4));
}

/*    Procedure: 0x004729D1 - 0x004729ED
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 */

L004729D1(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    eax = L004729B8(A8, Ac);
    eax :: 1;
    asm("sbb eax,eax");
    return ~eax;
}

/*    Procedure: 0x004729EE - 0x00472A39
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L004729EE(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*(A8 + 4) == 0) {
        eax = 0;
    } else {
        if(*(Ac + 4) == 0) {
            eax = 1;
        } else {
            eax = L0047122C(( *( *(A8 + 4) + 6) & 65535) + *(A8 + 4), ( *( *(Ac + 4) + 6) & 65535) + *(Ac + 4));
            eax = eax :: 0 < 0 & 1;
        }
    }
}

/*    Procedure: 0x00472A3A - 0x00472A4A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00472A3A(A8)
/* unknown */ void  A8;
{



    return L0047145B( *(A8 + 4));
}

/*    Procedure: 0x00472A4B - 0x00472A88
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 */

L00472A4B(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{



    if(A8 == 0) {
        L00471B2C(0x472cdc, 7196080, 0, 0, 0, 0, 0, 0);
    }
    *(A14 + 4) = *(Ac - *(Ac - 4) - 0xc);
    return A14;
}

/*    Procedure: 0x00472A89 - 0x00472BFF
 *    Argument size: 36
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00472A89()
 *        L00472C00()
 */

L00472A89(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff8 = 0;
    Vfffffff4 = 0;
    Vfffffff0 = 0;
    if(A1c != 0) {
        if(L00471474(A1c, Ac) == 0) {
            goto L00472ac0;
        }
        eax = 0;
    } else {
L00472ac0:
        if(!( *(Ac + 0xc) & 4)) {
            eax = 0;
        } else {
            Vfffffffc = 0;
            for(ebx = ( *(Ac + 0x12) & 65535) + Ac; 1; ebx = ebx + 0xc) {
                edi = *ebx;
                if(edi == 0) {
                    if(Vfffffffc != 0) {
                        goto L00472be3;
                    }
                    Vfffffffc = Vfffffffc + 1;
                    ebx = ( *(Ac + 0x10) & 65535) + Ac;
                    continue;
                }
                if(!( *(ebx + 8) & 8)) {
                    if(A24 != 0) {
                        if(( *(ebx + 8) & 3) != 3) {
                            goto L00472b04;
                        }
                        eax = 1;
                    } else {
L00472b04:
                        eax = 0;
                    }
                    Vffffffec = eax;
                    esi = A8 + *(ebx + 4);
                    Vffffffe8 = A28;
                    if(!( *(ebx + 8) & 4)) {
                        esi = *esi;
                        Vffffffe8 = edi;
                    }
                    if(L00471474(A14, edi) != 0) {
                        if(A10 == 0) {
                            if(A18 == 0) {
                                goto L00472ba4;
                            }
                            if(L00472A89(esi, edi, A18, A1c, 0, 0, A20, 0, 0) == 0) {
                                goto L00472bc3;
                            } else {
                                goto L00472ba4;
                            }
                        }
                        if(esi != A10) {
                            goto L00472bc3;
                        } else {
                            break;
                        }
                    }
                    if(!( *(edi + 0xc) & 4)) {
                        eax = L00472A89(esi, edi, A10, A14, A18, A1c, A20, Vffffffec, Vffffffe8);
                        if(eax != 0) {
                            esi = eax;
                            Vffffffec = *A20;
L00472ba4:
                            if(Vfffffff0 == 0 || esi != Vfffffff4) {
                                Vfffffff0 = Vfffffff0 + 1;
                                Vfffffff4 = esi;
                                Vfffffff8 = Vffffffec;
                            } else {
                                Vfffffff8 = Vfffffff8 | Vffffffec;
                            }
                        }
                    }
                }
L00472bc3:
            }
            eax = esi;
            goto L00472bf9;
L00472be3:
            *A20 = Vfffffff8;
            if(Vfffffff0 != 1) {
                Vfffffff4 = 0;
            }
            eax = Vfffffff4;
        }
    }
L00472bf9:
}

/*    Procedure: 0x00472C00 - 0x00472CC4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472C00()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edx = *(ebp + 0x14);
    eax = *(ebp + 0xc);
    *(ebp - 4) = *(ebp + 0x10);
    esi = edx;
    if(*(ebp + 8) != 0) {
        edi = *(ebp + 8) - *(eax - 8);
        ebx = *(eax - *(eax - 4) - 0xc);
        if(edx == 0) {
            eax = edi;
            goto L00472cbe;
        }
        if(L00471474(esi, ebx) != 0) {
            eax = edi;
            goto L00472cbe;
        }
        if(L00471474( *(ebp - 4), ebx) == 0) {
            eax = L00472A89(edi, ebx, 0, esi, *(ebp + 8), *(ebp - 4), ebp - 8, 1, 0);
            if(eax != 0) {
                goto L00472cbe;
            }
        }
        eax = L00472A89(edi, ebx, 0, esi, 0, 0, ebp - 8, 1, 0);
        if(eax != 0 && *(ebp - 8) != 0) {
            goto L00472cbe;
        }
    }
    if(*(ebp + 0x18) != 0) {
        L00471B2C(0x472cf8, 7196081, 0, 0, 0, 0, 0, 0);
    }
    eax = 0;
L00472cbe:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00472CC5 - 0x00472D26
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472CC5()
{



    *eax = *eax + al;
    asm("adc [eax],al");
    asm("adc al,0x2d");
    *(ecx + (edi + 1) * 2 + 0x70) = *(ecx + (edi + 1) * 2 + 0x70) + dh;
    ebp = *gs:esi+0x66] * 2760815;
    *eax = *eax + eax;
    *eax = *eax + al;
    *eax = *eax + eax;
    asm("adc [eax],al");
    asm("Unknown opcode 0xff");
    asm("Unknown opcode 0xff");
    asm("Unknown opcode 0xff");
    *eax = *eax + 1;
    *eax = *eax + al;
    asm("%f pop edi");
    if(*(edx + 0x61) = *(edx + 0x61) + al) {
        goto L00472d6b;
    }
    >= ? 0x472d59 : ;
    esp = *(eax + eax);
    *eax = *eax + eax;
    asm("adc [eax],al");
    asm("Unknown opcode 0xff");
    asm("Unknown opcode 0xff");
    asm("Unknown opcode 0xff");
    *eax = *eax + 1;
    *eax = *eax + al;
    asm("%f pop edi");
    asm("arpl [ecx+0x73],sp");
    if(*(edx + 0x61) = *(edx + 0x61) + al) {
        goto L019bd3d0;
    }
    *eax = *eax + al;
    *eax = *eax + cl;
    *eax = *eax + al;
    *ebx = *ebx + al;
    *eax = *eax + dh;
    *eax = *eax + al;
    *eax = *eax + al;
    *ebx = *ebx + dh;
    *eax = *eax + al;
    al :: 0;
    eax = eax + 1;
}

/*    Procedure: 0x00472D5C - 0x00472D99
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00471926()
 *        L00471BE9()
 *        L00472383()
 *        L00472DC7()
 */

L00472D5C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = ebp + *(eax + 4);
    *(ebx + 8) = eax;
    *(ebx + 0xc) = & A8;
    *(ebx + 4) = 0x472103;
    *(ebx + 0x10) = 0;
    *(ebx + 0x12) = 0;
    *(ebx + 0x1c) = *M006dcdb8;
    *ebx = *fs:word 0x0];
    *%fs:0x0] = ebx;
    return *ebx;
}

/*    Procedure: 0x00472D9A - 0x00472DA1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472D9A()
{



    *eax = *eax + al;
    return L00477DC8();
}

/*    Procedure: 0x00472DA2 - 0x00472DC6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00472DA2(A8)
/* unknown */ void  A8;
{



    eax = *( *( *fs:0x4] - 8) + 8);
    if(A8 != 0) {
        *( *( *fs:0x4] - 8) + 8) = A8;
    }
}

/*    Procedure: 0x00472DC7 - 0x00472E14
 *    Argument size: 0
 *    Local size: 32
 *    Save regs size: 12
 *    Called by:
 *        L00471926()
 *        L00471B59()
 *        L00471BE9()
 *        L00472383()
 *        L00472E15()
 *        L00472F5E()
 */

L00472DC7()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vfffffff0;



    eax = 0x60b000;
    L00472D5C();
    L00473104();
    Vfffffff0 = 8;
    *( *( *( *fs:0x4] - 8) + 8))();
    Vfffffff0 = 0;
    goto L00472e00;
    L00471CA7();
L00472e00:
    L00477DC8();
    eax = Vffffffe0;
    *fs:0x0] = eax;
    return *fs:0x0];
}

/*    Procedure: 0x00472E15 - 0x00472E1A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472E15()
{



    return L00472DC7();
}

/*    Procedure: 0x00472E1B - 0x00472E3F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00472E1B(A8)
/* unknown */ void  A8;
{



    eax = *( *( *fs:0x4] - 8) + 0xc);
    if(A8 != 0) {
        *( *( *fs:0x4] - 8) + 0xc) = A8;
    }
}

/*    Procedure: 0x00472E40 - 0x00472E53
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004720FB()
 */

L00472E40()
{



    *( *( *( *fs:0x4] - 8) + 0xc))();
    return L00477DC8();
}

/*    Procedure: 0x00472E54 - 0x00472E72
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00472E54(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        return 0;
    }
    return *( *( *(A8 + Ac) - *( *(A8 + Ac) - 4) - 0xc) + 0x20);
}

/*    Procedure: 0x00472E73 - 0x00472F2B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        __entry_point__()
 */

L00472E73()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 8);
    esi = 0;
    if(ebx != 0) {
        *(ebx + 8) = 0x472d9c;
        *(ebx + 0xc) = 0x472e15;
    } else {
        if(M00480058 != 0) {
            edi = 0;
            eax = GetModuleHandleA(0);
            if(eax != 0) {
                edi = GetProcAddress(eax, "__GetExceptDLLinfo");
            }
            if(edi != 0) {
                *edi(ebp - 8);
                if(*(ebp - 8) >= -2106428599 && *(ebp - 8) <= -2106428583) {
                    ebx = *(ebp - 4);
                }
            }
        }
        if(ebx == 0) {
            L00472F2C(ebp - 8);
            ebx = *(ebp - 4);
        }
    }
    *( *fs:0x4] - 8) = ebx;
    if(esi == 0) {
        M006dcdb8 = *fs:0x4] - 4;
    }
    *( *fs:0x4] - 4) = 0;
    eax = *( *fs:0x4] - 8);
    *(eax + 4) = 0;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00472F2C - 0x00472F53
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00472E73()
 */

L00472F2C(A8)
/* unknown */ void  A8;
{



    M0060af58 = *( *fs:0x4] - 8) + 0x24;
    *A8 = -2106428599;
    *(A8 + 4) = 0x60af3c;
}

/*    Procedure: 0x00472F54 - 0x00472F5D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472F54()
{



    return 1;
}

/*    Procedure: 0x00472F5E - 0x00472FFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00472F5E()
{



    *eax = *eax + al;
    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = *(ebp + 0x10);
    edi = *(ebp + 0xc);
    ebx = *(ebp + 8);
    if(*ebx == 250608334) {
        eax = edi;
        edx = ebx;
        L0047308E();
        L00472DC7();
    }
    if(*ebx == -1073741571 && M0060b02c != 0) {
        L00477D58("Stack Overflow!");
    }
    if(M006dcdc0 != 0) {
        if(*L006dcdc0(ebx, edi, esi, *(ebp + 0x14)) != 0) {
            goto L00472fc5;
        }
        eax = 0;
    } else {
L00472fc5:
        if(M006dcdbc != 0) {
            if(*L006dcdbc(ebx, edi, esi, *(ebp + 0x14)) != 0) {
                goto L00472fe6;
            }
            eax = 0;
        } else {
L00472fe6:
            *(ebp - 8) = ebx;
            *(ebp - 4) = esi;
            eax = UnhandledExceptionFilter(ebp - 8);
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x00472FFC - 0x00473015
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473071()
 */

L00472FFC(A8)
/* unknown */ void  A8;
{



    *A8 = 0;
    *(A8 + 4) = 0x472f60;
    return L004730AC(A8);
}

/*    Procedure: 0x00473016 - 0x00473017
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473016()
{



}

/*    Procedure: 0x00473018 - 0x00473026
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047305D()
 */

L00473018(A8)
/* unknown */ void  A8;
{



    return L004730C1(A8);
}

/*    Procedure: 0x00473027 - 0x0047303A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00473027(A8)
/* unknown */ void  A8;
{



    M006dcdc0 = A8;
    return M006dcdc0;
}

/*    Procedure: 0x0047303B - 0x00473046
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047303B()
{



    M006dcdc0 = 0x472f54;
}

/*    Procedure: 0x00473047 - 0x0047305C
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473047()
{



    M006dcdbc = 0x472f54;
    M006dcdc0 = 0x472f54;
}

/*    Procedure: 0x0047305D - 0x00473070
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047305D()
{



    if(M006dd1e4 != 0) {
        eax = L00473018(eax);
    }
}

/*    Procedure: 0x00473071 - 0x00473084
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473071()
{



    if(M006dd1e4 != 0) {
        eax = L00472FFC(eax);
    }
}

/*    Procedure: 0x00473085 - 0x0047308D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473085()
{



    *eax = *eax + al;
    *(ebx + -1471517) = *(ebx + -1471517) + cl;
    asm("loopne 0x4730e2");
}

/*    Procedure: 0x0047308E - 0x004730A2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00471BAA()
 *        L00472F5E()
 */

L0047308E()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    return RtlUnwind(eax, 0x47309f, edx, 0);
}

/*    Procedure: 0x004730A3 - 0x004730A9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00471F76()
 *        L004720FB()
 */

L004730A3()
{
    /* unknown */ void  ebp;



    ebp = ecx;
    return *ebx();
}

/*    Procedure: 0x004730AA - 0x004730AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004730AA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004730AC - 0x004730C0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00472FFC()
 */

L004730AC(A8)
/* unknown */ void  A8;
{



    *A8 = *%fs:0x0];
    *fs:word 0x0] = A8;
}

/*    Procedure: 0x004730C1 - 0x004730F3
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473018()
 */

L004730C1(A8)
/* unknown */ void  A8;
{



    eax = A8;
    ecx = *%fs:0x0];
    if(eax == ecx) {
        eax = *eax;
        *fs:word 0x0] = eax;
L004730d8:
        return;
    }
    while(1) {
        if(ecx == -1) {
            goto L004730d8;
        }
        if(*ecx == eax) {
            break;
        }
        ecx = *ecx;
    }
    eax = *eax;
    *ecx = eax;
    goto L004730d8;
    goto RtlUnwind;
    *eax = *eax + al;
}

/*    Procedure: 0x004730F4 - 0x004730FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041BE97()
 */

L004730F4()
{



    goto L00475FF8;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x004730FC - 0x00473103
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004100F4()
 *        L0041021C()
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L00418168()
 *        L00418DEC()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044D064()
 */

L004730FC()
{



    goto L00476034;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00473104 - 0x0047310B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00472DC7()
 */

L00473104()
{



    goto L004750d0;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0047310C - 0x00473113
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004100F4()
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 *        L0044D0D8()
 *        L0044D2E1()
 *        L0044D43E()
 *        L0044D609()
 *        L0044D7A6()
 */

L0047310C()
{



    goto L004760A4;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00473114 - 0x0047311B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418DEC()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 */

L00473114()
{



    goto L0047611C;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0047311C - 0x00473123
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004100F4()
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L00418C0C()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 *        L0044D0D8()
 *        L0044D2E1()
 *        L0044D43E()
 *        L0044D609()
 */

L0047311C()
{



    goto L00475214;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00473124 - 0x0047312B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450F38()
 */

L00473124()
{



    goto L0047630C;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x0047312C - 0x00473133
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041021C()
 */

L0047312C()
{



    goto L004753FC;
    asm("xchg ebx,ebx");
}

/*    Procedure: 0x00473134 - 0x004731B0
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00474510()
 *        L00474878()
 */

L00473134(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  esi;



    esi = Ac;
    if(!( *(A8 + 0x12) & 4)) {
        L00477640( *(A8 + 4));
    }
    *(A8 + 0x12) = *(A8 + 0x12) & 65523;
    *(A8 + 0xc) = 0;
    eax = A8 + 0x17;
    *(A8 + 4) = eax;
    *A8 = *(A8 + 4);
    if(A10 != 2 && A14 > 0) {
        M0060bef4 = 0x475098;
        if(esi == 0) {
            eax = L0047777C(A14);
            esi = eax;
            if(esi != 0) {
                *(A8 + 0x12) = *(A8 + 0x12) | 4;
                goto L00473197;
            }
            eax = eax | -1;
            goto L004731ac;
        }
L00473197:
        *A8 = esi;
        *(A8 + 4) = esi;
        *(A8 + 0xc) = A14;
        if(A10 == 1) {
            *(A8 + 0x12) = *(A8 + 0x12) | 8;
        }
    }
    eax = 0;
L004731ac:
}

/*    Procedure: 0x004731B1 - 0x004731B7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004731B1()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004731B8 - 0x00473249
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0041656C()
 *        L004179D0()
 *        L00419720()
 *        L004198BC()
 *        L0041A034()
 *        L0041A13C()
 *        L0041BE97()
 *        L0043E43C()
 *        L00450B54()
 *        L0045584D()
 *        L00473464()
 *        L0047506D()
 */

L004731B8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(A8 == 0 || *(A8 + 0x14) != bx) {
        eax = eax | -1;
    } else {
        if(*(A8 + 0xc) != 0) {
            if(*(A8 + 8) < 0 && L0047324C(A8) != 0) {
                esi = esi | -1;
                goto L00473243;
            }
            if(!( *(A8 + 0x12) & 4)) {
                L00477640( *(A8 + 4));
            }
        }
        esi = L00476034( *(A8 + 0x16));
        *(A8 + 0x12) = 0;
        *(A8 + 0xc) = 0;
        *(A8 + 8) = 0;
        *(A8 + 0x16) = 0xff;
        if(*(A8 + 0x10) != 0) {
            L0047630C(L00473C98(0, 0, edi));
            *(A8 + 0x10) = 0;
        }
L00473243:
        eax = esi;
    }
}

/*    Procedure: 0x0047324A - 0x0047324B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047324A()
{



    *eax = *eax + al;
}

/*    Procedure: 0x0047324C - 0x004732CE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004731B8()
 *        L00473584()
 *        L00473878()
 *        L004739AC()
 *        L00473B24()
 *        L00475097()
 *        L004750CD()
 */

L0047324C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    if(A8 == 0) {
        L00473334();
        eax = 0;
    } else {
        if(*(A8 + 0x14) != bx) {
            eax = eax | -1;
        } else {
            if(*(A8 + 8) >= 0) {
                if(*(A8 + 0x12) & 8 || A8 + 0x17 == *A8) {
                    *(A8 + 8) = 0;
                    if(A8 + 0x17 == *A8) {
                        *A8 = *(A8 + 4);
                    }
                }
                eax = 0;
            } else {
                esi = *(A8 + 0xc) + *(A8 + 8) + 1;
                *(A8 + 8) = *(A8 + 8) - esi;
                eax = *(A8 + 4);
                *A8 = eax;
                eax = L004753FC( *(A8 + 0x16), *A8, esi);
                if(esi != eax) {
                    if(*(A8 + 0x13) & 2) {
                        goto L004732c9;
                    }
                    *(A8 + 0x12) = *(A8 + 0x12) | 0x10;
                    eax = eax | -1;
                } else {
L004732c9:
                    eax = 0;
                }
            }
        }
    }
}

/*    Procedure: 0x004732CF - 0x004732CF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004732CF()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004732D0 - 0x004732ED
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041A13C()
 */

L004732D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = L004738DC(A8);
    *Ac = eax;
    eax = !(eax = *Ac + 1) ? eax | -1 : 0;
}

/*    Procedure: 0x004732EE - 0x004732F3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004732EE()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
}

/*    Procedure: 0x004732F4 - 0x00473317
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450D48()
 *        L00450E30()
 */

L004732F4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L00475628(A8, A10, Ac);
    eax = eax == 0 ? 0 : eax | -1;
}

/*    Procedure: 0x00473318 - 0x00473331
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450DCC()
 *        L00450E30()
 */

L00473318(A8)
/* unknown */ void  A8;
{



    eax = L0047566C(A8);
    eax = eax == 0 ? 0 : eax | -1;
}

/*    Procedure: 0x00473332 - 0x00473333
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473332()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00473334 - 0x0047338D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L0047324C()
 */

L00473334()
{
    /* unknown */ void  ebx;
    /* unknown */ void  ebp;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebp = 0;
    edi = M0060b404;
    for(ebx = 0x60b044; 1; ebx = ebx + 0x18) {
        eax = edi;
        edi = edi - 1;
        if(eax == 0) {
            break;
        }
        eax = *(ebx + 8);
        if(eax < 0) {
            esi = *(ebx + 0xc) + eax + 1;
            *(ebx + 8) = *(ebx + 8) - esi;
            eax = *(ebx + 4);
            *ebx = eax;
            if(esi != L004753FC( *(ebx + 0x16), *ebx, esi) && !( *(ebx + 0x13) & 2)) {
                *(ebx + 0x12) = *(ebx + 0x12) | 0x10;
            }
            ebp = ebp + 1;
        }
    }
    return ebp;
}

/*    Procedure: 0x0047338E - 0x004733A0
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047338E()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    (save)ebp;
    eax = *(esp + 8);
    M0060b4ac = eax;
    (restore)ebp;
    return M0060b4ac;
}

/*    Procedure: 0x004733A1 - 0x004733A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004733A1()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004733A4 - 0x00473460
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00473464()
 */

L004733A4(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A8;
    esi = 0;
    al = *edi;
    edi = edi + 1;
    if(al == 0x72) {
        edx = 0;
        ecx = 1;
    } else {
        if(al == 0x77) {
            edx = 0x301;
            esi = 0x80;
            ecx = 2;
        } else {
            if(al == 0x61) {
                edx = 0x901;
                esi = 0x80;
                ecx = 2;
            } else {
                eax = 0;
                goto L0047345d;
            }
        }
    }
    al = *edi;
    edi = edi + 1;
    if(al == 0x2b || *edi == 0x2b && (al == 0x74 || al == 0x62)) {
        if(al == 0x2b) {
            al = *edi;
        }
        edx = edx & -2 | 2;
        esi = 0x180;
        ecx = 3;
    }
    if(al == 0x74) {
        edx = edx | 16384;
    } else {
        if(al == 0x62) {
            edx = edx | 32768;
            ecx = ecx | 0x40;
        } else {
            if(!((edx | *M0060b4ac & 49152) & 0x80)) {
                ecx = ecx | 0x40;
            }
        }
    }
    M0060bef8 = 0x475070;
    *Ac = edx;
    *A10 = esi;
    eax = ecx;
L0047345d:
}

/*    Procedure: 0x00473461 - 0x00473463
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473461()
{



}

/*    Procedure: 0x00473464 - 0x00473509
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473538()
 */

L00473464()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    ebx = *(ebp + 8);
    L004733A4( *(ebp + 0x10), ebp - 4, ebp - 8);
    *(ebx + 0x12) = ax;
    if(ax != 0) {
        if(*(ebx + 0x16) >= 0) {
            goto L004734bd;
        }
        L0047611C( *(ebp + 0xc), *(ebp - 4) | *(ebp + 0x14), *(ebp - 8));
        *(ebx + 0x16) = al;
        if(al >= 0) {
            goto L004734bd;
        }
    }
    *(ebx + 0x16) = 0xff;
    *(ebx + 0x12) = 0;
    eax = 0;
    goto L00473505;
L004734bd:
    if(!( *( *(ebx + 0x16) * 4 + 0x60b409) & 0x20)) {
        *(ebx + 0x12) = *(ebx + 0x12) | 0x200;
    }
    (save)0x200;
    eax = 1;
    if(!( *(ebx + 0x13) & 2)) {
        eax = 0;
    }
    (save)eax;
    (save)0;
    (save)ebx;
    esp = esp + 0x10;
    if(L00474510() != 0) {
        L004731B8(ebx);
        eax = 0;
    } else {
        *(ebx + 0x10) = 0;
        eax = ebx;
    }
L00473505:
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0047350A - 0x0047350B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047350A()
{



}

/*    Procedure: 0x0047350C - 0x00473535
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473538()
 */

L0047350C()
{



    eax = 0x60b044;
    goto L0047352f;
L0047352b:
    return 0;
L0047352f:
    while(*(eax + 0x16) >= 0) {
        if(eax >= (M0060b404 << 3) + (M0060b404 << 3) * 2 + 0x60b044) {
            goto L0047352b;
        }
        eax = eax + 0x18;
    }
}

/*    Procedure: 0x00473536 - 0x00473537
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473536()
{



}

/*    Procedure: 0x00473538 - 0x00473560
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0041656C()
 *        L004179D0()
 *        L00419720()
 *        L004198BC()
 *        L0041A034()
 *        L0041A13C()
 *        L0041BE97()
 *        L0043E43C()
 *        L00450B54()
 *        L00455820()
 */

L00473538(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = L0047350C();
    if(ebx != 0) {
        ebx = L00473464(ebx, A8, Ac, 0);
    }
    return ebx;
}

/*    Procedure: 0x00473561 - 0x00473563
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473561()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473564 - 0x00473581
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004179D0()
 *        L00417FC0()
 *        L004198BC()
 */

L00473564(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00474A14(0x473584, A8, Ac, & A10);
}

/*    Procedure: 0x00473582 - 0x00473583
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473582()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00473584 - 0x00473652
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00473654()
 *        L0047397C()
 */

L00473584(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  edi;



    edi = A8;
    if(!( *(A10 + 0x12) & 8)) {
        *(ebp - 4) = Ac;
        if(*(ebp - 4) != 0) {
            do {
                if(!(eax = L00473B24( *edi, A10) + 1)) {
                    goto L004735b3;
                }
                *(ebp - 4) = *(ebp - 4) - 1;
                edi = edi + 1;
            } while(*(ebp - 4) != 0);
            goto L004735c4;
L004735b3:
            eax = 0;
        } else {
L004735c4:
            eax = Ac;
        }
    } else {
        eax = *(A10 + 0xc);
        if(eax != 0) {
            if(eax < Ac) {
                goto L00473619;
            }
            edx = *(A10 + 8);
            if(edx + Ac >= 0) {
                if(edx == 0) {
                    *(A10 + 8) = (edx | -1) - eax;
                    goto L004735fe;
                }
                if(L0047324C(A10) == 0) {
                    goto L004735fe;
                }
                eax = 0;
            } else {
L004735fe:
                L00471128( *A10, edi, Ac);
                *(A10 + 8) = *(A10 + 8) + Ac;
                *A10 = *A10 + Ac;
                eax = Ac;
            }
        } else {
L00473619:
            if(*(A10 + 0xc) != 0) {
                if(*(A10 + 8) == 0 || L0047324C(A10) == 0) {
                    goto L00473634;
                }
                eax = 0;
            } else {
L00473634:
                eax = Ac > L004753FC( *(A10 + 0x16), edi, Ac) ? 0 : Ac;
            }
        }
    }
}

/*    Procedure: 0x00473653 - 0x00473653
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473653()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473654 - 0x00473691
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00473D29()
 */

L00473654(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    if(A8 != 0) {
        esi = L00471288(A8);
        if(esi == 0) {
            goto L0047368c;
        }
        eax = L00473584(A8, esi, Ac);
        eax = eax != 0 ? *(A8 + esi - 1) & 0xff : eax | -1;
    } else {
L0047368c:
        eax = 0;
    }
}

/*    Procedure: 0x00473692 - 0x00473693
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473692()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00473694 - 0x004737C1
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004737C4()
 */

L00473694()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0x10);
    esi = *(ebp + 0xc);
    *(ebp - 8) = *(ebp + 8);
    if(*(ebx + 0xc) != 0) {
        do {
            if(esi == 0) {
                goto L004737b9;
            }
            do {
                eax = *(ebx + 8);
                if(eax != 0) {
                    edi = eax >= esi ? esi : eax;
                    L00471128( *(ebp - 8), *ebx, edi);
                    *ebx = *ebx + edi;
                    *(ebx + 8) = *(ebx + 8) - edi;
                    if(esi == edi) {
                        goto L004736e5;
                    }
                    *(ebp - 8) = *(ebp - 8) + edi;
                    esi = esi - edi;
                }
                ecx = *(ebx + 0xc);
                if(esi >= ecx) {
                    eax = esi;
                    edx = 0;
                    edx = ecx / ecx % ecx / ecx;
                    edi = esi - edx;
                    eax = L00475214( *(ebx + 0x16), *(ebp - 8), edi);
                    *(ebp - 4) = eax;
                    if(esi == *(ebp - 4)) {
                        goto L0047371b;
                    }
                    if(*(ebp - 4) == -1) {
                        goto L00473728;
                    }
                    *(ebp - 8) = *(ebp - 8) + *(ebp - 4);
                    esi = esi - *(ebp - 4);
                    if(edi != *(ebp - 4)) {
                        goto L00473740;
                    }
                }
                eax = L00473A58(ebx);
                *(ebp - 4) = eax;
                if(eax = *(ebp - 4) + 1) {
                    goto L00473772;
                }
                al = *(ebp - 4);
                *( *(ebp - 8)) = al;
                *(ebp - 8) = *(ebp - 8) + 1;
                esi = esi - 1;
            } while(esi != 0);
            goto L00473781;
L00473740:
            if(*(ebx + 0x12) & 0x40) {
                break;
            }
        } while(*(ebp - 4) != 0);
        goto L00473750;
L004736e5:
        eax = 0;
        goto L004737bb;
L0047371b:
        eax = 0;
        goto L004737bb;
L00473728:
        *(ebx + 0x12) = *(ebx + 0x12) | 0x10;
        goto L004737b9;
L00473750:
        *(ebx + 0x12) = *(ebx + 0x12) | 0x20;
        goto L004737b9;
L00473772:
        *(ebx + 0x12) = *(ebx + 0x12) | 0x20;
        goto L004737b9;
L00473781:
    } else {
        while(esi != 0) {
            if(*(ebx + 8) = *(ebx + 8) - 1) {
                eax = L00473A44(ebx);
            } else {
                eax = *ebx;
                *ebx = *ebx + 1;
                eax = *eax & 0xff;
            }
            *(ebp - 4) = eax;
            if(!(eax = eax + 1)) {
                break;
            }
            al = *(ebp - 4);
            *( *(ebp - 8)) = al;
            *(ebp - 8) = *(ebp - 8) + 1;
            esi = esi - 1;
        }
        if(*(ebp - 4) == -1) {
            *(ebx + 0x12) = *(ebx + 0x12) | 0x20;
        }
    }
L004737b9:
    eax = esi;
L004737bb:
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004737C2 - 0x004737C3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004737C2()
{



}

/*    Procedure: 0x004737C4 - 0x004737F6
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004147AC()
 *        L004148B4()
 *        L00414C40()
 *        L0041656C()
 *        L0041A13C()
 *        L0041BE97()
 *        L0043E43C()
 */

L004737C4(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    if(Ac == 0) {
        eax = 0;
    } else {
        ebx = Ac;
        ebx = A10 * A10;
        eax = ebx - L00473694(A8, ebx, A14);
        edx = 0;
        edx = Ac / Ac % Ac / Ac;
    }
}

/*    Procedure: 0x004737F7 - 0x004737F7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004737F7()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004737F8 - 0x0047381A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00419720()
 */

L004737F8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00473DC8(0x473a58, 0x47492c, A8, Ac, & A10);
}

/*    Procedure: 0x0047381B - 0x0047381B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047381B()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047381C - 0x00473875
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00473878()
 *        L004738DC()
 */

L0047381C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    ebx = A8;
    edx = *(ebx + 8);
    if(edx < 0) {
        eax = *(ebx + 0xc) + edx + 1;
        ecx = eax;
    } else {
        eax = edx;
        ecx = eax;
    }
    if(!( *(ebx + 0x12) & 0x40)) {
        return ecx;
    }
    edx = *ebx;
    if(*(ebx + 8) < 0) {
        while(1) {
            ebx = eax;
            eax = eax - 1;
            if(ebx == 0) {
                break;
            }
            edx = edx - 1;
            if(*edx != 0xa) {
                continue;
            }
            ecx = ecx + 1;
        }
    } else {
        while(1) {
            ebx = eax;
            eax = eax - 1;
            if(ebx == 0) {
                break;
            }
            bl = *edx;
            edx = edx + 1;
            if(bl != 0xa) {
                continue;
            }
            ecx = ecx + 1;
        }
    }
    return ecx;
}

/*    Procedure: 0x00473876 - 0x00473877
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473876()
{



}

/*    Procedure: 0x00473878 - 0x004738D8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0043E43C()
 *        L00473960()
 *        L00474510()
 */

L00473878(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  edi;



    edi = Ac;
    eax = L0047324C(A8);
    if(eax != 0) {
        eax = eax | -1;
    } else {
        if(A10 == 1 && *(A8 + 8) > 0) {
            edi = edi - L0047381C(A8);
        }
        *(A8 + 0x12) = *(A8 + 0x12) & 65119;
        *(A8 + 8) = 0;
        *A8 = *(A8 + 4);
        eax = !(eax = L004760A4( *(A8 + 0x16), edi, A10) + 1) ? eax | -1 : 0;
    }
}

/*    Procedure: 0x004738D9 - 0x004738DB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004738D9()
{



}

/*    Procedure: 0x004738DC - 0x0047395D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L004732D0()
 */

L004738DC(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = L004760A4( *(A8 + 0x16), 0, 1);
    if(esi != -1) {
        if(*(A8 + 8) >= 0) {
            goto L0047394e;
        }
        if(*( *(A8 + 0x16) * 4 + 0x60b409) & 8) {
            goto L00473943;
        }
        edi = esi;
        esi = L004760A4( *(A8 + 0x16), 0, 2);
        if(esi != -1) {
            if(!(eax = L004760A4( *(A8 + 0x16), edi, 0) + 1)) {
                esi = esi | -1;
            } else {
L00473943:
                esi = esi + L0047381C(A8);
                goto L00473957;
L0047394e:
                esi = esi - L0047381C(A8);
            }
        }
    }
L00473957:
    return esi;
}

/*    Procedure: 0x0047395E - 0x0047395F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047395E()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00473960 - 0x00473978
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0041656C()
 */

L00473960(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00473878(A8, *Ac, 0);
}

/*    Procedure: 0x00473979 - 0x0047397B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473979()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047397C - 0x004739AB
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004146C8()
 *        L004148B4()
 *        L004149D0()
 *        L0041A034()
 *        L0041BE97()
 *        L00450BD4()
 *        L00450C8C()
 */

L0047397C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(Ac == 0) {
        eax = A10;
    } else {
        (save)A14;
        eax = Ac;
        asm("imul esi");
        (save)eax;
        (save)A8;
        eax = L00473584();
        esp = esp + 0xc;
        edx = 0;
        edx = Ac / Ac % Ac / Ac;
    }
}

/*    Procedure: 0x004739AC - 0x004739DF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004739E0()
 *        L00473A58()
 */

L004739AC()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = 0x28;
    for(ebx = 0x60b044; 1; ebx = ebx + 0x18) {
        eax = esi;
        esi = esi - 1;
        if(eax == 0) {
            break;
        }
        if(( *(ebx + 0x12) & 65535 & 0x300) == 0x300) {
            L0047324C(ebx);
        }
    }
}

/*    Procedure: 0x004739E0 - 0x00473A42
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00473A58()
 */

L004739E0(A8)
/* unknown */ void  A8;
{



    if(!( *(A8 + 0x13) & 2)) {
        L004739AC();
    }
    eax = *(A8 + 4);
    *A8 = eax;
    eax = L00475214( *(A8 + 0x16), *A8, *(A8 + 0xc));
    *(A8 + 8) = eax;
    if(eax > 0) {
        *(A8 + 0x12) = *(A8 + 0x12) & 65503;
        return 0;
    }
    if(*(A8 + 8) == 0) {
        *(A8 + 0x12) = *(A8 + 0x12) & 65151 | 0x20;
    } else {
        eax = 0;
        *(A8 + 8) = 0;
        *(A8 + 0x12) = *(A8 + 0x12) | 0x10;
    }
    return eax | -1;
}

/*    Procedure: 0x00473A43 - 0x00473A43
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473A43()
{



}

/*    Procedure: 0x00473A44 - 0x00473A55
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00455A04()
 *        L00473694()
 */

L00473A44(A8)
/* unknown */ void  A8;
{



    *(A8 + 8) = *(A8 + 8) + 1;
    return L00473A58(A8);
}

/*    Procedure: 0x00473A56 - 0x00473A57
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473A56()
{



}

/*    Procedure: 0x00473A58 - 0x00473B22
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00473694()
 *        L00473A44()
 */

L00473A58(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return eax | -1;
    }
    if(*(A8 + 8) > 0) {
        *(A8 + 8) = *(A8 + 8) - 1;
        eax = *A8;
        *A8 = *A8 + 1;
        return *eax & 0xff;
    }
    if(*(A8 + 8) < 0 || *(A8 + 0x12) & 0x110 || !( *(A8 + 0x12) & 1)) {
        *(A8 + 0x12) = *(A8 + 0x12) | 0x10;
        return eax | -1;
    }
    *(A8 + 0x12) = *(A8 + 0x12) | 0x80;
    if(*(A8 + 0xc) != 0) {
        eax = L004739E0(A8);
        if(eax != 0) {
            return eax | -1;
        }
        *(A8 + 8) = *(A8 + 8) - 1;
        eax = *A8;
        *A8 = *A8 + 1;
        return *eax & 0xff;
    }
    if(!( *(A8 + 0x13) & 2)) {
        L004739AC();
    }
    if(L00475214( *(A8 + 0x16), 7196420, 1) == 0) {
        *(A8 + 0x12) = !(eax = L0047511C( *(A8 + 0x16)) - 1) ? *(A8 + 0x12) | 0x10 : *(A8 + 0x12) & 65151 | 0x20;
        return eax | -1;
    }
    *(A8 + 0x12) = *(A8 + 0x12) & 65503;
    return M006dcf04 & 0xff;
}

/*    Procedure: 0x00473B23 - 0x00473B23
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473B23()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473B24 - 0x00473C16
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00450BF0()
 *        L00473584()
 */

L00473B24(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ecx;



    *(ebp - 1) = A8;
    if(*(Ac + 8) < -1) {
        *(Ac + 8) = *(Ac + 8) + 1;
        eax = *Ac;
        *Ac = *Ac + 1;
        *eax = *(ebp - 1);
        if(!( *(Ac + 0x12) & 8)) {
            if(*(ebp - 1) != 0xa && *(ebp - 1) != 0xd) {
                goto L00473b69;
            }
            eax = L0047324C(Ac);
            if(eax == 0) {
                goto L00473b69;
            }
            eax = eax | -1;
        } else {
L00473b69:
            eax = *(ebp - 1) & 0xff;
        }
    } else {
        ax = *(Ac + 0x12);
        if(A8 & 0x90 || !(A8 & 2)) {
            *(Ac + 0x12) = *(Ac + 0x12) | 0x10;
            eax = eax | -1;
        } else {
            *(Ac + 0x12) = *(Ac + 0x12) | 0x100;
            if(*(Ac + 0xc) != 0) {
                if(*(Ac + 8) != 0) {
                    eax = L0047324C(Ac);
                    if(eax == 0) {
                        goto L00473bae;
                    }
                    eax = eax | -1;
                } else {
L00473bae:
                    *(Ac + 8) = ~( *(Ac + 0xc));
                    eax = *Ac;
                    *Ac = *Ac + 1;
                    *eax = *(ebp - 1);
                    if(!( *(Ac + 0x12) & 8)) {
                        if(*(ebp - 1) != 0xa && *(ebp - 1) != 0xd) {
                            goto L00473be1;
                        }
                        eax = L0047324C(Ac);
                        if(eax == 0) {
                            goto L00473be1;
                        }
                        eax = eax | -1;
                    } else {
L00473be1:
                        eax = *(ebp - 1) & 0xff;
                    }
                }
            } else {
                if(!(eax = L004753FC( *(Ac + 0x16), ebp - 1, 1) - 1)) {
                    if(*(Ac + 0x13) & 2) {
                        goto L00473c0e;
                    }
                    *(Ac + 0x12) = *(Ac + 0x12) | 0x10;
                    eax = eax | -1;
                } else {
L00473c0e:
                    eax = *(ebp - 1) & 0xff;
                }
            }
        }
    }
}

/*    Procedure: 0x00473C17 - 0x00473C17
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473C17()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473C18 - 0x00473C94
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00410CA8()
 *        L0047004A()
 *        L00470837()
 */

L00473C18(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    eax = A8;
    if(Ac != 0 && *Ac != 0) {
        *eax = *Ac;
        eax = eax + 1;
        *eax = 0x3a;
        eax = eax + 1;
    }
    if(A10 != 0 && *A10 != 0) {
        eax = L00471428(eax, A10);
        dl = *(eax - 1);
        if(dl != 0x5c && dl != 0x2f) {
            *eax = 0x5c;
            eax = eax + 1;
        }
    }
    if(A14 != 0) {
        eax = L00471428(eax, A14);
    }
    if(A18 != 0 && *A18 != 0) {
        if(*A18 != 0x2e) {
            *eax = 0x2e;
            eax = eax + 1;
        }
        eax = L00471428(eax, A18);
    }
    *eax = 0;
}

/*    Procedure: 0x00473C95 - 0x00473C97
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473C95()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473C98 - 0x00473CE4
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004731B8()
 *        L00473CE5()
 */

L00473C98(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = A8;
    if(ebx == 0) {
        ebx = 7196430;
    }
    eax = Ac == 0 ? 0x60b4b0 : Ac;
    L00476740(A10 & 65535, L00471428(ebx, eax));
    L004711C8(ebx, 0x60b4b4);
    return ebx;
}

/*    Procedure: 0x00473CE5 - 0x00473D28
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 */

L00473CE5(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ebx = A8;
    do {
        *Ac = *Ac + 1;
        if(*Ac == 0) {
            *Ac = 1;
        }
        ebx = L00473C98(ebx, 0, *Ac);
        eax = L00475FF8(ebx, 0);
    } while(eax == 0);
    return ebx;
}

/*    Procedure: 0x00473D29 - 0x00473DA4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473D29()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    (save)ebx;
    eax = *(ebp + 8);
    edx = M0060beac;
    if(edx < M0060b580) {
        if(edx < 0) {
            goto L00473d54;
        }
        ebx = *(M0060beac * 4 + 0x60b4bc);
    } else {
L00473d54:
        ebx = "Unknown error";
    }
    if(eax != 0 && *eax != 0) {
        L00473654(eax, 0x60b074);
        L00473654(": ", 0x60b074);
    }
    L00473654(ebx, 0x60b074);
    (restore)ebx;
    (restore)ebp;
    return L00473654("\n", 0x60b074);
}

/*    Procedure: 0x00473DA5 - 0x00473DA7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473DA5()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473DA8 - 0x00473DC6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L0041BE97()
 *        L0043C98B()
 *        L0045381C()
 *        L0046FDF3()
 *        L00470837()
 */

L00473DA8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00474A14(0x473584, 0x60b05c, A8, & Ac);
}

/*    Procedure: 0x00473DC7 - 0x00473DC7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00473DC7()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00473DC8 - 0x00474360
 *    Argument size: 20
 *    Local size: 80
 *    Save regs size: 12
 *    Called by:
 *        L004737F8()
 */

L00473DC8(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffb0;
    /* unknown */ void  Vffffffd0;
    /* unknown */ void  Vffffffd4;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe7;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vffffffff;



    esi = A14;
    Vfffffff8 = 0;
    Vfffffff4 = 0;
L00473dde:
    al = *esi;
    esi = esi + 1;
    Vffffffe7 = al;
    if(al == 0) {
        eax = Vfffffff8;
    } else {
        if(Vffffffe7 == 0x25) {
            al = *esi;
            esi = esi + 1;
            Vffffffe7 = al;
            if(al != 0x25) {
                goto L00473e88;
            }
        }
        Vfffffff4 = Vfffffff4 + 1;
        ebx = A8(A10);
        if(bl != 0xff) {
            if(!(Vffffffe7 & 0x80) && *(Vffffffe7 + 0x60b938) == 1) {
                goto L00473e45;
L00473e2f:
                Vfffffff4 = Vfffffff4 + 1;
                ebx = A8(A10);
                if(bl == 0xff) {
                    goto L00474340;
                }
L00473e45:
                if(!(bl & 0x80) && *(bl + 0x60b938) == 1) {
                    goto L00473e2f;
                }
                Ac(bl, A10);
                Vfffffff4 = Vfffffff4 - 1;
                goto L00473dde;
            }
            if(bl == Vffffffe7) {
                goto L00473dde;
            }
            Ac(bl, A10);
            goto L00474357;
L00473e88:
            Vffffffff = 0x20;
            edi = edi | -1;
L00473e8f:
            eax = !(Vffffffe7 & 0x80) ? 2 : *(Vffffffe7 + 0x60b938);
            if(eax <= 0x15) {
                switch(eax) {
                    case 0:
                        goto L00473fba;
                    case 1:
                        goto L00473fba;
                    case 2:
L00474357:
                        eax = Vfffffff8;
                        goto L0047435a;
                    case 3:
                        goto L00473fba;
                    case 4:
L00473f0f:
                        Vffffffff = Vffffffff | 1;
                        Vffffffe7 = *esi;
                        esi = esi + 1;
                        goto L00473e8f;
                    case 5:
                        goto L00473f4b;
                    case 6:
                        goto L004741b4;
                    case 7:
L00473f93:
                        Vffffffec = 0xa;
                        goto L00473fba;
                    case 8:
                        goto L00473f93;
                    case 9:
                        Vffffffec = 0;
                        goto L00473fba;
                    case 0xa:
                        goto L004740a4;
                    case 0xb:
                        Vffffffff = Vffffffff | 8;
                        Vffffffe7 = *esi;
                        esi = esi + 1;
                        goto L00473e8f;
                    case 0xc:
                        Vffffffff = Vffffffff | 2;
                        Vffffffe7 = *esi;
                        esi = esi + 1;
                        goto L00473e8f;
                    case 0xd:
                        Vffffffff = Vffffffff | 4;
                        Vffffffe7 = *esi;
                        esi = esi + 1;
                        goto L00473e8f;
                    case 0xe:
                        Vffffffec = 8;
                        goto L00473fba;
                    case 0xf:
                        goto L0047410d;
                    case 0x10:
                        goto L0047420f;
                    case 0x11:
                        eax = Vfffffff4;
                        goto L00473ff5;
                    case 0x12:
                        Vffffffec = 0x10;
                        goto L00473fba;
                    case 0x13:
                        goto L0047405c;
                    case 0x14:
                        Vffffffff = Vffffffff & 0xdf;
                        Vffffffe7 = *esi;
                        esi = esi + 1;
                        goto L00473e8f;
                    case 0x15:
                        Vffffffff = Vffffffff | 0x20;
                        Vffffffe7 = *esi;
                        esi = esi + 1;
                        goto L00473e8f;
                }
                goto L00473f0f;
L00473f4b:
                if(edi < 0) {
                    eax = Vffffffe7 - 0x30;
                } else {
                    eax = edi + edi + (edi + edi) * 4;
                    eax = eax + Vffffffe7 - 0x30;
                }
                edi = eax;
                Vffffffe7 = *esi;
                esi = esi + 1;
                goto L00473e8f;
            }
L00473fba:
            edi = edi & 32767;
            eax = L00474364(A8, Ac, A10, Vffffffec, edi, & Vfffffff4, & Vfffffff0);
            if(Vfffffff0 < 0) {
                goto L00474340;
            }
            if(Vfffffff0 == 0) {
                goto L00474357;
            }
L00473ff5:
            if(Vffffffe7 >= 0x41 && Vffffffe7 <= 0x5a && Vffffffe7 != 0x58) {
                Vffffffff = Vffffffff | 4;
            }
            dl = Vffffffff;
            if(dl & 1) {
                goto L00473dde;
            }
            if(!(dl & 4)) {
                A18 = A18 + 4;
                *( *(A18 - 4)) = eax;
            } else {
                if(!(dl & 2)) {
                    A18 = A18 + 4;
                    *( *(A18 - 4)) = ax;
                } else {
                    A18 = A18 + 4;
                    *( *(A18 - 4)) = eax;
                }
            }
            if(Vffffffe7 == 0x6e) {
                goto L00473dde;
            }
            Vfffffff8 = Vfffffff8 + 1;
            goto L00473dde;
L0047405c:
            eax = L00474364(A8, Ac, A10, 0x10, 8, & Vfffffff4, & Vfffffff0);
            if(Vfffffff0 <= 0) {
                goto L00474357;
            }
            if(Vffffffff & 1) {
                goto L00473dde;
            }
            A18 = A18 + 4;
            *( *(A18 - 4)) = eax;
            Vfffffff8 = Vfffffff8 + 1;
            goto L00473dde;
L004740a4:
            edi = edi & 32767;
            L004763F0( & Vffffffd4, A8, Ac, A10, edi, & Vfffffff4, & Vfffffff0);
            if(Vfffffff0 < 0) {
                goto L00474340;
            }
            if(Vfffffff0 == 0) {
                goto L00474357;
            }
            if(Vffffffff & 1) {
                goto L00473dde;
            }
            A18 = A18 + 4;
            L004763F6( & Vffffffd4, *(A18 - 4), Vffffffff);
            Vfffffff8 = Vfffffff8 + 1;
            goto L00473dde;
L0047410d:
            Vfffffff4 = Vfffffff4 + 1;
            ebx = A8(A10);
            if(bl == 0xff) {
                goto L00474340;
            }
            if(!(bl & 0x80) && *(bl + 0x60b938) == 1) {
                goto L0047410d;
            }
            if(!(Vffffffff & 1)) {
                A18 = A18 + 4;
                Vffffffe0 = *(A18 - 4);
                Vfffffff8 = Vfffffff8 + 1;
            }
            if(edi == -1) {
                edi = 32767;
            }
L00474154:
            if(!(Vffffffff & 1)) {
                *Vffffffe0 = bl;
                Vffffffe0 = Vffffffe0 + 1;
            }
            Vfffffff4 = Vfffffff4 + 1;
            ebx = A8(A10);
            if(bl != 0xff && bl != 0) {
                if(bl & 0x80) {
                    goto L00474189;
                }
                if(*(bl + 0x60b938) != 1) {
L00474189:
                    edi = edi - 1;
                    if(edi > 0) {
                        goto L00474154;
                    }
                }
            }
            Ac(bl, A10);
            Vfffffff4 = Vfffffff4 - 1;
            if(Vffffffff & 1) {
                goto L00473dde;
            }
            *Vffffffe0 = 0;
            goto L00473dde;
L004741b4:
            if(!(Vffffffff & 1)) {
                A18 = A18 + 4;
                Vffffffe0 = *(A18 - 4);
            }
            if(edi < 0) {
                edi = 1;
            }
            if(edi != 0) {
L004741d4:
                Vfffffff4 = Vfffffff4 + 1;
                ebx = A8(A10);
                if(bl == 0xff) {
                    goto L00474340;
                }
                if(!(Vffffffff & 1)) {
                    *Vffffffe0 = bl;
                    Vffffffe0 = Vffffffe0 + 1;
                }
                edi = edi - 1;
                if(edi > 0) {
                    goto L004741d4;
                }
            }
            if(Vffffffff & 1) {
                goto L00473dde;
            }
            Vfffffff8 = Vfffffff8 + 1;
            goto L00473dde;
L0047420f:
            L00471198( & Vffffffb0, 0, 0x20);
            Vffffffe8 = 0;
            bl = *esi;
            esi = esi + 1;
            if(bl == 0x5e) {
                Vffffffe8 = 1;
                bl = *esi;
                esi = esi + 1;
            }
L00474236:
            Vffffffe7 = bl;
            if(bl == 0) {
                goto L00474357;
            }
            eax = bl;
            ecx = eax & 7;
            dl = 1 << cl;
            *(ebp + (eax >> 3 & 0x1f) - 0x50) = *(ebp + (eax >> 3 & 0x1f) - 0x50) | dl;
            bl = *esi;
            esi = esi + 1;
            if(bl != 0x5d) {
                if(bl != 0x2d || Vffffffe7 >= *esi || *esi == 0x5d) {
                    goto L00474236;
                }
                bl = *esi;
                esi = esi + 1;
                goto L0047428c;
L00474275:
                eax = Vffffffe7;
                ecx = eax & 7;
                dl = 1 << cl;
                *(ebp + (eax >> 3 & 0x1f) - 0x50) = *(ebp + (eax >> 3 & 0x1f) - 0x50) | dl;
L0047428c:
                Vffffffe7 = Vffffffe7 + 1;
                if(bl > Vffffffe7) {
                    goto L00474275;
                }
                goto L00474236;
            }
            if(edi == -1) {
                edi = 32767;
            }
            if(!(Vffffffff & 1)) {
                A18 = A18 + 4;
                Vffffffe0 = *(A18 - 4);
            }
            Vffffffd0 = 0;
            goto L00474306;
L004742bc:
            Vfffffff4 = Vfffffff4 + 1;
            ebx = A8(A10);
            if(bl != 0xff) {
                eax = bl;
                ecx = eax & 7;
                edx = 1 << cl;
                eax = *(ebp + (eax >> 3 & 0x1f) - 0x50);
                if(0 != Vffffffe8) {
                    Vffffffd0 = Vffffffd0 + 1;
                    if(!(Vffffffff & 1)) {
                        *Vffffffe0 = bl;
                        Vffffffe0 = Vffffffe0 + 1;
                    }
L00474306:
                    if(edi = edi - 1) {
                        goto L004742bc;
                    }
                }
            }
            if(edi >= 0) {
                Ac(bl, A10);
                Vfffffff4 = Vfffffff4 - 1;
            }
            if(Vffffffd0 != 0 && !(Vffffffff & 1)) {
                *Vffffffe0 = 0;
                Vffffffe0 = Vffffffe0 + 1;
                Vfffffff8 = Vfffffff8 + 1;
            }
            if(bl == 0xff) {
                goto L00474340;
            }
            goto L00473dde;
        }
L00474340:
        eax = Ac(-1, A10);
        if(Vfffffff8 != 0) {
            goto L00474357;
        }
        eax = eax | -1;
    }
L0047435a:
}

/*    Procedure: 0x00474361 - 0x00474363
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474361()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00474364 - 0x0047450E
 *    Argument size: 28
 *    Local size: 24
 *    Save regs size: 12
 *    Called by:
 *        L00473DC8()
 */

L00474364(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vffffffff;



    esi = A14;
    Vffffffff = 0;
    Vfffffff8 = 0;
    Vfffffff4 = 1;
    Vfffffff0 = 0;
    Vffffffec = 0;
    edi = 0;
    while(1) {
        Vfffffff8 = Vfffffff8 + 1;
        eax = A8(A10);
        ebx = eax;
        if(edi == 0) {
            if(ebx >= 0 && ebx < 0x80 && *(ebx + 0x60bb99) & 1) {
                continue;
            }
            edi = 1;
        }
        if(A18 = A18 - 1) {
            goto L004744c8;
        }
        if(edi == 1) {
            edi = 2;
            if(ebx == 0x2b || ebx == 0x2d) {
                goto L004743d4;
            }
        }
        if(edi == 2) {
            edi = 3;
            if(ebx == 0x30) {
                Vffffffec = 1;
                if(esi == 0) {
                    goto L00474401;
                }
                if(esi == 0x10) {
L00474401:
                    Vfffffff8 = Vfffffff8 + 1;
                    eax = A8(A10);
                    ebx = eax;
                    if(A18 = A18 - 1) {
                        goto L004744c8;
                    }
                    if(ebx == 0x78 || ebx == 0x58) {
                        goto L00474421;
                    }
                    if(esi == 0) {
                        esi = 8;
                    }
                }
            }
            if(esi != 0) {
                if(esi < 1) {
                    goto L004744c8;
                }
                if(esi > 0x24) {
                    goto L004744c8;
                } else {
                    goto L0047444d;
                }
            }
            esi = 0xa;
        }
L0047444d:
        if(edi != 3) {
            continue;
        }
        if(ebx < 0x30 || ebx > 0x39) {
            if(ebx < 0x61 || ebx > 0x7a) {
                if(ebx < 0x41 || ebx > 0x5a) {
                    goto L004744c8;
                }
                eax = ebx - 0x37;
                Vffffffe8 = eax;
            } else {
                eax = ebx - 0x57;
                Vffffffe8 = eax;
            }
        } else {
            eax = ebx - 0x30;
            Vffffffe8 = eax;
        }
        if(esi <= Vffffffe8) {
            goto L004744c8;
        }
        Vffffffec = Vffffffec + 1;
        ecx = Vfffffff0;
        eax = Vfffffff0;
        asm("imul esi");
        Vfffffff0 = eax + Vffffffe8;
        edx = 0;
        esi = esi / esi;
        edx = esi % esi;
        if(ecx == Vfffffff0 - Vffffffe8) {
            continue;
        } else {
            break;
        }
L00474421:
        esi = 0x10;
        continue;
L004743d4:
        Vffffffff = 0;
    }
    Vfffffff4 = 2;
    eax = -2147483648;
    if(Vffffffff == 0) {
        eax = 2147483647;
    }
    Vfffffff0 = eax;
L004744c8:
    if(Vfffffff4 != 2) {
        eax = Ac(ebx, A10);
        Vfffffff8 = Vfffffff8 - 1;
        if(Vffffffff != 0) {
            Vfffffff0 = ~Vfffffff0;
        }
    }
    if(Vffffffec == 0) {
        eax = eax | -1;
        if(!(ebx = ebx + 1)) {
            eax = eax + 1;
        }
        Vfffffff4 = eax;
    }
    *A20 = Vfffffff4;
    *A1c = *A1c + Vfffffff8;
    return Vfffffff0;
}

/*    Procedure: 0x0047450F - 0x0047450F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047450F()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00474510 - 0x00474570
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00473464()
 */

L00474510(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;



    if(*(ebx + 0x14) != A8 || A10 > 2 || A14 > 2147483647) {
        eax = eax | -1;
    } else {
        if(*(ebx + 8) != 0) {
            L00473878(ebx, 0, 1);
        }
        if(!( *(ebx + 0x12) & 4)) {
            L00477640( *(ebx + 4));
        }
        eax = L00473134(ebx, Ac, A10, A14);
    }
}

/*    Procedure: 0x00474571 - 0x00474573
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474571()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00474574 - 0x004745A9
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004100F4()
 *        L0041021C()
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L0041819E()
 */

L00474574(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(!(Ac & 1)) {
        return L0047611C(A8, eax | A10, *( & A14 + 4 - 4));
    }
    return L0047611C(A8, eax | A10);
}

/*    Procedure: 0x004745AA - 0x004745AB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004745AA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004745AC - 0x00474602
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0047463C()
 */

L004745AC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    edi = A10;
    esi = Ac;
    if(A8 != 0) {
        if(edi <= L00471288(esi)) {
            eax = L004713AC(A8, esi, edi);
            *(A8 + edi) = 0;
        } else {
            (save)esi;
            edi = esi;
            esi = A8;
            eax = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            eax = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
            (restore)esi;
        }
    }
}

/*    Procedure: 0x00474603 - 0x00474603
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474603()
{



}

/*    Procedure: 0x00474604 - 0x0047463A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047463C()
 */

L00474604(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax - 1) == 0x2e) {
        eax = eax - 1;
    }
    eax = eax - 1;
    if(!(dl = *eax - 1) && !(dl = dl - 0x2e)) {
        if(dl = dl - 0xb) {
            goto L0047462a;
        }
        if(!(dl = dl - 0x22)) {
            goto L00474637;
L0047462a:
            if(*(eax - 2) != 0) {
                goto L00474637;
            }
        }
    }
    return 1;
L00474637:
    return 0;
}

/*    Procedure: 0x0047463B - 0x0047463B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047463B()
{



}

/*    Procedure: 0x0047463C - 0x004747E2
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004747E4()
 */

L0047463C(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    esp = esp + -268;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = A8;
    *(ebp - 4) = 0;
    if(Ac != 0) {
        *Ac = 0;
    }
    if(A10 != 0) {
        *A10 = 0;
    }
    if(A14 != 0) {
        *A14 = 0;
    }
    if(A18 != 0) {
        *A18 = 0;
    }
    for(ebx = ebp + -268; *esi == 0x20; esi = esi + 1) {
    }
    edi = L00471288(esi);
    if(edi > 0x104) {
        edi = 0x104;
    }
    *ebx = 0;
    ebx = ebx + 1;
    L004713AC(ebx, esi, edi);
    ebx = ebx + edi;
    *ebx = 0;
    edi = 0;
    while(1) {
        ebx = ebx - 1;
        eax = *ebx;
        if(eax > 0x2f) {
            if(eax = eax - 0x3a) {
                if(ebx != ebp + -266) {
                    continue;
                } else {
                    goto L00474735;
                }
            }
            if(eax = eax - 5) {
                goto L004747a1;
            }
            if(eax = eax - 0x1d) {
                goto L0047475b;
            }
            continue;
        }
        == ? L0047475b : ;
        if(eax = eax - 1) {
L00474735:
            if(edi != 0) {
                break;
            }
L0047475b:
            if(edi != 0) {
                continue;
            }
            edi = edi + 1;
            ebx = ebx + 1;
            if(*ebx != 0) {
                *(ebp - 4) = *(ebp - 4) | 4;
            }
            L004745AC(A14, ebx, 0xff);
            *ebx = 0;
            ebx = ebx - 1;
            if(*ebx == 0) {
                goto L004747b2;
            }
            if(*ebx != 0x3a) {
                continue;
            }
            if(ebx == ebp + -266) {
                goto L004747b2;
            }
            continue;
        }
        if(eax = eax - 0x29) {
L004747a1:
            if(edi != 0) {
                continue;
            }
            *(ebp - 4) = *(ebp - 4) | 1;
            continue;
        }
        if(eax = eax - 4) {
            if(edi == 0 && *(ebx + 1) == 0) {
                edi = L00474604(ebx);
            }
            if(edi != 0 || *(ebp - 4) & 2) {
                continue;
            }
            *(ebp - 4) = *(ebp - 4) | 2;
            L004745AC(A18, ebx, 0xff);
            *ebx = 0;
            continue;
        }
    }
    ebx = ebx + 1;
    if(*ebx != 0) {
        *(ebp - 4) = *(ebp - 4) | 8;
    }
    L004745AC(A10, ebx, 0xff);
    *ebx = 0;
    ebx = ebx - 1;
L004747b2:
    if(*ebx == 0x3a) {
        if(*(ebp + -267) != 0) {
            *(ebp - 4) = *(ebp - 4) | 0x10;
        }
        L004745AC(Ac, ebp + -267, 2);
    }
    eax = *(ebp - 4);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004747E3 - 0x004747E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004747E3()
{



}

/*    Procedure: 0x004747E4 - 0x00474804
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451100()
 */

L004747E4(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L0047463C(A8, Ac, A10, A14, A18);
}

/*    Procedure: 0x00474805 - 0x0047482F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474805()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    (save)ebx;
    (save)esi;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 0xc);
    L00471128( *esi, *(ebp + 8), ebx);
    *esi = *esi + ebx;
    *( *esi) = 0;
    eax = ebx;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x00474830 - 0x00474853
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410074()
 *        L00415010()
 *        L0041656C()
 *        L00418EAB()
 *        L00419720()
 *        L004198BC()
 *        L0041BE97()
 *        L004341CA()
 *        L00437090()
 *        L0043E43C()
 *        L0044F173()
 *        L00450B54()
 *        L0047004A()
 *        L00470837()
 *        L004772E4()
 */

L00474830(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *A8 = 0;
    return L00474A14(0x474808, & A8, Ac, & A10);
}

/*    Procedure: 0x00474854 - 0x00474877
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00474854(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    *A8 = 0;
    return L00474A14(0x474808, & A8, Ac, A10);
}

/*    Procedure: 0x00474878 - 0x00474928
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 */

L00474878()
{
    /* unknown */ void  ebx;



    ebx = 0x60b044;
    eax = 0;
    edx = 0x60b058;
    do {
        ecx = (eax << 3) + (eax << 3) * 2 + ebx;
        *edx = cx;
        eax = eax + 1;
        edx = edx + 0x18;
    } while(eax < 3);
    eax = 3;
    for(edx = ebx + 0x5e; eax < M0060b404; edx = edx + 0x18) {
        *edx = 0xff;
        ecx = (eax << 3) + (eax << 3) * 2 + ebx;
        *(edx - 2) = cx;
        eax = eax + 1;
    }
    if(!( *( *(ebx + 0x16) * 4 + 0x60b409) & 0x20)) {
        *(ebx + 0x12) = *(ebx + 0x12) & 65023;
    }
    (save)0x200;
    eax = 1;
    if(!( *(ebx + 0x13) & 2)) {
        eax = 0;
    }
    (save)eax;
    (save)0;
    (save)ebx;
    L00473134();
    esp = esp + 0x10;
    if(!( *( *(ebx + 0x2e) * 4 + 0x60b409) & 0x20)) {
        *(ebx + 0x2a) = *(ebx + 0x2a) & 65023;
    }
    (save)0x200;
    eax = 2;
    if(!( *(ebx + 0x2b) & 2)) {
        eax = 0;
    }
    (save)eax;
    (save)0;
    (save)ebx + 0x18;
    esp = esp + 0x10;
    return L00473134();
}

/*    Procedure: 0x00474929 - 0x00474964
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474929()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    eax = *(ebp + 0xc);
    edx = *(ebp + 8);
    if(edx != -1) {
        if(*(eax + 8) < 0) {
            goto L0047495e;
        }
        *(eax + 0x12) = *(eax + 0x12) & 65503;
        *(eax + 8) = *(eax + 8) + 1;
        *eax = !(ecx = *(eax + 8) - 1) ? *eax - 1 : eax + 0x17;
        *( *eax) = dl;
    } else {
L0047495e:
        edx = edx | -1;
    }
    eax = edx;
    (restore)ebp;
}

/*    Procedure: 0x00474965 - 0x00474967
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474965()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00474968 - 0x00474985
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004179D0()
 */

L00474968(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00474A14(0x473584, A8, Ac, A10);
}

/*    Procedure: 0x00474986 - 0x00474987
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00474986()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00474988 - 0x004749B6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004749B8()
 *        L00474A14()
 */

L00474988(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;



    esi = *(A8 + 0x50);
    if(esi != 0) {
        if(*(A8 + 0x54)(A8, esi, *(A8 + 0x58)) == 0) {
            *(A8 + 0x60) = 1;
        }
        eax = 0;
        *(A8 + 0x50) = 0;
    }
}

/*    Procedure: 0x004749B7 - 0x004749B7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004749B7()
{



}

/*    Procedure: 0x004749B8 - 0x004749DD
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00474A14()
 */

L004749B8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*(Ac + 0x50) >= 0x50) {
        L00474988(Ac);
    }
    eax = *(Ac + 0x50);
    *(Ac + eax) = A8;
    *(Ac + 0x50) = *(Ac + 0x50) + 1;
    *(Ac + 0x5c) = *(Ac + 0x5c) + 1;
}

/*    Procedure: 0x004749DE - 0x004749DF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004749DE()
{



}

/*    Procedure: 0x004749E0 - 0x00474A13
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00474A14()
 */

L004749E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  esi;



    esi = A8;
    ecx = 7;
    eax = Ac + 7;
    do {
        if((esi & 0xf) >= 0xa) {
            dl = dl + 0x37;
            *eax = dl;
        } else {
            dl = dl + 0x30;
            *eax = dl;
        }
        esi = esi >> 4;
        ecx = ecx - 1;
        eax = eax - 1;
    } while(ecx >= 0);
}

/*    Procedure: 0x00474A14 - 0x0047506C
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473564()
 *        L00473DA8()
 *        L00474830()
 *        L00474854()
 *        L00474968()
 */

L00474A14(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    esp = esp + -188;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = A10;
    *(ebp - 0x5c) = 0;
    *(ebp - 0x60) = 0;
    *(ebp - 0x6c) = 0;
    *(ebp - 0x68) = A8;
    *(ebp - 0x64) = Ac;
L00474a3a:
    bl = *esi;
    esi = esi + 1;
    if(bl != 0) {
        if(bl == 0x25) {
            if(*esi != 0x25) {
                goto L00474a64;
            }
            esi = esi + 1;
        }
        L004749B8(ebx, ebp + -188);
        goto L00474a3a;
L00474a64:
        *(ebp - 0x14) = esi - 1;
        eax = 0;
        *(ebp - 9) = 0;
        *(ebp - 0x10) = 0;
        edi = 0x20;
        *(ebp - 8) = -1;
        *(ebp - 4) = -1;
L00474a85:
        bl = *esi;
        esi = esi + 1;
        if(bl >= 0x20) {
            edx = *(bl + 0x60b99f) & 0xff;
            if(edx > 0x17) {
                goto L00474a85;
            }
            switch(edx) {
                case 0:
                    goto L00474b27;
                case 1:
                    goto L00474b07;
                case 2:
                    goto L00474b78;
                case 3:
                    goto L00474b17;
                case 4:
                    goto L00474bb6;
                case 5:
                    goto L00474bcc;
                case 6:
                    edi = edi | 0x10;
                    eax = 5;
                    goto L00474a85;
                case 7:
                    edi = (edi | 0x100) & -17;
                    eax = 5;
                    goto L00474a85;
                case 8:
                    edi = (edi | 0x200) & -17;
                    eax = 5;
                    goto L00474a85;
                case 9:
                    goto L00474b5b;
                case 0xa:
                    *(ebp - 0x20) = 0xa;
                    al = 1;
                    goto L00474c80;
                case 0xb:
                    *(ebp - 0x20) = 8;
                    goto L00474c6f;
                case 0xc:
                    *(ebp - 0x20) = 0xa;
                    goto L00474c6f;
                case 0xd:
                    *(ebp - 0x20) = 0x10;
                    eax = ebx - 0x17;
                    *(ebp - 0x15) = al;
                    goto L00474c6f;
                case 0xe:
                    A14 = A14 + 4;
                    *(ebp - 0x1c) = *(A14 - 4);
                    L004749E0( *(ebp - 0x1c), ebp - 0x58);
                    *(ebp - 0x50) = 0;
                    edi = edi & -5;
                    *(ebp - 0x1c) = ebp - 0x58;
                    goto L00474e30;
                case 0xf:
                    goto L00474dde;
                case 0x10:
                    A14 = A14 + 4;
                    *(ebp - 0x58) = *(A14 - 4);
                    *(ebp - 0x57) = 0;
                    *(ebp - 0x1c) = ebp - 0x58;
                    *(ebp - 0x28) = 1;
                    goto L00474ea1;
                case 0x11:
                    goto L00474d99;
                case 0x12:
                    goto L00474fe9;
                case 0x13:
                    goto L0047503f;
                case 0x14:
                    goto L0047503f;
                case 0x15:
                    goto L0047503f;
                case 0x16:
                    edi = edi & -33;
                    eax = 5;
                    goto L00474a85;
                case 0x17:
                    edi = edi | 0x20;
                    eax = 5;
                    goto L00474a85;
            }
L00474b07:
            if(eax <= 0) {
                edi = edi | 1;
                goto L00474a85;
L00474b17:
                if(eax <= 0) {
                    edi = edi | 2;
                    goto L00474a85;
L00474b27:
                    if(eax <= 0) {
                        if(*(ebp - 9) == 0x2b) {
                            goto L00474a85;
                        }
                        *(ebp - 9) = bl;
                        goto L00474a85;
L00474b5b:
                        if(eax > 0) {
                            goto L00474bcc;
                        }
                        if(edi & 2) {
                            goto L00474a85;
                        }
                        edi = edi | 8;
                        eax = 1;
                        goto L00474a85;
L00474b78:
                        A14 = A14 + 4;
                        edx = *(A14 - 4);
                        if(eax < 2) {
                            eax = edx;
                            if(eax < 0) {
                                *(ebp - 4) = ~edx;
                                edi = edi | 2;
                            } else {
                                *(ebp - 4) = eax;
                            }
                            eax = 3;
                            goto L00474a85;
                        }
                        if(eax == 4) {
                            *(ebp - 8) = edx;
                            eax = eax + 1;
                            goto L00474a85;
L00474bb6:
                            if(eax < 4) {
                                eax = 4;
                                *(ebp - 8) = *(ebp - 8) + 1;
                                goto L00474a85;
L00474bcc:
                                bl = bl + 0xd0;
                                if(eax <= 2) {
                                    eax = 2;
                                    if(*(ebp - 4) == -1) {
                                        *(ebp - 4) = bl;
                                        goto L00474a85;
                                    }
                                    edx = *(ebp - 4) + *(ebp - 4) + ( *(ebp - 4) + *(ebp - 4)) * 4;
                                    *(ebp - 4) = edx + bl;
                                    goto L00474a85;
                                }
                                if(eax == 4) {
                                    edx = *(ebp - 8) + *(ebp - 8) + ( *(ebp - 8) + *(ebp - 8)) * 4;
                                    *(ebp - 8) = edx + bl;
                                    goto L00474a85;
L00474c6f:
                                    *(ebp - 9) = 0;
                                    eax = 0;
L00474c80:
                                    if(!(edi & 0x10)) {
                                        A14 = A14 + 4;
                                        edx = *(A14 - 4);
                                    } else {
                                        if(!(edi & 0x200)) {
                                            A14 = A14 + 4;
                                            dx = *(A14 - 4);
                                            edx = al != 0 ? dx : dx & 65535;
                                        } else {
                                            A14 = A14 + 4;
                                            edx = *(A14 - 4);
                                            al :: 0;
                                        }
                                    }
                                    ecx = ebp - 0x57;
                                    *(ebp - 0x1c) = ecx;
                                    if(edx == 0) {
                                        if(*(ebp - 8) != 0) {
                                            goto L00474cdc;
                                        }
                                        *( *(ebp - 0x1c)) = 0;
                                    } else {
                                        edi = edi | 4;
L00474cdc:
                                        L004766CC(edx, *(ebp - 0x1c), *(ebp - 0x20), eax, *(ebp - 0x15));
                                    }
                                    if(*(ebp - 8) >= 0) {
                                        eax = L00471288( *(ebp - 0x1c));
                                        *(ebp - 0x24) = eax;
                                        *(ebp - 0x28) = *(ebp - 0x24);
                                        if(*( *(ebp - 0x1c)) == 0x2d) {
                                            *(ebp - 0x24) = *(ebp - 0x24) - 1;
                                        } else {
                                            if(*(ebp - 9) != 0) {
                                                *(ebp - 0x28) = *(ebp - 0x28) + 1;
                                                *(ebp - 0x1c) = *(ebp - 0x1c) - 1;
                                                eax = *(ebp - 0x1c);
                                                dl = *(ebp - 9);
                                                *eax = dl;
                                            }
                                        }
                                        if(*(ebp - 8) <= *(ebp - 0x24)) {
                                            goto L00474ea1;
                                        }
                                        *(ebp - 0x10) = *(ebp - 8) - *(ebp - 0x24);
                                        goto L00474ea1;
L00474d99:
                                        A14 = A14 + 4;
                                        *(ebp - 0x1c) = *(A14 - 4);
                                        if(*(ebp - 0x1c) == 0) {
                                            *(ebp - 0x1c) = "(null)";
                                        }
                                        eax = L00471288( *(ebp - 0x1c));
                                        *(ebp - 0x28) = eax;
                                        if(*(ebp - 0x28) <= *(ebp - 8) || *(ebp - 8) < 0) {
                                            goto L00474ea1;
                                        }
                                        *(ebp - 0x28) = *(ebp - 8);
                                        goto L00474ea1;
L00474dde:
                                        eax = 8;
                                        if(!(edi & 0x100)) {
                                            eax = 6;
                                        }
                                        (save)eax;
                                        (save)edi & 1;
                                        (save)ebx;
                                        eax = ebp - 0x57;
                                        *(ebp - 0x1c) = eax;
                                        (save) *(ebp - 0x1c);
                                        eax = *(ebp - 8) < 0 ? 6 : *(ebp - 8);
                                        (save)eax;
                                        (save)A14;
                                        L004763E4();
                                        esp = esp + 0x18;
                                        A14 = L004763EA(A14, edi & 0x100);
                                    }
L00474e30:
                                    if(!(edi & 8) && *(ebp - 4) > 0) {
                                        *(ebp - 0x28) = L00471288( *(ebp - 0x1c));
                                        if(*( *(ebp - 0x1c)) == 0x2d) {
                                            *(ebp - 0x28) = *(ebp - 0x28) - 1;
                                        }
                                        if(*(ebp - 4) > *(ebp - 0x28)) {
                                            *(ebp - 0x10) = *(ebp - 4) - *(ebp - 0x28);
                                        }
                                    }
                                    al = *( *(ebp - 0x1c));
                                    if(al == 0x2d || *(ebp - 9) != 0) {
                                        if(al != 0x2d) {
                                            *(ebp - 0x1c) = *(ebp - 0x1c) - 1;
                                            eax = *(ebp - 0x1c);
                                            *eax = *(ebp - 9);
                                        }
                                        if(*(ebp - 0x10) > 0 && *(ebp - 8) < 0) {
                                            *(ebp - 0x10) = *(ebp - 0x10) - 1;
                                        }
                                    }
                                    *(ebp - 0x28) = L00471288( *(ebp - 0x1c));
L00474ea1:
                                    if((edi & 5) == 5) {
                                        if(bl != 0x6f) {
                                            goto L00474ebf;
                                        }
                                        if(*(ebp - 0x10) <= 0) {
                                            *(ebp - 0x10) = 1;
                                            goto L00474edb;
L00474ebf:
                                            if(bl == 0x78) {
                                                goto L00474ec9;
                                            }
                                            if(bl == 0x58) {
L00474ec9:
                                                edi = edi | 0x40;
                                                *(ebp - 4) = *(ebp - 4) - 2;
                                                if(!( *(ebp - 0x10) = *(ebp - 0x10) - 2)) {
                                                    *(ebp - 0x10) = 0;
                                                }
                                            }
                                        }
                                    }
L00474edb:
                                    *(ebp - 0x28) = *(ebp - 0x28) + *(ebp - 0x10);
                                    if(!(edi & 2) && *(ebp - 4) > *(ebp - 0x28)) {
L00474ef1:
                                        L004749B8(0x20, ebp + -188);
                                        *(ebp - 4) = *(ebp - 4) - 1;
                                        if(*(ebp - 4) > *(ebp - 0x28)) {
                                            goto L00474ef1;
                                        }
                                    }
                                    if(!(edi & 0x40)) {
                                        L004749B8(0x30, ebp + -188);
                                        L004749B8(ebx, ebp + -188);
                                    }
                                    if(*(ebp - 0x10) > 0) {
                                        *(ebp - 0x28) = *(ebp - 0x28) - *(ebp - 0x10);
                                        *(ebp - 4) = *(ebp - 4) - *(ebp - 0x10);
                                        al = *( *(ebp - 0x1c));
                                        if(al == 0x2d || al == 0x20 || al == 0x2b) {
                                            eax = *(ebp - 0x1c);
                                            *(ebp - 0x1c) = *(ebp - 0x1c) + 1;
                                            L004749B8( *eax, ebp + -188);
                                            *(ebp - 0x28) = *(ebp - 0x28) - 1;
                                            *(ebp - 4) = *(ebp - 4) - 1;
                                            goto L00474f8a;
L00474f79:
                                            L004749B8(0x30, ebp + -188);
                                        }
L00474f8a:
                                        eax = *(ebp - 0x10);
                                        *(ebp - 0x10) = *(ebp - 0x10) - 1;
                                        if(eax != 0) {
                                            goto L00474f79;
                                        }
                                    }
                                    if(*(ebp - 0x28) != 0) {
                                        *(ebp - 4) = *(ebp - 4) - *(ebp - 0x28);
                                        goto L00474fbb;
L00474fa3:
                                        eax = *(ebp - 0x1c);
                                        *(ebp - 0x1c) = *(ebp - 0x1c) + 1;
                                        L004749B8( *eax, ebp + -188);
L00474fbb:
                                        eax = *(ebp - 0x28);
                                        *(ebp - 0x28) = *(ebp - 0x28) - 1;
                                        if(eax != 0) {
                                            goto L00474fa3;
                                        }
                                        goto L00474fd9;
L00474fc8:
                                        L004749B8(0x20, ebp + -188);
                                    }
L00474fd9:
                                    eax = *(ebp - 4);
                                    *(ebp - 4) = *(ebp - 4) - 1;
                                    if(eax > 0) {
                                        goto L00474fc8;
                                    }
                                    goto L00474a3a;
L00474fe9:
                                    A14 = A14 + 4;
                                    *(ebp - 0x1c) = *(A14 - 4);
                                    if(!(edi & 0x10)) {
                                        eax = *(ebp - 0x1c);
                                        *eax = *(ebp - 0x60);
                                        goto L00474a3a;
                                    }
                                    if(!(edi & 0x200)) {
                                        eax = *(ebp - 0x1c);
                                        *eax = *(ebp - 0x60);
                                        goto L00474a3a;
                                    }
                                    eax = *(ebp - 0x1c);
                                    *eax = *(ebp - 0x60);
                                    goto L00474a3a;
L0047502f:
                                    L004749B8(eax, ebp + -188);
                                }
                            }
                        }
                    }
                }
            }
        }
L0047503f:
        eax = *(ebp - 0x14);
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        if(*eax != 0) {
            goto L0047502f;
        }
    }
    eax = L00474988(ebp + -188);
    eax = *(ebp - 0x5c) != 0 ? eax | -1 : *(ebp - 0x60);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x0047506D - 0x00475096
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047506D()
{



    *eax = *eax + al;
    *(ebx + 0x56) = *(ebx + 0x56) + dl;
    esi = 0;
    for(ebx = 0x60b044; esi < M0060b404; esi = esi + 1) {
        if(!( *(ebx + 0x12) & 3)) {
            eax = L004731B8(ebx);
        }
        ebx = ebx + 0x18;
    }
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00475097 - 0x004750B9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475097()
{



    *(ebx + 0x56) = *(ebx + 0x56) + dl;
    esi = 0;
    ebx = 0x60b044;
    do {
        if(!( *(ebx + 0x12) & 3)) {
            eax = L0047324C(ebx);
        }
        esi = esi + 1;
        ebx = ebx + 0x18;
    } while(esi < 3);
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004750BA - 0x004750CC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004750BA()
{



    *eax = *eax + al;
    (save)ebp;
    eax = *(esp + 8);
    if(eax != 0) {
        *eax = 0;
    }
    (restore)ebp;
    return 0;
}

/*    Procedure: 0x004750CD - 0x00475101
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004750CD()
{



    *eax = *eax + al;
    *(ebx + 0x56) = *(ebx + 0x56) + dl;
    (save)edi;
    edi = 0;
    esi = M0060b404;
    for(ebx = 0x60b044; 1; ebx = ebx + 0x18) {
        eax = esi;
        esi = esi - 1;
        if(eax == 0) {
            break;
        }
        if(!( *(ebx + 0x12) & 3)) {
            L0047324C(ebx);
            edi = edi + 1;
        }
    }
    eax = edi;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00475102 - 0x0047511A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475102()
{



    *eax = *eax + al;
    (save)ebp;
    ebp = esp;
    M0060ba28 = !( *(ebp + 8));
    (restore)ebp;
    return !M0060ba28;
}

/*    Procedure: 0x0047511B - 0x0047511B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047511B()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047511C - 0x004751A5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00473A58()
 */

L0047511C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    if(A8 >= M0060b404) {
        eax = L00475E84(-6);
    } else {
        eax = *(A8 * 4 + 0x60b408);
        if(!(ah & 2)) {
            eax = 1;
        } else {
            if(!(ah & 0x20)) {
                eax = 0;
            } else {
                eax = L004760A4(A8, 0, 1);
                esi = eax;
                if(esi == -1) {
                    eax = eax | -1;
                } else {
                    eax = L004760A4(A8, 0, 2);
                    edi = eax;
                    if(edi == -1) {
                        eax = eax | -1;
                    } else {
                        if(!(eax = L004760A4(A8, esi, 0) + 1)) {
                            eax = eax | -1;
                        } else {
                            edi :: esi;
                            asm("setng al");
                            eax = eax & 1;
                        }
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x004751A6 - 0x004751A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004751A6()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004751A8 - 0x00475212
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475214()
 */

L004751A8()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    *(ebp - 4) = *(ebp + 8) + *(ebp + 0xc);
    edi = *(ebp + 8);
    for(ebx = edi; 1; edi = edi + *(ebp - 8)) {
        esi = L00471108(ebx, 0xd, *(ebp - 4) - ebx);
        if(esi == 0) {
            esi = *(ebp - 4);
        }
        *(ebp - 8) = esi - ebx;
        if(edi != ebx) {
            L00471128(edi, ebx, *(ebp - 8));
        }
        if(esi >= *(ebp - 4) - 1) {
            break;
        }
        ebx = esi + 1;
    }
    eax = edi - *(ebp + 8) + *(ebp - 8);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00475213 - 0x00475213
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475213()
{



}

/*    Procedure: 0x00475214 - 0x00475341
 *    Argument size: 12
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L00473694()
 *        L004739E0()
 *        L00473A58()
 */

L00475214(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = Ac;
    if(A8 >= M0060b404) {
        eax = L00475E84(-6);
    } else {
        if(A10 + 1 < 2) {
            eax = 0;
        } else {
            if(!( *(A8 * 4 + 0x60b409) & 0x40)) {
                eax = L00475F30(A8, eax, A10);
            } else {
                if(!( *(A8 * 4 + 0x60b409) & 2)) {
                    eax = 0;
                } else {
                    esi = eax;
                    edi = 0;
                    Vfffffff4 = A8 * 4 + 0x60b408;
                    if(0 < A10) {
                        do {
                            Vfffffffc = A10 - edi;
                            eax = L00475F30(A8, esi, Vfffffffc);
                            ebx = eax;
                            if(ebx == -1) {
                                goto L004752b9;
                            }
                            if(ebx == 0) {
                                break;
                            }
                            eax = L00471108(esi, 0x1a, ebx);
                            Vfffffff8 = eax;
                            if(Vfffffff8 != 0) {
                                *Vfffffff4 = *Vfffffff4 | 0x200;
                                ebx = Vfffffff8 - esi;
                                if(ebx == 0) {
                                    break;
                                }
                            }
                            if(*(esi + ebx - 1) == 0xd && !(eax = L00475F30(A8, ebx - 1 + esi, 1) + 1)) {
                                goto L00475305;
                            }
                            eax = L004751A8(esi, ebx);
                            edi = edi + eax;
                            if(ebx < Vfffffffc && *(Vfffffff4 + 1) & 0x20 || Vfffffff8 != 0 || eax != 0) {
                                break;
                            }
                            esi = esi + eax;
                        } while(edi < A10);
                        goto L00475339;
L004752b9:
                        eax = eax | -1;
                        goto L0047533b;
L00475305:
                        eax = eax | -1;
                    } else {
L00475339:
                        eax = edi;
                    }
                }
            }
        }
    }
L0047533b:
}

/*    Procedure: 0x00475342 - 0x00475343
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475342()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00475344 - 0x004753FA
 *    Argument size: 16
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L004753FC()
 */

L00475344(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    esi = A10;
    edi = A8;
    Vfffffffc = *Ac + edi;
    Vfffffff8 = A14 + esi;
    *Ac = 0;
    for(Vfffffff0 = 0; 1; *Ac = *Ac + eax) {
        ebx = Vfffffffc - edi;
        eax = L00471108(edi, 0xa, ebx);
        Vfffffff4 = eax;
        if(Vfffffff4 != 0) {
            ebx = Vfffffff4 - edi;
        }
        eax = Vfffffff8 - esi;
        if(ebx > eax) {
            break;
        }
        L00471128(esi, edi, ebx);
        esi = esi + ebx;
        if(Vfffffff4 == 0 || Vfffffff8 - esi < 2) {
            goto L004753cb;
        }
        *esi = 0xd;
        esi = esi + 1;
        *esi = 0xa;
        esi = esi + 1;
        Vfffffff0 = Vfffffff0 + ebx + 2;
        eax = ebx + 1;
        edi = edi + eax;
    }
    ebx = eax;
    L00471128(esi, edi, ebx);
    *Ac = *Ac + ebx;
    eax = Vfffffff0 + ebx;
    goto L004753f4;
L004753cb:
    *Ac = *Ac + ebx;
    eax = Vfffffff0 + ebx;
L004753f4:
}

/*    Procedure: 0x004753FB - 0x004753FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004753FB()
{



}

/*    Procedure: 0x004753FC - 0x004754DB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047324C()
 *        L00473334()
 *        L00473584()
 *        L00473B24()
 */

L004753FC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -136;
    (save)ebx;
    (save)esi;
    (save)edi;
    if(A8 >= M0060b404) {
        eax = L00475E84(-6);
    } else {
        if(A10 + 1 < 2) {
            eax = 0;
        } else {
            if(!( *(A8 * 4 + 0x60b409) & 8)) {
                L004760A4(A8, 0, 2);
            }
            if(!( *(A8 * 4 + 0x60b409) & 0x40)) {
                eax = L00475F94(A8, Ac, A10);
            } else {
                edi = Ac;
                ebx = A10;
                if(ebx > 0) {
                    do {
                        *(ebp - 4) = ebx;
                        esi = L00475344(edi, ebp - 4, ebp + -136, 0x80);
                        eax = L00475F94(A8, ebp + -136, esi);
                        *(ebp - 8) = eax;
                        if(esi != eax) {
                            goto L004754b3;
                        }
                        edi = edi + *(ebp - 4);
                        ebx = ebx - *(ebp - 4);
                    } while(ebx > 0);
                    goto L004754d2;
L004754b3:
                    eax = *(ebp - 8) == -1 ? eax | -1 : edi - Ac + *(ebp - 8);
                } else {
L004754d2:
                    eax = A10;
                }
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x004754DC - 0x004754F7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450E7D()
 *        L00450F65()
 */

L004754DC(A8)
/* unknown */ void  A8;
{



    if(L00476034(A8) != 0) {
        return M006dcf24;
    }
    return 0;
}

/*    Procedure: 0x004754F8 - 0x0047559D
 *    Argument size: 16
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L0047559E()
 *        L004755BC()
 */

L004754F8(A8, Ac, A10, A14)
CHAR * A8;
unsigned long  Ac;
/* unknown */ void  A10;
unsigned long  A14;
{
    /* unknown */ void  * ebx;
    /* unknown */ void  esi;
    struct _SECURITY_ATTRIBUTES Vfffffff4;  /* size = 12 bytes */



    Vfffffff4.nLength = 0xc;
    Vfffffff4.lpSecurityDescriptor = 0;
    Vfffffff4.bInheritHandle = 1;
    ebx = CreateFileA(A8, -1073741824, 3, & (Vfffffff4.nLength), A14, Ac, 0);
    if(ebx == -1) {
        eax = L00475EC8();
    } else {
        esi = 32768;
        if(L00476074(ebx) != 0) {
            esi = esi | 8192;
        }
        if(!(Ac & 1)) {
            esi = esi | 0x100;
        }
        eax = L00475BE8(ebx, esi);
        *A10 = eax;
        if(!(eax = eax + 1)) {
            esi = 4;
            L00475E84(4);
            CloseHandle(ebx);
            DeleteFileA(A8);
        } else {
            esi = 0;
        }
        eax = esi;
    }
}

/*    Procedure: 0x0047559E - 0x004755BA
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0047559E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L004754F8(A8, Ac, A10, 2);
}

/*    Procedure: 0x004755BB - 0x004755BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004755BB()
{



}

/*    Procedure: 0x004755BC - 0x004755D6
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450F65()
 */

L004755BC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L004754F8(A8, Ac, A10, 1);
}

/*    Procedure: 0x004755D7 - 0x004755D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004755D7()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004755D8 - 0x00475627
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00475628()
 */

L004755D8(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    for(ebx = M006dcf20; ebx != 0 && A8 != *ebx; ebx = *(ebx + 0x10)) {
    }
    if(ebx != 0) {
        FindClose( *(ebx + 4));
    } else {
        ebx = L0047777C(0x14);
        if(ebx != 0) {
            *ebx = A8;
            *(ebx + 0x10) = M006dcf20;
            M006dcf20 = ebx;
        }
    }
    *A8 = ebx;
    return ebx;
}

/*    Procedure: 0x00475628 - 0x00475669
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004732F4()
 */

L00475628(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = L004755D8(A10);
    if(ebx == 0) {
        L00475E84(8);
        eax = 8;
    } else {
        *(ebx + 4) = -1;
        *(ebx + 8) = Ac;
        *(ebx + 0xc) = A8;
        eax = L0047566C(A10);
    }
}

/*    Procedure: 0x0047566A - 0x0047566B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047566A()
{



}

/*    Procedure: 0x0047566C - 0x00475747
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473318()
 *        L00475628()
 */

L0047566C(A8)
/* unknown */ void  A8;
{



    esp = esp + -328;
    (save)ebx;
    (save)A8;
    (save)edi;
    ebx = *A8;
    do {
        if(*(ebx + 4) != -1) {
            eax = FindNextFileA( *(ebx + 4), ebp + -328);
        } else {
            eax = FindFirstFileA( *(ebx + 0xc), ebp + -328);
            edi = eax;
            *(ebx + 4) = edi;
            eax = 0;
        }
        if(eax == 0) {
            goto L004756b7;
        }
        if(!( *(ebx + 8) & 8) && *(ebp + -328) & 8 || *(ebp + -328) & 0x16) {
            break;
        }
    } while(*(ebx + 8) & eax & 0x16);
    goto L004756e4;
L004756b7:
    eax = L00475EC8();
    goto L00475741;
L004756e4:
    *(A8 + 8) = *(ebp + -328);
    FileTimeToLocalFileTime(ebp + -308, ebp - 8);
    FileTimeToDosDateTime(ebp - 8, A8 + 0xe, A8 + 0xc);
    *(A8 + 4) = *(ebp + -296);
    (save)A8 + 0x10;
    edi = ebp + -284;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    ecx = !ecx;
    edi = edi - ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)A8;
    eax = 0;
L00475741:
    (restore)edi;
    (restore)A8;
    (restore)ebx;
}

/*    Procedure: 0x00475748 - 0x00475789
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451040()
 *        L00475BBC()
 */

L00475748(A8)
/* unknown */ void  A8;
{



    esp = esp + -260;
    GetCurrentDirectoryA(0x104, ebp + -260);
    eax = *(ebp + -260) >= 0x61 ? *(ebp + -260) - 0x60 : *(ebp + -260) - 0x40;
    *A8 = eax;
}

/*    Procedure: 0x0047578A - 0x0047578B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047578A()
{



}

/*    Procedure: 0x0047578C - 0x00475832
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00451040()
 *        L00475BCA()
 */

L0047578C(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp + -264;
    (save)ebx;
    (save)Ac;
    (save)edi;
    edi = ebp + -264;
    *Ac = 0;
    *(ebp - 4) = 0x3d;
    *(ebp - 3) = (A8 & 0xff) + 0x40;
    *(ebp - 2) = 0x3a;
    *(ebp - 1) = 0;
    if(GetEnvironmentVariableA(ebp - 4, edi, 0x104) == 0) {
        *edi = *(ebp - 3);
        *(edi + 1) = 0x3a;
        *(edi + 2) = 0x5c;
        *(edi + 3) = 0;
        if(eax = SetEnvironmentVariableA(ebp - 4, edi) - 1) {
            goto L004757f1;
        }
        eax = L00475EE8();
    } else {
L004757f1:
        if(!(eax = SetCurrentDirectoryA(edi) - 1)) {
            eax = L00475EE8();
        } else {
            *(edi + 1) = 0x3a;
            *(edi + 2) = 0x5c;
            *(edi + 3) = 0;
            for(*edi = 0x41; 1; *edi = *edi + 1) {
                if(*edi > 0x5a) {
                    goto L0047582c;
                }
                eax = GetDriveTypeA(edi);
                ebx = eax;
                if(ebx != 0 && ebx != 1) {
                    *Ac = *Ac + 1;
                }
            }
        }
    }
L0047582c:
    (restore)edi;
    (restore)Ac;
    (restore)ebx;
}

/*    Procedure: 0x00475833 - 0x00475833
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475833()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475834 - 0x0047586A
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00450E7D()
 */

L00475834(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ebx;



    ebx = L0047611C(A8, Ac & -51457 | 32768);
    if(ebx == -1) {
        return M006dcf24;
    }
    *A10 = ebx;
    return 0;
}

/*    Procedure: 0x0047586B - 0x0047586B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047586B()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047586C - 0x004758BD
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00450E7D()
 */

L0047586C(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  * Ac;
unsigned long  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    if(A8 >= M0060b404) {
        L00475E84(6);
        eax = 6;
    } else {
        if(!(eax = ReadFile( *(A8 * 4 + 7196260), Ac, A10, ebp - 4, 0) - 1)) {
            eax = L00475EC8();
        } else {
            *A14 = *(ebp - 4);
            eax = 0;
        }
    }
}

/*    Procedure: 0x004758BE - 0x004758BF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004758BE()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004758C0 - 0x00475911
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00450F65()
 */

L004758C0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  * Ac;
unsigned long  A10;
/* unknown */ void  A14;
{
    /* unknown */ void  ecx;



    if(A8 >= M0060b404) {
        L00475E84(6);
        eax = 6;
    } else {
        if(!(eax = WriteFile( *(A8 * 4 + 7196260), Ac, A10, ebp - 4, 0) - 1)) {
            eax = L00475EC8();
        } else {
            *A14 = *(ebp - 4);
            eax = 0;
        }
    }
}

/*    Procedure: 0x00475912 - 0x00475913
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475912()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00475914 - 0x00475950
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041819E()
 *        L00418DEC()
 */

L00475914(A8)
/* unknown */ void  A8;
{
    DWORD ebx;



    if(A8 >= M0060b404) {
        eax = L00475E84(6);
    } else {
        ebx = GetFileSize( *(A8 * 4 + 7196260), 0);
        if(ebx == -1) {
            ebx = L00475EE8();
        }
        eax = ebx;
    }
}

/*    Procedure: 0x00475951 - 0x00475953
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475951()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475954 - 0x004759EC
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00451100()
 *        L004781A8()
 */

L00475954(A8, Ac, A10)
/* unknown */ void  A8;
CHAR * Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    CHAR * ebx;
    CHAR * edi;



    ebx = L0047777C(0x104);
    if(ebx == 0) {
        eax = 0;
    } else {
        eax = GetFullPathNameA(Ac, 0x104, ebx, ebp - 4);
        if(eax == 0 || eax >= 0x104) {
            L00477640(ebx);
            eax = 0;
        } else {
            eax = eax + 1;
            if(A8 != 0) {
                if(eax > A10) {
                    L00477640(ebx);
                    eax = 0;
                } else {
                    (save)A8;
                    edi = ebx;
                    eax = 0;
                    ecx = ecx | -1;
                    asm("repne scasb");
                    ecx = !ecx;
                    edi = edi - ecx;
                    asm("xchg esi,edi");
                    eax = edi;
                    edx = ecx;
                    ecx = ecx >> 2;
                    asm("rep movsd");
                    ecx = edx & 3;
                    asm("rep movsb");
                    (restore)A8;
                    L00477640(ebx);
                    eax = A8;
                }
            } else {
                eax = L00477980(ebx, eax);
            }
        }
    }
}

/*    Procedure: 0x004759ED - 0x004759EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004759ED()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004759F0 - 0x00475B4C
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00450E00()
 *        L004781A8()
 */

L004759F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp + -264;
    (save)A10;
    (save)esi;
    (save)edi;
    edi = Ac;
    A10 = A8;
    if(A10 == 0) {
        eax = GetCurrentDirectoryA(0x103, ebp + -264);
        if(eax != 0 && eax <= A10) {
            goto L00475adc;
        }
        M0060beac = 8;
        eax = 0;
    } else {
        if(M006dd144 == 2) {
            *(ebp + -264) = A10 + 0x40;
            *(ebp + -263) = 0x3a;
            *(ebp + -262) = 0x5c;
            *(ebp + -261) = 0;
            dl = al;
            ah = 0x47;
            asm("int 0x21");
            if(esi = ebp + -264 + 3) {
                goto L00475adc;
            }
            eax = 0;
        } else {
            ecx = A10 - 1;
            if(!(1 << cl & GetLogicalDrives())) {
                *(ebp - 4) = 0x3d;
                *(ebp - 3) = bl + 0x40;
                *(ebp - 2) = 0x3a;
                *(ebp - 1) = 0;
                if(GetEnvironmentVariableA(ebp - 4, ebp + -264, 0x103) == 0) {
                    *(ebp + -264) = *(ebp - 3);
                    *(ebp + -263) = 0x3a;
                    *(ebp + -262) = 0x5c;
                    *(ebp + -261) = 0;
                }
            } else {
                eax = 0;
                goto L00475b46;
            }
L00475adc:
            eax = L00471288(ebp + -264);
            if(eax >= A10) {
                M0060beac = 0x22;
                eax = 0;
            } else {
                if(edi == 0) {
                    edi = L0047777C(A10);
                    if(edi != 0) {
                        goto L00475b1d;
                    }
                    M0060beac = 8;
                    eax = 0;
                } else {
L00475b1d:
                    (save)edi;
                    esi = edi;
                    edi = ebp + -264;
                    eax = 0;
                    ecx = ecx | -1;
                    asm("repne scasb");
                    ecx = !ecx;
                    edi = edi - ecx;
                    asm("xchg esi,edi");
                    eax = edi;
                    edx = ecx;
                    ecx = ecx >> 2;
                    asm("rep movsd");
                    ecx = edx & 3;
                    asm("rep movsb");
                    (restore)edi;
                    eax = edi;
                }
            }
        }
    }
L00475b46:
    (restore)edi;
    (restore)esi;
    (restore)A10;
}

/*    Procedure: 0x00475B4D - 0x00475B4F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475B4D()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475B50 - 0x00475BB8
 *    Argument size: 8
 *    Local size: 20
 *    Save regs size: 8
 *    Called by:
 *        L00451064()
 */

L00475B50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    CHAR * esi;
    DWORD Vffffffec;
    DWORD Vfffffff0;
    DWORD Vfffffff4;
    DWORD Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffd;
    /* unknown */ void  Vfffffffe;
    /* unknown */ void  Vffffffff;



    eax = A8;
    if(al == 0) {
        esi = 0;
    } else {
        Vfffffffc = al + 0x40;
        Vfffffffd = 0x3a;
        Vfffffffe = 0x5c;
        Vffffffff = 0;
        esi = & Vfffffffc;
    }
    if(!(eax = GetDiskFreeSpaceA(esi, & Vfffffff8, & Vfffffff4, & Vfffffff0, & Vffffffec) - 1)) {
        *(Ac + 0xc) = -1;
    } else {
        *(Ac + 4) = Vffffffec;
        *Ac = Vfffffff0;
        *(Ac + 0xc) = Vfffffff8;
        eax = Vfffffff4;
        *(Ac + 8) = eax;
    }
}

/*    Procedure: 0x00475BB9 - 0x00475BBB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475BB9()
{



    *eax = *eax + al;
    *(ecx + 0x54) = *(ecx + 0x54) + dl;
}

/*    Procedure: 0x00475BBC - 0x00475BC9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00451030()
 */

L00475BBC()
{
    /* unknown */ void  ecx;



    L00475748(esp);
    return *esp - 1;
}

/*    Procedure: 0x00475BCA - 0x00475BE6
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 */

L00475BCA(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;



    L0047578C(A8 + 1, ebp - 4);
    return *(ebp - 4);
}

/*    Procedure: 0x00475BE7 - 0x00475BE7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475BE7()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475BE8 - 0x00475C27
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004754F8()
 *        L0047611C()
 */

L00475BE8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = 0;
    for(edx = 0x60b408; eax < M0060b404 && *edx != 0; edx = edx + 4) {
        eax = eax + 1;
    }
    if(eax == M0060b404) {
        return eax | -1;
    }
    *(eax * 4 + 0x60b408) = Ac;
    *(eax * 4 + 7196260) = A8;
}

/*    Procedure: 0x00475C28 - 0x00475C8F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00475C28(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = Ac;
    if(eax == -1) {
        eax = 0;
        for(edx = 0x60b408; eax < M0060b404 && *edx != 0; edx = edx + 4) {
            eax = eax + 1;
        }
    }
    edx = M0060b404;
    if(A8 >= edx || edx <= eax) {
        return eax | -1;
    }
    edx = *(A8 * 4 + 0x60b408);
    if(edx == 0 || *(eax * 4 + 0x60b408) != 0) {
        return eax | -1;
    }
    *(eax * 4 + 0x60b408) = edx;
    *(eax * 4 + 7196260) = A10;
}

/*    Procedure: 0x00475C90 - 0x00475CA8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00475C90(A8)
/* unknown */ void  A8;
{



    if(A8 < M0060b404) {
        *(A8 * 4 + 0x60b408) = 0;
    }
}

/*    Procedure: 0x00475CA9 - 0x00475D3C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 */

L00475CA9(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A8;
    eax = M0060b404;
    edx = eax * 4 + 0x60b404;
    do {
        if(*edx != 0) {
            break;
        }
        eax = eax - 1;
        edx = edx - 4;
    } while(eax != 0);
    if(esi == 0) {
        eax = eax == 0 ? 0 : eax + eax * 4 + 4;
    } else {
        *esi = eax;
        esi = esi + 4;
        *(ebp - 4) = 0;
        ebx = 0x60b408;
        do {
            cl = 1;
            edx = *ebx;
            if(!(dh & 8)) {
                cl = 0x21;
            }
            if(!(dh & 0x80)) {
                cl = cl | 0x80;
            }
            if(!(dh & 0x20)) {
                cl = cl | 0x40;
            }
            *esi = cl;
            esi = esi + 1;
            *(ebp - 4) = *(ebp - 4) + 1;
            ebx = ebx + 4;
        } while(eax > *(ebp - 4));
        L00471128(esi, 7196260, eax << 2);
        eax = 0;
    }
}

/*    Procedure: 0x00475D3D - 0x00475E80
 *    Argument size: 0
 *    Local size: 76
 *    Save regs size: 12
 */

L00475D3D()
{
    /* unknown */ void  V0;
    struct _STARTUPINFOA V4;  /* size = 68 bytes */
    /* unknown */ void  Vfffffffc;



    ebx = SetHandleCount(M0060b404);
    if(ebx < M0060b404) {
        M0060b404 = ebx;
    }
    M0060ba24 = 0x475cac;
    V0 = 0;
    GetStartupInfoA( & (V4.cb));
    eax = V4.? & 65535;
    esi = V4.wShowWindow;
    if(eax != 0) {
        *esp = *esi;
        esi = esi + 4;
        if(*esp + *esp * 4 + 4 == eax) {
            Vfffffffc = 1;
            ebx = 0;
            edi = 0x60b408;
            if(0 < *esp) {
                do {
                    dl = *esi;
                    esi = esi + 1;
                    eax = 0;
                    if(!(dl & 0x20)) {
                        eax = 0x800;
                    }
                    if(!(dl & 0x40)) {
                        eax = eax | 8192;
                    }
                    eax = dl & 0x80 ? eax | 32768 : eax | 16384;
                    *edi = *edi & 3 | eax;
                    ebx = ebx + 1;
                    edi = edi + 4;
                } while(ebx < *esp);
            }
            ebx = *esp;
            for(eax = ebx * 4 + 0x60b408; ebx < M0060b404; eax = eax + 4) {
                *eax = 0;
                ebx = ebx + 1;
            }
            eax = L0047114C(7196260, esi, *esp << 2);
        }
    }
    if(Vfffffffc == 0) {
        M006dce64 = GetStdHandle(-10);
        M006dce68 = GetStdHandle(-11);
        M006dce6c = GetStdHandle(-12);
        ebx = 0;
        esi = 0x60b408;
        do {
            eax = L00476074(ebx);
            *esi = eax == 0 ? *esi & -8193 : *esi | 8192;
            ebx = ebx + 1;
            esi = esi + 4;
        } while(ebx <= 2);
    }
}

/*    Procedure: 0x00475E81 - 0x00475E83
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475E81()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475E84 - 0x00475EC5
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047511C()
 *        L00475214()
 *        L004753FC()
 *        L004754F8()
 *        L00475628()
 *        L0047586C()
 *        L004758C0()
 *        L00475914()
 *        L00475EC8()
 *        L00475EE8()
 *        L00475EFC()
 *        L00475F30()
 *        L00475F94()
 *        L00476034()
 *        L004760A4()
 *        L0047611C()
 */

L00475E84(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax >= 0) {
        if(eax > 0x12a) {
L00475e95:
            eax = 1;
        }
        M006dcf24 = eax;
        eax = *(eax + 0x60ba2c);
    } else {
        eax = ~eax;
        if(eax >= M0060b580) {
            goto L00475e95;
        }
        M006dcf24 = -1;
    }
    M0060beac = eax;
    return eax | -1;
}

/*    Procedure: 0x00475EC6 - 0x00475EC7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475EC6()
{



}

/*    Procedure: 0x00475EC8 - 0x00475EE7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004754F8()
 *        L0047566C()
 *        L0047586C()
 *        L004758C0()
 */

L00475EC8()
{
    /* unknown */ void  ebx;



    ebx = GetLastError() & 65535;
    L00475E84(ebx & 65535);
    return ebx;
}

/*    Procedure: 0x00475EE8 - 0x00475EF9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047578C()
 *        L00475914()
 *        L00475EFC()
 *        L00475F30()
 *        L00475F94()
 *        L00475FF8()
 *        L00476034()
 *        L004760A4()
 *        L0047630C()
 */

L00475EE8()
{



    return L00475E84(GetLastError() & 65535);
}

/*    Procedure: 0x00475EFA - 0x00475EFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475EFA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00475EFC - 0x00475F2D
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004198BC()
 */

L00475EFC(A8)
CHAR * A8;
{



    if(!(eax = CreateDirectoryA(A8, 0) - 1)) {
        if(GetLastError() == 0xb7) {
            return L00475E84(5);
        }
        return L00475EE8();
    }
    return 0;
}

/*    Procedure: 0x00475F2E - 0x00475F2F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475F2E()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00475F30 - 0x00475F75
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00475214()
 *        L00475F76()
 */

L00475F30(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  * Ac;
unsigned long  A10;
{
    /* unknown */ void  ecx;



    eax = A8 >= M0060b404 ? L00475E84(6) : !(eax = ReadFile( *(A8 * 4 + M006dce64), Ac, A10, ebp - 4, 0) - 1) ? L00475EE8() : *(ebp - 4);
}

/*    Procedure: 0x00475F76 - 0x00475F90
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00475F76(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00475F30(A8, Ac, A10);
}

/*    Procedure: 0x00475F91 - 0x00475F93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475F91()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475F94 - 0x00475FD9
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004753FC()
 *        L00475FDA()
 */

L00475F94(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  * Ac;
unsigned long  A10;
{
    /* unknown */ void  ecx;



    eax = A8 >= M0060b404 ? L00475E84(6) : !(eax = WriteFile( *(A8 * 4 + M006dce64), Ac, A10, ebp - 4, 0) - 1) ? L00475EE8() : *(ebp - 4);
}

/*    Procedure: 0x00475FDA - 0x00475FF4
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L00475FDA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00475F94(A8, Ac, A10);
}

/*    Procedure: 0x00475FF5 - 0x00475FF7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00475FF5()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00475FF8 - 0x00476033
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00473CE5()
 *        L004781A8()
 */

L00475FF8(A8, Ac)
CHAR * A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    eax = GetFileAttributesA(A8);
    if(eax == -1) {
        return L00475EE8();
    }
    if(!(Ac & 2) && !(bl & 1)) {
        M0060beac = 5;
        return eax | -1;
    }
    return 0;
}

/*    Procedure: 0x00476034 - 0x00476073
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004731B8()
 *        L004754DC()
 */

L00476034(A8)
/* unknown */ void  A8;
{



    if(A8 >= M0060b404) {
        return L00475E84(6);
    }
    if(!(eax = CloseHandle( *(A8 * 4 + M006dce64)) - 1)) {
        *(A8 * 4 + 0x60b408) = 0;
        return 0;
    }
    return L00475EE8();
}

/*    Procedure: 0x00476074 - 0x004760A0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L004754F8()
 *        L00475D3D()
 *        L0047611C()
 */

L00476074(A8)
/* unknown */ void  A8;
{



    if(A8 >= M0060b404) {
        return 0;
    }
    eax = GetFileType( *(A8 * 4 + M006dce64));
    return 0;
}

/*    Procedure: 0x004760A1 - 0x004760A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004760A1()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004760A4 - 0x0047611B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00473878()
 *        L004738DC()
 *        L0047511C()
 *        L004753FC()
 */

L004760A4(A8, Ac, A10)
/* unknown */ void  A8;
long  Ac;
/* unknown */ void  A10;
{
    DWORD esi;
    unsigned long  edi;



    if(A8 >= M0060b404) {
        eax = L00475E84(6);
    } else {
        if(!(eax = A10 - 1)) {
            == ? L004760d2 : ;
            if(eax = eax - 1) {
                goto L004760d9;
            }
        } else {
            edi = 0;
            goto L004760ea;
            edi = 1;
            goto L004760ea;
L004760d9:
            edi = 2;
            goto L004760ea;
        }
        eax = L00475E84(1);
        goto L00476117;
L004760ea:
        *(A8 * 4 + 0x60b408) = *(A8 * 4 + 0x60b408) & -513;
        esi = SetFilePointer( *(A8 * 4 + M006dce64), Ac, 0, edi);
        if(esi == -1) {
            L00475EE8();
        }
        eax = esi;
    }
L00476117:
}

/*    Procedure: 0x0047611C - 0x0047630B
 *    Argument size: 12
 *    Local size: 20
 *    Save regs size: 12
 *    Called by:
 *        L00473464()
 *        L00474574()
 *        L00475834()
 */

L0047611C(A8, Ac, Ad, A10)
CHAR * A8;
/* unknown */ void  Ac;
/* unknown */ void  Ad;
/* unknown */ void  A10;
{
    unsigned long  ebx;
    /* unknown */ void  * esi;
    unsigned long  edi;
    struct _SECURITY_ATTRIBUTES Vffffffec;  /* size = 12 bytes */
    unsigned long  Vfffffff8;
    unsigned long  Vfffffffc;



    if(!(Ad & 0xc0)) {
        Ac = Ac | *M0060b4ac & 49152;
    }
    if(!(Ad & 0x80)) {
        Ac = Ac | 16384;
    }
    eax = Ac & 0x700;
    if(eax <= 0x500) {
        == ? L0047617f : ;
        if(eax = eax - 0x100) {
            goto L0047618d;
        }
        if(eax = eax - 0x100) {
            goto L00476194;
        }
        if(eax = eax - 0x100) {
            goto L00476186;
        }
    } else {
        if(!(eax = eax - 0x600)) {
            if(!(eax = eax - 0x100)) {
                goto L0047619b;
            }
            edi = 1;
            goto L004761a0;
L00476186:
            edi = 2;
            goto L004761a0;
L0047618d:
            edi = 4;
            goto L004761a0;
        }
L00476194:
        edi = 5;
        goto L004761a0;
    }
L0047619b:
    edi = 3;
L004761a0:
    if(!(Ad & 1)) {
        ebx = !( *( & A10 + 4 - 4) & M0060ba28 & 0x80) ? 0x80 : 1;
    } else {
        ebx = GetFileAttributesA(A8);
        if(ebx == -1) {
            ebx = 0;
        }
    }
    if(!(eax = (Ac & 3) - 1)) {
        == ? L004761f4 : ;
        if(eax = eax - 1) {
            goto L004761fd;
        }
    } else {
        Vfffffffc = -2147483648;
        goto L00476215;
        Vfffffffc = 1073741824;
        goto L00476215;
L004761fd:
        Vfffffffc = -1073741824;
        goto L00476215;
    }
    ebx = L00475E84(1);
    return ebx;
L00476215:
    if(!(eax = (Ac & 0x70) - 0x10)) {
        if(eax = eax - 0x10) {
            goto L00476238;
        }
        if(eax = eax - 0x10) {
            goto L00476241;
        }
        if(!(eax = eax - 0x10)) {
        }
    } else {
        Vfffffff8 = 0;
        goto L00476251;
L00476238:
        Vfffffff8 = 1;
        goto L00476251;
L00476241:
        Vfffffff8 = 2;
        goto L00476251;
    }
    Vfffffff8 = 3;
L00476251:
    Vffffffec.nLength = 0xc;
    Vffffffec.lpSecurityDescriptor = 0;
    eax = Ac & 0x80;
    eax :: 1;
    asm("sbb eax,eax");
    Vffffffec.bInheritHandle = ~eax;
    esi = CreateFileA(A8, Vfffffffc, Vfffffff8, & (Vffffffec.nLength), edi, ebx, 0);
    if(esi == -1) {
        ebx = GetLastError() & 65535;
        if(ebx == 0x6e) {
            ebx = 0x50;
            if(!(Ad & 1)) {
                ebx = 2;
            }
        }
        ebx = L00475E84(ebx);
    } else {
        edi = esi;
        if(L00476074(edi) != 0) {
            Ac = Ac | 8192;
        }
        if(!(bl & 1)) {
            Ac = Ac | 0x100;
        }
        Ac = Ac & -1793;
        ebx = L00475BE8(edi, Ac);
        if(ebx == -1) {
            L00475E84(4);
            CloseHandle(esi);
        }
    }
    return ebx;
}

/*    Procedure: 0x0047630C - 0x00476325
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004731B8()
 */

L0047630C(A8)
CHAR * A8;
{



    eax = !(eax = DeleteFileA(A8) - 1) ? 0 : L00475EE8();
}

/*    Procedure: 0x00476326 - 0x0047632D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476326()
{



    *eax = *eax + al;
    return 0x60bb5c;
}

/*    Procedure: 0x0047632E - 0x00476333
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047632E()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
}

/*    Procedure: 0x00476334 - 0x00476356
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L0041AEF8()
 *        L0041AF5A()
 *        L0041B7DE()
 */

L00476334(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;



    for(ebx = A8; 1; ebx = ebx + 1) {
        L00476380( *ebx);
        *ebx = al;
        if(al == 0) {
            break;
        }
    }
    return A8;
}

/*    Procedure: 0x00476357 - 0x00476357
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476357()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00476358 - 0x0047637F
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00414608()
 */

L00476358(A8)
/* unknown */ void  A8;
{



    if(A8 == -1) {
        return A8 | -1;
    }
    edx = al & 0xff;
    if(!( *(edx + 0x60bb99) & 4)) {
        edx = edx + 0x20;
        return edx;
    }
    return edx;
}

/*    Procedure: 0x00476380 - 0x004763A7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410C74()
 *        L0041656C()
 *        L00418FCC()
 *        L0041987C()
 *        L00419F24()
 *        L00450E00()
 *        L00471368()
 *        L00476334()
 */

L00476380(A8)
/* unknown */ void  A8;
{



    if(A8 == -1) {
        return A8 | -1;
    }
    edx = al & 0xff;
    if(!( *(edx + 0x60bb99) & 8)) {
        edx = edx - 0x20;
        return edx;
    }
    return edx;
}

/*    Procedure: 0x004763A8 - 0x004763BA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004763A8()
{



    esp = ebp - 2;
    asm("fnstsw [ebp-0x2]");
    asm("fnclex");
    return *(ebp - 2) & 65535;
}

/*    Procedure: 0x004763BB - 0x004763BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004763BB()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004763BC - 0x004763E3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004763F6()
 *        L004765D4()
 */

L004763BC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = ebp - 4;
    asm("fstcw [ebp-0x4]");
    ecx = Ac;
    eax = A8 & ecx;
    ecx = !ecx;
    asm("wait");
    *(ebp - 4) = eax | *(ebp - 4) & 65535 & ecx;
    asm("fldcw [ebp-0x4]");
}

/*    Procedure: 0x004763E4 - 0x004763E9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00474A14()
 */

L004763E4()
{



    goto ( *L0060bcb0);
}

/*    Procedure: 0x004763EA - 0x004763EF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00474A14()
 */

L004763EA()
{



    goto ( *L0060bcb4);
}

/*    Procedure: 0x004763F0 - 0x004763F5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473DC8()
 */

L004763F0()
{



    goto ( *L0060bcb8);
}

/*    Procedure: 0x004763F6 - 0x00476412
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473DC8()
 */

L004763F6()
{



    goto ( *L0060bcbc);
    asm("finit");
    return L004763BC(M0060bd18, 8191);
}

/*    Procedure: 0x00476413 - 0x00476413
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476413()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00476414 - 0x00476438
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00417B90()
 *        L00434694()
 *        L0046E898()
 */

L00476414()
{



    esp = ebp - 0xc;
    asm("fstcw [ebp-0x4]");
    asm("wait");
    al = *(ebp - 3);
    *(ebp - 3) = *(ebp - 3) | 0xc;
    asm("fldcw [ebp-0x4]");
    *(ebp - 0xc) = ((frestore));
    *(ebp - 3) = al;
    asm("fldcw [ebp-0x4]");
    return *(ebp - 0xc);
}

/*    Procedure: 0x00476439 - 0x0047643B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476439()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047643C - 0x00476468
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00476B31()
 */

L0047643C(A8)
/* unknown */ void  A8;
{



    esp = ebp - 0xa;
    if(!( *(A8 + 7) & 0x80)) {
        (fsave) *A8;
        return;
    }
    *(ebp - 0xa) = *A8;
    *(ebp - 6) = *(A8 + 4);
    *(ebp - 2) = 16446;
    (fsave)tword [ebp-0xa];
    esp = ebp;
}

/*    Procedure: 0x00476469 - 0x0047646B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476469()
{



    *eax = *eax + al;
    *(ebx + -1962662844) = *(ebx + -1962662844) + cl;
}

/*    Procedure: 0x0047646C - 0x0047648C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477014()
 */

L0047646C(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    if(*(A8 + 8) != 16446) {
        *A4 = tword [edx];
        asm("wait");
        return;
    }
    *A4 = *A8;
    *(A4 + 4) = *(A8 + 4);
}

/*    Procedure: 0x0047648D - 0x0047648F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047648D()
{



    *eax = *eax + al;
    *(ebx + -620485564) = *(ebx + -620485564) + cl;
}

/*    Procedure: 0x00476490 - 0x004764A0
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477014()
 */

L00476490(A4)
/* unknown */ void  A4;
{



    eax = A4;
    (fsave)tword [eax];
    asm("fxam");
    eax = 0;
    asm("fstsw ax");
    st0 = ((frestore));
    asm("wait");
}

/*    Procedure: 0x004764A1 - 0x004764A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004764A1()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004764A4 - 0x004764C8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00477014()
 */

L004764A4(A8)
/* unknown */ void  A8;
{



    ecx = 0xa;
    eax = *(A8 + 4);
    edx = 0;
    if(eax != 0) {
        ecx = 0xa / 0xa;
        edx = ecx % ecx;
        *(A8 + 4) = eax;
    }
    eax = *A8;
    *A8 = eax;
    return ecx / ecx % ecx / ecx;
}

/*    Procedure: 0x004764C9 - 0x004764CB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004764C9()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004764CC - 0x004764F9
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00476B31()
 */

L004764CC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  edi;



    ecx = 0xa;
    eax = *A8;
    asm("mul ecx");
    eax = eax + Ac;
    asm("adc edx,+0x0");
    *A8 = eax;
    edi = edx;
    eax = *(A8 + 4);
    asm("mul ecx");
    eax = eax + edi;
    asm("adc edx,+0x0");
    *(A8 + 4) = eax;
    return edx;
}

/*    Procedure: 0x004764FA - 0x004764FB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004764FA()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004764FC - 0x00476537
 *    Argument size: 10
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00434694()
 */

L004764FC(A8, Ae)
/* unknown */ void  A8;
/* unknown */ void  Ae;
{



    (fsave)A8;
    ax = Ae << 1;
    == ? L0047650f : ;
    < ? L00476511 : ;
    asm("fsqrt");
L0047650f:
    return;
    st0 = ((frestore));
    eax = L004772E4(1, 0x60bca8, & A8, 0, M0060bca0, M0060bca4);
    goto L0047650f;
    *eax = *eax + al;
}

/*    Procedure: 0x00476538 - 0x00476593
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L004103B0()
 *        L00476594()
 */

L00476538(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    edx = A8;
    ecx = 0;
    do {
        al = *edx;
        edx = edx + 1;
    } while(*(al + 0x60bb99) & 1);
    if(al == 0x2b || al == 0x2d) {
        esi = 0;
        al = *edx;
        edx = edx + 1;
    } else {
        esi = 0;
    }
    while(al >= 0x30 && al <= 0x39) {
        ecx = ecx + ecx + (ecx + ecx) * 4;
        ecx = ecx + al - 0x30;
        al = *edx;
        edx = edx + 1;
    }
    eax = esi != 0 ? ~ecx : ecx;
}

/*    Procedure: 0x00476594 - 0x004765A2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00476594(A8)
/* unknown */ void  A8;
{



    return L00476538(A8);
}

/*    Procedure: 0x004765A3 - 0x004765AF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004765A3()
{



    *(eax - 0x40) = *(eax - 0x40) + ch;
    esp = -1427636128;
    (restore)ss;
    *eax = *eax + al;
    (restore)ecx;
}

/*    Procedure: 0x004765B0 - 0x004765BB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004765B0()
{



    return L00477D58("scanf : floating point formats not linked");
}

/*    Procedure: 0x004765BC - 0x004765D1
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00427898()
 *        L004283B0()
 *        L0042907C()
 *        L0042F5B4()
 *        L004325FC()
 *        L004339EC()
 *        L0045122F()
 *        L004632CD()
 *        L00467E94()
 *        L0046881C()
 *        L00469220()
 *        L0046A4F4()
 *        L0046B7D8()
 *        L0046C600()
 *        L0046E898()
 */

L004765BC(A8)
/* unknown */ void  A8;
{



    edx = A8 < 0 ? ~A8 : A8;
    return edx;
}

/*    Procedure: 0x004765D2 - 0x004765D3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004765D2()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004765D4 - 0x004766C8
 *    Argument size: 24
 *    Local size: 16
 *    Save regs size: 8
 *    Called by:
 *        L00476F89()
 */

L004765D4(A8, Ac, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(A8 == 0) {
        cx = 16510;
        si = 16234;
    } else {
        cx = 17406;
        si = 15309;
    }
    eax = & Ac;
    bx = *(eax + 8) & 32768;
    dx = dx & 32767;
    if(dx == 32767) {
        (fsave)tword [ebp+0xc];
    } else {
        if(cx < dx) {
            Vfffffff4 = A18;
            eax = A1c;
            Vfffffff8 = eax;
        } else {
            if(cx == dx) {
                Vfffffffc = L004763BC(0, 0);
                L004763BC(0xc00, 0xc00);
                if(A8 == 0) {
                    Vfffffff0 = tword [ebp+0xc];
                    Vfffffff4 = Vfffffff0;
                } else {
                    Vfffffff4 = tword [ebp+0xc];
                }
                eax = L004763BC(0xc00, Vfffffffc);
                (fsave)Vfffffff4;
                goto L004766c3;
            }
            if(!(cx = *eax | dx | *(eax + 2) | *(eax + 4) | *(eax + 6))) {
                (fsave)tword [ebp+0xc];
                goto L004766c3;
            }
            if(si <= dx) {
                goto L004766c0;
            }
            eax = 0;
            Vfffffff4 = 0;
            Vfffffff8 = 0;
        }
        M0060beac = 0x22;
        if(bx != 0) {
            (fsave)Vfffffff4;
            asm("fchs");
        } else {
            (fsave)Vfffffff4;
            goto L004766c3;
L004766c0:
            (fsave)tword [ebp+0xc];
        }
    }
L004766c3:
}

/*    Procedure: 0x004766C9 - 0x004766CB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004766C9()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004766CC - 0x0047673C
 *    Argument size: 20
 *    Local size: 36
 *    Save regs size: 12
 *    Called by:
 *        L00474A14()
 *        L00476740()
 *        L0047675C()
 *        L0047678C()
 *        L004767A9()
 */

L004766CC(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffdc;



    edi = A10;
    esi = A8;
    ebx = Ac;
    if(edi >= 2 && edi <= 0x24) {
        if(esi < 0 && A14 != 0) {
            *ebx = 0x2d;
            ebx = ebx + 1;
            esi = ~esi;
        }
        ecx = & Vffffffdc;
        do {
            eax = esi;
            edx = 0;
            edi = edi / edi;
            edx = edi % edi;
            *ecx = dl;
            ecx = ecx + 1;
            eax = esi;
            edx = 0;
            edi = edi / edi;
            edx = edi % edi;
            esi = eax;
        } while(eax != 0);
        while(1) {
            eax = & Vffffffdc;
            if(ecx == eax) {
                break;
            }
            ecx = ecx - 1;
            al = *ecx;
            if(al >= 0xa) {
                *ebx = al + A18 + 0xf6;
                ebx = ebx + 1;
                continue;
            }
            *ebx = eax + 0x30;
            ebx = ebx + 1;
        }
    }
    *ebx = 0;
    return Ac;
}

/*    Procedure: 0x0047673D - 0x0047673F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047673D()
{



}

/*    Procedure: 0x00476740 - 0x0047675A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00473C98()
 */

L00476740(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L004766CC(A8, Ac, 0xa, 0, 0x61);
}

/*    Procedure: 0x0047675B - 0x0047675B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047675B()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047675C - 0x0047678B
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410568()
 *        L00410B1B()
 */

L0047675C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10;
    (save)0x61;
    (save)0;
    (save)eax;
    (save)Ac;
    eax = eax == 0xa ? A8 : A8;
    (save)eax;
    esp = esp + 0x14;
    return L004766CC();
}

/*    Procedure: 0x0047678C - 0x004767A8
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L0047678C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L004766CC(A8, Ac, A10, 0, 0x61);
}

/*    Procedure: 0x004767A9 - 0x004767D0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 */

L004767A9(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L004766CC(A8, Ac, A10, 0, 0x61);
}

/*    Procedure: 0x004767D1 - 0x004767FD
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004767D1()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    eax = *(ebp + 8);
    if(*eax == 4) {
        *(eax + 0x18) = 0;
        *(eax + 0x1c) = 0;
        (restore)ebp;
        return 1;
    }
    if(*eax == 5) {
        (restore)ebp;
        return 1;
    }
    (restore)ebp;
    return 0;
}

/*    Procedure: 0x004767FE - 0x0047682D
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004767FE()
{



    *eax = *eax + al;
    (save)ebp;
    eax = *(esp + 8);
    if(*eax == 4) {
        *(eax + 0x1c) = 0;
        *(eax + 0x20) = 0;
        *(eax + 0x24) = 0;
        (restore)ebp;
        return 1;
    }
    if(*eax == 5) {
        (restore)ebp;
        return 1;
    }
    (restore)ebp;
    return 0;
}

/*    Procedure: 0x0047682E - 0x00476844
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047682E()
{



    *eax = *eax + al;
    (save)ebp;
    ebp = esp;
    M0060bd48 = *(ebp + 8);
    eax = *(ebp + 0xc);
    M0060bd4c = eax;
    (restore)ebp;
    return M0060bd4c;
}

/*    Procedure: 0x00476845 - 0x0047684B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476845()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x0047684C - 0x00476882
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00476883()
 */

L0047684C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10;
    if(cl != 0x47) {
        if(cl != 0x67) {
            goto L00476873;
        }
        goto L0047686d;
        return Ac;
    }
L0047686d:
    do {
        if(*(eax - 1) != 0x30) {
            goto L00476873;
        }
        eax = eax - 1;
    } while(Ac < eax);
    return Ac;
L00476873:
    if(*M0060bb5c == *(eax - 1)) {
        eax = eax - 1;
    }
}

/*    Procedure: 0x00476883 - 0x00476B01
 *    Argument size: 24
 *    Local size: 56
 *    Save regs size: 12
 */

L00476883(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffc8;
    /* unknown */ void  Vfffffff6;
    /* unknown */ void  Vfffffff7;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    Vfffffff6 = *M0060bb5c;
    if(Ac > 0x28) {
        Ac = 0x28;
    }
    Vfffffff8 = Ac;
    al = A14 & 0xdf;
    Vfffffff7 = al;
    if(Vfffffff7 == 0x46) {
        edi = ~Vfffffff8;
        if(edi > 0) {
            edi = 0;
            Ac = 0;
        }
    } else {
        edi = Vfffffff8;
        if(edi <= 0) {
            edi = 1;
        } else {
            if(Vfffffff7 == 0x45) {
                edi = edi + 1;
                Ac = Ac + 1;
            }
        }
    }
    esi = L00477014(A8, edi, & Vfffffffc, & Vffffffc8, A1c);
    ebx = A10;
    if(esi == 32767) {
        eax = Vfffffffc != 0 ? "-INF" : "+INF";
        edi = eax;
        esi = ebx;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
    } else {
        if(esi == 32766) {
            eax = Vfffffffc != 0 ? "-NAN" : "+NAN";
            edi = eax;
            esi = ebx;
            eax = 0;
            ecx = ecx | -1;
            asm("repne scasb");
            ecx = !ecx;
            edi = edi - ecx;
            asm("xchg esi,edi");
            eax = edi;
            edx = ecx;
            ecx = ecx >> 2;
            asm("rep movsd");
            ecx = edx & 3;
            asm("rep movsb");
        } else {
            if(Vfffffffc != 0) {
                *ebx = 0x2d;
                ebx = ebx + 1;
            }
            if(Vfffffff7 != 0x46) {
                if(Vfffffff7 != 0x47 || esi < -3) {
                    goto L00476a49;
                }
                eax = Ac == 0 ? 1 : Ac;
                if(esi > eax) {
                    goto L00476a49;
                }
            }
            if(esi <= 0x28) {
                if(esi <= 0) {
                    *ebx = 0x30;
                    ebx = ebx + 1;
                    *ebx = Vfffffff6;
                    ebx = ebx + 1;
                    do {
                        *ebx = 0x30;
                        ebx = ebx + 1;
                        esi = esi + 1;
                    } while(esi != 0);
                }
                edi = 0;
                for(eax = & Vffffffc8; 1; eax = eax + 1) {
                    dl = *eax;
                    if(dl == 0) {
                        break;
                    }
                    *ebx = dl;
                    ebx = ebx + 1;
                    if(!(esi = esi - 1)) {
                        *ebx = Vfffffff6;
                        ebx = ebx + 1;
                        edi = edi + 1;
                    }
                }
                edi = edi + Vfffffff8;
                if(edi < Ac) {
                    edi = Ac - edi;
                    esi = esi + edi;
                    eax = L00471198(ebx, 0x30, edi);
                    ebx = ebx + edi;
                    if(!(esi = esi - 1)) {
                    }
                } else {
                    if(!(esi = esi - 1) && A18 == 0) {
                        eax = A10;
                        eax = L0047684C(A14, eax, ebx);
                        ebx = eax;
                    }
                }
                if(ebx == A10) {
                    *ebx = 0x30;
                    ebx = ebx + 1;
                }
                *ebx = 0;
            } else {
L00476a49:
                eax = & Vffffffc8;
                *ebx = *eax;
                eax = eax + 1;
                ebx = ebx + 1;
                dl = *eax;
                eax = eax + 1;
                if(dl != 0) {
                    *ebx = Vfffffff6;
                    ebx = ebx + 1;
                    do {
                        *ebx = dl;
                        ebx = ebx + 1;
                        dl = *eax;
                        eax = eax + 1;
                    } while(dl != 0);
                    if(A18 == 0) {
                        eax = A10;
                        ebx = L0047684C(A14, eax, ebx);
                    }
                } else {
                    if(A18 != 0) {
                        *ebx = Vfffffff6;
                        ebx = ebx + 1;
                    }
                }
                *ebx = A14 & 0x20 | 0x45;
                ebx = ebx + 1;
                if(!(esi = esi - 1)) {
                    esi = ~esi;
                    *ebx = 0x2d;
                    ebx = ebx + 1;
                } else {
                    *ebx = 0x2b;
                    ebx = ebx + 1;
                }
                edi = esi >= 0x3e8 ? 4 : esi >= 0x64 ? 3 : 2;
                *(ebx + edi) = 0;
                eax = ebx + edi;
                ebx = eax;
                do {
                    edi = edi - 1;
                    ebx = ebx - 1;
                    eax = esi;
                    ecx = 0xa;
                    asm("cdq");
                    dl = ecx / ecx % ecx / ecx + 0x30;
                    *ebx = dl;
                    ecx = 0xa;
                    eax = esi;
                    asm("cdq");
                    edx = ecx / ecx % ecx / ecx;
                    esi = eax;
                } while(edi != 0);
            }
        }
    }
}

/*    Procedure: 0x00476B02 - 0x00476B19
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00476B02(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    eax = Ac != 0 ? eax + 0xc : eax + 8;
}

/*    Procedure: 0x00476B1A - 0x00476B30
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476B1A()
{



    M0060bcb0 = 0x476884;
    M0060bcb4 = 0x476b04;
}

/*    Procedure: 0x00476B31 - 0x00476F88
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476B31()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    esp = esp - 0x44;
    (save)ebx;
    (save)esi;
    (save)edi;
    *(ebp - 4) = 32768;
    esi = -2;
    *(ebp - 8) = 0x13;
    *(ebp - 9) = 0;
    *(ebp - 0xa) = 1;
    *(ebp - 0xb) = 0;
    *(ebp - 0xc) = 0;
    *(ebp - 0xd) = 0;
    *(ebp - 0x14) = 0;
    *(ebp - 0x18) = 1;
    *(ebp - 0x24) = 0;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x34) = ebp - 0x24;
    edi = ebp - 0x24;
    *(ebp - 0x3d) = *M0060bb5c;
    do {
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        ebx = *(ebp + 0xc)( *(ebp + 0x14));
        if(ebx == -1) {
            goto L00476ba1;
        }
        if(bl & 0x80) {
            break;
        }
    } while(*(ebx + 0x60bb99) & 1);
    goto L00476bbb;
L00476ba1:
    *(ebp - 0x18) = -1;
    goto L00476e60;
L00476bbb:
    if(!( *(ebp + 0x18) = *(ebp + 0x18) - 1)) {
        if(ebx == 0x2b) {
            *(ebp - 0xb) = 1;
        } else {
            if(ebx != 0x2d) {
                goto L00476bf2;
            }
            *(ebp - 0xb) = 1;
            *(ebp - 9) = 1;
        }
L00476bdc:
        if(*(ebp + 0x18) = *(ebp + 0x18) - 1) {
            goto L00476cd3;
        }
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        ebx = *(ebp + 0xc)( *(ebp + 0x14));
L00476bf2:
        if(*(ebp - 0xa) == 1 && *(ebp - 0xb) != 0) {
            if(ebx == 0x49) {
                goto L00476e82;
            }
            if(ebx == 0x4e) {
                goto L00476efa;
            }
        }
        *(ebp - 0xa) = 0;
        if(ebx == *(ebp - 0x3d)) {
            if(*(ebp - 4) != 32768) {
                goto L00476cd8;
            }
            eax = esi > 0 ? esi : 0;
            *(ebp - 4) = eax;
            goto L00476bdc;
        }
        if(ebx < 0x30 || ebx > 0x39) {
            goto L00476cd8;
        }
        ebx = ebx - 0x30;
        esi = esi + 1;
        if(esi <= 0) {
            *( *(ebp - 0x34)) = bx;
            if(ebx != 0) {
                esi = 1;
                goto L00476bdc;
            }
            esi = esi | -1;
            if(*(ebp - 4) == 32768) {
                goto L00476bdc;
            }
            *(ebp - 4) = *(ebp - 4) - 1;
            goto L00476bdc;
        }
        if(esi <= 9) {
            *edi = *edi + *edi + ( *edi + *edi) * 4 + ebx;
            goto L00476bdc;
        }
        if(esi > *(ebp - 8)) {
            goto L00476bdc;
        }
        *(ebp - 0x3c) = *edi;
        *(ebp - 0x38) = *(edi + 4);
        if(L004764CC(ebp - 0x3c, ebx) != 0) {
            *(ebp - 8) = esi - 1;
            goto L00476bdc;
        }
        *edi = *(ebp - 0x3c);
        *(edi + 4) = *(ebp - 0x38);
        goto L00476bdc;
    }
L00476cd3:
    ebx = 0x65;
L00476cd8:
    if(esi != -2) {
        if(*(ebp - 4) == 32768) {
            *(ebp - 4) = esi;
        }
        edi = 0;
        if(ebx == 0x65 || ebx == 0x45) {
            *(ebp - 0x44) = 1;
            while(1) {
                if(*(ebp + 0x18) = *(ebp + 0x18) - 1) {
                    goto L00476d61;
                }
                *(ebp - 0x14) = *(ebp - 0x14) + 1;
                ebx = *(ebp + 0xc)( *(ebp + 0x14));
                if(*(ebp - 0x44) != 0) {
                    *(ebp - 0x44) = 0;
                    if(ebx == 0x2d) {
                        goto L00476d22;
                    }
                    if(ebx == 0x2b) {
                        continue;
                    }
                }
                if(ebx < 0x30 || ebx > 0x39) {
                    break;
                }
                ebx = ebx + edi + edi + (edi + edi) * 4 - 0x30;
                edi = ebx;
                if(ebx <= 0x1344) {
                    continue;
                }
                *(ebp - 0xd) = 1;
                continue;
L00476d22:
                *(ebp - 0xc) = 1;
            }
        }
        *(ebp + 0x10)(ebx, *(ebp + 0x14));
        *(ebp - 0x14) = *(ebp - 0x14) - 1;
L00476d61:
        if(*(ebp - 0xc) != 0) {
            edi = ~edi;
            *(ebp - 0xd) = ~( *(ebp - 0xd));
        }
        if(esi < 0) {
            *(ebp - 0x24) = 0;
            *(ebp - 0x20) = 0;
            *(ebp - 0x1c) = 0;
        } else {
            if(*(ebp - 0xd) != 0) {
                if(*(ebp - 0xd) == 1) {
                    eax = *(ebp - 0x34);
                    *(eax + 6) = 65535;
                    *( *(ebp - 0x34) + 4) = 65535;
                    *( *(ebp - 0x34) + 2) = 65535;
                    *( *(ebp - 0x34)) = 65535;
                    *( *(ebp - 0x34) + 8) = 32766;
                } else {
                    *(ebp - 0x24) = 0;
                    *(ebp - 0x20) = 0;
                    *(ebp - 0x1c) = 0;
                }
                *(ebp - 0x18) = 2;
            } else {
                eax = esi > *(ebp - 8) ? *(ebp - 8) : esi;
                edi = edi + *(ebp - 4) - eax;
                L0047643C(ebp - 0x24);
                tword [ebp-0x24] = ((frestore));
                if(edi != 0) {
                    eax = edi > 0 ? edi : ~edi;
                    L00477390(eax);
                    tword [ebp-0x30] = ((frestore));
                    if(edi < 0) {
                        (fsave)tword [ebp-0x24];
                        (fsave)tword [ebp-0x30];
                        asm("fdivp st1,st0");
                        tword [ebp-0x24] = ((frestore));
                    } else {
                        (fsave)tword [ebp-0x24];
                        (fsave)tword [ebp-0x30];
                        asm("fmulp st1");
                        tword [ebp-0x24] = ((frestore));
                    }
                }
            }
        }
L00476e22:
        if(*(ebp - 9) != 0) {
            (fsave)tword [ebp-0x24];
            asm("fchs");
            tword [ebp-0x24] = ((frestore));
        }
L00476e30:
        eax = *(ebp + 0x1c);
        *eax = *eax + *(ebp - 0x14);
        eax = *(ebp + 0x20);
        *eax = *(ebp - 0x18);
        eax = *(ebp + 8);
        *eax = *(ebp - 0x24);
        *(eax + 4) = *(ebp - 0x20);
        *(eax + 8) = *(ebp - 0x1c);
    } else {
L00476e5b:
        *(ebp - 0x18) = 0;
L00476e60:
        if(*(ebp + 0x18) >= 0) {
            *(ebp + 0x10)(ebx, *(ebp + 0x14));
            *(ebp - 0x14) = *(ebp - 0x14) - 1;
        }
        *(ebp - 0x24) = 0;
        *(ebp - 0x20) = 0;
        *(ebp - 0x1c) = 0;
        goto L00476e22;
L00476e82:
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        ebx = *(ebp + 0xc)( *(ebp + 0x14));
        if(( *(ebp + 0x18) = *(ebp + 0x18) - 1) || ebx != 0x4e) {
            goto L00476e5b;
        }
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        ebx = *(ebp + 0xc)( *(ebp + 0x14));
        if(( *(ebp + 0x18) = *(ebp + 0x18) - 1) || ebx != 0x46) {
            goto L00476e5b;
        }
        if(*(ebp - 9) != 0) {
            *(ebp - 0x24) = M0060bdb2;
            *(ebp - 0x20) = M0060bdb6;
            *(ebp - 0x1c) = M0060bdba;
            goto L00476e30;
        }
        *(ebp - 0x24) = M0060bda8;
        *(ebp - 0x20) = M0060bdac;
        *(ebp - 0x1c) = M0060bdb0;
        goto L00476e30;
L00476efa:
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        ebx = *(ebp + 0xc)( *(ebp + 0x14));
        if(( *(ebp + 0x18) = *(ebp + 0x18) - 1) || ebx != 0x41) {
            goto L00476e5b;
        }
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        ebx = *(ebp + 0xc)( *(ebp + 0x14));
        if(( *(ebp + 0x18) = *(ebp + 0x18) - 1) || ebx != 0x4e) {
            goto L00476e5b;
        }
        if(*(ebp - 9) != 0) {
            *(ebp - 0x24) = M0060bdc6;
            *(ebp - 0x20) = M0060bdca;
            *(ebp - 0x1c) = M0060bdce;
            goto L00476e30;
        }
        *(ebp - 0x24) = M0060bdbc;
        *(ebp - 0x20) = M0060bdc0;
        *(ebp - 0x1c) = M0060bdc4;
        goto L00476e30;
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x00476F89 - 0x00476FFB
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 8
 */

L00476F89(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10;
    if(!(al & 4)) {
        eax = L004765D4(1, *A8, *(A8 + 4), *(A8 + 8), M0060bd20, M0060bd24);
        *Ac = ((frestore));
    } else {
        if(!(al & 8)) {
            *Ac = *A8;
            eax = *(A8 + 4);
            *(Ac + 4) = eax;
            *(Ac + 8) = *(A8 + 8);
        } else {
            esp = esp - 8;
            *esp = tword [0x60bda8];
            (save) *(A8 + 8);
            (save) *(A8 + 4);
            (save) *A8;
            (save)0;
            eax = L004765D4();
            esp = esp + 0x18;
            *Ac = ((frestore));
        }
    }
}

/*    Procedure: 0x00476FFC - 0x00477010
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00476FFC()
{



    M0060bcb8 = 0x476b34;
    M0060bcbc = 0x476f8c;
}

/*    Procedure: 0x00477011 - 0x00477013
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477011()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00477014 - 0x004772E0
 *    Argument size: 20
 *    Local size: 40
 *    Save regs size: 12
 *    Called by:
 *        L00476883()
 */

L00477014(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vffffffd8;
    /* unknown */ void  Vffffffdc;
    /* unknown */ void  Vffffffec;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;
    /* unknown */ void  Vfffffffe;



    Vfffffffe = 0xa;
    if(!(eax = A18 - 2)) {
        if(eax = eax - 4) {
            goto L00477041;
        }
        if(eax = eax - 2) {
            goto L0047704b;
        }
    } else {
        tword [ebp-0xc] = *A8;
        goto L00477061;
L00477041:
        tword [ebp-0xc] = *A8;
        goto L00477061;
L0047704b:
        eax = A8;
        Vfffffff4 = *eax;
        Vfffffff8 = *(eax + 4);
        dx = *(eax + 8);
        Vfffffffc = dx;
    }
L00477061:
    eax = & Vfffffff4;
    Vfffffff0 = & Vfffffff4;
    *(eax + 8) = *(eax + 8) & 32767;
    *A10 = 0;
    L00476490( & Vfffffff4);
    ax = ax & 18176;
    if(ax == 16384) {
L0047709b:
        ebx = Ac;
        if(ebx <= 0) {
            ebx = ~ebx + 1;
        }
        if(ebx > 0x28) {
            ebx = 0x28;
        }
        L00471198(A14, 0x30, ebx);
        *(A14 + ebx) = 0;
        *A10 = 0;
        eax = 1;
    } else {
        if(ax == 0x500) {
            eax = 32767;
        } else {
            if(ax == 0x100) {
                eax = 32766;
            } else {
                eax = ((bx & 65535 & 32767) + -16383) * 19728;
                edx = ( *(Vfffffff0 + 7) & 0xff) + ( *(Vfffffff0 + 7) & 0xff) & 0xff;
                ecx = edx;
                eax = eax + (ecx + (ecx + (ecx + edx * 8) * 2) * 4 & 65535);
                Vffffffec = eax >> 0x10;
                if(!(eax & 65535)) {
                    Vffffffec = Vffffffec + 1;
                }
                edi = Ac;
                if(edi <= 0) {
                    edi = Vffffffec - Ac;
                    if(edi < 0) {
                        goto L0047709b;
                    }
                }
                if(edi > 0x13) {
                    edi = 0x13;
                }
                esi = edi - Vffffffec;
                do {
                    ebx = esi;
                    if(ebx < 0) {
                        ebx = ~esi;
                    }
                    if(ebx > 0x1344) {
                        ebx = 0x1344;
                    }
                    L00477390(ebx);
                    tword [ebp-0x20] = ((frestore));
                    if(esi >= 0) {
                        (fsave)tword [ebp-0x20];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                        esi = esi - ebx;
                    } else {
                        (fsave)tword [ebp-0x20];
                        (fsave)tword [ebp-0xc];
                        asm("fdivrp st1");
                        tword [ebp-0xc] = ((frestore));
                        esi = esi + ebx;
                    }
                } while(esi != 0);
                L00477390(edi);
                tword [ebp-0x20] = ((frestore));
                (fsave)tword [ebp-0xc];
                (fsave)tword [ebp-0x20];
                asm("fcompp");
                asm("fnstsw ax");
                asm("sahf");
                >= ? L004771ea : ;
                Vffffffec = Vffffffec + 1;
                edi = edi + 1;
                if(edi <= 0x13 && Ac > 0) {
                    Vffffffd8 = Vfffffffe;
                    (fsave)Vffffffd8;
                    (fsave)tword [ebp-0xc];
                    asm("fdivrp st1");
                    tword [ebp-0xc] = ((frestore));
                    goto L00477221;
                    L00477390(edi - 1);
                    tword [ebp-0x20] = ((frestore));
                    (fsave)tword [ebp-0xc];
                    (fsave)tword [ebp-0x20];
                    asm("fcompp");
                    asm("fnstsw ax");
                    asm("sahf");
                    if(!(edi = edi - 1)) {
                        Vffffffec = Vffffffec - 1;
                        edi = edi - 1;
                        if(Ac > 0) {
                            Vffffffd8 = Vfffffffe;
                            (fsave)Vffffffd8;
                            (fsave)tword [ebp-0xc];
                            asm("fmulp st1");
                            tword [ebp-0xc] = ((frestore));
                            edi = edi + 1;
                        }
                    }
                }
L00477221:
                if(edi < 0) {
                    goto L0047709b;
                }
                L0047646C( & Vfffffff4, & Vfffffff4);
                eax = A14 + edi;
                Vffffffdc = eax;
                ebx = Vffffffdc;
                *ebx = 0;
                ebx = ebx - 1;
                esi = 0;
                if(edi == 0) {
                    eax = Vfffffff0;
                    esi = *eax & 0xff ^ 1;
                    if(esi != 0) {
                        goto L0047709b;
                    }
                } else {
                    do {
                        esi = esi | al;
                        *ebx = L004764A4( & Vfffffff4) + 0x30;
                        ebx = ebx - 1;
                    } while(edi = edi - 1);
                }
                if(esi == 0) {
                    Vffffffec = Vffffffec + 1;
                    if(Ac <= 0) {
                        *Vffffffdc = 0x30;
                    }
                    Vffffffdc = Vffffffdc + 1;
                    *(ebx + 1) = 0x31;
                }
                ebx = Ac;
                if(ebx <= 0) {
                    ebx = Vffffffec - Ac;
                }
                if(ebx > 0x28) {
                    ebx = 0x28;
                }
                *Vffffffdc = 0;
                ebx = ebx - Vffffffdc - A14;
                if(ebx > 0) {
                    L00471198(Vffffffdc, 0x30, ebx);
                    *(Vffffffdc + ebx) = 0;
                }
                eax = Vffffffec;
            }
        }
    }
}

/*    Procedure: 0x004772E1 - 0x004772E3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004772E1()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004772E4 - 0x00477387
 *    Argument size: 24
 *    Local size: 112
 *    Save regs size: 8
 *    Called by:
 *        L004764FC()
 */

L004772E4(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vffffff90;
    /* unknown */ void  Vffffffe0;
    /* unknown */ void  Vffffffe4;
    /* unknown */ void  Vffffffe8;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    ebx = A8;
    Vffffffe0 = ebx;
    Vffffffe4 = Ac;
    if(A10 == 0) {
        (fsave)M00477388;
    } else {
        (fsave) *eax;
    }
    Vffffffe8 = ((frestore));
    if(A14 == 0) {
        (fsave)M00477388;
    } else {
        (fsave) *A14;
    }
    Vfffffff0 = ((frestore));
    Vfffffff8 = A18;
    Vfffffffc = A1c;
    eax = *L0060bd48( & Vffffffe0);
    if(eax == 0) {
        (save) *(ebx * 4 + 0x60bd4c);
        L00474830( & Vffffff90, "%s: %s error", Ac);
        if(!(ebx = ebx - 2 - 3)) {
        } else {
            M0060beac = 0x22;
            goto L00477375;
        }
        M0060beac = 0x21;
L00477375:
        eax = L00477C98( & Vffffff90);
    }
    (fsave)Vfffffff8;
}

/*    Procedure: 0x00477388 - 0x0047738F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477388()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
}

/*    Procedure: 0x00477390 - 0x004774E8
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 4
 *    Called by:
 *        L00476B31()
 *        L00477014()
 */

L00477390(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(A8 < -4932) {
        (fsave)tword [0x4774ec];
    } else {
        if(A8 > 0x1344) {
            (fsave)tword [0x60be96];
        } else {
            if(A8 == 0) {
                (fsave)tword [0x4774f8];
            } else {
                eax = A8;
                if(eax < 0) {
                    eax = ~A8;
                }
                ecx = (eax & 7) + (eax & 7) * 4;
                Vfffffff4 = *(ecx * 2 + 0x60bde0);
                Vfffffff8 = *(ecx * 2 + 0x60bde4);
                Vfffffffc = *(ecx * 2 + 0x60bde8);
                eax = eax >> 3;
                if(!(al & 1)) {
                    (fsave)tword [0x60be30];
                    (fsave)tword [ebp-0xc];
                    asm("fmulp st1");
                    tword [ebp-0xc] = ((frestore));
                }
                eax = eax >> 1;
                if(eax != 0) {
                    if(!(al & 1)) {
                        (fsave)tword [0x60be3c];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be46];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be50];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be5a];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be64];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be6e];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be78];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    eax = eax >> 1;
                    if(!(al & 1)) {
                        (fsave)tword [0x60be82];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                    if(!(eax >> 1 & 1)) {
                        (fsave)tword [0x60be8c];
                        (fsave)tword [ebp-0xc];
                        asm("fmulp st1");
                        tword [ebp-0xc] = ((frestore));
                    }
                }
                if(A8 < 0) {
                    (fsave)tword [ebp-0xc];
                    asm("fdivr dword [0x477504]");
                } else {
                    (fsave)tword [ebp-0xc];
                }
            }
        }
    }
}

/*    Procedure: 0x004774E9 - 0x004774F5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004774E9()
{



}

/*    Procedure: 0x00477508 - 0x004775D8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047777C()
 */

L00477508()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 8) + 65536 - 1 & -65536;
    esi = M0060bea4 - M0060bea0;
    if(esi != 0) {
        if(ebx < esi) {
            esi = ebx;
        }
        eax = L00477B80(M0060bea0, esi);
        if(eax == 0) {
            eax = eax | -1;
            goto L004775d3;
        }
        L004776D8(M0060bea0, esi);
        M0060bea0 = M0060bea0 + esi;
    }
    if(ebx > esi) {
        eax = L00477B14(ebx, ebp - 4, ebp - 8);
        if(eax == 0) {
            eax = eax | -1;
            goto L004775d3;
        }
        if(*(ebp - 4) == M0060bea4) {
            ebx = ebx - esi;
        }
        if(L00477B80( *(ebp - 4), ebx) == 0) {
            eax = L00477C14( *(ebp - 4)) | -1;
            goto L004775d3;
        }
        L004776D8( *(ebp - 4), ebx);
        eax = *(ebp - 4);
        M0060bea0 = ebx + eax;
        M0060bea4 = eax + *(ebp - 8);
    }
    eax = 0;
L004775d3:
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x004775D9 - 0x00477601
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004775D9()
{



    *eax = *eax + al;
    *(edx + 7196988) = *(edx + 7196988) + bh;
    M006dd140 = 7196980;
    *edx = 7196980;
    *L006DD130 = 0;
    *L006DD12C = 0;
    *L006DD138 = 7196980;
    *L006DD134 = 7196980;
    M006dd128 = 0;
    return 0;
}

/*    Procedure: 0x00477602 - 0x0047763E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 8
 */

L00477602()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = 7196968;
    for(esi = 7196456; 1; L00477C14( *(esi + *ebx * 8))) {
        eax = *ebx;
        *ebx = *ebx - 1;
        if(eax <= 0) {
            break;
        }
        L00477BD4( *(esi + *ebx * 8), *(esi + *ebx * 8 + 4));
    }
}

/*    Procedure: 0x0047763F - 0x0047763F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047763F()
{



}

/*    Procedure: 0x00477640 - 0x004776D5
 *    Argument size: 4
 *    Local size: 12
 *    Save regs size: 12
 *    Called by:
 *        L004100F4()
 *        L0041021C()
 *        L004110F4()
 *        L004111F4()
 *        L00411348()
 *        L00411380()
 *        L00413ED0()
 *        L00414070()
 *        L0041411C()
 *        L0041430C()
 *        L00414410()
 *        L0041A3C5()
 *        L0041AE31()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044D064()
 *        L0045067F()
 *        L004506DF()
 *        L00451100()
 *        L0047172D()
 *        L00473134()
 *        L004731B8()
 *        L00474510()
 *        L00475954()
 *        L004776D8()
 *        L00477864()
 *        L00477980()
 *        L00477AF4()
 *        L004781A8()
 */

L00477640(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    eax = A8;
    if(eax != 0 && !( *(eax - 4) & 1)) {
        edx = edx & -2;
        Vfffffff4 = 0;
        ecx = *(eax - 8);
        if(!(cl & 1)) {
            eax = eax - ecx;
            edx = edx + ecx;
            Vfffffff4 = 1;
        }
        ebx = edx + eax;
        Vfffffffc = *(ebx - 4);
        if(!(Vfffffffc & 1)) {
            ecx = *(ebx + 4);
            esi = *ebx;
            Vfffffff8 = esi;
            *ecx = Vfffffff8;
            esi = *(ebx + 4);
            *(Vfffffff8 + 4) = esi;
            if(ebx == M006dd140) {
                M006dd140 = ecx;
            }
            edx = edx + Vfffffffc;
        }
        *(edx + eax - 8) = edx;
        *(eax - 4) = edx;
        if(Vfffffff4 == 0) {
            edx = M006dd13c;
            ecx = *(edx + 4);
            *(edx + 4) = eax;
            *(eax + 4) = ecx;
            *eax = M006dd13c;
            *ecx = eax;
        }
    }
}

/*    Procedure: 0x004776D6 - 0x004776D7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004776D6()
{



}

/*    Procedure: 0x004776D8 - 0x0047777A
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00477508()
 */

L004776D8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    ebx = Ac;
    if(ebx < 0x10) {
        eax = eax | -1;
    } else {
        ebx = ebx & -4;
        edx = A8;
        ecx = 0;
        for(eax = 7196456; ecx < M006dd128 && *eax + *(eax + 4) != edx; eax = eax + 8) {
            ecx = ecx + 1;
        }
        eax = M006dd128;
        if(ecx != eax) {
            *(ecx * 8 + 7196460) = *(ecx * 8 + 7196460) + ebx;
        } else {
            if(eax == 0x40) {
                eax = eax | -1;
                goto L00477777;
            }
            *(M006dd128 * 8 + 7196456) = edx;
            *(M006dd128 * 8 + 7196460) = ebx;
            M006dd128 = M006dd128 + 1;
            ebx = ebx - 8;
            edx = edx + 8;
            *(edx - 8) = 1;
        }
        ecx = ebx | 1;
        *(edx - 4) = ecx;
        eax = ebx + edx;
        *(eax - 8) = ecx;
        *(eax - 4) = 1;
        L00477640(edx);
        eax = 0;
    }
L00477777:
}

/*    Procedure: 0x0047777B - 0x0047777B
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047777B()
{



}

/*    Procedure: 0x0047777C - 0x00477861
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004100F4()
 *        L004110F4()
 *        L004111F4()
 *        L00411380()
 *        L00413E60()
 *        L00413FA8()
 *        L0041415C()
 *        L004148B4()
 *        L0041A3C5()
 *        L0041AE31()
 *        L0044770D()
 *        L0044B9F5()
 *        L0044BC80()
 *        L0044CF4B()
 *        L0045067F()
 *        L00451429()
 *        L0045584D()
 *        L00459C38()
 *        L00470837()
 *        L004716E3()
 *        L00473134()
 *        L004755D8()
 *        L00475954()
 *        L004759F0()
 *        L00477980()
 *        L00477EFF()
 *        L004780B4()
 */

L0047777C()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    eax = *(ebp + 8);
    esi = eax < 8 ? 0x10 : (eax + 4 - 1 & -4) + 8;
    if(esi < 0x10 || eax == 0) {
        eax = 0;
    } else {
        eax = M006dd140;
        for(ebx = 0; 1; eax = M006dd140) {
            edx = *(eax - 4);
            if(esi <= edx) {
                break;
            }
            eax = *(eax + 4);
            if(eax != M006dd140) {
                continue;
            }
            if(ebx == 2) {
                goto L0047783e;
            }
            ebx = ebx + 1;
            if(L00477508(esi) != 0) {
                goto L0047784e;
            }
        }
        *(ebp - 8) = *eax;
        ecx = *(eax + 4);
        ebx = edx - esi;
        *(ebp - 4) = ebx;
        if(*(ebp - 4) < 0x10) {
            *( *(ebp - 8) + 4) = ecx;
            *ecx = *(ebp - 8);
            if(eax == M006dd140) {
                M006dd140 = ecx;
            }
            ecx = edx + eax;
            edx = edx | 1;
            *(ecx - 8) = edx;
            *(eax - 4) = *(ecx - 8);
        } else {
            edx = esi + eax;
            *( *(ebp - 8) + 4) = edx;
            M006dd140 = edx;
            *ecx = edx;
            *(edx + 4) = ecx;
            *edx = *(ebp - 8);
            ecx = *(ebp - 4) + edx;
            esi = esi | 1;
            *(edx - 8) = esi;
            *(eax - 4) = *(edx - 8);
            ebx = *(ebp - 4);
            *(ecx - 8) = ebx;
            *(edx - 4) = *(ecx - 8);
            goto L0047785c;
L0047783e:
            eax = 0;
            goto L0047785c;
L0047784e:
            eax = 0;
        }
    }
L0047785c:
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x00477862 - 0x00477863
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477862()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00477864 - 0x0047797E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477980()
 */

L00477864()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 8;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0xc);
    *(ebp - 4) = *(ebp + 8);
    edx = eax < 8 ? 0x10 : (eax + 4 - 1 & -4) + 8;
    edi = edx;
    if(edi < 0x10 || eax == 0) {
        eax = 0;
    } else {
        esi = *( *(ebp - 4) - 4) & -2;
        if(edx == esi) {
            eax = *(ebp + 8);
        } else {
            if(esi >= edx) {
                ecx = esi - edx;
                if(ecx >= 0x10) {
                    esi = *(ebp - 4) + edi;
                    eax = ecx + esi;
                    edx = edx | 1;
                    *(esi - 8) = edx;
                    *( *(ebp - 4) - 4) = edx;
                    ecx = ecx | 1;
                    *(eax - 8) = ecx;
                    *(esi - 4) = *(eax - 8);
                    L00477640(esi);
                }
                eax = *(ebp + 8);
            } else {
                eax = *(ebp - 4) + esi;
                if(!( *(eax - 4) & 1)) {
                    if(edx > esi + ecx) {
                        goto L00477976;
                    }
                    *(ebp - 8) = *eax;
                    if(eax == M006dd140) {
                        eax = *(eax + 4);
                        M006dd140 = eax;
                    } else {
                        eax = *(eax + 4);
                    }
                    ecx = esi + ecx - edx;
                    if(ecx < 0x10) {
                        *( *(ebp - 8) + 4) = eax;
                        *eax = *(ebp - 8);
                        edx = edx + ecx;
                        eax = *(ebp - 4) + edx;
                        edx = edx | 1;
                        *(eax - 8) = edx;
                        *( *(ebp - 4) - 4) = edx;
                    } else {
                        esi = *(ebp - 4) + edx;
                        *( *(ebp - 8) + 4) = esi;
                        *eax = esi;
                        *(esi + 4) = eax;
                        *esi = *(ebp - 8);
                        eax = ecx + esi;
                        edx = edx | 1;
                        *(esi - 8) = edx;
                        *( *(ebp - 4) - 4) = edx;
                        *(eax - 8) = ecx;
                        *(esi - 4) = ecx;
                    }
                    eax = *(ebp + 8);
                } else {
L00477976:
                    eax = 0;
                }
            }
        }
    }
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ecx;
    (restore)ebp;
}

/*    Procedure: 0x0047797F - 0x0047797F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L0047797F()
{



}

/*    Procedure: 0x00477980 - 0x00477AD7
 *    Argument size: 8
 *    Local size: 16
 *    Save regs size: 12
 *    Called by:
 *        L00475954()
 *        L004780B4()
 */

L00477980(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;
    /* unknown */ void  Vfffffff0;
    /* unknown */ void  Vfffffff4;
    /* unknown */ void  Vfffffff8;
    /* unknown */ void  Vfffffffc;



    if(Ac == 0) {
        L00477640(A8);
        eax = 0;
    } else {
        if(A8 == 0) {
            eax = L0047777C(Ac);
        } else {
            if(L00477864(A8, Ac) != 0) {
                eax = A8;
            } else {
                Vfffffff8 = Ac < 8 ? 0x10 : (Ac + 4 - 1 & -4) + 8;
                if(Vfffffff8 < 0x10 || Ac == 0) {
                    eax = 0;
                } else {
                    esi = A8;
                    edi = *(esi - 4) & -2;
                    Vfffffffc = *(esi - 8);
                    if(!(Vfffffffc & 1)) {
                        if(Vfffffffc + edi < Vfffffff8) {
                            goto L00477aa4;
                        }
                        ebx = esi - Vfffffffc;
                        eax = *(ebx + 4);
                        Vfffffff0 = *ebx;
                        *(Vfffffff0 + 4) = eax;
                        *eax = Vfffffff0;
                        if(ebx == M006dd140) {
                            M006dd140 = eax;
                        }
                        L0047114C(ebx, esi, edi);
                        esi = ebx;
                        edi = edi + Vfffffffc;
                        eax = edi - Vfffffff8;
                        Vfffffff4 = eax;
                        if(Vfffffff4 < 0x10) {
                            eax = edi + esi;
                            edi = edi | 1;
                            *(eax - 8) = edi;
                            *(esi - 4) = *(eax - 8);
                        } else {
                            ebx = Vfffffff8 + esi;
                            eax = Vfffffff4 + ebx;
                            edx = Vfffffff8 | 1;
                            *(ebx - 8) = edx;
                            *(esi - 4) = *(ebx - 8);
                            edx = Vfffffff4 | 1;
                            *(eax - 8) = edx;
                            *(ebx - 4) = *(eax - 8);
                            L00477640(ebx);
                        }
                        eax = esi;
                    } else {
L00477aa4:
                        ebx = L0047777C(Ac);
                        if(ebx != 0) {
                            L0047114C(ebx, A8, edi - 8);
                            L00477640(A8);
                        }
                        eax = ebx;
                    }
                }
            }
        }
    }
}

/*    Procedure: 0x00477AD8 - 0x00477AF2
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00477AD8(A8)
/* unknown */ void  A8;
{



    edx = A8;
    if(A8 == 0) {
        return 0;
    }
    return ( *(edx - 4) & -2) - 8;
}

/*    Procedure: 0x00477AF3 - 0x00477AF3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477AF3()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00477AF4 - 0x00477B02
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047268A()
 *        L00472999()
 *        L00477B04()
 */

L00477AF4(A8)
/* unknown */ void  A8;
{



    return L00477640(A8);
}

/*    Procedure: 0x00477B03 - 0x00477B03
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477B03()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00477B04 - 0x00477B12
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047268A()
 */

L00477B04(A8)
/* unknown */ void  A8;
{



    return L00477AF4(A8);
}

/*    Procedure: 0x00477B13 - 0x00477B13
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477B13()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00477B14 - 0x00477B7F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00477508()
 */

L00477B14(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    unsigned long  ebx;



    if(M0060bea8 == 0) {
        eax = M006dd144;
        M0060bea8 = eax == 1 || eax == 2 ? 1048576 : 4194304;
    }
    eax = M0060bea8;
    ebx = A8 + eax - 1;
    ebx = ebx & !(eax - 1);
    eax = VirtualAlloc(0, ebx, 8192, 1);
    *Ac = eax;
    if(eax == 0) {
        return 0;
    }
    *A10 = ebx;
    return 1;
}

/*    Procedure: 0x00477B80 - 0x00477BD1
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00477508()
 */

L00477B80(A8, Ac)
/* unknown */ void  * A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  * ebx;
    /* unknown */ void  esi;
    /* unknown */ void  * edi;



    esi = Ac;
    ebx = A8;
    edi = ebx;
    if(esi != 0) {
        do {
            if(VirtualAlloc(ebx, 0x1000, 0x1000, 4) == 0) {
                goto L00477bac;
            }
            ebx = ebx + 0x1000;
            esi = esi - 0x1000;
        } while(esi != 0);
        goto L00477bc8;
L00477bac:
        L00477BD4(edi, ebx - edi);
        eax = 0;
    } else {
L00477bc8:
        eax = 1;
    }
}

/*    Procedure: 0x00477BD2 - 0x00477BD3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477BD2()
{



}

/*    Procedure: 0x00477BD4 - 0x00477C12
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00477602()
 *        L00477B80()
 */

L00477BD4(A8, Ac)
/* unknown */ void  * A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  * ebx;
    /* unknown */ void  esi;



    esi = Ac;
    ebx = A8;
    if(esi != 0) {
        do {
            if(!(eax = VirtualFree(ebx, 0x1000, 16384) - 1)) {
                goto L00477bf6;
            }
            ebx = ebx + 0x1000;
            esi = esi - 0x1000;
        } while(esi != 0);
        goto L00477c0a;
L00477bf6:
        eax = 0;
    } else {
L00477c0a:
        eax = 1;
    }
}

/*    Procedure: 0x00477C13 - 0x00477C13
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477C13()
{



}

/*    Procedure: 0x00477C14 - 0x00477C34
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477508()
 *        L00477602()
 */

L00477C14(A8)
/* unknown */ void  * A8;
{



    if(!(eax = VirtualFree(A8, 0, 32768) - 1)) {
        return 0;
    }
    return 1;
}

/*    Procedure: 0x00477C35 - 0x00477C4D
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

L00477C35()
{



    *eax = *eax + al;
    *eax = *eax + al;
    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    *( *(ebp + 0xc)) = 1;
    (restore)ebp;
    return 0;
}

/*    Procedure: 0x00477C4E - 0x00477C4F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477C4E()
{



}

/*    Procedure: 0x00477C50 - 0x00477C95
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00477C98()
 */

L00477C50()
{
    /* unknown */ void  ecx;



    *esp = 0;
    if(!(GetVersion() >> 0x10 & 65535 & 65535 & 0x80)) {
        return 8192;
    }
    EnumThreadWindows(GetCurrentThreadId(), M00477c3c, esp);
    eax = 8192;
    if(*esp == 0) {
        eax = 0x1000;
    }
}

/*    Procedure: 0x00477C96 - 0x00477C97
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477C96()
{



}

/*    Procedure: 0x00477C98 - 0x00477D44
 *    Argument size: 4
 *    Local size: 84
 *    Save regs size: 8
 *    Called by:
 *        L004772E4()
 *        L00477D45()
 *        L00477D58()
 */

L00477C98(A8)
CHAR * A8;
{
    CHAR * ebx;
    CHAR Vffffffac;
    DWORD Vfffffffc;



    if(M00480069 != 0) {
        GetModuleFileNameA(0, & Vffffffac, 0x50);
        ebx = L004713FC( & Vffffffac, 0x5c);
        if(ebx == 0) {
            ebx = L004713FC( & Vffffffac, 0x3a);
            if(ebx != 0) {
                goto L00477ce6;
            }
            ebx = & Vffffffac;
        } else {
L00477ce6:
            ebx = ebx + 1;
        }
        eax = MessageBoxA(0, A8, ebx, L00477C50() | 0x10);
    } else {
        ebx = GetStdHandle(-12);
        WriteFile(ebx, M0060beb0, 2, & Vfffffffc, 0);
        WriteFile(ebx, A8, L00471288(A8), & Vfffffffc, 0);
        eax = WriteFile(ebx, M0060beb3, 2, & Vfffffffc, 0);
    }
}

/*    Procedure: 0x00477D45 - 0x00477D56
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00477D45(A8)
/* unknown */ void  A8;
{



    return L00477C98(A8);
}

/*    Procedure: 0x00477D57 - 0x00477D57
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477D57()
{



}

/*    Procedure: 0x00477D58 - 0x00477D6E
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00471095()
 *        L00472F5E()
 *        L004765B0()
 *        L00477EFF()
 *        L004780B4()
 */

L00477D58(A8)
/* unknown */ void  A8;
{



    L00477C98(A8);
    return L00477E78(1);
}

/*    Procedure: 0x00477D6F - 0x00477D93
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477D6F()
{



    *(eax - 0x3b) = *(eax - 0x3b) + ch;
    esi = -1201143712;
    esi = -1830289312;
    asm("adc al,[eax]");
    *(eax - 0x18) = *(eax - 0x18) + dl;
    asm("xchg eax,edx");
    asm("adc al,[eax]");
    *(ebp + -955550528) = *(ebp + -955550528) + al;
    *eax = *eax + eax + 7196996 + *eax;
}

/*    Procedure: 0x00477D94 - 0x00477DB2
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477D94()
{



    eax = GetVersion();
    if(!(eax & -2147483648)) {
        M006dd144 = 1;
        return;
    }
    M006dd144 = 0;
    return 0;
}

/*    Procedure: 0x00477DB3 - 0x00477DB3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477DB3()
{



    *(eax - 0x30) = *(eax - 0x30) + ch;
}

/*    Procedure: 0x00477DB4 - 0x00477DC7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477DC8()
 */

L00477DB4()
{



    L00477C98("Abnormal program termination");
    return L00477E78(3);
}

/*    Procedure: 0x00477DC8 - 0x00477DD5
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004716E3()
 *        L00472D9A()
 *        L00472DC7()
 *        L00472E40()
 */

L00477DC8()
{



    L00478B5C(0x16);
    return L00477DB4();
}

/*    Procedure: 0x00477DD6 - 0x00477DD7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477DD6()
{



    *eax = *eax + al;
}

/*    Procedure: 0x00477DD8 - 0x00477E03
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004179D0()
 */

L00477DD8(A8)
/* unknown */ void  A8;
{



    if(M0060bef0 == 0x20) {
        return 1;
    }
    *(M0060bef0 * 4 + 7197000) = A8;
    M0060bef0 = M0060bef0 + 1;
    return 0;
}

/*    Procedure: 0x00477E04 - 0x00477E04
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477E04()
{



}

/*    Procedure: 0x00477E05 - 0x00477E07
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477E05()
{



}

/*    Procedure: 0x00477E08 - 0x00477E5F
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00477E60()
 *        L00477E78()
 *        L00477E8D()
 *        L00477E9F()
 */

L00477E08(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0) {
        while(M0060bef0 != 0) {
            M0060bef0 = M0060bef0 - 1;
            *( *(M0060bef0 * 4 + 7197000))();
        }
        L00478ED8();
        eax = *L0060bef4();
    }
    if(Ac == 0) {
        if(A8 == 0) {
            *L0060bef8();
            *L0060befc();
        }
        eax = L00478F50(A10);
    }
}

/*    Procedure: 0x00477E60 - 0x00477E74
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00419838()
 *        L0043C98B()
 *        L004539E4()
 *        L00470837()
 */

L00477E60(A8)
/* unknown */ void  A8;
{



    return L00477E08(0, 0, A8);
}

/*    Procedure: 0x00477E75 - 0x00477E77
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477E75()
{



}

/*    Procedure: 0x00477E78 - 0x00477E8C
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477D58()
 */

L00477E78(A8)
/* unknown */ void  A8;
{



    return L00477E08(1, 0, A8);
}

/*    Procedure: 0x00477E8D - 0x00477E9E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477E8D()
{



    return L00477E08(0, 1, 0);
}

/*    Procedure: 0x00477E9F - 0x00477EAE
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477E9F()
{



    return L00477E08(1, 1, 0);
}

/*    Procedure: 0x00477EAF - 0x00477EAF
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477EAF()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x00477EB0 - 0x00477EFE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L0044D0D8()
 *        L0044D43E()
 *        L0044D609()
 *        L00478177()
 */

L00477EB0(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = L00471288(A8);
    for(ebx = M006dd1d4; *ebx != 0 && (L004712F0( *ebx, A8, esi) != 0 || *( *ebx + esi) != 0x3d); ebx = ebx + 4) {
    }
    eax = *ebx;
    eax = eax != 0 ? esi + eax + 1 : 0;
}

/*    Procedure: 0x00477EFF - 0x00478081
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00477EFF()
{
    /* unknown */ void  Vfffffee8;
    /* unknown */ void  Vfffffef0;
    CHAR Vfffffef4;



    *eax = *eax + al;
    *(bl + al + 0x56) = *(bl + al + 0x56) + dl;
    (save)edi;
    (save)ebp;
    esp = esp + -268;
    ebx = esp;
    edi = & Vfffffef0;
    eax = M006dd1ec;
    if(eax != 0) {
        M006dd1d0 = 0;
        M006dd1c8 = 0;
        M006dd1cc = 0;
        *ebx = eax;
        GetModuleFileNameA(0, & Vfffffef4, 0x104);
        for(L004780B4( & Vfffffee8, 1); 1; *ebx = *ebx + 1) {
            al = *( *ebx);
            if(al != 0x20 && al != 9) {
                break;
            }
        }
        while(1) {
            al = *( *ebx);
            if(al == 0x20 || al == 9 || al == 0) {
                break;
            }
            *ebx = *ebx + 1;
        }
        eax = L0047777C(L00471288( *ebx) + 1);
        *edi = eax;
        if(*edi == 0) {
            L00477D58("No space for copy of command line");
        }
        while(*( *ebx) != 0) {
            for(esi = 0; 1; *ebx = *ebx + 1) {
                al = *( *ebx);
                if(al != 0x20 && al != 9) {
                    break;
                }
            }
            if(*( *ebx) == 0) {
                break;
            }
            for(ebp = *edi; 1; *ebx = *ebx + 1) {
                al = *( *ebx);
                if(al == 0x20 || al == 9 || al == 0) {
                    break;
                }
                if(al != 0x22) {
                    al = *( *ebx);
                    if(al == 0x2a || al == 0x3f) {
                        esi = 1;
                    }
                    L00478084(edi, ebx);
                    continue;
                }
                for(*ebx = *ebx + 1; 1; L00478084(edi, ebx)) {
                    al = *( *ebx);
                    if(al == 0x22 || al == 0) {
                        break;
                    }
                }
                if(*( *ebx) != 0x22) {
                    continue;
                }
            }
            *( *edi) = 0;
            *edi = *edi + 1;
            if(esi == 0) {
                L004780B4(ebp, 0);
            } else {
                *L0060bf04(ebp);
            }
            if(*( *ebx) == 0) {
                break;
            }
            *ebx = *ebx + 1;
        }
        L004780B4(0, 0);
        M006dd1c8 = M006dd1c8 - 1;
        M006dd1f0 = M006dd1c8;
        eax = M006dd1cc;
        M006dd1f4 = eax;
    }
    esp = esp + 0x10c;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*    Procedure: 0x00478082 - 0x00478083
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00478082()
{



}

/*    Procedure: 0x00478084 - 0x004780B3
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L00477EFF()
 */

L00478084(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    ecx = *Ac;
    if(*ecx == 0x5c) {
        if(*(ecx + 1) != 0x22) {
            goto L004780a5;
        }
        *( *A8) = 0x22;
        *Ac = *Ac + 2;
    } else {
L004780a5:
        cl = *( *Ac);
        *( *A8) = cl;
        *Ac = *Ac + 1;
    }
    *A8 = *A8 + 1;
}

/*    Procedure: 0x004780B4 - 0x00478161
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00477EFF()
 *        L00478162()
 */

L004780B4(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    esi = A8;
    if(M006dd1c8 == M006dd1d0) {
        M006dd1d0 = M006dd1d0 + 0x10;
        eax = L00477980(M006dd1cc, M006dd1d0 << 2);
        M006dd1cc = eax;
        if(M006dd1cc == 0) {
            L00477D58("No space for command line argument vector");
        }
    }
    if(Ac != 0) {
        ebx = L0047777C(L00471288(esi) + 1);
        if(ebx == 0) {
            L00477D58("No space for command line argument");
        }
        (save)esi;
        edi = esi;
        esi = ebx;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        (restore)esi;
    } else {
        ebx = esi;
    }
    eax = M006dd1cc;
    *(eax + M006dd1c8 * 4) = ebx;
    M006dd1c8 = M006dd1c8 + 1;
}

/*    Procedure: 0x00478162 - 0x00478176
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

L00478162(A8)
/* unknown */ void  A8;
{



    return L004780B4(A8, 0);
}

/*    Procedure: 0x00478177 - 0x004781A4
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L00478177()
{



    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    (save)ebx;
    ebx = L00477EB0( *(ebp + 0xc));
    if(ebx == 0) {
        ebx = 0x60bf78;
    }
    eax = L004781A8( *(ebp + 8), ebx, *(ebp + 0x10));
    (restore)ebx;
    (restore)ebp;
}

/*    Procedure: 0x004781A5 - 0x004781A7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004781A5()
{



    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
}

/*    Procedure: 0x004781A8 - 0x004782A1
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 16
 *    Called by:
 *        L00478177()
 */

L004781A8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
    /* unknown */ void  ecx;
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    ebx = Ac;
    for(esi = L004759F0(0, A10, 0x104) == 0 ? 0 : L00471288(A10); 1; ebx = ebx + 1) {
        *(A10 + esi) = 0;
        if(esi != 0) {
            al = *(A10 + esi - 1);
            *(ebp - 1) = al;
            if(*(ebp - 1) != 0x5c && *(ebp - 1) != 0x2f) {
                L004711C8(A10, "\");
            }
        }
        L004711C8(A10, A8);
        if(L00475FF8(A10, 0) == 0) {
            goto L00478258;
        }
        if(*ebx == 0) {
            break;
        }
        esi = 0;
        for(edx = A10; 1; esi = esi + 1) {
            al = *ebx;
            if(al == 0x3b || al == 0) {
                break;
            }
            *edx = al;
            ebx = ebx + 1;
            edx = edx + 1;
        }
        if(*ebx == 0) {
            continue;
        }
    }
    eax = A10;
    *eax = 0;
    goto L0047829c;
L00478258:
    eax = L00475954(0, A10, 0x104);
    ebx = eax;
    if(ebx != 0) {
        esi = A10;
        edi = ebx;
        eax = 0;
        ecx = ecx | -1;
        asm("repne scasb");
        ecx = !ecx;
        edi = edi - ecx;
        asm("xchg esi,edi");
        eax = edi;
        edx = ecx;
        ecx = ecx >> 2;
        asm("rep movsd");
        ecx = edx & 3;
        asm("rep movsb");
        eax = L00477640(ebx);
    }
L0047829c:
}

/*    Procedure: 0x004782A2 - 0x004782A3
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

L004782A2()
{



    *eax = *eax + al;
}

/*    Procedure: 0x004782A4 - 0x004782D9
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C5F2()
 *        L0046D648()
 */

L004782A4()
{



    (restore)ecx;
    (restore)eax;
    *eax = ebp;
    *(eax + 4) = ebx;
    *(eax + 8) = edi;
    *(eax + 0xc) = esi;
    *(eax + 0x10) = esp;
    *(eax + 0x14) = ecx;
    *(eax + 0x1c) = L004728FB( *fs:word 0x0]);
    *(eax + 0x18) = *%fs:0x0];
    eax = 0;
    esp = esp - 4;
    goto ( *ecx);
}

/*    Procedure: 0x004782DA - 0x00478AFB
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0043C3F0()
 *        L0043C40C()
 *        L0043C567()
 *        L00462434()
 *        L00462488()
 */

L004782DA()
{



    (restore)eax;
    if(*( *esp + 0x18) == *%fs:0x0]) {
        goto L00478319;
    }
    (save)M0060bf80;
    M0060bf80 = esp;
    (save)0;
    (save)0x478302;
    (save)eax;
    RtlUnwind();
    esp = M0060bf80;
    (restore)M0060bf80;
    *fs:word 0x0] = *( *esp + 0x18);
    L004728FB( *fs:word 0x0]);
    if(eax == -1 || eax == *( *esp + 0x1c)) {
        goto L0047833d;
    }
    L00472084( *(ecx + 0x18), *(ecx + 0x1c));
    (restore)ecx;
    (restore)eax;
    eax :: 1;
    asm("adc eax,+0x0");
    ebp = *ecx;
    ebx = *(ecx + 4);
    edi = *(ecx + 8);
    esi = *(ecx + 0xc);
    esp = *(ecx + 0x10);
    esp = esp - 4;
    goto ( *(ecx + 0x14));
    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    eax = *(ebp + 8);
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    esp = esp + -260;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0xc);
    eax = *(ebp + 8);
    esi = ebp + -260;
    edi = eax;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    edi = edi - !ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    L004711C8(ebp + -260, *(ebp + 0x10));
    if(*(ebp + 0x14) == 0) {
        goto L004783d4;
    }
    L00478178(ebp + -260, 0x60bf88, ebx);
    eax = 0;
    goto L00478412;
    esi = ebx;
    edi = ebp + -260;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    edi = edi - !ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    L00475FF8(ebp + -260, 4);
    eax = 0;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = 0;
    if(*(ebp + 8) == 0) {
        goto L00478439;
    }
    L00471288( *(ebp + 8));
    esi = eax + esi + 1;
    if(*(ebp + 0xc) == 0) {
        goto L0047844e;
    }
    L00471288( *(ebp + 0xc));
    esi = eax + esi + 1;
    ebx = *(ebp + 0x10);
    goto L00478462;
    L00471288(edi);
    esi = eax + esi + 1;
    if(*(ebx + 4) != 0) {
        goto L00478453;
    }
    L0047777C(esi);
    if(eax != 0) {
        goto L00478479;
    }
    eax = 0;
    goto L004784d1;
    eax = edi;
    if(*(ebp + 8) == 0) {
        goto L00478492;
    }
    L00471428(eax, *(ebp + 8));
    *eax = 0x20;
    eax = eax + 1;
    if(*(ebp + 0xc) == 0) {
        goto L004784a9;
    }
    L00471428(eax, *(ebp + 0xc));
    *eax = 0x20;
    eax = eax + 1;
    if(*(ebp + 8) != 0) {
        ebx = *(ebp + 0x10);
        goto L004784c5;
        L00471428(eax, edx);
        *eax = 0x20;
        eax = eax + 1;
        if(*(ebx + 4) != 0) {
            goto L004784b4;
        }
    }
    *(eax - 1) = 0;
    eax = edi;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    (save)ecx;
    (save)ebx;
    (save)esi;
    (save)edi;
    esi = 1;
    ebx = *(ebp + 8);
    goto L004784f8;
    L00471288(edi);
    esi = eax + esi + 1;
    if(*(ebx + 4) != 0) {
        goto L004784e9;
    }
    L0047777C(esi);
    *(ebp - 4) = eax;
    if(eax != 0) {
        goto L00478510;
    }
    eax = 0;
    goto L00478534;
    ebx = *(ebp + 8);
    esi = *(ebp - 4);
    goto L00478528;
    L00471428(esi, edi);
    esi = eax + 1;
    if(*(ebx + 4) != 0) {
        goto L00478518;
    }
    *esi = 0;
    eax = *(ebp - 4);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    esp = esp + -368;
    (save)ebx;
    (save)esi;
    (save)edi;
    if(*( *(ebp + 0xc)) >= 0x61) {
    }
    if(esi - 0x20 < 0x41 || esi > 0x5a) {
        goto L00478566;
    }
    if(*(ebx + 1) == 0x3a) {
        goto L00478584;
    }
    L00471204(ebx, 0x2f);
    if(eax != 0) {
        goto L00478584;
    }
    L00471204(ebx, 0x5c);
    if(eax == 0) {
        goto L00478589;
    }
    *(ebp + 0x18) = 0;
    esi = 0;
    L004713FC(ebx, 0x2e);
    *(ebp - 0xc) = eax;
    if(eax == 0) {
        goto L004785d8;
    }
    L00478364(ebx, ebp + -272, 0x60bf8d, *(ebp + 0x18));
    if(eax == 0) {
        goto L0047861b;
    }
    L00471368( *(ebp - 0xc), 0x60bf8e);
    if(eax != 0) {
        goto L0047861b;
    }
    esi = 1;
    goto L0047861b;
    L00478364(ebx, ebp + -272, 0x60bf93, *(ebp + 0x18));
    if(eax != 0) {
        goto L0047861b;
    }
    L00478364(ebx, ebp + -272, 0x60bf98, *(ebp + 0x18));
    if(eax == 0) {
        goto L0047861b;
    }
    esi = 1;
    if(edi != 0) {
        if(1 == 0) {
            goto L00478647;
        }
        L00477EB0("COMSPEC");
        *(ebp - 8) = eax;
        if(eax != 0) {
            goto L00478647;
        }
    }
    M0060beac = 2;
    eax = eax | -1;
    goto L00478866;
    if(esi == 0) {
        goto L00478664;
    }
    L0047841c( *(ebp - 8), "/c", *(ebp + 0x10));
    ebx = eax;
    goto L0047867d;
    L0047841c( *( *(ebp + 0x10)), 0, *(ebp + 0x10) + 4);
    if(eax != 0) {
        goto L00478693;
    }
    M0060beac = 8;
    eax = eax | -1;
    goto L00478866;
    if(*(ebp + 0x14) != 0) {
        goto L0047869d;
    }
    edi = 0;
    goto L004786c6;
    L004784d8( *(ebp + 0x14));
    if(eax != 0) {
        goto L004786c6;
    }
L004786ad:
    M0060beac = 8;
    L00477640(ebx);
    eax = eax | -1;
    goto L00478866;
    *L0060bef4();
    L00471198(ebp + -352, 0, 0x44);
    *(ebp + -352) = 0x44;
    *(ebp + -304) = 0xa;
    if(M0060b040 == 0) {
        goto L00478731;
    }
    *L0060ba24(0);
    *(ebp + -302) = ax;
    L0047777C( *(ebp + -302) & 65535);
    *(ebp + -300) = eax;
    if(eax == 0) {
        goto L004786ad;
    }
    *L0060ba24( *(ebp + -300));
    *(ebp + -284) = 0xc;
    *(ebp + -280) = 0;
    *(ebp + -276) = 1;
    (save)ebp + -368;
    (save)ebp + -352;
    (save)0;
    (save)edi;
    eax = 8;
    if(*(ebp + 8) != 4) {
    }
    (save)0;
    (save)1;
    (save)ebp + -284;
    (save)ebp + -284;
    (save)ebx;
    if(esi == 0) {
        goto L00478787;
    }
    eax = *(ebp - 8);
    goto L0047878d;
    CreateProcessA(ebp + -272);
    if(eax = eax - 1) {
        goto L004787d4;
    }
    GetLastError();
    if(eax = (eax & 65535) - 1) {
        goto L004787b4;
    }
    if(eax = eax - 7) {
        goto L004787bb;
    }
    if(eax = eax - 0x51) {
        goto L004787c2;
    }
    eax = 0x2a;
    goto L004787c7;
    eax = 0x13;
    goto L004787c7;
    eax = 8;
    goto L004787c7;
    M0060beac = 0x15;
    esi = esi | -1;
    goto L00478856;
    if(eax = *(ebp + 8) - 1) {
        goto L004787e9;
    }
    == ? L00478824 : ;
    if(eax = eax - 1) {
        goto L0047883f;
    }
    if(eax = eax - 1 - 2) {
        goto L00478818;
    }
    goto L00478847;
    WaitForSingleObject( *(ebp + -368), -1);
    GetExitCodeProcess( *(ebp + -368), ebp - 4);
    CloseHandle( *(ebp + -368));
    esi = *(ebp - 4);
    goto L0047884a;
    CloseHandle( *(ebp + -368));
    *L0060bf84( *(ebp + -360), *(ebp + -368));
    esi = eax;
    goto L0047884a;
    L00477E78(0);
    esi = esi | -1;
    CloseHandle( *(ebp + -364));
    L00477640(edi);
    L00477640(ebx);
    eax = esi;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
    return;
    *eax = *eax + al;
    *(ebp - 0x75) = *(ebp - 0x75) + dl;
    asm("in al,dx");
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(ebp + 0xc);
    esi = *(ebp + 8);
    goto L00478891;
    if(al < 0x61 || al > 0x7a) {
        goto L0047888b;
    }
    edx = eax - 0x20;
    goto L0047888d;
    *esi = eax;
    ebx = ebx + 1;
    esi = esi + 1;
    if(*ebx != 0 && al != 0x3d) {
        goto L0047887e;
    }
    (save)esi;
    edi = ebx;
    eax = 0;
    ecx = ecx | -1;
    asm("repne scasb");
    edi = edi - !ecx;
    asm("xchg esi,edi");
    eax = edi;
    edx = ecx;
    ecx = ecx >> 2;
    asm("rep movsd");
    ecx = edx & 3;
    asm("rep movsb");
    (restore)esi;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    edi = 0;
    ebx = M006dd1e8;
    goto L004788d6;
    edi = edi + 1;
    L00471288(ebx + esi + 1);
    if(eax != 0) {
        goto L004788d2;
    }
    L0047777C(edi + 1 << 2);
    M006dd1d4 = eax;
    if(eax == 0) {
        goto L00478943;
    }
    edi = 0;
    ebx = M006dd1e8;
    goto L00478927;
    L0047777C(esi + 1);
    if(eax == 0) {
        goto L00478934;
    }
    L00478870(ebp, ebx);
    *(M006dd1d4 + edi * 4) = ebp;
    edi = edi + 1;
    L00471288(ebx + esi + 1);
    if(eax != 0) {
        goto L00478901;
    }
    *(M006dd1d4 + edi * 4) = 0;
    M006dd1f8 = M006dd1d4;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return M006dd1f8;
    (save)ebp;
    ecx = *(esp + 8);
    eax = 0;
    if(ecx != *L0060BFD8) {
        edx = 0x60bfdc;
        if(1 < 0xa) {
            goto L00478955;
        }
    }
    (restore)ebp;
    return -1;
    (save)ebp;
    ebp = esp;
    (save)ecx;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = 0;
    if(*( *(ebp + 8)) > -1073741679) {
        goto L004789a2;
    }
    == ? L004789d3 : ;
    if(eax = eax - -1073741819) {
        goto L00478a2d;
    }
    if(eax = eax - 0x18) {
        goto L00478a3b;
    }
    if(eax = eax - 0x71) {
        goto L004789bd;
    }
    if(eax = eax - 2) {
        goto L004789f9;
    }
    goto L00478a57;
    if(eax = eax - -1073741678) {
        goto L00478a0c;
    }
    if(eax = eax - 1) {
        goto L004789e6;
    }
    if(eax = eax - 1) {
        goto L00478a1f;
    }
    if(eax = eax - 2) {
        goto L00478a49;
    }
    goto L00478a57;
    ebx = 2;
    *(ebp - 4) = 0x83;
    edi = 4;
    goto L00478a5e;
    ebx = 2;
    *(ebp - 4) = 0x84;
    edi = 8;
    goto L00478a5e;
    ebx = 2;
    *(ebp - 4) = 0x85;
    edi = 0x10;
    goto L00478a5e;
    ebx = 2;
    *(ebp - 4) = 0x81;
    edi = 1;
    goto L00478a5e;
    ebx = 2;
    *(ebp - 4) = 0x87;
    edi = 0x49;
    goto L00478a5e;
    ebx = 2;
    *(ebp - 4) = 0x7f;
    goto L00478a5e;
    ebx = 3;
    *(ebp - 4) = 0xc;
    goto L00478a5e;
    ebx = 1;
    *(ebp - 4) = 0x14;
    goto L00478a5e;
    ebx = 1;
    *(ebp - 4) = 0x16;
    goto L00478a5e;
    eax = 1;
    goto L00478ad1;
    if(*(ebx * 4 + 0x60bfb0) != 1) {
        goto L00478a6e;
    }
    eax = 0;
    goto L00478ad1;
    if(esi != 0) {
        goto L00478a79;
    }
    eax = 1;
    goto L00478ad1;
    *(ebx * 4 + 0x60bfb0) = 0;
    if(ebx != 1 && ebx != 3 && ebx != 2) {
        goto L00478ac4;
    }
    L004763A8();
    L004763BC(M0060bd18, 7999);
    *esi( *(ebx * 4 + 0x60bfd8), *(ebp - 4));
    edi = !edi;
    *( *(ebp + 0x10) + 0x20) = *( *(ebp + 0x10) + 0x20) & edi;
    goto L00478acf;
    *esi( *(ebx * 4 + 0x60bfd8));
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ecx;
    (restore)ebp;
    return 0;
    (save)ebp;
    ebp = esp;
    eax = 2;
    if(*(ebp + 8) == 0) {
        goto L00478ae9;
    }
    L00478B5C(0x15);
    (restore)ebp;
    return 1;
}

/*    Procedure: 0x00478AFC - 0x00478B5B
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 4
 *    Called by:
 *        L0045381C()
 */

L00478AFC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
    /* unknown */ void  ebx;



    if(M0060bfac != 0) {
        goto L00478b26;
    }
    M006dcdbc = 0x478968;
    SetConsoleCtrlHandler(M00478ad8, 1);
    M0060bfac = 1;
    L00478948(A8);
    if(eax != -1) {
        goto L00478b47;
    }
    M0060beac = 0x13;
    return eax | -1;
    eax = *(ebx * 4 + 0x60bfb0);
    *(ebx * 4 + 0x60bfb0) = Ac;
}

/*    Procedure: 0x00478B5C - 0x00478BD7
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 8
 *    Called by:
 *        L00477DC8()
 */

L00478B5C(A8)
/* unknown */ void  A8;
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;



    esi = A8;
    ebx = L00478948(esi);
    if(ebx != -1) {
        goto L00478b79;
    }
    eax = 1;
    goto L00478bd2;
    eax = *(ebx * 4 + 0x60bfb0);
    if(eax == 1) {
        goto L00478bd0;
    }
    if(eax != 0) {
        goto L00478bae;
    }
    if((esi = esi - 0x10 - 2) || (esi = esi - 2)) {
        goto L00478bd0;
    }
    if(esi = esi - 2) {
        goto L00478b9d;
    }
    goto L00478ba4;
    L00477DB4();
    goto L00478bd0;
    eax = L00477E78(3);
    goto L00478bd0;
    *(ebx * 4 + 0x60bfb0) = 0;
    edx = *(ebx + 0x60c000) & 0xff;
    if(edx == 0) {
        goto L00478bcc;
    }
    eax = *eax(esi, edx);
    goto L00478bd0;
    *eax(esi);
    return 0;
    0;
}

/*    Procedure: 0x00478BD8 - 0x00478ED7
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00410F94()
 */

L00478BD8()
{



    (save)ebp;
    ebp = esp;
    esp = esp + -272;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 8);
    L00477EB0("COMSPEC");
    if(eax != 0) {
        goto L00478c2c;
    }
    L00478178("CMD.EXE", "PATH", ebp + -260);
    if(*(ebp + -260) != 0) {
        goto L00478c26;
    }
    M0060beac = 2;
    goto L00478c2c;
    ebx = ebp + -260;
    if(edi != 0) {
        goto L00478c3a;
    }
    eax = 0;
    goto L00478cb6;
    if(ebx != 0) {
        goto L00478c43;
    }
    eax = eax | -1;
    goto L00478cb6;
    L00471288(edi);
    L0047777C(eax + 4);
    if(eax != 0) {
        goto L00478c69;
    }
    M0060beac = 8;
    eax = eax | -1;
    goto L00478cb6;
    (save)esi;
    (save)edi;
    edi = esi;
    eax = edi;
    *edi = *"/c ";
    edi = edi + 4;
    esi = "/c " + 4;
    (restore)edi;
    (restore)esi;
    L004711C8(esi, edi);
    *(ebp + -272) = ebx;
    *(ebp + -268) = esi;
    *(ebp + -264) = 0;
    L0047853c(0, ebx, ebp + -272, 0, 0);
    ebx = eax;
    L00477640(esi);
    eax = ebx;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
    return;
    *eax = *eax + al;
    *ebx = *ebx + dh;
    asm("rol bl,0x90");
    return 0;
    (save)ebp;
    ebp = esp;
    esp = esp - 0xc;
    (save)ebx;
    (save)esi;
    (save)edi;
    ecx = *(ebp + 0xc);
    edx = 0;
    if(ecx != 0) {
        goto L00478ce0;
    }
    edx = 65535;
    *(ebp - 4) = 0;
    *(ebp - 8) = 0;
    *(ebp - 0xc) = *(ebp + 8) + 4;
    goto L00478d4a;
    eax = *( *(ebp - 0xc));
    if(ecx == 0) {
        goto L00478d03;
    }
    ebx = *(eax + 8);
    goto L00478d05;
    ebx = *eax;
    if(ecx == 0) {
        goto L00478d0e;
    }
    esi = *(eax + 0xc);
    goto L00478d11;
    esi = *(eax + 4);
    eax = ebx;
    goto L00478d39;
    if(*eax != 0) {
        goto L00478d36;
    }
    ebx = *(eax + 1) & 0xff;
    ebx :: (dx & 65535);
    asm("setnl bl");
    if(ecx != (ebx & 1)) {
        goto L00478d36;
    }
    edx = *(eax + 1) & 0xff;
    *(ebp - 4) = eax;
    if(esi > eax + 6 && *(eax + 2) != 0) {
        goto L00478d15;
    }
    *(ebp - 8) = *(ebp - 8) + 1;
    *(ebp - 0xc) = *(ebp - 0xc) + 4;
    if(*( *(ebp + 8)) > *(ebp - 8)) {
        goto L00478cf5;
    }
    if(*(ebp - 4) != 0) {
        goto L00478d5e;
    }
    eax = 0;
    goto L00478d6a;
    *( *(ebp - 4)) = 1;
    eax = *( *(ebp - 4) + 2);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    esp = esp - 0xc;
    (save)ebx;
    (save)esi;
    (save)edi;
    M006dd208 = *( *(ebp + 8) + 0x10) & 1;
    L004763fc();
    L00476830( *(esi + 0x1c), *(esi + 0x20));
    L00473394( *(esi + 0x28));
    M006dd1fc = 1;
    M006dd200 = esi;
    M006dd1e4 = ebp - 8;
    L00473074();
    GetEnvironmentStrings();
    M006dd1e8 = eax;
    GetCommandLineA();
    M006dd1ec = eax;
    L00477f00();
    L00478cc0();
    if(eax == 0) {
        goto L00478e33;
    }
    *(edi + *edi * 4 + 4) = -1;
    goto L00478df9;
    *ebx();
    L00478cc8(edi, 0);
    if(eax != 0) {
        goto L00478df7;
    }
    *(ebp - 0xc) = 0;
    ebx = edi + 4;
    goto L00478e28;
    *(eax + 0x18)(0, *( *ebx + 0x14));
    *(ebp - 0xc) = *(ebp - 0xc) + 1;
    ebx = ebx + 4;
    if(*edi > *(ebp - 0xc)) {
        goto L00478e14;
    }
    goto L00478e33;
    *ebx();
    L00478cc8(7197180, 0);
    if(eax != 0) {
        goto L00478e31;
    }
    if(*(esi + 0x10) & 1) {
        goto L00478eb1;
    }
    ebx = M006dd1ec;
    goto L00478e57;
    if(*(ebx + 1) == 0x20 || al == 9) {
        goto L00478e56;
    }
    if(*ebx != 0x22) {
        goto L00478e6b;
    }
    dl = 0x22;
    ebx = ebx + 1;
    goto L00478e70;
    dl = 0x20;
    goto L00478e70;
    if(*(ebx + 1) != 0 && dl != al && al != 9) {
        goto L00478e6f;
    }
    if(*ebx != 0x22) {
        goto L00478e87;
    }
    ebx = ebx + 1;
    goto L00478e87;
    if(*(ebx + 1) != 0 && al == 0x20 || al == 9) {
        goto L00478e86;
    }
    GetModuleHandleA(0);
    *(esi + 0x18)(eax, 0, ebx, 0xa);
    L00477E60(eax);
    goto L00478ed0;
    *(esi + 0x18)(M006dd1f0, M006dd1f4, M006dd1f8);
    L00477E60(M006dd1f0);
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    esp = ebp;
    (restore)ebp;
}

/*    Procedure: 0x00478ED8 - 0x00478F4F
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 12
 *    Called by:
 *        L00477E08()
 */

L00478ED8()
{
    /* unknown */ void  ebx;
    /* unknown */ void  esi;
    /* unknown */ void  edi;



    goto L00478edf;
    *ebx();
    L00478cc8(7197180, 1);
    if(eax != 0) {
        goto L00478edd;
    }
    goto L00478ef8;
    *ebx();
    L00478cc8(7197148, 1);
    if(eax != 0) {
        goto L00478ef6;
    }
    L00478cc4();
    if(eax == 0) {
        goto L00478f4a;
    }
    goto L00478f1c;
    *ebx();
    L00478cc8(esi, 1);
    if(eax != 0) {
        goto L00478f1a;
    }
    edi = 0;
    ebx = esi + 4;
    goto L00478f46;
    *(eax + 0x18)(1, *( *ebx + 0x14));
    edi = edi + 1;
    ebx = ebx + 4;
    if(edi < *esi) {
        goto L00478f34;
    }
}

/*    Procedure: 0x00478F50 - 0x00478F63
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477E08()
 */

L00478F50()
{



    (save)ebp;
    eax = ExitProcess( *(esp + 8));
    (restore)ebp;
    return;
    return;
    *eax = *eax + al;
    al = al + ch;
}

/*    Procedure: 0x00478F64 - 0x00478F7A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00418264()
 *        L00418FCC()
 *        L0041A228()
 */

L00478F64()
{



    return GetTickCount() - M0060c028;
    eax = L00478F64();
    M0060c028 = eax;
    return M0060c028;
}

/*    Procedure: 0x00478F7B - 0x00478F80
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047566C()
 */

FindNextFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
{



    goto ( *__imp__FindNextFileA);
}

/*    Procedure: 0x00478F81 - 0x00478F86
 *    Argument size: 28
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004754F8()
 *        L0047611C()
 */

CreateFileA(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
{



    goto ( *__imp__CreateFileA);
}

/*    Procedure: 0x00478F87 - 0x00478F8C
 *    Argument size: 40
 *    Local size: 0
 *    Save regs size: 0
 */

CreateProcessA(LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
{



    goto ( *__imp__CreateProcessA);
}

/*    Procedure: 0x00478F8D - 0x00478F92
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004754F8()
 *        L00476034()
 *        L0047611C()
 */

CloseHandle(HANDLE hObject)
{



    goto ( *__imp__CloseHandle);
}

/*    Procedure: 0x00478F93 - 0x00478F98
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 */

ExitProcess(UINT uExitCode)
{



    goto ( *__imp__ExitProcess);
}

/*    Procedure: 0x00478F99 - 0x00478F9E
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047566C()
 */

FileTimeToDosDateTime(FILETIME * lpFileTime, LPWORD lpFatDate, LPWORD lpFatTime)
{



    goto ( *__imp__FileTimeToDosDateTime);
}

/*    Procedure: 0x00478F9F - 0x00478FA4
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047566C()
 */

FileTimeToLocalFileTime(FILETIME * lpFileTime, LPFILETIME lpLocalFileTime)
{



    goto ( *__imp__FileTimeToLocalFileTime);
}

/*    Procedure: 0x00478FA5 - 0x00478FAA
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004755D8()
 */

FindClose(HANDLE hFindFile)
{



    goto ( *__imp__FindClose);
}

/*    Procedure: 0x00478FAB - 0x00478FB0
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047566C()
 */

FindFirstFileA(LPCSTR lpFileName, LPWIN32_FIND_DATAA lpFindFileData)
{



    goto ( *__imp__FindFirstFileA);
}

/*    Procedure: 0x00478FB1 - 0x00478FB6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475EFC()
 */

CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
{



    goto ( *__imp__CreateDirectoryA);
}

/*    Procedure: 0x00478FB7 - 0x00478FBC
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

GetCommandLineA()
{



    goto ( *__imp__GetCommandLineA);
}

/*    Procedure: 0x00478FBD - 0x00478FC2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475748()
 *        L004759F0()
 */

GetCurrentDirectoryA(DWORD nBufferLength, LPSTR lpBuffer)
{



    goto ( *__imp__GetCurrentDirectoryA);
}

/*    Procedure: 0x00478FC3 - 0x00478FC8
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477C50()
 */

GetCurrentThreadId()
{



    goto ( *__imp__GetCurrentThreadId);
}

/*    Procedure: 0x00478FC9 - 0x00478FCE
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475B50()
 */

GetDiskFreeSpaceA(LPCSTR lpRootPathName, LPDWORD lpSectorsPerCluster, LPDWORD lpBytesPerSector, LPDWORD lpNumberOfFreeClusters, LPDWORD lpTotalNumberOfClusters)
{



    goto ( *__imp__GetDiskFreeSpaceA);
}

/*    Procedure: 0x00478FCF - 0x00478FD4
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047578C()
 */

GetDriveTypeA(LPCSTR lpRootPathName)
{



    goto ( *__imp__GetDriveTypeA);
}

/*    Procedure: 0x00478FD5 - 0x00478FDA
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

GetEnvironmentStrings()
{



    goto ( *__imp__GetEnvironmentStrings);
}

/*    Procedure: 0x00478FDB - 0x00478FE0
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047578C()
 *        L004759F0()
 */

GetEnvironmentVariableA(LPCSTR lpName, LPSTR lpBuffer, DWORD nSize)
{



    goto ( *__imp__GetEnvironmentVariableA);
}

/*    Procedure: 0x00478FE1 - 0x00478FE6
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

GetExitCodeProcess(HANDLE hProcess, LPDWORD lpExitCode)
{



    goto ( *__imp__GetExitCodeProcess);
}

/*    Procedure: 0x00478FE7 - 0x00478FEC
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475FF8()
 *        L0047611C()
 */

GetFileAttributesA(LPCSTR lpFileName)
{



    goto ( *__imp__GetFileAttributesA);
}

/*    Procedure: 0x00478FED - 0x00478FF2
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475914()
 */

GetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
{



    goto ( *__imp__GetFileSize);
}

/*    Procedure: 0x00478FF3 - 0x00478FF8
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00476074()
 */

GetFileType(HANDLE hFile)
{



    goto ( *__imp__GetFileType);
}

/*    Procedure: 0x00478FF9 - 0x00478FFE
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004754F8()
 *        L0047630C()
 */

DeleteFileA(LPCSTR lpFileName)
{



    goto ( *__imp__DeleteFileA);
}

/*    Procedure: 0x00478FFF - 0x00479004
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475EC8()
 *        L00475EE8()
 *        L00475EFC()
 *        L0047611C()
 */

GetLastError()
{



    goto ( *__imp__GetLastError);
}

/*    Procedure: 0x00479005 - 0x0047900A
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004759F0()
 */

GetLogicalDrives()
{



    goto ( *__imp__GetLogicalDrives);
}

/*    Procedure: 0x0047900B - 0x00479010
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477C98()
 *        L00477EFF()
 */

GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize)
{



    goto ( *__imp__GetModuleFileNameA);
}

/*    Procedure: 0x00479011 - 0x00479016
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        __entry_point__()
 *        L00472E73()
 */

GetModuleHandleA(LPCSTR lpModuleName)
{



    goto ( *__imp__GetModuleHandleA);
}

/*    Procedure: 0x00479017 - 0x0047901C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00472E73()
 */

GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
{



    goto ( *__imp__GetProcAddress);
}

/*    Procedure: 0x0047901D - 0x00479022
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475D3D()
 */

GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)
{



    goto ( *__imp__GetStartupInfoA);
}

/*    Procedure: 0x00479023 - 0x00479028
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475D3D()
 *        L00477C98()
 */

GetStdHandle(DWORD nStdHandle)
{



    goto ( *__imp__GetStdHandle);
}

/*    Procedure: 0x00479029 - 0x0047902E
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 */

GetTickCount()
{



    goto ( *__imp__GetTickCount);
}

/*    Procedure: 0x0047902F - 0x00479034
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477C50()
 *        L00477D94()
 */

GetVersion()
{



    goto ( *__imp__GetVersion);
}

/*    Procedure: 0x00479035 - 0x0047903A
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00471926()
 */

RaiseException(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, DWORD * lpArguments)
{



    goto ( *__imp__RaiseException);
}

/*    Procedure: 0x0047903B - 0x00479040
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047586C()
 *        L00475F30()
 */

ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
{



    goto ( *__imp__ReadFile);
}

/*    Procedure: 0x00479041 - 0x00479046
 *    Argument size: 0
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047308E()
 */

RtlUnwind()
{



    goto ( *__imp__RtlUnwind);
}

/*    Procedure: 0x00479047 - 0x0047904C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

SetConsoleCtrlHandler(PHANDLER_ROUTINE HandlerRoutine, WINBOOL Add)
{



    goto ( *__imp__SetConsoleCtrlHandler);
}

/*    Procedure: 0x0047904D - 0x00479052
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047578C()
 */

SetCurrentDirectoryA(LPCSTR lpPathName)
{



    goto ( *__imp__SetCurrentDirectoryA);
}

/*    Procedure: 0x00479053 - 0x00479058
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L0047578C()
 */

SetEnvironmentVariableA(LPCSTR lpName, LPCSTR lpValue)
{



    goto ( *__imp__SetEnvironmentVariableA);
}

/*    Procedure: 0x00479059 - 0x0047905E
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004760A4()
 */

SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
{



    goto ( *__imp__SetFilePointer);
}

/*    Procedure: 0x0047905F - 0x00479064
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475D3D()
 */

SetHandleCount(UINT uNumber)
{



    goto ( *__imp__SetHandleCount);
}

/*    Procedure: 0x00479065 - 0x0047906A
 *    Argument size: 4
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00472F5E()
 */

UnhandledExceptionFilter(struct _EXCEPTION_POINTERS * ExceptionInfo)
{



    goto ( *__imp__UnhandledExceptionFilter);
}

/*    Procedure: 0x0047906B - 0x00479070
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477B14()
 *        L00477B80()
 */

VirtualAlloc(LPVOID lpAddress, DWORD dwSize, DWORD flAllocationType, DWORD flProtect)
{



    goto ( *__imp__VirtualAlloc);
}

/*    Procedure: 0x00479071 - 0x00479076
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477BD4()
 *        L00477C14()
 */

VirtualFree(LPVOID lpAddress, DWORD dwSize, DWORD dwFreeType)
{



    goto ( *__imp__VirtualFree);
}

/*    Procedure: 0x00479077 - 0x0047907C
 *    Argument size: 8
 *    Local size: 0
 *    Save regs size: 0
 */

WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
{



    goto ( *__imp__WaitForSingleObject);
}

/*    Procedure: 0x0047907D - 0x00479082
 *    Argument size: 20
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L004758C0()
 *        L00475F94()
 *        L00477C98()
 */

WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
{



    goto ( *__imp__WriteFile);
}

/*    Procedure: 0x00479083 - 0x00479088
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00475954()
 */

GetFullPathNameA(LPCSTR lpFileName, DWORD nBufferLength, LPSTR lpBuffer, LPSTR * lpFilePart)
{



    goto ( *__imp__GetFullPathNameA);
}

/*    Procedure: 0x00479089 - 0x0047908E
 *    Argument size: 16
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477C98()
 */

MessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)
{



    goto ( *__imp__MessageBoxA);
}

/*    Procedure: 0x0047908F - 0x00479093
 *    Argument size: 12
 *    Local size: 0
 *    Save regs size: 0
 *    Called by:
 *        L00477C50()
 */

EnumThreadWindows(DWORD dwThreadId, WNDENUMPROC lpfn, LPARAM lParam)
{



    goto ( *__imp__EnumThreadWindows);
}

/* address  size  */
/* 0x00000000       0 */ /* unknown */ void     string.c;
/* 0x00000000       0 */ /* unknown */ void     asciifun.c;
/* 0x00000000       0 */ /* unknown */ void     commfunc.c;
/* 0x00000000       0 */ /* unknown */ void     mmsystem.c;
/* 0x00000000       0 */ /* unknown */ void     shellapi.c;
/* 0x00000000       0 */ /* unknown */ void     sockets.c;
/* 0x00000000       0 */ /* unknown */ void     ucodfunc.c;
/* 0x00000000       0 */ /* unknown */ void     winbase.c;
/* 0x00000000       0 */ /* unknown */ void     wingdi.c;
/* 0x00000000       0 */ /* unknown */ void     winreg.c;
/* 0x00000000       0 */ /* unknown */ void     winuser.c;
/* 0x000098c1       0 */ /* unknown */ void     _LIBID_ATLLib;
/* 0x00410000       0 */ /* unknown */ void     __entry_point__;
/* 0x00478f7b       6 */ BOOL    FindNextFileA(HANDLE, LPWIN32_FIND_DATAA);
/* 0x00478f81       6 */ HANDLE    CreateFileA(LPCSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
/* 0x00478f87       6 */ BOOL    CreateProcessA(LPCSTR, LPSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCSTR, LPSTARTUPINFOA, LPPROCESS_INFORMATION);
/* 0x00478f8d       6 */ BOOL    CloseHandle(HANDLE);
/* 0x00478f93       6 */ /* unknown */ void     ExitProcess(UINT);
/* 0x00478f99       6 */ BOOL    FileTimeToDosDateTime(FILETIME *, LPWORD, LPWORD);
/* 0x00478f9f       6 */ BOOL    FileTimeToLocalFileTime(FILETIME *, LPFILETIME);
/* 0x00478fa5       6 */ BOOL    FindClose(HANDLE);
/* 0x00478fab       6 */ HANDLE    FindFirstFileA(LPCSTR, LPWIN32_FIND_DATAA);
/* 0x00478fb1       6 */ BOOL    CreateDirectoryA(LPCSTR, LPSECURITY_ATTRIBUTES);
/* 0x00478fb7       6 */ LPSTR    GetCommandLineA;
/* 0x00478fbd       6 */ DWORD    GetCurrentDirectoryA(DWORD, LPSTR);
/* 0x00478fc3       6 */ DWORD    GetCurrentThreadId;
/* 0x00478fc9       6 */ BOOL    GetDiskFreeSpaceA(LPCSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
/* 0x00478fcf       6 */ UINT    GetDriveTypeA(LPCSTR);
/* 0x00478fd5       6 */ LPSTR    GetEnvironmentStrings;
/* 0x00478fdb       6 */ DWORD    GetEnvironmentVariableA(LPCSTR, LPSTR, DWORD);
/* 0x00478fe1       6 */ BOOL    GetExitCodeProcess(HANDLE, LPDWORD);
/* 0x00478fe7       6 */ DWORD    GetFileAttributesA(LPCSTR);
/* 0x00478fed       6 */ DWORD    GetFileSize(HANDLE, LPDWORD);
/* 0x00478ff3       6 */ DWORD    GetFileType(HANDLE);
/* 0x00478ff9       6 */ BOOL    DeleteFileA(LPCSTR);
/* 0x00478fff       6 */ DWORD    GetLastError;
/* 0x00479005       6 */ DWORD    GetLogicalDrives;
/* 0x0047900b       6 */ DWORD    GetModuleFileNameA(HMODULE, LPSTR, DWORD);
/* 0x00479011       6 */ HMODULE    GetModuleHandleA(LPCSTR);
/* 0x00479017       6 */ FARPROC    GetProcAddress(HMODULE, LPCSTR);
/* 0x0047901d       6 */ /* unknown */ void     GetStartupInfoA(LPSTARTUPINFOA);
/* 0x00479023       6 */ HANDLE    GetStdHandle(DWORD);
/* 0x00479029       6 */ DWORD    GetTickCount;
/* 0x0047902f       6 */ DWORD    GetVersion;
/* 0x00479035       6 */ /* unknown */ void     RaiseException(DWORD, DWORD, DWORD, DWORD *);
/* 0x0047903b       6 */ BOOL    ReadFile(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
/* 0x00479041       6 */ /* unknown */ void     RtlUnwind;
/* 0x00479047       6 */ WINBOOL    SetConsoleCtrlHandler(PHANDLER_ROUTINE, WINBOOL);
/* 0x0047904d       6 */ BOOL    SetCurrentDirectoryA(LPCSTR);
/* 0x00479053       6 */ BOOL    SetEnvironmentVariableA(LPCSTR, LPCSTR);
/* 0x00479059       6 */ DWORD    SetFilePointer(HANDLE, LONG, PLONG, DWORD);
/* 0x0047905f       6 */ UINT    SetHandleCount(UINT);
/* 0x00479065       6 */ LONG    UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *);
/* 0x0047906b       6 */ LPVOID    VirtualAlloc(LPVOID, DWORD, DWORD, DWORD);
/* 0x00479071       6 */ BOOL    VirtualFree(LPVOID, DWORD, DWORD);
/* 0x00479077       6 */ DWORD    WaitForSingleObject(HANDLE, DWORD);
/* 0x0047907d       6 */ BOOL    WriteFile(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
/* 0x00479083       6 */ DWORD    GetFullPathNameA(LPCSTR, DWORD, LPSTR, LPSTR *);
/* 0x00479089       6 */ int    MessageBoxA(HWND, LPCSTR, LPCSTR, UINT);
/* 0x0047908f       6 */ BOOL    EnumThreadWindows(DWORD, WNDENUMPROC, LPARAM);
/* 0x0048006a       0 */ /* unknown */ void     M0048006a;
/* 0x0060b404       0 */ /* unknown */ void     M0060b404;
/* 0x006dce64       0 */ /* unknown */ void     M006dce64;
/* 0x006dce68       0 */ /* unknown */ void     M006dce68;
/* 0x006dce6c       0 */ /* unknown */ void     M006dce6c;
/* 0x006e003c       0 */ /* unknown */ void     __imp__FindNextFileA;
/* 0x006e0040       0 */ /* unknown */ void     __imp__CreateFileA;
/* 0x006e0044       0 */ /* unknown */ void     __imp__CreateProcessA;
/* 0x006e0048       0 */ /* unknown */ void     __imp__CloseHandle;
/* 0x006e004c       0 */ /* unknown */ void     __imp__ExitProcess;
/* 0x006e0050       0 */ /* unknown */ void     __imp__FileTimeToDosDateTime;
/* 0x006e0054       0 */ /* unknown */ void     __imp__FileTimeToLocalFileTime;
/* 0x006e0058       0 */ /* unknown */ void     __imp__FindClose;
/* 0x006e005c       0 */ /* unknown */ void     __imp__FindFirstFileA;
/* 0x006e0060       0 */ /* unknown */ void     __imp__CreateDirectoryA;
/* 0x006e0064       0 */ /* unknown */ void     __imp__GetCommandLineA;
/* 0x006e0068       0 */ /* unknown */ void     __imp__GetCurrentDirectoryA;
/* 0x006e006c       0 */ /* unknown */ void     __imp__GetCurrentThreadId;
/* 0x006e0070       0 */ /* unknown */ void     __imp__GetDiskFreeSpaceA;
/* 0x006e0074       0 */ /* unknown */ void     __imp__GetDriveTypeA;
/* 0x006e0078       0 */ /* unknown */ void     __imp__GetEnvironmentStrings;
/* 0x006e007c       0 */ /* unknown */ void     __imp__GetEnvironmentVariableA;
/* 0x006e0080       0 */ /* unknown */ void     __imp__GetExitCodeProcess;
/* 0x006e0084       0 */ /* unknown */ void     __imp__GetFileAttributesA;
/* 0x006e0088       0 */ /* unknown */ void     __imp__GetFileSize;
/* 0x006e008c       0 */ /* unknown */ void     __imp__GetFileType;
/* 0x006e0090       0 */ /* unknown */ void     __imp__DeleteFileA;
/* 0x006e0094       0 */ /* unknown */ void     __imp__GetLastError;
/* 0x006e0098       0 */ /* unknown */ void     __imp__GetLogicalDrives;
/* 0x006e009c       0 */ /* unknown */ void     __imp__GetModuleFileNameA;
/* 0x006e00a0       0 */ /* unknown */ void     __imp__GetModuleHandleA;
/* 0x006e00a4       0 */ /* unknown */ void     __imp__GetProcAddress;
/* 0x006e00a8       0 */ /* unknown */ void     __imp__GetStartupInfoA;
/* 0x006e00ac       0 */ /* unknown */ void     __imp__GetStdHandle;
/* 0x006e00b0       0 */ /* unknown */ void     __imp__GetTickCount;
/* 0x006e00b4       0 */ /* unknown */ void     __imp__GetVersion;
/* 0x006e00b8       0 */ /* unknown */ void     __imp__RaiseException;
/* 0x006e00bc       0 */ /* unknown */ void     __imp__ReadFile;
/* 0x006e00c0       0 */ /* unknown */ void     __imp__RtlUnwind;
/* 0x006e00c4       0 */ /* unknown */ void     __imp__SetConsoleCtrlHandler;
/* 0x006e00c8       0 */ /* unknown */ void     __imp__SetCurrentDirectoryA;
/* 0x006e00cc       0 */ /* unknown */ void     __imp__SetEnvironmentVariableA;
/* 0x006e00d0       0 */ /* unknown */ void     __imp__SetFilePointer;
/* 0x006e00d4       0 */ /* unknown */ void     __imp__SetHandleCount;
/* 0x006e00d8       0 */ /* unknown */ void     __imp__UnhandledExceptionFilter;
/* 0x006e00dc       0 */ /* unknown */ void     __imp__VirtualAlloc;
/* 0x006e00e0       0 */ /* unknown */ void     __imp__VirtualFree;
/* 0x006e00e4       0 */ /* unknown */ void     __imp__WaitForSingleObject;
/* 0x006e00e8       0 */ /* unknown */ void     __imp__WriteFile;
/* 0x006e00ec       0 */ /* unknown */ void     __imp__GetFullPathNameA;
/* 0x006e00f4       0 */ /* unknown */ void     __imp__MessageBoxA;
/* 0x006e00f8       0 */ /* unknown */ void     __imp__EnumThreadWindows;
/* 0x006f0030       0 */ /* unknown */ void     (null);
#if 0 /* auxiliary information */
# Current option values:
option: +asmflush
option: -compactcalls
option: +compactexprs
option: +compactifs
option: +compset
option: -dfoproc
option: -disasmonly
option: -displaylabels
option: +doblocks
option: +docase
option: +dofor
option: +doifs
option: +dointrinsics
option: +doloops
option: +donullgotos
option: +dopackloops
option: +dopackstmt
option: +doremlabs
option: +dosimplify
option: -dosort
option: +dostmts
option: +doswitch
option: +dowhile
option: -dumpaddrs
option: -dumpcall
option: -dumpcomments
option: -dumpdfo
option: +dumpdoms
option: -dumpsblocks
option: -dumpsets
option: -dumpsizes
option: -dumpstmtid
option: +fatcase
option: -flag16
option: +fullscreen
option: -genpattern
option: -gui
option: -help
option: -hexconst
option: +insertlabels
option: -int16
option: +int32
option: -interactive
option: -isvb5
option: +locals
option: -nostackoffs
option: -objdump
option: -okclone
option: -outprocs
option: -outrefs
option: -overrule
option: +rdonly
option: -showblocks
option: -showjump
option: -showlabel
option: -showprotosym
option: -showreg
option: -showstring
option: -silent
option: +simplifyexprs
option: -stackalign16
option: -stackalign4
option: -stackalign8
option: +strallregions
option: -traceall
option: -tracesets
option: +types
option: -usesymtab
option: -validatebr
option: -validatereg
option: +validatestr
#endif
